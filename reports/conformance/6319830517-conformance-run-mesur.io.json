{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "31b03206-6162-4dd6-9194-53844c45b610",
        "name": "Clear Cache",
        "item": [
          {
            "id": "b7eebb02-1107-40da-951b-15dc98fd4d68",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "c38fd66f-1155-4f2a-9f28-5417590c77c0",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "f540bf99-adb4-41b9-81d4-1a4d57b03945"
                }
              }
            ]
          },
          {
            "id": "6e4686e5-cdb4-4172-9fac-1be5e59a435f",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "b242b610-4492-40dd-b7e6-1bfaed3ddfde",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "d6aa12c7-fdfe-4fd2-a6f3-52da1bd45f79"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "294d81e1-afdc-4639-b069-a31fdc2ea07d",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "594333ee-55fe-4dd4-b4d8-0f922b6dd3eb",
            "name": "Positive Testing",
            "item": [
              {
                "id": "ba96c8dd-e502-4203-83ff-6612e5992670",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5cdebe91-cb40-4ae0-b0ae-38cca7d62665",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "566cc2c9-401c-4c08-8df3-a2cc03e38901"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "382c2bc9-0491-49c4-8243-0035f1823c26",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "de18cfb9-5373-4641-b9b9-13e506c2a912"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "0d29d469-2082-4e24-86bd-9e7fbd832519",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "6a27267d-ce79-40ab-83f7-ac0ca9b031c4"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "25b01bb0-b554-43d1-b9db-b34aef00b85c",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "04357a1b-05b1-4667-9882-89f0881c1aab"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "cb6e12ec-b468-470b-b5b1-d0354b0e16d2",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "5d2e8425-d305-4853-a516-4af189c22e2e"
            }
          }
        ]
      },
      {
        "id": "f2799ff5-2130-4cf2-84b6-212c4e5d9db3",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "3bb62e9e-e29a-4280-858f-30ee2f00f06b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "15289b36-6ef1-4feb-be9d-63e359828e03",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "63fe9da7-ccaa-42a1-a05a-29c4907718ff",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f7e09a1-6f33-4702-b3c0-96cf7659b305",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4b7637e4-a98f-4a0d-aac4-61e143d93881"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3783efa9-6f98-4d92-a53b-b3ec87eb3914",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cec901d7-a69c-489c-b42d-5bb832d844aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9300ac88-17c1-453c-857f-5795d9681971"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68d39eed-60f5-4e4c-8dec-b74358187f33",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c027d9c9-3465-43d1-b86b-77ec82fb8c50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "31c1bdea-f7f4-42d0-887b-99b9ee7050cf"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "10429871-8caa-48c2-a360-7d32cb011434",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e6e2901e-d24d-4cbe-b4b4-98b8c393168c",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5abf7a77-94ae-49e7-af24-31cdd3158ac2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6967f2ac-d56d-40dd-8abe-e6df20aa1a27"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11f13e99-0063-4975-82eb-7e9bdb76bf4e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d001db9b-811a-444a-915b-8a832d5efcdf"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "b7235385-0d0d-4571-923f-ab5e98b678b4",
            "name": "Positive Testing",
            "item": [
              {
                "id": "685f8209-f455-44ee-840a-a3b29c322751",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "44cf6b38-4b2a-4621-8c08-9fdce715a48a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "9f4df5f8-e402-4f91-9824-3f4fd21172d5"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "06a6981f-d764-4c73-a750-05e4ddef192b",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "1168b181-a2e5-4d95-a067-9efde4fccc9e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "86331311-130d-4f87-a296-98c17fb9231a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ede4abf4-2757-4422-953c-5e8dc5ccb90d"
            }
          }
        ]
      },
      {
        "id": "fd30a5bd-edb7-4f19-a9ae-69af7b0318b1",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "60ade688-39ec-45cf-a6ec-e8cdf3c58a11",
            "name": "Negative Testing",
            "item": [
              {
                "id": "5ff4af1a-2951-4a1b-9ccd-ac60b6d8d362",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "6f5bda23-8a4c-4a26-bdc1-68994fb995ba",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7df1c508-901d-4edf-a563-1025317a9a99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a84a5c3e-5225-48c3-8f10-a4d91905657c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cac48feb-b178-4538-8c12-771d0ab9db6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "070844e0-576b-4710-9d3c-e91b49e36d70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce34d1ff-044e-4814-9e84-0e381396f83e",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7793264b-5feb-4d3f-84e2-bca5451c4f25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a38751fc-10af-490d-ab97-5152225b76c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b3b1959-1ddd-441a-acb5-a497b071e860",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b9bf7f9c-5923-46ba-9947-087b304d474d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e761fd3-0900-49be-b8e1-39fea2620cb0",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c74a2e7-4eb2-476c-be92-f4f0105f06a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b9a5bc0-cef8-40ad-8956-5d2dd0b33f1c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7cb0cb2-37c8-4622-a931-0081e7862bc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4b45b0b8-ba7d-43e1-99d8-cccffa6281b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa06d4d7-16ee-47a5-a0f4-38947eef287c",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31890397-90d6-47c8-8a13-a23d6780aa04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52779f01-89f1-4092-8427-30ae3d580b0d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5d2433b-48c8-4096-be0b-ce54792c84e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7e1ec853-1455-4dba-975d-f79fbb32ad68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58e211ac-d874-4efe-b6b4-6bacc89e6984",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0837ccd9-229f-49cd-8f6e-977bd5316675",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8ad1961-c624-49ad-b76b-89de36462a21"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e7c7cf5-1bae-42a4-9611-c0ac9346f47c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4b03fdbc-2320-46ac-b4fe-7a0692b0ac41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1cd0d3e4-3fc2-4ac5-a063-c9080909c08c",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbac7216-a4f5-4c0f-a695-d26dec34ae01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99730801-1a39-4bbb-a9d2-b7710e504756"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a13f098-e599-4845-84f2-90155d593807",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a15c8f82-644c-4674-a575-240c809c4590"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25beb9c9-3cdd-4324-9600-43ddbd82bc20",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd628ac3-2557-41a0-8262-b9f3e7d7f883",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "057deb17-3e31-4cee-8fb7-fa7fd146f2df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1922fcb0-21db-49e8-b5ac-e600f0584ffc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c36c0a22-6ad9-4308-bb60-9169eeb44666"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59f5fcca-a5a2-4901-a9da-527f8f6b5a2e",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28b02c2d-fed9-41a2-9ea7-0ea735a005f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "069fb0de-493d-43ed-a7d0-40f6a8dbb482"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3716a117-6d48-41c1-a58c-8d13386c0af6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c5461a06-c6c5-4836-a65d-59d93974bbf1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9868ca5e-eb43-4066-85d7-8f11f74418d4",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "297d74d9-de7b-42f1-a7a8-415eabd348c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0793722f-7bbd-45cc-929f-b47603a9446e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec0ffbd8-ceae-47eb-8012-cdf1427fe534",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "202fa33d-cb8b-4ae6-9478-737c156cca28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00427efa-2cb8-49b9-b7a9-5018c19c673b",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38c4a744-4710-4485-bc07-fd4d1a5b6ec6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a69beac4-20a1-41ce-b08f-9cbc22022512"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ed93e26-5c08-4a7e-bedf-550c48f58a63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "747322cb-1563-487d-aded-421b0c924f29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a666d04-701e-4db9-a6ae-20e83e2d790d",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97c160d6-3352-4cb6-8b56-a85cc189d361",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4aea1278-3ca4-44fb-970a-18c419284bd6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e9f0549-d495-4ec7-9e0b-2ef63d868c51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8ca84b42-b625-4e93-b2f2-de0de046466f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a349d863-7e6c-4fa9-8cce-02e5a49a94f2",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62c0e54e-eb87-4beb-a283-ee8b936b3fb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33d86edf-5d15-4167-b684-4530b587d95b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffe68924-f22a-404b-a88d-8c7ffba4ced5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "316ed90a-3fa4-4d31-98e8-42580384be86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b057b964-0dee-49d7-a0e0-9abb52dea00c",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bf8508d-4031-499e-b4b8-8b71fdc5de5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06cdb1e4-67df-4d7a-9a33-04b57729a888"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4449fccc-b43f-49ad-8680-a375f66a800b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "35a74b7d-f6dc-4274-965a-ecde637a0996"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d3aa528-45d6-40c4-a748-a780d4ce9daa",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbfdf6ab-87be-4a4d-ba37-28da5c0192ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2d6353d-99a2-4a34-a27d-c969eda8f42a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c0acd23-f86e-44b2-99e3-e64410cb026f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b5d6e31f-cca8-4da6-b48f-f839789fc994"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7b4dd6a-780a-41e5-9c52-7b9ad2045fcf",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "703a6404-af90-4a10-a1b4-b4615ce346bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab90a0b8-697d-43d0-8815-9e8e32b5b19c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a2b7765-4a84-412d-a65d-ece4ce6c246f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a7c4f95e-c728-45af-8875-8dd56d61fce1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0af87094-a69d-4bb5-80d4-95a75be29246",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34e95c8a-06ca-41b4-b9bd-3f9d1c1f7c03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc45e2d3-03e1-4acd-9d3b-9fc25857647e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af611412-9bab-484f-84fa-43f7d0f20110",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fd417bee-acf4-4d35-92d3-2323486ec199"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94d7e923-ed96-4224-8e9b-ba088b615d58",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec28c4b1-5c7b-4ee5-bc68-c52843434a07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "395d0821-b4df-45f2-87d6-20a445f3fb78"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "134be894-014b-4279-9d80-4cb66343bf57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9d8cf84f-de0b-4b47-99fd-8d99946c419d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46762018-3f6f-4c07-a910-0b9f76ae4cd0",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e97d5b0-ba33-4f10-b5bc-9af2776e2e4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68587085-8a9e-454e-a480-f2c551708f86"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77a93fc1-a65a-4955-95af-af01e6d94b36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "eacff8b5-3b62-4517-8b34-1d4e6ec8d5e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d79681dc-17bd-4b08-95f7-8d689493e82f",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a24d581d-d97c-4fe7-9b56-ab01ef8440ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb730834-e4f6-4192-bad2-b7f4aa599720"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e3a74e2-8ae1-4b7e-ad94-521ed093aac5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d300e08e-0593-4be3-8f8c-4ee0fbf37296"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4e257cb-3dfd-4e9c-8641-70969046d4ed",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1cc6dd53-38f8-4d9e-ac6d-9fd5d8e6a78f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "287a8a69-4801-4a19-8824-dbb9a2fa812b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf3a0231-f538-44c5-b780-04601b0ad1a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2b463eb5-7ac0-45c4-9d2f-536a4233a86f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "add9af31-9a26-4fa4-b06d-7878510451d2",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "482909cc-afb0-403d-a880-f65dbdf6437a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea223cd0-8e24-4872-b12d-c7a6579ccc9b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58e00a07-e8aa-4e14-bad5-ec1cf4821985",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "718d552c-66a8-468f-817c-a800c1db7595"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94392a30-7183-4755-b7e6-18d7b1098b3f",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05ed068d-087f-4644-9a91-9d6d57684f22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8adadc2a-9d1a-454e-b0f4-4b501a134fbd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3b7dc79-078d-4db1-a24b-aa1a38152eb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a38e9155-12c9-4fc8-960e-c3eb5883eca0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d10653de-cc7b-4024-9b44-775baa3ca47a",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11a8a838-e1ef-4dff-9b31-6c554c15bdc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8eb345e3-95c6-4dd1-b6d8-a7717da00304"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9bc6f7b4-00c8-496b-8a2d-1190c44c8bae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0f83c049-a415-4552-8ba9-9d6decdddd5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b082979f-a340-4f6d-b472-79c01ce5864f",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09847559-f37a-4dd3-b64c-fbfdb38667ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07f6b6cc-3314-45c3-b5af-e59fcca80897"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc8413a2-f0d8-44f0-ad62-3b44bcf39be4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "ea3f33d3-129c-4000-8ce1-5624eb81f5e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "829aabfc-8836-47a8-b7a0-ae23c7efca8e",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b297a4fb-1538-4d09-a080-af10e47e63c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0bae4a72-9806-41a4-a3db-592390504ed5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8523fb6-4696-41a0-9221-fb41621eac68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "ee1c9c5d-0ebd-4dce-ad21-c1815a6dc55d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df9210e5-d4bd-4760-90cf-cf0956456885",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac8494ee-a3fa-45d3-b799-4bbe489abe37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e43b639-7f07-4cb1-83a6-d6b12378b2bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8613feb9-f74f-41c8-bc6e-22ddadcb8e77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "67fbf1e2-e0b3-4227-aba0-aa0644a49ed6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af78b493-c89c-40fb-92e1-e8cd45c5188b",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "702252fe-a4e6-4830-a4c0-ad292f282956",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1339f4e6-7472-4160-810c-6c1a0181f080"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51308576-5b34-422d-b00b-0e4b9037042e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "af2c12a7-83e9-47af-aee8-182ba71f4c1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b1db633-5645-4f8d-96bf-60a880d2091b",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2acdf389-c03e-4e4c-9e48-077486fa75b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "044bbd2c-2014-441a-a1ab-b62235a06244"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c371fb5-1d18-4425-8985-fee854e6d544",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "624f2413-df96-41cc-9a08-29cb352152de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2908bf23-b107-44aa-8847-1fef1c443993",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c15ad08-a1b4-4f3e-a039-3d4934c944c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e85f684a-74db-4b3e-a8ad-cfca2a3c4fa2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe57e40e-e92e-4ca5-9bcf-bb2af5d46b06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "176cdfdf-a00c-4c86-9aab-f9d8a89c27ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7212bbfa-d8b2-4124-ba27-dd819d3c443d",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5bf27ba-e048-47c8-9017-69b5963c99ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3eac815-16ac-46ca-a3ed-0943b6921311"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35fb3b3f-7693-4f35-aa29-820d6667db18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "b5d8c37b-dc43-4a4c-90f8-a9a808282e49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc64a8d5-4f8c-4772-bb64-f7316540a751",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fabd1d3-3e80-4452-9620-0fee6743a5de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29d5a06b-252e-4594-8d0e-5c48e7f527b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a312f75-a22e-4d47-ac81-27868dc20362",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "dee5b58c-c833-4e47-ac09-99f0187dc007"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cdaa3905-7773-4046-b7ee-544faa45f622",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb9e9975-360e-4567-a3d4-d1b0d23befe3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bafe2573-fec0-4980-93fb-c48f8d5f70f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3789ec0-996c-4cde-8a0a-4faca91fdd86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a98dda29-c3b5-4498-a14b-9f93d4031528"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd63d2e5-9225-49b9-8ad8-b08b82e862c7",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b0b899b-9bc1-4ab7-8f42-afea5c30e8dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37084b53-d5ba-479d-a12a-b9c7f21050ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "147c53f4-392d-41ab-a88a-11b5088f01b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e5b339f4-08bb-4d0f-892e-154bafadd7e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a08adcf-66b1-4ec4-83a7-5d30a811d40d",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7981523e-1be8-4d20-8502-9f2cf3c1f539",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2dc23da-e669-48a9-a408-9460d71920b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d6b8ba1-6f52-4cd9-9aca-4dab611e2acb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3773b0ac-fd26-45c4-b402-c4b69ffc6535"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3415e088-73fd-4287-a7d6-112825d915ec",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb988865-ffe7-4360-8402-66ad6a3b5bdb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5e0be01-d928-4058-82e2-81c2cd76ac8a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d8f2605-a070-4876-ad8c-ae44f665ab70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "e494bfeb-3a44-4983-9b39-3c2785cdbfc4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70e44630-e5e2-4525-a65a-92a2cc546652",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1b037ee-9cf8-41b9-baba-241336f3707a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "bd3cc88f-8bd5-4697-895c-b568a345f694"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1743a4af-d6ba-4c5b-b4c2-811498aeef35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "9b509ae0-581a-47aa-adc6-668bade891ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4cf14622-2c53-4d0c-aaa0-2773768b3935",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fa8e7fa-bcda-4bfd-b7c6-3daba895e824",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2d8bbd3-8752-49f4-bdb2-115c9bbb3b9d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07fb394c-4eb1-4755-8bb9-f84161abf816",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "200aae60-3038-43c1-a702-77b741bf90f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "224c5881-fd7d-43ef-ad23-9a4c7241582f",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36f4d234-081c-41bc-a591-c24a09f4da7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6e1f51a-038f-4179-8490-45d82d1df95a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3209d87d-4f9c-420a-a59c-4da39610cfa1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "18bc20e1-3d1e-47f1-8617-d71883f38b13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed468c58-8a00-4ef6-99ee-2e047774f566",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25393eb2-fe62-4261-9822-f83263608fb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dfee8d66-8410-4f8f-bef9-1cd96326bce0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f000a8c-556d-4365-90a8-8558ca6d2024",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "3569f33d-d720-48ad-812f-9a75e3ff8dbe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aca27d98-8f82-47a5-b5a8-7a3242c1fa1f",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6beec396-4872-4750-92bc-f949cc2ec7f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03b90b84-2265-474b-a3ec-e996c2488e03"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c337cd2-f640-401e-9558-10f0af4bb429",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "828f3877-8810-4d00-9128-d1bca1a5e57b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72354b2c-751f-483c-9fb6-1fd1c5fdb3ea",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1b1dfd5-916f-4329-add2-cd94b40a316a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79ef2948-018d-47b9-a841-07bf3b6c7041"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e2fb9a9-cb3b-4d74-a16e-a72844c601d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "c901374b-d819-467f-a4c0-b2905048dfb8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c8f5bd7-78d1-47ab-99e8-4bb0478aa2e1",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89fe3f2e-e8c1-4f4b-9ccf-fa6b6e5848b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0a2a881-b355-450e-97e7-62286425e121"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f2d2153-ff5a-4d5c-a675-2c795ff68c0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "6691039a-04c5-4dc8-ad13-b058d8148a0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b99673f-ac5d-43cb-93b4-01d0524d4ad3",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab7f3986-de05-46de-a2b3-8f65e17db448",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "054991ad-1c25-43c2-9164-5fa571a4fef0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "520699ec-faab-470e-b4aa-7210320bdd7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "719183f2-9a0c-4621-a176-4d1322d892aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efb82b86-0c10-40d3-b56d-73cf7d4eed32",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21e9a9b5-2fa0-4fb4-b3e6-772399de36d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "15dcf4a8-637e-406f-bcad-0895e6a027e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2cd2aa2-6d26-42b1-a63f-41b3e462ab06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "a8f88350-6447-4630-8ef9-59c597f0ec43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee212e93-131a-48c8-a699-9cfe17bafbdc",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f031dca-40f8-47fe-9ca5-648efdc3e458",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b55c3f7-9a20-4355-837f-d8e2ad597359"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddc1c172-e70c-4d24-beff-f013a5b4696c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "0295a1d1-016c-40ad-8744-48b315873654"
                        }
                      }
                    ]
                  },
                  {
                    "id": "effbe387-360e-43a1-9750-462361c03ad3",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1ebd7c6-e4d4-4ccf-a931-e8a8bd6ec73d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3fb8d2a2-01c3-4c8e-9129-9a71b55b5c73"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "976de6aa-1b79-4e34-b16b-a8f5997d90f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a5127786-0711-454d-99f2-f3f169147fe6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ce53df6-64cb-4352-92c6-4dffb17aa6bc",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40081410-1c3f-4de8-a4f6-f6abf5857132",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "deee9430-f337-4596-87f8-576002f57271"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "876b01fd-71af-4ad9-97a9-b3d8fa22e9c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "58ccd5a0-7e81-4e38-9f09-db73d6a14aa2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab3bc41c-687e-4650-9502-c2fec0ce5a44",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "647e8e2c-0d51-4abf-8674-6cbcdadd061a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09412217-4f6b-4871-a4f7-eb950092add2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c19f0d7-320d-4dde-80ba-9998452f1f58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "bd97b514-6ccf-409f-9103-fa15cd1848e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9795c4e-7749-44b5-9bbe-189e2bb88411",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28ddef4d-92b6-4053-9952-d2ff1e079e12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e4706f9-59fa-43e2-886a-68c2931b6f81"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7abaedfb-32f7-4b78-ac9f-bd5bd7b70ed2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "5cb0403a-d760-4f08-82d4-47229cfca94f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c948fb84-cb4c-4845-9b62-883ae693aaa7",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b121d0b-cb21-4c35-9697-6e9a216fa626",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca6617a4-95a3-48a9-8a39-eac39cb6a432"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a923ea11-280f-47ba-94d9-8bfd67785d2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "16ef3ce3-7052-42f6-8423-9ff6745ec252"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20cc83cd-6394-4eaf-872c-8130f6013009",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a2f4adf-459e-4c86-a030-da332527f86d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "818a1b0e-24aa-42a2-bffe-07ea8a743dda"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9b15860-f162-45e1-9a96-c9f35840c073",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "faac3dbc-c316-42ec-a04d-61e949d68e26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "207e5dbc-6b56-4c37-9099-42d3f1457a78",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffa63ba4-82e4-4e3a-a136-7cf207e6bbe5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "698d1279-a8cc-4320-ad8b-08453a7171e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "712796e1-0d78-4abf-8373-f30a2f0845a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "88e75a61-0fdf-4ed0-a0d0-f18a92571ff2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "292514c1-aad3-43ef-9485-cb625c85de90",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86f7e7c4-6459-4a88-8b2e-906039f4e9e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1121da92-2a08-421c-9435-36ab7916b1ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f4c74cc-af47-4e5e-ac13-fb3a2b5e045d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "185265ff-b127-4c0e-ac27-209b3ceb42b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "846642c7-0d85-4a2c-af79-eac3c57be3b9",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97ba66c7-d85f-4fb3-894e-b0e8b932e108",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "edfe7887-ace7-4797-95ef-53a00e82c8b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abaa568f-90fb-4b87-a39d-a36051bb372f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1952f5d1-b3aa-4dbf-af3c-8809ca2ac4f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5eef4c50-6aac-4ed4-bc97-f7e52248ab0e",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b5df883-c6af-4af5-a06b-746c2f957cb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a538673-f948-4077-afb3-2b06643bf556"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0bcc5592-d52f-416f-956c-380a8a35d2d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6e97bab3-c4ff-4730-9c10-169be79dbde3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4c5f2cf-0f58-4a9b-a11d-d901838f995e",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e44c022-2074-4cf6-a655-59d9c41738b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bbd783a7-c93f-4c1f-8a41-81c04c4c5eb4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "edb32e61-8f1b-47c0-a79e-5b4d3da2d93c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "b438d466-f7b2-4170-998c-9bb257b2771a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec3be15e-27a3-44da-9261-a14778d34def",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5025bcc7-aefe-4ef2-95d4-bf9c0bb34fc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f65c9b3-7580-4e83-ae78-d6ddeecc97e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c065d280-eaab-459a-9805-017ca1a60b22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "9bad0ccb-76c4-401d-8aa2-b4bf55084444"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e96861e4-6f9c-4697-8170-a71688ee3531",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f17fd210-2e08-4054-a71c-40e5256136c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26b54964-c654-4f74-9c93-34e51ad27613"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8bca6d7-94ea-4a12-b718-33543d9098d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "bc47dd96-e2c4-4c2f-aa17-9b1ff397d9f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d361be82-f71a-4edb-a13f-823bbe18439a",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8dd22bd1-8117-409f-8d5d-d07c6f602fc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2f276f3-89e6-4041-bff9-f21084288fa0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68006ddc-f9e6-41db-9a9e-4bae59646cdd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "272eaaad-1624-42c0-ad4b-b185403d6a3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d32b0ef-cd57-41a9-9204-c72eba2c950a",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21a15ec0-8bc6-4d68-bfa1-3fc20fd4b74d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20acaa9d-5144-4fe1-aaed-427ae3f9239d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b657517d-f436-448d-934d-6ac28d73f28f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "10f9801a-5f44-45be-9f1a-99347023046e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7b2ad7d-452c-41f7-b18a-1b857865f0cd",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d12d38c-6df4-4f87-906b-976383f435eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "940c1447-a8a0-4b05-b735-4dad2c597cc9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a79684a-d1be-4956-be74-8e710ebc6c65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "7d21d2ce-9f5b-48fe-bce7-8421d22955d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82c63fc8-bd7b-4817-a618-00dd6cbcc4d9",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68646be2-14a5-4308-b97e-d32f710c67ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d1cb2e56-74e9-4388-bd3d-c6e7e5e0ce13"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "572e1026-b7f6-406c-a59b-4df80b05df5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "d183ddc0-9273-4069-b48c-fa4cd996a9c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "729ba480-1c5d-434c-b075-808b7fd4c611",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ed80ce8-5cf8-4a4e-b218-0bf8ec3f5aa4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9eccfab-cb71-4735-88ab-ebcb481cbcff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b2fa723-b870-4c00-89da-e246c571ab8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "dbdfba25-096e-45be-b7d7-f61bd82fd7d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ead530b-6afe-437b-8fb1-b184e5fd0e68",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53311a47-0f81-4ca8-86bd-a21ccd69ef46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "957955a2-2ea5-4f07-bb09-8e2edfd19051"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9cff914d-2e74-484f-8657-817f401122b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1870cdd3-8cdc-4b5e-ba6b-f0f85f9217ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6772cbef-3060-43a2-bcc7-03dcf5fd0564",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ae84d1c-faa0-499d-b437-5c54502baa34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7d65249-8aa1-4bda-8538-2d2e9d006993"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0ca9f61-c01e-4161-9e3b-7c485944a305",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f967abfe-036a-49b6-8b2a-f1d67ae2747d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75d87799-d4e8-47b5-baf1-0a9522cb1ae3",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d78682c2-5674-4b56-b2c0-333d3117e181",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07ae9315-6be0-43d0-b2fc-8c33aadee4f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f743b08f-4441-4ba8-aee3-5d75278abd65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "149186a7-d657-4f7c-b62f-b16b8b27b418"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e137469-eb07-45ce-9a62-cf8083c6d225",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e09362c2-7788-4abd-8a72-2a0acb02c0f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b584e61-32c3-45ef-ad9f-47867652e3b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27247006-b48a-41c0-a8bc-c4c719219b4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c01b2497-16b4-4f27-b0d7-7cfa8b429e91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1612573a-0031-4cc1-905b-386e4b8564a2",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ac2b41d-3bd9-4640-a026-84be99981156",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13d0504a-e134-4177-99e2-bc16f7898c57"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35d2bcfe-5793-45b5-bdbc-349a35b21d0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "5ee332fe-7b32-468c-ad5a-807289ff0cc5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5d448ab-8765-448d-b30f-646ce8aa5db3",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa5c501f-7ff2-4484-a2d6-c3cb1fa93720",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4fa69313-4eca-4ac8-843c-c7c3eb5e6d91"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9629f5a0-d083-426c-919f-53b2148ad168",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "af49e044-e6e3-45ef-bc76-5b325976e71a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a523a00-5dda-488b-a5f8-7892e8285e61",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbc506ce-a47c-41e9-97ae-66543a11d269",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "daa57014-89e5-470a-81e3-95162e976506"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "603635e6-1ce8-4b49-bf7d-39f19cd81a34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9179dadf-0500-4807-9e0e-936b29bb0bac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf777847-bc14-4c9e-930c-4934b228af4b",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "259f5da9-95dd-42c2-9b0f-a97c0ec33c58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f88eeee4-27a2-4b4a-a855-de189d1efaba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3455dc7e-70bc-4604-aa24-b1bd8fe11b4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "88b02187-fff0-4ea2-97be-9cb20f48aa4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e4b15e0-2bf0-438d-938a-98cbd84b713c",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9a38628-19b3-4f08-a5a7-c35b508d5948",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3735cde3-0202-412d-9316-706cef697753"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4cb2bd8c-41c7-450b-af1d-a39fa342689d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "fb5a4db2-3add-4544-b6ea-d1ac071b3868"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20ffc1ed-23d4-47c7-b060-bcd9db903f6f",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d14d1f51-957d-4af8-a48f-a830d8cab2a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b4a6c08-9fe2-4a78-b058-6e9ba2297e3a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e3e002a-57a0-4573-a0eb-94b0a65e4359",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e0cbcd45-6f8e-4487-a126-eec633c0f0f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a56efd1f-00d4-4a98-ac0e-0d77ed997ef7",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40835c2c-db95-4418-af46-d80ba7da4c37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ccc25592-b5f9-495c-9631-b3cdd7b57356"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1310a59-0c46-4bb8-b88f-eb33ce17b282",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "47ef18a9-fc9f-4156-94aa-ff081f6619c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "646c7c12-9c27-4543-92b0-03466aca8d51",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6b30a67-0ef9-4850-aa17-7f7106c52619",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be8b540a-0f16-4d2e-bdfc-1d4a3160dcb5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38fc927d-dabb-40d4-9ac6-7c3a8cecbd6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "e738ef2f-c0e4-49d1-b8f8-2106580760fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3895b1c-c91b-41ba-b2bb-4391ead0fd52",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf3d1204-0de4-405d-8250-1da3a6fa9599",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f7b0587-a346-4206-8875-6b7266e70382"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b2dcb4e-f79e-47b2-aa89-110514d999e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "334116bf-172d-493c-9ffb-217111d75b23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07cb42d0-43b8-48d6-a132-c994bc1e6545",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a90f7b32-8611-48d5-a151-5de5fb7d2f70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93f9783e-a89b-4156-9a65-8e7f989ef565"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d94b8824-af63-4faa-b6f1-9cfa27745289",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1238040f-5de7-4a08-bf68-d3f5ec119d50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fcb97f7a-573d-4083-8883-7e9c29ea363c",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28b929a9-5625-415c-b788-09ef91fe9353",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41ab56dc-bba4-49e2-bb2d-b007037d45c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d02ae29-23ff-4555-b7cd-1559e0ea09ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "993a53a4-fcbc-4a6a-99bc-9f3fbabac65d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bcd5cfba-fa45-4452-8e24-8c750d57a83c",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68cb3e59-36d8-48f7-8c8d-1541384a2bb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44539555-111e-469d-90d7-bd9f5b472dd1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb6a584d-5d31-4ab7-86bc-b71e8a745381",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "5bb4550c-e263-47ae-8aca-1565948bc490"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50cca2b9-dc52-4dcb-895c-bb181d23c68c",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bd10673-8829-4ab2-aa80-f63d82ccf321",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61de9c8f-7d6b-4d87-8097-e93f68eb5614"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "635e0ca4-81cf-4ed8-8d8a-266e384f6e55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d45c4157-1122-4d32-82eb-88d344f0db3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6052baa7-b1ea-46a0-aa11-4c9d9fe39b5f",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76f637b1-1b09-4d6a-bc97-4c69537bdbda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f8116f7-c15a-46a6-8421-bf333ac2db94"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2035ee55-2122-431d-b5b6-1f7959e41ca8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "4769643e-8c3d-41c8-a246-73f55c650cd5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df9f877a-f37e-46db-b783-5e4bd55f1d41",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed879294-a4e1-4088-b27d-dd7740a3e53b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b7b82648-2fcb-4c5e-875b-fa698b0c6569"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e48214d6-222d-4f56-a298-5a4adca0a9ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "45e5e1be-e537-4742-9dc0-7bd60d339dbf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77300673-b39a-4e35-a59c-8a5305badea7",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92599ca1-f2cd-4830-841d-9f464c5fce7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06b252e1-ad67-49b6-a6b7-d87b223da405"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d1c0101-9fd9-4b13-9409-dfd58ca271fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4c275718-04dd-42ef-b529-1974ae346056"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b1ec38a-f53e-43ad-a9fa-9ec22fdeb96f",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0a7d6b4-37f7-409e-8a70-764df16d7968",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26c50c66-1c02-4f36-812d-45b0012ca8ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a076c29e-6701-4772-8133-9e05345d4d6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "cd65602f-23ba-4655-b536-8db09367c38b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d470a8f-7e91-478d-9b0c-5762c33a5991",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86abe3a7-0dba-47bc-94df-a61b7725889b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d07652b-e5d1-425b-832e-2bda9b70b75f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f7b027c-6a68-414c-89b8-9c1780017738",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e489f6f7-667f-4c3d-bcc2-756d947cd343"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20b8616d-d807-4f84-92d4-6ffc212e973b",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b27f0e09-b0f9-4f23-837c-8dbfd4d1b5d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8710b3fe-9290-4d1d-b456-982eefec0bdf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8a04d78-a844-4403-b4f8-8f2c939c96d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c54ef995-2ee1-4bdf-bd4c-2575acf0f2ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e0635e4-8fac-403c-98b5-54668163fc15",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50921227-2a9b-43be-b7a0-612437ae8a22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "771b726b-4ad1-4e5c-ae52-1ea8f9242327"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f67789a-7045-47de-a2ec-b44da722dc79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "c843895b-64be-4575-acd7-1fa34f87c487"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19e4b426-0438-4128-a5dc-321382bbaa9e",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47732676-b035-444c-a12d-5172f75508fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18db16da-1721-4052-9c7e-1b59927e4e07"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1620980c-d492-4094-8d01-3b122e5a08c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "73e2a474-9b64-4a71-a7b3-e31fb3be0de0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73f98965-f41c-496f-8fed-8869186dcedc",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b12dca8e-efbd-446e-8496-f690fd6f61e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a71f9808-3cad-4a5d-8b31-014c26ff0750"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba20abf4-9139-4214-8621-fdf75b991991",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "09621877-5132-490e-aa42-f1b03ee27b0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30c68df0-9cd0-418a-92a1-c13ae070fc69",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af0edc49-5e27-46a9-81f1-d638676ef231",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7fe9d1a5-69fd-48d4-ae43-be122f34114d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2e83086-d888-45c9-9e35-3e9de30b3879",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "ba09101e-ab68-4f2a-8717-8f6c3cadc257"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34493c6e-a055-497e-a03a-db91fa567e8b",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b77ab8b8-b82a-473a-a92b-a7f808bcb1e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed303d7f-9634-499d-8768-17dfa55cc77c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed0bf2ed-5f28-43af-9e30-b5dd499f4c6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "bc2d1c73-41d2-43a4-95f5-aaa49c7a47a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af1c938d-d9c7-4179-8dd7-a242af487100",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7e0facf-7c89-498d-a1b5-91485e00ec38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "8477f83f-51d5-4aaa-84dd-2286f058cd03"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f79f73c-5305-4a9d-8a65-beea5266972e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "bb2b6afe-0bd9-4a72-9e05-45d306b72b42"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "f813c804-8b08-4ab4-ae30-d7e32b27ef4c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "bc9b8e51-3d5b-4323-84f5-db88bce460d1",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef90264a-800f-4d73-9a1b-6679491f9445",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "685baab8-eeac-454b-8492-a62c62622064"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca1c0d1f-624e-477e-a2c3-2f54595180d5",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9931bbec-7afc-42be-ad41-fcb83d8affe1"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3e66b855-81b1-48a6-a6b3-01d85dec8143",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3be96b72-ff73-455f-b8bf-32d3475b080d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "4735d1b7-01c1-4a54-a652-488b14509a6f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "845bec68-a408-4113-ab2e-f02120c83139"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "39a9fa06-6ed3-428a-9b6d-79ec0a764006",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "6d247eb5-d417-44df-9777-8c1966071fed"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "fba2dc36-c1c0-4553-8443-f4273c686367",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "aaea11d0-73c1-4b5a-8024-275d029f8747"
                }
              }
            ]
          },
          {
            "id": "fdc22a7e-f6dc-4446-ba9b-d4979401ca48",
            "name": "Positive Testing",
            "item": [
              {
                "id": "179eb789-2fc7-4c16-bd38-35097b80f7e3",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b9911f75-0e41-4d81-a572-ecc573d8e1e5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "6226718e-3eb2-433a-8504-d6ac3799b1a8"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9f24955c-e0a1-44e5-b76c-03e0b4af5898",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "29558644-9df2-418b-b532-3ea96bcd1c4e"
                    }
                  }
                ]
              },
              {
                "id": "0eee3ccf-58e3-4444-93eb-fd995033e0d4",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f3e8271d-3a06-4de3-a2a7-54409695823f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ad4e70dc-964c-4632-87ca-a172a71ac558"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0c6e2024-915b-442b-97c5-d4951dc975fc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "65bb5fbe-f5e5-489e-b38d-ed87cac2c144"
                    }
                  }
                ]
              },
              {
                "id": "2d9fc76c-2035-4dff-856f-9e24ad712797",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "581f885f-9a6f-483a-a454-9b5478c906f3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "4a16dbe1-6606-4f64-aac1-18d643d65cc1"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5435b5d8-0fe4-4b89-a928-1d35193b14aa",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "5e6bf205-7351-464e-b646-cbcaedf0db0b"
                    }
                  }
                ]
              },
              {
                "id": "d3d1298f-5ecd-451c-864f-bbd47b900531",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e6788e1f-3825-44d6-a0a8-789ddab92021",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "0dfbeb68-884d-4cd5-a602-bc79a9bce921"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "68ed571c-0355-47dc-89cd-6aefc4ddc4f4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "f78d56e5-f086-4415-80c5-1465912be34e"
                    }
                  }
                ]
              },
              {
                "id": "e51c8cc5-cdca-4ff2-985b-5653eeee44f9",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9377cc63-538a-46b5-b5f7-f15242e1fc6e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "18b5ec56-8fff-42ba-8d5d-5c88ddc57036"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d6f0a5a2-ccc8-43c1-a927-76b7733919a8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "0fc4de06-e146-42af-a247-3d7b68b1eff3"
                    }
                  }
                ]
              },
              {
                "id": "e8685a7d-6224-4114-b710-85423bc613c7",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6394fa85-24f2-4599-9231-44e9da43348a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "7b966244-1a88-4ba6-9049-5ed4a0c2e518"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "aa97cfe7-adfa-4b7d-94ac-25399200e140",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "b73ae477-0b1a-46ab-89e1-3a03c8aafdaa"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "7de3afac-cddb-4a16-b122-1f949488b73d",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "149b7ccf-67f0-411f-b2cf-be8f5825fecd"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "04c9ea54-e86e-4766-be08-89cbb6b895c1",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "d0424937-72b4-4488-8b33-64a5eac2bf36"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e3b0e324-fc72-409d-8a23-40a2eb8a9823",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "ecde92ac-bc71-4004-9602-c01b7663ea31"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "382d1433-0d11-4a8e-9203-63671d78c550",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ac2af2b7-6335-410e-8280-a578560784f2"
            }
          }
        ]
      },
      {
        "id": "2ef82fba-240f-40c2-a646-4c295a52e4e7",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "7c562fce-a1d3-400a-aef3-a52d6ffb7ae6",
            "name": "Negative Testing",
            "item": [
              {
                "id": "168658ac-368d-438e-ba73-00446412f1df",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "8803c128-0070-4c8c-a7ac-5f65f5cbf978",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "633a8879-ee89-47c5-8493-abf433f7b92c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4baf967-a8b6-4c1d-9a7d-ad97dafa7609"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b637a16-9fb4-4fd5-9780-97f331d11394",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "07877b34-de73-44b1-8d01-234c002e73e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb89eea9-942b-497e-a1ae-db2652bf4f05",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a3898af-629b-4648-aa2c-d52c9333cc28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "850d4366-0888-430a-82a0-e4fc4e16a8ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9cd76a3-6ce5-4a71-8c8b-0cb5554851da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "7846c64f-7695-4646-92d8-93bd4be4cd82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65d689d6-93f1-4ecc-a1d1-c0f2115c7449",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4cf098a2-b2a3-48ba-b742-b8caa60c3da8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0560f9ea-2140-424e-b581-f33d73a36692"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43d211e4-93fd-4828-9af2-1a25b86ac84e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "64814117-7e73-40c7-a308-86867e80d6aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f40c6df-5d6c-4691-802b-f18f5f0c2734",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8afa50fd-320b-448a-ac1c-af5f5bfb6e31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b157dbc-68d0-497d-91c0-5bc18a660712"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3aaa0822-8c60-4239-aa8b-c592364a3330",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a08a6efa-0c43-4ba1-a2eb-fb5923220927"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94d0f120-e51c-43c9-9111-f9d90efb4069",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab5c8811-c73c-4631-aee2-1769aaa57a33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e7e0285-d54e-406e-9449-693e85f3b794"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8a4fc99-e4b7-421a-8ca7-0def9c217a30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c9513212-1150-4dc3-9c9a-4ac5e97a6fbd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0667d1f3-1330-4835-b641-443651e4af7c",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00b7311b-7aa7-491d-a3f4-288414533d5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba825174-e942-48ed-b077-548f7c3e913a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21ca7539-ec57-4788-adaa-6f8085268fd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b63cc11f-4eba-4718-b256-9df03d8b957e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d51ed327-3fec-4800-a628-698eda1ad0fb",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a781a97-f3cc-45ab-b4c6-6ae2889632aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73bae469-9756-4099-8aca-4cde9593abef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd2d0121-2d2f-45b1-92c8-c70c62843300",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "964c47b9-d7c1-422e-9c8c-2229ba7520e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1e9b2eb-8086-4f4f-98d0-4cd32859cda4",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ab3959a-fc2e-4a82-8a7d-9b69f250efa6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "664664ef-cc0c-4a39-9043-04947e75149e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2bf4f6b4-9503-4479-83e2-51cb91a8eac0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f5412050-3028-45d9-9edd-d68457909530"
                        }
                      }
                    ]
                  },
                  {
                    "id": "833b00ec-233f-4e86-a3e5-6d5b2bf2450c",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "893d6aa0-ca50-47af-b7d6-8aefa291982b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca85f2ea-cbc5-43ed-883c-4bf08e75c873"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a28a3aec-3302-4bf4-a631-5f0c095a8cdc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4fb5bc63-0e50-4560-b6a9-d0a7a83557aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b54c9cda-5f24-493b-86ec-7a026fe3245a",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d53e0f65-a7c8-4196-845b-f41508d8a00d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1254a32-1da2-4f29-b0c4-c0536b0203e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a18c791d-fcd7-4e3d-baf8-0a37e325b0ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "42eb695c-8419-41fc-838a-24b1d170709a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5ecdcb5-e01a-4a3d-8b4e-48c2a944e358",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37414484-5839-45d8-9a97-078c5f616fba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08487d5f-b989-49d3-ab12-97926f275de6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d99933d-7caf-4334-83e0-adb5352193db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "cbdf7bc3-d56e-488e-a8b3-ab734278d3eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e2c71ae-15d1-4d2d-8faf-e0a22b57636f",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "accf9b9a-52c2-48d1-b924-5918cbb318f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d2b901c-a054-4b7c-8185-a7fe335959d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9e51036-c275-4fcb-ac1d-5e3898d5e93f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "dd9b04cc-23b8-44e4-8117-3639ae74bc27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fac806bb-cbd3-44c6-b292-4fc9d29466b2",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8585f25d-d6bb-43aa-a261-ceb2eec3a1c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66ac579f-cc6f-4f98-b69c-a64dac4f5804"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ff16944-3d26-44e4-b85b-457c48c552bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "f59d71d4-fa91-4dd8-9551-bf2372ab5a62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa17f7dd-eb08-409a-a13c-f7584358c431",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c6871c1-6734-4f8a-bc66-6e4ef3723561",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb748fe9-0d45-4c3f-bd9a-056ec6b2b3e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "253680b3-268f-45f3-95dc-1926914681a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "4e575d35-00cc-4e54-bef4-f031ac57e64f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c33f0b18-a7c8-41db-b7b2-1309b9f7e9a9",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99c02e3c-2f0d-4371-a31a-60d08e159f9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ebc1d2b9-27dc-402c-941f-578a81453a22"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c71f2e92-4ad0-4948-afcd-987bc66e4690",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "264f4757-f30b-4431-afa0-5cba46160ed1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa8936cf-2fff-4f0e-ab02-737c88cad12e",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b55c90e-fe93-4a70-9565-08dd8d97fe5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c700db1e-da31-4735-9f1b-9c0d77cf2016"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c73e96d9-5d10-4d5a-8e0f-5f3ed6369f57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "af8e003c-1269-42c2-9d93-1c396d8673db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7784e106-2be9-4cfc-b39f-e0aea8e0d9da",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e27c87f-856d-4c58-8b34-7e9220c20ab0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45533d23-0968-442f-b469-abc216a34cdc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47c82048-fb18-455a-8435-d8c65829b0d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "f32c5fdb-df73-4a0d-8dc3-6725101f6147"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ccac8827-c73d-4f0d-bcbb-138e3e14d2c7",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d37095ed-b41c-4e0d-9485-9137111e25ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b67c857-302e-4c85-ad4d-31677cfb4f63"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21baf232-e093-435f-bf33-c29b4651515c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "dd725444-d812-4f40-b15b-77da0d5f94db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "315546bf-a28b-4bc7-b2c0-7e7db585da2c",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa8ae47f-4b36-4e62-bec1-3547f0f864ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4531ff1e-14c8-4c2a-a0a3-0cd4dd430dff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29312c96-1ea4-4bdd-843d-fa24cb395452",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9583c677-bb71-4f9b-b016-d4676c6ae81a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e662a9d9-1be4-4e71-bef6-9d99be6ca46e",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d67011ee-3ca8-46c5-a845-a6f7a06ba559",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb4f3279-bae9-49c3-b1b2-f3d8e808396a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "956f3eef-246f-42d1-884c-9752746f8ae5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "234e4e56-dfc1-43de-b118-20219645d0f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ba379f0-d026-49ca-bc29-e21217c55e3d",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6873496-f3b0-4fba-9efc-be7b19a57c97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "926af112-676e-4096-a78c-93bd1621fd00"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05476a34-add4-4df8-a312-d77db7922327",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bbcdffa2-0ca0-4bb9-bd0f-3c701bc72412"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9383947f-a0b5-432e-8913-3e5ba11614f7",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67f4d8cc-e74b-4fd3-b12e-9efbbd58feb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18ac1f61-4d1d-4aec-9846-45311de33fa2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd5d8a16-a0b7-4acc-a9c0-2f899539ccba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ce9fcc66-f27a-433f-a3ef-31c0fe30e211"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e930be8-6eb5-4314-9de6-3480b528ad67",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da959c20-8b29-4e2b-958c-2e2dc0bad63b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18c66381-fc51-4a60-a18c-6ed50377c30d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76bede8e-2e3b-4841-a537-92cf89454961",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9ca51731-f038-42ad-a114-98435b7ce149"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8869cbd2-dbc1-46b7-a371-a99f1cd4402c",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bc99859-42f0-4542-ba01-54243de5f516",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "887fb207-54d1-408c-82fd-c5fb1e6d95bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71a688a5-5831-4faf-a223-2fed29709ea3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b290eb33-47a6-4dab-bf0d-88583752743d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09d3df2e-6a21-466c-8e7a-ff866a4867cd",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81ccb4eb-5dd8-4343-b1d4-b61d8d6f5e58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cec3d0eb-fc56-4360-b557-283ad5d51710"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a68a30c-8831-4084-b48e-0ae9cd19f146",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "32c4420f-afb5-455e-b499-e7422151c691"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7bcc122-85d5-48eb-a8af-ad08cf7872ed",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e77b207-f105-4902-9fc7-8746513d44e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "488e7b51-9c23-49fc-927b-29c6ff98ae51"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a9829eb-c8e3-4fae-a878-68f7f46ebed7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f68d5fe6-5430-4014-88ba-1083be3a4bfe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32d2134d-4047-4934-93de-ffd9413a5361",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "feed29db-d39e-4ce3-9a7b-e21c48e2f5cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f03c760-6f56-4ba7-9390-2f16da3e0677"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a8919f0-9a55-43bf-ad2a-4af7f5848492",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f51f300a-010b-438d-a4b2-1346aa5a5575"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e20ab93b-a63d-45ed-8d8f-e95c18d4d7c3",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09d54281-a3b7-4db6-899b-ed1aff11eecf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c71c59f3-db06-4f7a-a4ef-0d1f244804b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "096f5e42-5c03-4dcc-ab31-ac0ad4bda007",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e8c27763-ff07-4039-8224-547496bb8ba8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8414ccda-212f-4a3a-896f-d59d8fafd4d4",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "153aaf96-5740-4f9e-b196-ed66b3d19158",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81f86912-b548-497f-bbe4-ce536a00c5f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4625ddba-13c9-4e88-98bb-d185606d7d06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "217c52ce-27fa-4852-a1b5-19b31b88ef39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "249b6b37-45b5-465b-a0e7-e46a19efcad3",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b87c3ce7-eb5c-405a-ba35-aeb3d38601a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f1face8-87dc-4fe5-bbc2-c2f56c4f87b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a366e5af-a575-4e78-b878-8302abcb7f19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b8661964-72e5-43db-b11e-32ccce91699e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "553e42f4-04dd-4bf9-b514-0d7e01e01890",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e994cea-6045-437d-bec4-7a3fb02a136f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4fc7fa14-1f89-4ae3-95af-1e936ecbe9fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8757715-b94a-43b6-ac59-77abccf1d9bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "655685f4-89cd-4ec3-b53f-58f06ac8b1f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1da2b320-3026-4a15-a5f8-dac90a2777e2",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2ffb276-1ee4-4803-bd18-0edecd6b0f7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "044d8730-4e2a-4261-a584-2eb90e86c884"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37c60b0d-6f9d-49eb-9396-295eb4fdfe89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a621c2c3-c04f-42f5-a2d3-1819ecc10011"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "c022b619-2cbc-404e-b0b3-3b9d44bbfbd9",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ff3dca66-f3a5-4c49-b046-bfd4924e32f2",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0e92c3d-4071-4642-a521-f59bd19c97ca",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "578f2ea2-9255-4f0c-b386-7d68b1c7b3c6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a8d3990-4f0c-4090-a0bd-9034f139026d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3430684b-f6a4-4f83-bf0e-bf71750b211e"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "53ec2733-421f-4a45-ab18-730d2c01426d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d5dcf959-41ce-451c-bef7-1d52c308240e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "9a3b8bb4-5432-4bf8-9e5d-000c7df032d8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2a7afd7d-06b5-4d1f-9494-a5466ed4280a"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6b48cceb-597b-4383-9078-044c9b290382",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "5ef71839-c44c-4ded-94d0-f83e72f341f6"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d846236b-4163-4019-afb1-ab6c79a3c0a3",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "0418f7c9-409c-411c-b292-e85077943605"
            }
          }
        ]
      },
      {
        "id": "43e555e9-80a2-4e2f-841c-038510bdac0d",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "177f444f-b2e3-4723-9f33-3cdff524c101",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f9678153-9f94-4926-85d9-6cd7e0f2f78a",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "53dd0af1-55b9-4e9a-bcb7-ada41dca5791",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a773849-cdfe-4070-a124-4eec793492c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6dd076a1-183f-487c-b990-e0ebc75310a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af52ecaa-f7c1-4b6b-aea8-201f3fb4e5ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "a5f3daa6-0859-4a35-946f-73e73d75b525"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3825af0-c9af-48e9-bfc9-b8d5d749e8f7",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbb50147-26a4-4bfd-8e37-3fca29de31fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0725788-9770-4443-9336-a95866f957aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1960cc18-38ff-4029-ab45-dcb8917209e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "8da0bc13-4371-48c7-be9f-0b0e32878550"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98a88997-0a81-4857-a49f-f60f4d907a46",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d97c8c6-4ea8-4e1e-9e8b-6539a5f38aeb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e36b3ae-27a0-4489-90fe-94e59c5b262f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46f6cb3e-7113-4d8b-9b94-e8c7704ed179",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "84c9b290-6e7e-4cbf-8f47-6498fa9f6567"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d29130c-4da1-4435-be18-e6cc4af4d47b",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb225dee-12ab-4eef-ab75-4e0b938c50c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39d59be6-8f38-4312-bb84-e61bc723784e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac532270-7dea-483f-9653-8ea2e48e8a5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d12f71b0-09e6-48d6-900d-596b0eaa9a45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "616af851-a8c4-4c0e-bbcd-2b7777bff911",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "332b864d-8b35-48bd-96b7-4630cf3012d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8a2d8e4-984a-4039-8888-4cdac5bf60c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ced70a7-aef3-43a0-a8fc-6ebf5eb6e814",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9295dc11-8676-46f3-b248-94a93b74c996"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03519fef-aa4d-41bb-8b31-0bd4592d629b",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93a3b2e6-25ef-42c0-a06c-d8622c656d91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aaa725ae-2f5a-4b7a-b14f-ab6e7d61133f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e9bc3d0-d1a5-4e92-86ed-16cff4f365d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a2f86b0a-65fb-4ee6-9ada-d91d831e4e28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b90cb47-35b7-4674-9720-ed73eefc9b60",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca3cac2e-2411-4eb7-8d25-b415fffd7033",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fcc99a3d-8776-4124-ac15-34d6be88d98d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42e371a5-4de3-4232-8c41-5a3855d20311",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "d38666e4-e6c2-44c7-9ede-6d02fb64bec4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7d033de-8d6a-4a3c-9194-ae2b66933dab",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d3e6d84-c765-4865-848a-2ddc600abd9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5e14dbb-a2a0-4e6b-b1ad-54f63cfded59"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf7cf6e8-b663-440e-a9a5-c8af7fb1c536",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "91d7a614-746b-4f6f-b05b-6120befbd453"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76114e7a-b11e-414a-bfac-644542e374bb",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c0a66f2-cfff-4a6d-9797-21794aaac98c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "470a64a4-9a1f-4319-a5e4-52ab6b6dbaef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4bb34870-46d6-4732-b623-0ae7457efd6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "341cd186-cc7a-40b4-a7b7-25a2c0b42309"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e558cbf8-b505-42f2-b766-a8fbd11170c4",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16571e7f-5a1e-4757-a571-2e1a8c74dbe7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f21dd04c-cac6-4b0a-beeb-0051906042ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "042ffbde-e10b-439e-a782-123aec140068",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6785e111-7fbf-4b85-a96b-c8d15874af97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53bedf97-95dc-44c9-b86c-a312583a83bd",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88a0fbac-ff95-45a4-8f94-8c2a751779bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e0e9816-a376-4425-83c8-68482f5d5479"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15c8220d-628c-4393-a776-c79267ed30f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "41811a3e-582b-4a6e-b109-f29ecc75b6d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9eb17a52-2a59-42ed-99dc-28c39c91f756",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "901ccf25-cc0e-4372-8808-3fa3510d2989",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e651159-1dc7-4fb9-999c-9a3020404b60"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "316b4a42-7a39-4d54-9457-e18728c58388",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a66f4a34-f769-4026-92bd-3100349f566d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11543b70-9d70-4b9d-a01c-52f23e096691",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d551cb51-7541-4f2e-a072-7d3c8eaa2f50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34ea7418-d8cb-4368-a061-c9f5851be7b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2bb92b6c-78f1-4c2b-82c6-02d5b9319dd8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "35d8b0de-a5b9-47a3-958d-d8de457ec77d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11bb7b46-47f9-4ffd-8d26-ed2e68e6a147",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "043d3f47-b910-48eb-957a-8f9d3288daa3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "351bfda3-f0ee-4549-90f8-018fe5f03cb2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93209dc9-ce8d-45b0-ba28-a9d422f618ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "b5bb6926-b456-477c-a21b-1b900dd46291"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93f008ae-88b8-499f-b589-d0751f38cebf",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3dd777d-a980-455e-8648-4fcb6fc51482",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52f7dc92-a43a-40fa-93ed-d1ac70c64844"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b5def17-0c08-4811-b7de-ea6c0f772027",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "fd9cd61f-d1c7-4e62-8164-1ea3a01961d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fa72f0c-2ebc-46c6-bf9d-ebde634658ca",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9d461d1-1418-4e7a-9dd7-aeff7c6c317c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8090506-c5f2-41f8-be4c-3dfef7e9c529"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fa729a0-8b55-4aa8-828e-d9f6a928ab9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "48acfade-e893-428f-8a41-c9e618ca8bf8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "171632d6-0708-4838-bf39-553cfa4caac4",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6996ebf-64cf-4c56-9471-33cde8f3633e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a02c09d1-a2eb-4521-8e41-e4f54f07c853"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e982ffda-0e17-492c-b342-6cb87b0e92af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "401cf5ad-d4e4-4ca6-9dc0-138bc2387e7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37d81429-b413-40fb-9a02-d3b01dc57d26",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d09fb9f3-72f6-48ea-bdfa-f678cd871707",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16511f21-bfaf-4287-8d7d-2286549a823f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2e6aa41-76fa-45a1-9aee-4d8a846d9576",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "38b29f8c-e215-4de8-8791-313ae8b01d64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed4017f3-8928-45a7-bf3a-b7523caa16db",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "832f0743-a852-4f39-bf75-af29a173ad8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c143e15b-97bc-4e3e-b390-bbd50913cefb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "feae545f-0826-47ae-b8cc-fb633f106b89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "137dfff0-845b-4056-9c57-3c595c8b0ce4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7462cb4-be79-4cc2-a36f-689cfee40a7c",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5afb9024-a05b-4868-a31d-3f2e58dd8c80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d60f8732-b187-4872-967a-a51712dffa2c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ee28ac7-da65-4b9c-8441-dda2e31a343f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "42740f6f-a388-447d-9522-07850bb9d287"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3b2edc4-f259-449e-be27-ae97e89d5680",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ff35c08-b1b2-47d1-b9da-cbe5c7a9994d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "019f3db0-5f5e-4371-b8dc-ae1612012752"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f399097-2b67-441e-90b6-98ee8c70823f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a7a1faf5-cff8-41e0-9617-9c9eb230c7c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32369e5a-a582-4375-b4be-a1a016d2b4b4",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af805330-45e7-4a44-90cf-509d4a2458aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a4a3286-195a-4a86-8a58-06a076a3c41a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0202f39e-f6ab-4834-85f8-0b74f69bf3a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "76b7003b-fb42-4ebd-ad9e-d4e0591046e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13979466-6c1f-4a37-aaa4-185d361ff11c",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c11782a2-c803-453e-a0fa-43325796befb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef389738-f714-4171-8e94-e9ba0f61609c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b66235ad-104e-4f97-9c14-e6e75b3d9a32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f80debab-9efd-4d05-941b-26c5e26e9d98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98a33876-2cbf-49cf-adaa-1f5b2fcc82ed",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96c96215-cfb6-4b48-b1bf-1ee8728e23a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2701b97-df79-468f-b798-78794fc369c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3de920d6-678f-4814-8c0a-48aa26980892",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1e8d403a-6771-4630-b725-ea521951cdfb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34adeff1-951b-4b42-8cdc-1e9e33b2547c",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b01b17ff-eb3f-41e0-b118-9d66d23dbf30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c618a1bf-dd12-4dc3-823b-bfced6bdfb02"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bce076ed-75d0-4ad4-a62f-26394e805fe4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "af804c5a-9d12-453e-acf9-d53f3728fd50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c5c2bf4-7ac3-422b-94ea-579a291c43af",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bbf3dd8-a261-45ce-8ae3-1f055c2b5dad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a594f581-4c95-47e8-8e5c-28aca51d069f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be67820f-3ace-4e73-bdf0-919a22cf7dae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8c103658-4ed1-4a11-b5b9-87691219a30b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55225289-4b6b-4880-b748-bb805415be4a",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a0180a4-9af5-42fe-984a-210b013c87b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8cdc8ff0-0e75-418a-8019-7de8d5c69f6b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0ffc316-ca0c-4f4b-9eb6-819430ba2de1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "786940b1-3633-4b99-bfd5-8bc6b7bbed32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00476c24-3624-4cd9-8949-db01aa26b8aa",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fbf7f28-1220-46c2-acde-7b7d530bb069",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1b48aeb-f0f1-4649-86e7-4683de221ff3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d95368ab-cf8e-4447-a7b6-8d2c502ab000",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "090f9dbe-8435-403e-aedc-3a456b083c66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20484b58-475d-4384-a93d-5ff62c1e8424",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc44eb5a-68a2-49c3-a289-11a7888aadbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9dd3ae1-8979-45f6-b368-acf6630a3f07"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "816a5cf0-086e-4301-9e14-72595ef4adc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "117407fd-39de-40f9-b800-0ddcaf7bdfa5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a738dc4-fa25-40b9-8cd7-1149f1c552ff",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "173e5e19-e33b-4595-a0a5-b001035f9445",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "532a5c9a-a2fe-4f17-a87a-eebac0e733ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc71737f-0621-4b6b-956f-b8b9f1d12b00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2aadfdb0-8bf2-4e1f-a3e7-a0ef8f40b4e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e75eae5b-bcbc-41f1-b925-87572bae5252",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a1cce4c-4c72-49ea-8f03-0d40dbf58a81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1de38e4d-ae7f-4fc7-9567-6d49845604b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07ae200b-487d-4416-b736-a4bc9f24d4f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2585aaca-de19-446a-a011-6613ff0af5fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b181ddc-496b-4456-bea3-5e06bcaad1e0",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05862b49-81ce-46cb-906c-09528488617b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bfbe603a-b855-4a57-8c2f-3b9ab6b810d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed0203ed-e646-4a61-817c-cec33775bac8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8b6df8d2-8179-4a96-895e-11b6bc951d58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "913e39b5-46f5-4698-8516-e6c502031027",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "adc14e61-06c9-4387-b20f-a1b4c2d6fc6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f55eb17-6b63-41f7-a123-6dae3d6df6bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05b45db3-4a5e-42e9-8aed-0472ea606c1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "91b16a1f-2386-4101-84f5-340ddc86ed47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6c570e9-cab6-4faa-9d99-0fdd241e1ac1",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54f4f0b0-e7ef-4611-85c5-d9982b0c9d40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f0ccfad-2697-4ae6-b984-6f470577ab49"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "567d5b0b-65cc-4d47-9120-9aaefd227218",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f7a92a37-cfd2-4cb3-8c2a-3ebe284d62a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13977130-425b-4c81-a323-189766d6264c",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c36e3eb-aea4-457c-9a96-efb284b825aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e23c258d-751e-4f00-98f4-52ec6a5ecce4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9738a77d-8288-4708-8dae-a235e06c2b00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "07ab329e-f61b-4403-8fca-a782a40afe8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "610cd571-464f-45e2-bed3-077afe0e0e87",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb66d9d8-b0ca-4a9c-ae0c-c3a79552a415",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "544fc480-a45d-4413-8654-8fdab57e26fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01b15854-fbdc-4422-a223-eb61f88ec1b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "10fae249-fa22-4316-8aac-8db804659b03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7005194-3155-4d46-b471-dec5a39fdbc0",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3330a5e2-2003-467a-9477-6ea89b6107c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1887206-a0bf-480a-9398-d51d0ffeb60e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab50d39f-408d-46a8-8e5e-78f95f2dc383",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fe0ce505-6cd5-407c-bb9b-adb0194172d0"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "bd42a503-b035-4d66-b3b1-42b80f6b0845",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ed6fa4a5-4574-4b62-8017-911ff925d4a6",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3826c4e4-e61e-4cc8-88d8-0a25d9b10375",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "32a5695e-2149-40c6-9eb4-dc39736da7b5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "34629173-c786-477e-a0a9-f3be359435a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3d89d46a-1daa-41bc-beee-b09cbdaff8c0"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fac7eac5-135f-46cb-aeb1-56916e96840f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e7c2d7e6-1621-4c21-a3c9-5382f47333f5"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "270d1944-e9c8-43cc-a9ab-1871f60ff871",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "71476ef6-59f8-4c38-b874-d591e39ccfc2"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "09087fc4-50bd-4b40-8c36-8c6598f1a4aa",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "93b99691-cfb3-44bb-b484-1559bff0f2c1"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "bbc29c26-bce5-490f-ad4c-feff169872c6",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c7b7241b-6d39-4583-8537-bd2d053649c9"
            }
          }
        ]
      },
      {
        "id": "5fc121b6-9b91-4061-a12a-a56049c80a60",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "91ade911-a26c-4329-b346-2097ef43042c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b3e77f7d-cfbd-4a93-90c2-fd53da8a48a2",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "66593364-6532-4947-9480-1a6abce4e0d5",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8359012-649c-4f0d-9b10-a23d4bbd28e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f369ae7-39a5-4d76-bfef-bb756712a620"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b617a793-242a-4fe5-b21f-7ff50f8a3718",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50cefb30-a557-4dd1-bfa9-858ec7e5fc3b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50406d7b-c133-4253-af35-325face6abdf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84730bdd-e284-41fe-98fb-70c3e901da61",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a75ca5b9-12f2-467f-a7ca-27568db246da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f976be7e-d8d6-4ef7-a707-5e060ab0e561"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a5ccd36-75c3-479c-a09c-67479966c2c6",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92ca86b0-4204-442b-ac7f-dcdba1b06743",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35dd2b5b-61cf-4371-8fe4-65171acddee3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3b29d86-158f-4593-850a-7880278d133a",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "108bcc74-3db0-4a2e-85ef-2afed6be8ff5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b6fdac16-66be-41e3-89c7-d2678472176b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f8317cb-b4a6-43ab-ade9-32404b776116",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7334ae3c-8d20-41fd-8ada-06d6cf81edde",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c924cf0-09ef-49f8-9d3f-cb5e4d715cab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71ca29b2-cd90-4c4c-8bdd-8005acc36acb",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6be65819-ab89-4ae6-98b2-9f9d39dcc60b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c08e1bc-4e2d-4afd-a910-bc5595fa5e31"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bad9cc3d-6cc6-40cf-90f7-a18713aae040",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6a090d5-aaad-4443-8de9-7a8b794c14e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9347676-c900-427b-9c3f-8eb9ae4193af",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "824561b1-1c90-4218-908e-8fbc0bec860d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d876860d-632f-4720-ad99-c91f4bb1044f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e0d0f40-eb2b-47ee-8480-c568c706002d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9831ead7-ae8d-48d3-9a9c-a03d90c1f0b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5062b94a-b254-426c-9314-fe3ea5c40881",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d76a49df-48ab-4bef-a100-23a1bb22a701",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6df52d34-ade5-40d3-9cd6-2be0d39f1860"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ce59365-b6ca-4c0b-88f1-b7e1286195ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11b7e897-8ce3-4691-bc8c-c0158c22f55d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04b8b187-2fa3-4799-906c-bce729396f61",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4cd84907-95e8-455c-a51a-aff1f2120679",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "01ca9e24-a37b-4b0f-97f4-6bb7919b9863"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bd86072-259d-4099-9bbd-79859d004acb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d3bd81f-f9f4-445e-85f1-d33fecf61c5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0fef7f8-4129-4ce1-933c-24cd55fac125",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34da4e9a-3239-409a-a7c4-55d1ec81ee45",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45b7a398-6326-49ac-acd4-d1bd718f04c7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "145634b9-8f10-44c3-a06c-0497deaaa3b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7fa943a-3784-4cb1-9d0f-e87c26136eb6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9848eef1-f341-4058-acf8-15cbc7b2d807",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5c81b5b-fbab-4b0d-a2f4-5a7afa58bdf4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f49ac63-d9a2-4c94-be75-34c15242f56c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5b5a3da-87c5-4565-8138-5c1f43be9f49",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65254c35-3bab-4048-b7f2-6c9494abe380"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df116e19-4631-46a3-ad9f-ec985c25956a",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea22e9a9-ec6f-4b47-932d-654d75f96d11",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e18bbac5-680b-436d-9121-1b9105ebbefe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0933462-5328-4072-8b75-470bebad0529",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "643ccac6-d74b-407a-a6ae-838970f43584"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64a3e2d6-765a-4547-a35d-5902fec4e322",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d12ea865-5af8-4337-a8f5-d9f802a52225",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6fda3053-11e3-461c-94d7-a3e2a0dae762"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bda32f6a-e674-4997-be6e-406d4519af57",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6891aa2-865e-4008-92e2-18e424c3511a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "721b9894-5ec6-4592-a146-901924f1f110",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54e9f663-8a10-4b79-b33b-c664c3b9942b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2d12077c-b527-4d3b-8e36-206587618e0a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6ba51c2-fdce-40e2-8d10-bfd467ddee97",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf96b9eb-7dd2-425f-8f57-a154bdc72c01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "638321c1-b10f-46d9-a9a0-7cf3a85529d5",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06b0efae-1e97-4b70-a8a2-40c576f9a583",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2699da84-4a59-4ed2-9eb1-c9c64be6b9da"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eecc8604-076c-4b1a-94f0-618c2c346127",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b14aa2c0-441c-4808-a6f5-d2df77c16df8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9051dd4-b50d-4b15-b2eb-bdfa7c08e8cf",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a673a5bc-8af3-4117-a3b0-f4e113f78ef8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "054d628b-f163-433d-ad1b-ad52458df943"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a6cc2d3-138d-49d3-8c24-cdf792dc0888",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb4d2ee9-c49b-48ba-9cc9-dab4853b30de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad40f44f-6f01-491f-93d1-362f11fc7d75",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e792f831-9361-430c-949d-6e2817c28dc6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ee94c7b-7cac-4309-8058-954e1f7532e6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c978e0b-bcd5-4e36-8447-469b89c721af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ebb39a24-f51e-4788-99fc-058ca5dc63c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a7c9b9e-32be-4985-ba4a-4c26e66e8313",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b44376d1-ee0e-4ae4-8b21-cfbaff347feb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78dc9bfa-5d78-4a9e-87fc-d0815928fad5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "340c0788-7f3c-44ee-ac09-de40aef10436",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c1cfcf1-76d5-4431-aa8e-4a57f867ed61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc43250a-f39c-422e-99c0-f6dd10f9a99a",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "860099f1-bfa6-4d70-92d5-94d6b010ad36",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c375589-3f75-440c-a222-6a4b5e5adf10"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d67da7c8-0ba4-4d43-8fdd-e5612b07acb5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85bc8400-111e-4c55-b931-b954f11b6c35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f9191ba-f1bf-4583-9256-6629ced81342",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "748a2b70-dc04-40f3-8f23-ef6664abf888",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09564e84-3899-4eac-b63e-1a68b242614d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c24695b-8daf-4f27-a079-9fd03e59ae28",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b5ce9b2-4e29-4d4e-ade1-69822e9ef326"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef74c9f6-89bc-4315-be84-a2aed2743fc6",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "adc3f927-a8eb-4b5b-850d-d2fe02972997",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6226d583-6177-4d3d-a50b-a2c3b31111ad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "07c4ba61-289e-4cb9-a34c-1d95ba344150",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "31a96758-511a-40c5-86f2-5728f814bdea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ed35e15-c9af-4cdd-8d72-37031090d96a",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fb5d472-362f-4daf-8d53-e6c1d55d01c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d275765a-e640-410a-a4ab-5a744157fd30"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "79ed2d6d-30ef-4816-8525-0162fafcc3b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67b71d4d-0281-4e31-84fe-4a14680debb5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0403549-f6d0-414f-9640-e68320313bce",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b92f441-e521-4785-b014-2993a29066fd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "833b30f4-dde9-4466-859e-f4d1b8e87cf2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9e7033e-c347-47ae-bf7a-6f85f0ca359a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22dd4f36-8d71-40e1-8420-92deb1ce00a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae8778bb-b626-49a9-92b5-e01565d09e9b",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13267b75-7c2f-4c46-80cd-1b929c67871e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cc3dcd1f-4c0e-4de8-b060-ddd10bd4dc65"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "33acc248-ed3b-4dcb-b8c8-a0efc8dd4bed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c1d9a29-31b8-427f-8e06-9adc9a436ef7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec1f2303-6bfb-4361-a04f-f4dc25ceb665",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f65280c8-6b8f-486b-b7d1-d480b5f590e7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ad7b8c65-e12f-4b86-87b2-29e9593ce1a0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0415b4b-6a00-46e0-b0a5-4ec72159abbc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84ea1ca0-7a7b-4c65-9468-36800cb7b808"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2ccb8a0-f1c6-455d-a9b0-00a6d0fb04c4",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e47bfc50-ed39-4042-9472-7ee827fa4299",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0738f6bf-8ca1-417c-a36b-5d3a16951562"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "67ab330e-03fd-4e26-ad51-786d9d2a9a73",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d265bae2-f56e-4800-8e44-b62e0c54cd03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b43a4a3-1973-4a42-9a2e-cdbd4d0c39d7",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f41d1396-b039-4ce7-b337-93a51510f618",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9561b292-9a5d-4219-9d17-8b467c2a2114"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbc2062a-5db7-4469-817e-fe99e8ce4f52",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "021f2f3a-183d-45a5-96eb-d552941df768"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5b55a27-a8c8-4193-82eb-d86994348b61",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de4b6c3c-8dda-4e22-b2fc-7fd2d06f97fb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fe26cb69-3fa0-489c-86ad-5f8dd975788a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbcf6437-6716-4818-bebf-ef5afb8ae2fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7cbb63f9-2769-4d5c-8b7f-ca097bda9815"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23f86576-b5b3-46fb-81fb-37ef72fdf8e1",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54c63cd1-163e-40e6-beae-e9ded07d5f01",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ec84b61a-5105-4126-a4c1-3f3761a70ce6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "321449ad-2934-4bf9-8ab7-c1f386e89711",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c299ddf-6c54-4c76-b392-bc1a49669f60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "905f274a-a7fc-42ae-8ae7-8b7899b761bb",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "968c5ad4-35e8-422c-a7b1-ff5771b3698b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "367e3aa7-4997-48bc-b5fc-7667efb676fd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fea53af-1369-4dc9-9cdd-b9ee6cf66b9b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a76539b-fcef-4e1f-9127-7016c048ba00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8b721a3-ea4e-44a7-96f5-fae6eb5b162e",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3433d70e-3b48-4f6b-a88a-3c0056b0d096",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "16f30df6-d3fc-4def-be66-b63eb20480c5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "582ad9ee-22ec-4ac6-b75d-022d22c69a94",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e8245b3-9a0f-4e7e-af89-d527244023f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfadf17f-2e2f-426b-8752-be786d57d51d",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ee1ffd3-1fdb-4560-9e90-6c72d1989025",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e0b92a84-4f60-4742-a978-f3b79ca2ee4d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa9c21f8-8ddd-4bf8-9d8b-28bd17f0ed76",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "06434b5b-2096-42ca-a3f3-768fb739dc4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57e5fbdc-f693-4c88-9da6-684a1b670c0a",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88e5e36e-cba6-4a33-b607-002270854e49",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4e0c4e01-e7ae-4f6e-8240-2bf16a72f8c2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d70a8f0-ab85-432d-821a-61fe982741b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e97c7eb-4ed1-4f7d-89cb-f95ba5066978"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1130f35-08db-4a8b-9032-cbdd2858a49f",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f9bcef2-8518-459c-a96e-b37e3c2a8639",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23501bcc-e4cb-49ac-889c-18c7655a10f6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4de79ab-a224-4bf2-afbb-609007cfc48b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e424cd67-d134-4a59-a57c-2f8f503dcd11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2123a4ae-b8cb-4eb8-9df7-75fd575a341c",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2893016d-3f6a-45f0-bfb0-bfb96cb91410",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62c7557d-22af-4567-8cab-27baa15a02ab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3ce3f8d-a4db-4282-8950-5464c4807f78",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c6e35f5-361c-4427-85f4-1ce76371dc9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d7177fe-a1e2-451e-9e13-c7b79225479c",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0e48203-cb26-4367-8da8-2fb70d560439",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1b58990-12b4-4ac1-9045-6ba562b70f55"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "09acb268-05e0-4c26-9719-49dbfe791d8c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a97832b-56ff-49ae-bcdc-0aa4102e2bf1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "478fbdb6-1151-4273-a86f-f3f8e144ddd2",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5221d13c-8186-40ab-a408-093b73d45626",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c198af76-96f9-447b-935f-a0c85f8bd826"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a45ee22a-6b7d-41cb-9278-9dc8da829097",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5a06707-122e-469d-ac7f-b3a1e276f50f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c93f311-945a-4d68-b59e-46cb23987041",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ce7a5f7-0b44-45b7-872e-f0c10cb0e970",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "560fc6c0-8b38-4642-a1e9-36bcb2f2f20a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ecd1bad2-bc8d-40d6-9556-3110dc6828fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70c58c17-bf63-40b9-a245-db22c4e98046"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bee0a0b8-2ba7-436d-9dc5-df423b502f8d",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d44d43d6-b99f-4078-9eb2-759f95ea50f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d65cf6d-3e39-4208-b2ad-1d0070d1a156"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "57381adb-078c-405a-b5e6-bb2a149b407d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e78a063-5d48-4008-b051-20153cab0dc5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eeae7126-2031-4f76-bc2a-479235ebe175",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25c02414-3a0f-4473-8042-bd6c3b9f1f06",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e175d18-3f8a-4294-9d52-ca10f28cfe3f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3446c68-1de9-494d-aeb9-f15903461d3d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c5c6687b-9801-4172-b151-0f699cb8fa4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "effd4669-15e3-49b0-9471-234827293217",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ead0858-98fc-4b07-b619-b23ea7f7c4ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "16728c30-3c7e-425c-bc8f-973594481847"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "25370697-d765-48f9-9c78-79cce4f9026e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1a84006-a253-4f2a-993f-e7afcfdf6328"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc8bd57f-f650-4518-8726-668d91d24212",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3d37dcc-8e2a-41fb-8ff5-3de5e895cb32",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37dc42bf-07de-430e-9ac3-9591a34e1e2e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e59401c4-99bd-45e3-9e88-b2fdba313737",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5aea9b71-bfb0-4a58-872c-dc716251c190"
                        }
                      }
                    ]
                  },
                  {
                    "id": "083b234a-58a0-484a-ac4b-0ff530c3023e",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d4287b7-3183-4d56-b596-abc0878333ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e746b0b-6a14-49ee-9b18-067b3d724519"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1e33e75-e641-47cc-ac67-44e3aebe3bb9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2158e5d-39d0-436c-87bc-08daf53ad9e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61f71f05-919c-43e5-9300-5048c830f8e1",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3c242f3-9241-492f-9397-f5498a5d62f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c2ab721e-7656-4cae-8e95-3c5873a141e8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1325fa45-cc56-46da-9faa-736cbef9fc14",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc2f5370-c929-451b-ba0e-fccbc0a0d721"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ec34c67-2de2-45fb-acfe-da6eb2de2897",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a5dc3a4-c97c-415e-9b23-580a4ec29e64",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "228309ac-5f18-4c51-95e6-d544817b0622"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f74d256-4385-4c84-a733-e3fc5632cd6e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "370b1e45-98b4-4ee2-b7ee-0dbf171a08e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13cb72e4-7610-423b-92ae-c8ce4c425d23",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f6368ba-2c5e-4ccf-8bb0-549b1ec1ea0e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9895c93-8e79-4be0-90e1-252d05181776"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce4ce9ec-9540-4ec6-9d97-829fcdbe4127",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83ba3311-3828-4bba-9a16-dac07ea67c3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "667cfc3e-e659-4aab-ac2f-190dd3833458",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83b894f3-9b47-4f3b-ab3e-0f91ae7a58a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f33565d6-9401-4109-8284-7e44a7668d01"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b351c1fe-8419-4cdd-bfc7-efd8f9a32650",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36544c11-5edd-483c-bd99-d0bb36f32b65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "090bb85d-6a5b-4bd1-967f-7f325b1d226e",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6fea02e-b296-4252-8e4d-0cc46c517a62",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19af82de-ae22-4108-8bd5-36e6021e98c3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9072f604-1ee9-4ba1-a100-b51429f9a865",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d3204c73-c6d9-4a5b-984b-f52a35b91457"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4faf6328-2f2d-441f-8e0d-0442c6a83f6d",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86ebce87-3419-4a05-9811-dc2c69353501",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f783a5db-ab35-486e-9b00-5248e92abab8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "99b4c9ae-3013-4929-8f4e-7a9d0a2d1ecc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70866d10-7ca1-45c7-a116-152558e18364"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf6d093b-5e93-4236-afba-4c4cb0374c2d",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78addc71-3591-49e9-9be4-4d892792a45a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "31136cc0-f565-4112-85af-531c67f285f7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "26929ecc-a909-48ea-b304-0de291486d7e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2225732c-66f0-4177-8e61-c476599596ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fd7d10e-ef7c-491e-8767-0859312ad6bf",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3a33505-e354-4b85-883b-767bc9dbd1e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5990564f-3369-4b03-ad11-fdf2ad5811db"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "32de3eff-a996-4e43-abc3-afd11788bdf7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e570f28a-c38b-4c22-8f67-595082a3490a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c347dc1f-75a4-4a35-bd15-6dbc60ae07eb",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27a4c182-dae4-4b6e-9c40-205d079ad610",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71b3a05a-52ed-4393-a5d9-8eaef5b42ab5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4898b136-4c80-427d-ae60-864476c00482",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "132939e4-dc37-4777-b75c-38f51b2c26c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1383cf27-a66c-4f56-98f1-48c058eea759",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85a29e58-864a-4737-ba22-562706f5ea3b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b332065a-3c70-4916-b072-c884a6685110"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4767b477-1b19-4baa-9c9b-4b2b69b978cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "812f7384-b0f0-4e9e-b5a4-dd05258e3d6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "230f1d52-5638-459d-971d-f6011cf6766d",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "901b3c85-50ee-40ab-b83b-99e90bd38170",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e26e67dc-8a7f-4cde-a311-9339a5bcc3a5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "74bcedd5-d43b-470b-bec4-9d05b8787e97",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9f2a5b2-9f9d-45e3-90bc-42aad9f2deed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57e151a8-aa0b-4474-914e-670272568a3b",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1acc8e90-7163-4d18-9d5b-45e39685e656",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1ce6082-0c90-4e78-84a7-06740310e2fc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f668cc05-fb65-4332-a18a-82ac91fb1d84",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "daa03a68-44ce-4cc3-a9d0-750c6c9a1fdf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e9c6ea1-ff15-45e4-b9c4-7360c3423bb5",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd858388-ab94-42f9-ba48-f2b3234f6cc1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ac4359b-c969-4736-9637-caa37469650d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "418f07d6-ecc3-43d8-ac11-d48771fbaecc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8eee12eb-2c23-476f-a9e3-42c4cde40189"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6141cd19-21a9-466b-aa50-ef07e879affb",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d210710f-cff0-47cb-8ca4-d8762827e047",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39a1e7e7-b951-47fe-9f32-f8990fc70b63"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8dc56da-91a6-45ee-b34b-6b4d6cd004a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0046c137-7460-43c2-89c8-2529c51865dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02d010b0-6476-489b-b09b-9acae7ab3e2a",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3558e545-2e6f-4bc4-8c97-ee0b0ec39930",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d747199-3c2e-4d14-9593-88df77331a98"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6875f3c0-5e87-416f-88a1-6522c472d53f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f2c3d01-c852-4244-a303-0798287fc0c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80c53d06-594a-4ca0-9c47-7efe5be20c60",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35990f04-0283-45e4-80ba-c54005ce5ee0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "747282c1-e5da-46ed-90be-e3c603e250cc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "51eb5b2c-b241-4d5e-bea2-4ed2dbf114f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4993863a-1832-46d5-9902-4df2cafbee26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c03eb9f4-b990-430f-bbf8-3164283a5818",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d565307-3d5e-4621-b75e-6fb8dbcb2f39",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc6e5336-98e3-4450-984d-4270068ba6f1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3081127d-7fd8-4e92-91ef-ea40d5e97fa2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "247e65f3-c4ca-4763-8a89-50196c8c0aed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8975308-c552-4f42-a2de-59b0f0b6bc0f",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4bcfde98-e3b1-46e8-99f6-1c45bad283cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4da956ae-a640-4dff-919d-1fc7dc8cf901"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5762aeeb-5ba7-48cb-9f99-e53a4fbe9c6a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d411e5c-f095-4678-a413-2a661186c75c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30cc4563-40d1-4b42-8152-97db552b7324",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46db6b39-1f94-4269-a8dd-8dfc187e54d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a51c4d96-49c5-4b1d-8df5-9f1b9beb9bd9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "46ae4863-a7c6-48c9-b4b6-b7ac3972fbbd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b72b5d37-c054-40b5-8928-5546d2892e93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d49d934d-619a-4249-8bf8-e3cf03e5e3f8",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9c42ff0-8297-4b84-b2a0-1d06b2ddb11c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ab726af3-5542-4be3-8cbc-b86ef59b91fe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b8dda98-b70d-4ebd-87cb-78d211c39717",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d7e983d-8e7d-4d5b-9127-4683a2b28fa1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59d0ce6f-0fec-4131-845f-08ddb3dc4ed7",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d5e596b-07da-48ff-a584-d76a075ab877",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8f757b43-47b1-46bd-b06f-c27a1cddd542"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb30f4d6-e455-40cd-93f4-c2a3d0cedf87",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "33610b92-aeed-4a1d-8d9c-395b2116046f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a21619e-4b51-40de-bed9-88c46dfa9e9e",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38f3f307-5aba-4085-888e-2863bec3bb7e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6c4ef675-937e-4b15-b71a-59570f154673"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7acb78e7-2ea5-4bba-b4d7-ee062a27c429",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c49d422-1f6b-42db-85c2-ea7aa3f3e9e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1cc581dc-f94b-4b5e-b8a1-8497297fbe68",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "923637ea-6ddb-447d-ab84-4a81c8942b57",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "927a4d5b-46c1-4c93-b029-924d892a9020"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdb292c4-7089-42cf-896e-e0d640e7c01a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "15d75e03-fa02-4592-a036-91668a531914"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a97b861-e5fa-4059-bcea-263eef1efcd7",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2b9b7b8-1d34-469c-bdf2-c3f96e2d1ad7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2f460a74-e964-4ab5-a60a-123421adeb43"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "604dcd5f-8b99-4ec6-b7df-fff441292511",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65d1562e-bc62-441d-86a0-2b6fbeb1ae6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c80db9c-4c3a-4e20-9d35-0d35a2159a21",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8402434c-b6b9-4ae2-8f30-79cfc34d8a4e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "42673fbb-a5ce-48bb-8c36-f2c4177479f8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4869fed4-bf10-478b-9183-ee8ef1b26c48",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01d86a85-8ef7-43dd-b6e5-740bd8d2cc93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "505629e0-581d-4180-9f6f-e7bbb12dc18b",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "228ac542-9f2d-459c-a150-a80535aff85b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "15a21628-6e45-414d-854e-18b95337b768"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7d07d68-6c5c-4d9e-a8f7-d11183d783a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8a7ee11-ee52-4165-8863-8362a4433f83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8a89379-05a0-4aa4-a38e-32545a5a7900",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58daa703-7073-4810-a9f2-8b06fa6f43b0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f35d5d8f-d42c-4422-9544-6d5ae98ca88d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9824c554-01f9-4009-af0c-7fea36b4b4c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b344a969-afea-4747-ad30-8124a4942b27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c22240b-8e50-451a-ba3c-abf9f93a4338",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5592e3b1-435c-4bf1-a734-f85077e8ce68",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c7f803fb-1390-493e-a419-7f44558d3c8e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "13773131-8717-4699-af0a-f8e2a175c4fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d28e5f5-eddc-4727-ae8d-8eb0b27ac4a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c9a0ae1-7ae1-4358-8c60-14610f390162",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9867dc4-75de-4e9e-95a0-7c8865cfee2b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f7ba4976-6f13-45e3-aa84-180790feb423"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7e9d9e0-90a2-4956-835f-3513e1cef39e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f934f6b4-4e7a-4b67-beca-a62185288c26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77298d8e-43f6-472e-888b-63d80b8072fc",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f176cb21-1308-4e8c-b29d-86c963b3898a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8a6bbced-6179-419f-b1e0-9f4e99847d36"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2511fb1-b911-4b56-be73-5027fb0e0e84",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cbe0a11e-0758-4163-adcb-02bb84db84af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5db85e8-3ad9-4f87-ad3f-564cfb9d579d",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ff98e28-92a3-4fa1-b956-303f5255a149",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3d20cb64-5e41-461d-a676-ae8027590eb0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbbc472f-757d-4342-b1fb-6ca20b4e8f16",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a5bae99-4be0-462c-b006-be12bce7b761"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f66642eb-0fa4-4de5-8a86-265db3e2ed28",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8cfc38f-269c-4ba2-9923-23fc55451810",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f54ae981-f339-4dba-a365-5b4e4c8a967c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "73db3496-2b72-4b68-a481-b21a76480daa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09971f59-6551-46a9-856b-3c3f61b668da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "264f0faf-0819-4cb2-9c32-f45983c1d41f",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92a78fca-6056-4e5b-8773-717073ef9d13",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "90090b2c-8016-42b2-a568-f5d986265d51"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "03191406-cb7c-4398-b859-9fe5f96876b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d485e499-b0fe-4dc1-a128-7f86138763bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5637ee71-51dd-472a-80bd-f4e0fded70d4",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24206631-be6d-4571-b04e-041934974ef5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "59b5cbc4-f39f-4985-a512-70abbffe5e74"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a4c4f3e-a650-4dcd-b31b-89ed543a20c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6caed559-f60d-4cf8-a807-4d8fce2d5ae2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88c52fce-e31a-43d7-aba2-64146111c395",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64c495cb-664d-4bd3-af15-ab5061b5f9a8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "04ac2251-83bd-4c2f-9c48-928897a83db8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "399bf8e2-c439-4283-a032-e0f146843dc7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "efafb7f6-77c1-4a00-8cc2-3636fe21288d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9bb9d86b-efb8-4dc9-9828-209077078252",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b75a036-b73a-4c52-9d14-4a6cdd5baf58",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "232e0506-8d46-4e89-9c90-2d18686107de"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "309ea1cd-6f35-4899-a6eb-1d3d34c0ceb7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce4c7544-2734-4fdb-a347-c373530135fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2aba3493-c3a8-46f5-8523-482f2507ef5f",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "305f7374-9e9c-4cdd-8a6a-26366785eccb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9d486fc9-0d28-4554-8b33-c6a3edb0aa53"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "21a4eb69-e02b-4a8f-bf7e-010d942b8db9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3fba511d-2885-4b0b-a617-bdc0c53b7da0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51c7263f-9412-4dbc-b544-07e52070d0a5",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c6e05d8-dd51-4707-92c4-d153a021d78b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "12a0cabd-cd42-44c4-a6f8-8464dafff35b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec1125d6-1759-4911-aeaa-dad1447e0441",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb09431c-30e7-4c2f-b3b6-696fcf4a1b9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab97a02f-8d55-4f7f-8c0a-f690425d21a4",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c49f51b1-0aad-450a-ab20-b421eb85ac94",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "991755d8-3827-4cb4-ab80-34a054eddc06"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fcaa611f-3230-498c-9228-9b9687c29717",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09e99c86-516d-4b4f-9a81-72f7dcfe7a37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b90bebd5-d17c-43c2-b429-85a905ab5f90",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da7e2091-04e3-45a3-80ac-483be6423e9b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c0edc18a-f014-405f-b164-3f25a33b2a07"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "24b515d4-d967-4662-88a2-924f4faba6ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38514ce7-1512-4872-99d8-7d3920ebeb91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6964a2d8-e458-4ccf-9e75-ff8e7f2fb11d",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41e7b78c-d9a1-4d6d-8fe0-7a7079ca0692",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "412f7077-9060-43ff-80ab-12a061ab5118"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f689b38-6a5e-41ba-b71d-5a9a5ecc688a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d0a62b9-fcbd-4121-917e-52e6d22fcf6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23fd65d6-4acd-4bb8-b7e6-7fc6c15ebffb",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3116b347-19c2-48c4-acbf-d330dc6ed77d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e0cab0a3-6426-415a-852a-7e9f5c4f433c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "669a7377-1013-4d72-bc28-6abccb353fe7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19e56d5a-a2c4-4aff-976b-2af32c7335c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d99b5eec-40a1-45e8-a410-0f246240710d",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "158ab30a-604b-4e86-bbe7-99c57658b0fb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eba4e10c-0fa2-4940-8d1e-4d001915e9a1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "48e2018c-04ce-41e1-afb3-32d597a58d26",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6da41469-80c0-48f3-abf5-48e553085dd5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac3485b1-72b5-4025-985b-322658e4cc91",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce2eca8d-7b78-47f4-985e-bc8bb1ce3846",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f5c48aad-b0d2-4910-9647-4ba4bab215de"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2dbed32-f6df-4ef7-811b-e30286dcf9d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c17c2aa-7cda-4829-a23a-39cc99a76a60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85b4d689-f36f-41b4-8ef4-7aa053083033",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a19058c-e651-42bf-a2e9-1db36d21ec67",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ffaf2359-68f6-4031-a104-dd0f5909feff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea7d4bb3-f1f7-419c-be17-ee98bef56fb6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27aa298d-1342-452b-ac0f-8db42f9c4588"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b9d3121-ca3c-458b-aa8b-b0802a832c2b",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8320e74f-694e-483a-85ac-e4fee8962c52",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1125a31d-748f-4f99-9608-ce89779cbfa2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a94ea10a-4604-4028-ab2f-a9d802c4f9c1",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa498da0-4d1f-48f1-bccd-b1c2fea6f4d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1477125e-0500-4063-adb3-353bf678c159",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c252b82-d694-49c7-96ab-8a7e093a5b28",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1deb3e11-29a7-484e-89f1-adcc7c4c685c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d462006a-e003-4147-8fbc-24ea890390b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8946c4c7-88df-461c-a978-2970badf64a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ea46012-53dc-4c12-bb03-809336d26280",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1eefe2af-4fcb-44af-8353-0dfc74e155aa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "63da4aa7-dfd0-4147-8eff-3a84970ea883"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "707476fa-44d2-4589-9378-428deaf7c5d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b76d0e39-617b-4e9b-a196-5f61cb97eaba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3320a065-6a0d-45f3-92a2-5a5424a4bdfa",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd6b2975-bccd-4c5c-99b8-b968a36b2202",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d9027c45-0dd0-4b16-90a1-c5cad807f06d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "21fc6219-0e0f-4bd7-8cbe-314f906d47a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50186811-487d-4fda-a697-da5a5f92ecae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba886572-0f3b-444e-80a2-5aa312efc9ce",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb8bd232-e062-418d-95ad-717b1b563091",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f6e01e87-b7fe-4496-8cc5-b8af3e73828c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "02c555a3-91d2-4881-9fba-6426bbee2c5c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d80f44a1-982a-4a1f-b857-713a25592281"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40c3422a-2275-4224-a679-80946824184c",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94df854c-d7b4-4583-ba91-edc744f18757",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "16b12bc8-a02c-40ad-b9c3-deb1917a3d28"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "79791031-c5c0-485c-94d8-5a8c122aaad2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ecb761b6-e0ce-4399-b77c-98d285034e17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78534929-23be-41b7-86fd-00e84c3f0335",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2f40d81-3e9b-4c56-9e57-09a6a103941c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7dab5f9e-0627-48fd-8031-8f6663775752"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4798d5c-7123-452a-bd14-527e84378818",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2586c64f-2c25-4d2b-bfed-b940aedc1ce1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc3364d1-0a4d-49bd-bd53-17f49c2d7c2f",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8bf0da60-e23c-46a6-950f-32081f3bebe8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6071308c-59a3-4e5a-9e5e-f2f85f8cc060"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "74903a31-c7ed-4410-a574-4d68b4560baa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8eedf39d-b26f-4c49-a085-f5ae66d0a669"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a577cb68-88d5-4c01-a6ab-67c100522412",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9b003f77-5c40-472a-ab70-135cfeb3ab1d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "19ce4bc0-2a82-4f84-84ee-1d74f772d73c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "7125cc28-9aa6-41f9-aa30-d71ee40ee725"
                    }
                  }
                ]
              },
              {
                "id": "c357f2a1-2ccf-4e0f-aae3-3d5e9886d036",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "39bac4ca-2094-4a85-9f6b-abefb32276b1",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9510b734-92cf-4481-9021-63644c801fb7",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "18250a20-d6a8-41ea-92c2-319a3b36808e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d73cfd61-b349-4cf2-8656-3c7043656e6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "aaff9306-9a6c-483b-83f1-b3aea668d4f2"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a9d2e914-8d10-4069-9ee5-1c57836e086f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c880b5a1-c7ea-442b-8873-5508bb5afa3f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "6c37af97-e442-4a34-8232-0a95b79c9f70",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "57d17624-95a5-4c4e-b261-4f24b1ddc593"
                    }
                  }
                ]
              },
              {
                "id": "2f292eb9-0490-4a6e-8fa5-4795fb83bda4",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "5f3c13fb-e083-4284-919c-c60e008f1e53",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5dbb4b2c-caee-4761-bbe8-670e6ec28b11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "d7a0880f-9e7b-4343-90e9-c8bf61fcbf1a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "334de27b-487e-4ce7-8dc1-70d8e9da680e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8790b2e7-1053-4a88-9de6-5322aceacdc1"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "218532e8-b41f-4b82-b379-d1be6d3df51e",
            "name": "Positive Testing",
            "item": [
              {
                "id": "339e2f96-c79f-4e14-86b7-42fa9fdf8238",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1207b9b5-3c84-49e1-ad60-3a29fe9932bf",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "80bd4c66-a074-4ff0-8158-f3f3f8ad5c06"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a224a935-6402-495f-8cd2-e26adeaecf9e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4d76978f-63f2-4396-aa0a-9ab4ded5e74b"
                    }
                  }
                ]
              },
              {
                "id": "20c86ec3-2018-4572-8c30-c324d80aa4e1",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a51865e5-3b06-41a1-af38-3416c8142336",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "15a6333e-56b7-4125-9610-2fcca5d914af"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "77ac8aeb-cc52-4aa5-8d8d-c90ef641e782",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7da71f83-0000-4996-b512-ecab4b65dfdb"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6d4a37ca-2b57-4412-af6f-6556b69c8bc6",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "0f9a77ee-2b2a-49c3-8315-1e9ea038b218"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b6e0c4f6-c086-4762-b1a7-83949e243131",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "0fc5612c-e70d-43b0-a049-81366724f648"
            }
          }
        ]
      },
      {
        "id": "c9677d8d-2a87-4235-abfc-c78fd3fbb7fa",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "a97a1b7e-731b-4fd2-9108-c6fbbe86bd1c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "51c5bdf8-2ff2-4d4b-82eb-b7c30c01edcc",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "2fbd465f-9384-4c72-8213-974e566a308a",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c0ea8e2-1abf-41a7-9dab-26aa546fa524",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "8c0e5246-2ee1-475a-af89-289c897fa0c8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "acad9cc1-eef8-41bd-adc2-037ae29e5ad7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3d2a6762-962d-4afa-8b33-8a821e69d136"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5db4c90d-b847-4f1f-83e0-569158bc8a13",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0889f2ae-f907-44e4-8600-6e3d327aa5b2"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ec017a64-cf15-4d45-be6a-7778ca906763",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "27320050-de4a-4002-ac1c-de98b8a8fa2d"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "35bc8a60-2489-466d-8ae0-c40fa56fc034",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "f25a4e88-f298-4802-95e1-99bcb3a13473"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c2ba12f0-de64-48e5-aeb1-b970314cacd6",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "afe21b68-3e3f-42b9-a764-a0566f934d6e"
            }
          }
        ]
      },
      {
        "id": "2cb2c7af-949b-418e-af51-dddb2c7a308d",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "e52975d3-c74e-4540-885d-d5ebc168a291",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d1f1bbaa-b785-43e1-9aea-e5007bbcf72f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "5ecf2f0d-a860-48fe-afae-2d330e764aa7",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "708031d7-f54d-4cde-83c9-038b826b2279",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c92cf85e-1636-4e33-a36f-1ce81b46fde8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f5e2770-c3d4-4fbb-8150-867a276ef409",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2017f07f-6767-491d-b2e3-8927a804af0c"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "08f93a5e-34e4-4da4-8a2a-a0dd360a4260",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e27cf4d7-cba6-41f5-b0cf-d34a7fbb8dc8"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "fd204824-5bb3-48ea-90b2-b91ff5097de7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "751e2c54-85d9-4703-8c38-b758a7a9d0f8"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "307bb77c-382a-496d-b3ee-3f7f236c450d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "5f9a63a5-3c02-4961-a783-b5e059fc648a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0aa69dd1-aa73-4328-a867-0cbed18a4477",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d6635722-9e63-455b-8b06-df7912026c4d"
            }
          }
        ]
      },
      {
        "id": "4420b439-4c1e-4980-95e9-650f5d66c646",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "cf57ec49-9709-4d3c-96ec-6f202f6d1545",
            "name": "Negative Testing",
            "item": [
              {
                "id": "17ec0888-eeab-4896-8177-88c314e63be1",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "67f3fc09-2b44-412d-8db1-080936b372bc",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56d7a975-24ac-4040-8aa7-a26dd9546c64",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4035f741-0d56-46e6-970c-aaa4c9f305af"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2853415d-aa41-4daf-ae53-f4435a13f992",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1a96e10d-e5e4-4e35-bb22-02a755c6d703"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a97ba804-01d4-4407-abbd-5a1f9cb434f3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4cb781fd-82a4-4ee7-bed9-92b55b7b810f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "afbd0212-5b16-4234-a3a4-0d315f84037c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "01dd1113-bbd5-433f-9fae-9e52e31ccc3b"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0a762513-c009-484b-97d3-565de65c1cd3",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "f87d475c-8d8b-43a7-9a15-ed23a68b7fc1"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a6c30119-3262-4ad5-b51e-53028d22a264",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "0fa25259-14a9-40ba-a986-085a86bbc84e"
            }
          }
        ]
      },
      {
        "id": "55fc8fc4-970f-45e5-a7bb-98585332f2e8",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6627f4e2-630f-4d2d-bde8-800d19b35e88",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0710e4d0-7df7-4625-b300-5b0392fe59a6",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "a3de5b5a-d201-45cf-9312-2bb980df11dc",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "caaf665d-1d26-4cf2-a91d-3dae64e9ba61",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c3cd86e5-60fe-4e52-b078-6cdede1ca7e4",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2083,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 284,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 570,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 1046,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1037,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 13.352112676056336,
      "responseMin": 6,
      "responseMax": 291,
      "responseSd": 27.152723304680578,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1695774823334,
      "completed": 1695774839103
    },
    "executions": [
      {
        "id": "b7eebb02-1107-40da-951b-15dc98fd4d68",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 282,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "0701cb67-7148-49fc-a225-73e975eeb291",
          "httpRequestId": "8a9854eb-7a9b-461a-84d2-ca2a5cb317a1"
        },
        "item": {
          "id": "b7eebb02-1107-40da-951b-15dc98fd4d68",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "db0aab31-4676-4c9a-a5ab-4df6edea0bc2",
          "status": "OK",
          "code": 200,
          "responseTime": 55,
          "responseSize": 0
        }
      },
      {
        "id": "6e4686e5-cdb4-4172-9fac-1be5e59a435f",
        "cursor": {
          "ref": "beda3177-cb54-4b28-a9e2-9f2682a9fab2",
          "length": 282,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "a2dfd39d-5d99-46bc-af78-e5e27d263571"
        },
        "item": {
          "id": "6e4686e5-cdb4-4172-9fac-1be5e59a435f",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "68da9aae-beaf-4204-93bc-50806529fa11",
          "status": "OK",
          "code": 200,
          "responseTime": 6,
          "responseSize": 0
        }
      },
      {
        "id": "ba96c8dd-e502-4203-83ff-6612e5992670",
        "cursor": {
          "ref": "986e8165-338f-4d00-9937-b0cfff0d94dd",
          "length": 282,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "1d3b35b5-3a11-453d-ac71-3712ebc1c626"
        },
        "item": {
          "id": "ba96c8dd-e502-4203-83ff-6612e5992670",
          "name": "did_json"
        },
        "response": {
          "id": "f39d13fe-4fbc-4260-8c5e-968a43da69d0",
          "status": "OK",
          "code": 200,
          "responseTime": 236,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63fe9da7-ccaa-42a1-a05a-29c4907718ff",
        "cursor": {
          "ref": "a1777084-5218-4306-b45a-8696f5155ab4",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "500bb6f2-9a4e-47a4-af14-77e81f91a66e"
        },
        "item": {
          "id": "63fe9da7-ccaa-42a1-a05a-29c4907718ff",
          "name": "did:invalid"
        },
        "response": {
          "id": "12b3785b-0051-47ab-bce5-00aacbd841cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63fe9da7-ccaa-42a1-a05a-29c4907718ff",
        "cursor": {
          "ref": "a1777084-5218-4306-b45a-8696f5155ab4",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "500bb6f2-9a4e-47a4-af14-77e81f91a66e"
        },
        "item": {
          "id": "63fe9da7-ccaa-42a1-a05a-29c4907718ff",
          "name": "did:invalid"
        },
        "response": {
          "id": "12b3785b-0051-47ab-bce5-00aacbd841cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3783efa9-6f98-4d92-a53b-b3ec87eb3914",
        "cursor": {
          "ref": "2523b85b-90e7-4457-923d-4eec04430085",
          "length": 282,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "1339ea49-7644-4cf3-aada-07dd15bc0201"
        },
        "item": {
          "id": "3783efa9-6f98-4d92-a53b-b3ec87eb3914",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "b597962f-38b5-4e53-b8e8-a5008ad5a2a9",
          "status": "Not Found",
          "code": 404,
          "responseTime": 47,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68d39eed-60f5-4e4c-8dec-b74358187f33",
        "cursor": {
          "ref": "eeefe947-ab55-425f-a20c-42b7a77f46ee",
          "length": 282,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "df7ab714-0e23-4f81-be33-f3fc0991ba45"
        },
        "item": {
          "id": "68d39eed-60f5-4e4c-8dec-b74358187f33",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "22266f34-8d52-49bb-a373-7bddd8990c0e",
          "status": "Not Found",
          "code": 404,
          "responseTime": 8,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6e2901e-d24d-4cbe-b4b4-98b8c393168c",
        "cursor": {
          "ref": "afced68f-4ebf-43b0-82d2-b2bebd5c6d93",
          "length": 282,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "107fcafd-1a97-4dca-90bb-20679182a432"
        },
        "item": {
          "id": "e6e2901e-d24d-4cbe-b4b4-98b8c393168c",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "dd1135bc-baa6-4816-99ad-a8d15bc44136",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 9,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "685f8209-f455-44ee-840a-a3b29c322751",
        "cursor": {
          "ref": "f9b046d0-d7ee-405c-b992-75d90d6b5758",
          "length": 282,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "091645ab-e4c1-4dd7-869a-86208c1884b5"
        },
        "item": {
          "id": "685f8209-f455-44ee-840a-a3b29c322751",
          "name": "identifiers"
        },
        "response": {
          "id": "c16f3b47-d0d3-4911-9e8b-dfbc6bdd6de2",
          "status": "OK",
          "code": 200,
          "responseTime": 56,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f5bda23-8a4c-4a26-bdc1-68994fb995ba",
        "cursor": {
          "ref": "4141ffc8-ac90-4560-ab0c-a46fdda24f6b",
          "length": 282,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "6dc4f822-b8df-498a-965c-b74c0ef8d842"
        },
        "item": {
          "id": "6f5bda23-8a4c-4a26-bdc1-68994fb995ba",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "2f0a21fe-fcd6-4f3a-bb30-b31845fba63a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce34d1ff-044e-4814-9e84-0e381396f83e",
        "cursor": {
          "ref": "dbee48a9-54b0-419d-ae4b-e287617af765",
          "length": 282,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "971cd7ac-d8f2-437b-8c8c-f11dcb32be31"
        },
        "item": {
          "id": "ce34d1ff-044e-4814-9e84-0e381396f83e",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "c2bf93da-2797-4baa-bddf-855200df44bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e761fd3-0900-49be-b8e1-39fea2620cb0",
        "cursor": {
          "ref": "a82dc368-fb95-48c9-8f98-77818a19cdb2",
          "length": 282,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "ae0bb36c-e6d5-4030-b6ee-84583ffc3a23"
        },
        "item": {
          "id": "9e761fd3-0900-49be-b8e1-39fea2620cb0",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "eb6db5c4-b8de-4b61-b17b-bdcc1c78a38f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa06d4d7-16ee-47a5-a0f4-38947eef287c",
        "cursor": {
          "ref": "711c91f3-ebd2-43f8-a889-ab9d6e2decf2",
          "length": 282,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "16dee82e-7d4b-4fdd-8b50-f56a7c9c7384"
        },
        "item": {
          "id": "aa06d4d7-16ee-47a5-a0f4-38947eef287c",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "e2264b65-cff9-40eb-b391-edc1ade45123",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58e211ac-d874-4efe-b6b4-6bacc89e6984",
        "cursor": {
          "ref": "1e890735-8ad3-4d85-bdce-0c44b903e75f",
          "length": 282,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "ac89512b-52c6-4e6f-b7b1-b8a0dafddcd2"
        },
        "item": {
          "id": "58e211ac-d874-4efe-b6b4-6bacc89e6984",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "73708d4e-14ab-43e1-ba28-18a61f6c98d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1cd0d3e4-3fc2-4ac5-a063-c9080909c08c",
        "cursor": {
          "ref": "5e4154c6-4b3c-48d9-8df1-2509aa0b437b",
          "length": 282,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "36e2dc09-f2e5-4860-92cf-221882a35a7b"
        },
        "item": {
          "id": "1cd0d3e4-3fc2-4ac5-a063-c9080909c08c",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "781a62ee-4b07-4bec-b013-202cce612ab6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25beb9c9-3cdd-4324-9600-43ddbd82bc20",
        "cursor": {
          "ref": "5e0d70f2-7481-4eb4-961c-3f5f95beb400",
          "length": 282,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "20d563bf-875b-4ad3-a780-71319f8e66f4"
        },
        "item": {
          "id": "25beb9c9-3cdd-4324-9600-43ddbd82bc20",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "a01beae2-3356-4e0a-aebc-44f309d7c3bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59f5fcca-a5a2-4901-a9da-527f8f6b5a2e",
        "cursor": {
          "ref": "3fa22063-6d5e-44b6-89d9-8a3d2b9ec30a",
          "length": 282,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "00ccd817-31f7-4555-9d5a-2404502bf24e"
        },
        "item": {
          "id": "59f5fcca-a5a2-4901-a9da-527f8f6b5a2e",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "45a666d5-f083-4f27-8bb9-6838620c1efd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9868ca5e-eb43-4066-85d7-8f11f74418d4",
        "cursor": {
          "ref": "5f99d533-26da-4800-b388-90b718c1bd27",
          "length": 282,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "3dc09e2b-c113-4968-b239-5612b71287f3"
        },
        "item": {
          "id": "9868ca5e-eb43-4066-85d7-8f11f74418d4",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "dfc2ff14-5d17-4b14-855f-3fe3aae01b25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00427efa-2cb8-49b9-b7a9-5018c19c673b",
        "cursor": {
          "ref": "dd700c33-96f9-4999-b4c2-d91ac5a77151",
          "length": 282,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "339502b1-e201-4029-bacb-945d07613180"
        },
        "item": {
          "id": "00427efa-2cb8-49b9-b7a9-5018c19c673b",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "e1dedc93-c996-4900-903c-1e762e219a4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a666d04-701e-4db9-a6ae-20e83e2d790d",
        "cursor": {
          "ref": "1e802881-e5f9-4664-98e8-904681eecbad",
          "length": 282,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "7decd3ff-f1d2-4ff1-8024-d81650e97190"
        },
        "item": {
          "id": "8a666d04-701e-4db9-a6ae-20e83e2d790d",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "7dd4a2b1-67a6-4f4d-97b1-965fce92a094",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a349d863-7e6c-4fa9-8cce-02e5a49a94f2",
        "cursor": {
          "ref": "84167f3e-449c-4801-9445-eb6bd337175f",
          "length": 282,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "de522a07-12f1-4d77-85cb-07e4571072f1"
        },
        "item": {
          "id": "a349d863-7e6c-4fa9-8cce-02e5a49a94f2",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "7a9c4d2e-6012-4bae-98ce-98099e636c22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b057b964-0dee-49d7-a0e0-9abb52dea00c",
        "cursor": {
          "ref": "e4eb0967-c038-4175-a44b-8149601168e7",
          "length": 282,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "bb3153ff-577f-45ac-a92f-80d6bfea1d6c"
        },
        "item": {
          "id": "b057b964-0dee-49d7-a0e0-9abb52dea00c",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "ebaf0c34-2dab-40c9-b743-1b8dfa1d401f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d3aa528-45d6-40c4-a748-a780d4ce9daa",
        "cursor": {
          "ref": "d2e90671-95bf-4989-bcf2-7c5b3e20b038",
          "length": 282,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "ca19e132-d1b8-4643-adcc-7ac39b5f49dd"
        },
        "item": {
          "id": "8d3aa528-45d6-40c4-a748-a780d4ce9daa",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "9cf369e9-27f9-4409-a948-ea3b546448aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7b4dd6a-780a-41e5-9c52-7b9ad2045fcf",
        "cursor": {
          "ref": "493e3f46-41a0-4301-8e6a-a2fa4bcd8854",
          "length": 282,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "fefd46ee-6735-4a61-be15-be78bb86be91"
        },
        "item": {
          "id": "c7b4dd6a-780a-41e5-9c52-7b9ad2045fcf",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "b6db5999-410c-4a86-a39e-7a449c88b5a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0af87094-a69d-4bb5-80d4-95a75be29246",
        "cursor": {
          "ref": "7f3c444c-9336-4035-8a7c-5d1858f75efe",
          "length": 282,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "e740d08b-0705-465a-8f0a-7b8e5c5505cd"
        },
        "item": {
          "id": "0af87094-a69d-4bb5-80d4-95a75be29246",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "fea4b380-665e-421e-ba07-cfc254b70c2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94d7e923-ed96-4224-8e9b-ba088b615d58",
        "cursor": {
          "ref": "59edbf05-6ea0-4f83-a5d1-d0f80357b75b",
          "length": 282,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "60aa897b-361e-4abc-b752-309f37137032"
        },
        "item": {
          "id": "94d7e923-ed96-4224-8e9b-ba088b615d58",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "1c5e0164-88bb-4787-a36a-4bfd10e65ec9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46762018-3f6f-4c07-a910-0b9f76ae4cd0",
        "cursor": {
          "ref": "713bc029-6c00-4f2e-a91e-a657511e459a",
          "length": 282,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "2f0fe1d0-dc72-4f5e-814e-69bdba25e68b"
        },
        "item": {
          "id": "46762018-3f6f-4c07-a910-0b9f76ae4cd0",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "e5e9a18d-6be7-4923-b8cb-8854c09e900b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d79681dc-17bd-4b08-95f7-8d689493e82f",
        "cursor": {
          "ref": "9431a107-9767-430b-8818-93398ddff4e5",
          "length": 282,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "dfe5fbe8-3cb5-4444-9870-531198ef4128"
        },
        "item": {
          "id": "d79681dc-17bd-4b08-95f7-8d689493e82f",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "ddf5e524-7070-4028-b40b-132865bc3762",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4e257cb-3dfd-4e9c-8641-70969046d4ed",
        "cursor": {
          "ref": "362e0778-d952-49de-b380-5a501d9d655a",
          "length": 282,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "86bd8f6c-f4db-4ba2-b070-639b8e6c7a2f"
        },
        "item": {
          "id": "a4e257cb-3dfd-4e9c-8641-70969046d4ed",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "5e8d5421-40b5-48ab-ae39-98429b7fdced",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "add9af31-9a26-4fa4-b06d-7878510451d2",
        "cursor": {
          "ref": "5d891bc4-76a5-48ce-bdef-36e7908c2e21",
          "length": 282,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "d004a463-e9dd-479f-bc8c-0939c9981a91"
        },
        "item": {
          "id": "add9af31-9a26-4fa4-b06d-7878510451d2",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "229d5607-0eae-4018-94b4-dda2c0b78ebb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94392a30-7183-4755-b7e6-18d7b1098b3f",
        "cursor": {
          "ref": "90d472a8-21dd-42d0-99ca-ea9a570f7795",
          "length": 282,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "37ee3854-5ff6-42e5-8fcc-93c8c353b85f"
        },
        "item": {
          "id": "94392a30-7183-4755-b7e6-18d7b1098b3f",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "f2ad7a90-ff87-4654-b21f-68065e411bbc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d10653de-cc7b-4024-9b44-775baa3ca47a",
        "cursor": {
          "ref": "d1f151b2-49ee-4fa4-94ae-fbc550cef1ec",
          "length": 282,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "c1e87813-d12e-4fb0-b87f-068f7822b459"
        },
        "item": {
          "id": "d10653de-cc7b-4024-9b44-775baa3ca47a",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "705d4512-f911-4440-9b8c-5807a8eb3f04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b082979f-a340-4f6d-b472-79c01ce5864f",
        "cursor": {
          "ref": "ff23735f-681c-4f33-82d1-58d38764d004",
          "length": 282,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "8fdf309a-834d-4d63-92ec-9d0b9009d0bd"
        },
        "item": {
          "id": "b082979f-a340-4f6d-b472-79c01ce5864f",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "4f4b2aab-634e-4fc9-9878-88ed39e4ccce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "829aabfc-8836-47a8-b7a0-ae23c7efca8e",
        "cursor": {
          "ref": "329a5fbb-8182-4805-84f1-682f8e02ab00",
          "length": 282,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "12a297e4-1d75-469b-9039-9ca0c025cf65"
        },
        "item": {
          "id": "829aabfc-8836-47a8-b7a0-ae23c7efca8e",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "ebd7b84b-b979-4eb8-a1b3-532f0813d59b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df9210e5-d4bd-4760-90cf-cf0956456885",
        "cursor": {
          "ref": "55eb9c03-0835-4db8-ad94-6e8eb2caccb8",
          "length": 282,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "4fe5dc5e-1357-468d-a1d8-924be08221f4"
        },
        "item": {
          "id": "df9210e5-d4bd-4760-90cf-cf0956456885",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "5a7ff9ca-2938-49f2-b1c5-7901fa9f5786",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af78b493-c89c-40fb-92e1-e8cd45c5188b",
        "cursor": {
          "ref": "ce24f8a7-724c-436f-b488-fae2c89d313c",
          "length": 282,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "5d086ee6-73d0-49ae-b1fd-bf837128a082"
        },
        "item": {
          "id": "af78b493-c89c-40fb-92e1-e8cd45c5188b",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "3820f31c-07ff-470f-a6ec-d727f8c554ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b1db633-5645-4f8d-96bf-60a880d2091b",
        "cursor": {
          "ref": "6252b6c7-a16b-40d7-8b79-2a2330ec4316",
          "length": 282,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "dc9d2cb7-6be2-4f08-a6a6-94e5e20745bf"
        },
        "item": {
          "id": "2b1db633-5645-4f8d-96bf-60a880d2091b",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "df88935c-75a8-4c49-9e68-d54ccaf21e48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2908bf23-b107-44aa-8847-1fef1c443993",
        "cursor": {
          "ref": "e2189ef5-db8d-468b-a3bc-54b5e418bf57",
          "length": 282,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "8ec1d594-a586-45fb-95d7-e6954171e00e"
        },
        "item": {
          "id": "2908bf23-b107-44aa-8847-1fef1c443993",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "2f25ba59-abba-427a-9fd3-22b2ad38abc7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7212bbfa-d8b2-4124-ba27-dd819d3c443d",
        "cursor": {
          "ref": "65b60d5f-7734-4797-8b4b-de23b14dfe8a",
          "length": 282,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "c9f87452-e646-406c-b0e7-35949c7f9777"
        },
        "item": {
          "id": "7212bbfa-d8b2-4124-ba27-dd819d3c443d",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "f3dc5fb7-5369-4629-888c-e6015d82ffcc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc64a8d5-4f8c-4772-bb64-f7316540a751",
        "cursor": {
          "ref": "666740fa-cc29-433f-b62d-bc74b27faf04",
          "length": 282,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "ace7f2cc-d42f-4e44-ae69-5b05a2418696"
        },
        "item": {
          "id": "dc64a8d5-4f8c-4772-bb64-f7316540a751",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "ccea7f7b-ae7c-4ac9-9946-f18baf7bac36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdaa3905-7773-4046-b7ee-544faa45f622",
        "cursor": {
          "ref": "502daf51-235d-4c8a-b361-a767b0b6719a",
          "length": 282,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "6a83a460-bbd2-4091-bf81-6e0047b0afe4"
        },
        "item": {
          "id": "cdaa3905-7773-4046-b7ee-544faa45f622",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "7a11046f-72ce-4c22-83ea-6172cab9a537",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd63d2e5-9225-49b9-8ad8-b08b82e862c7",
        "cursor": {
          "ref": "f418f4f1-0a6b-4ecd-a53f-9ef8ee618d08",
          "length": 282,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "22abe119-8927-4c5b-ad5b-e24691b2ba22"
        },
        "item": {
          "id": "bd63d2e5-9225-49b9-8ad8-b08b82e862c7",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "3ec28c6b-6e24-4799-ad95-e5b049a7cf7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a08adcf-66b1-4ec4-83a7-5d30a811d40d",
        "cursor": {
          "ref": "395fd340-a4cd-4249-98f6-bcc403abf9e1",
          "length": 282,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "b9d8b696-ce34-4c55-aea4-35465f61c50d"
        },
        "item": {
          "id": "7a08adcf-66b1-4ec4-83a7-5d30a811d40d",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "026f1dfb-2cc0-4fbb-8f69-2737b72c50ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3415e088-73fd-4287-a7d6-112825d915ec",
        "cursor": {
          "ref": "47d0ad83-cf17-4e3a-aafb-51febbb5b184",
          "length": 282,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "b6757aad-5604-4744-95f6-79ccaa02b44f"
        },
        "item": {
          "id": "3415e088-73fd-4287-a7d6-112825d915ec",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "2b92a79f-a056-4145-99a5-baa49f3bf8c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70e44630-e5e2-4525-a65a-92a2cc546652",
        "cursor": {
          "ref": "649a1bc2-e43b-41b8-a41d-55f7e06bc4fa",
          "length": 282,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "12036845-6802-4691-804e-7e4ee1213b17"
        },
        "item": {
          "id": "70e44630-e5e2-4525-a65a-92a2cc546652",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "e14d1dc5-8626-463c-b8f1-c249c272558d",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 34,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cf14622-2c53-4d0c-aaa0-2773768b3935",
        "cursor": {
          "ref": "1d7fd357-e1ba-4251-b518-14a8b893e25b",
          "length": 282,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "7dadbb1c-40cc-428d-a24b-445c3278c218"
        },
        "item": {
          "id": "4cf14622-2c53-4d0c-aaa0-2773768b3935",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "4123214f-70b0-4d4d-8643-ff77aff3ae37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "224c5881-fd7d-43ef-ad23-9a4c7241582f",
        "cursor": {
          "ref": "cb80e305-daa4-4766-81e2-d807549f1714",
          "length": 282,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "b0e956b2-a1d1-42dc-afa5-e6fb029301ae"
        },
        "item": {
          "id": "224c5881-fd7d-43ef-ad23-9a4c7241582f",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "fa0a5753-ec48-458b-ba48-16a24aab7f38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed468c58-8a00-4ef6-99ee-2e047774f566",
        "cursor": {
          "ref": "e44e443e-9f99-4ca8-b782-e454a330f22c",
          "length": 282,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "2e3dabfc-e91d-47a4-a292-cdf3ad6c3c1d"
        },
        "item": {
          "id": "ed468c58-8a00-4ef6-99ee-2e047774f566",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "d6b58e57-a772-42ba-909e-3c7cf3edbe8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aca27d98-8f82-47a5-b5a8-7a3242c1fa1f",
        "cursor": {
          "ref": "50a5d1a7-8622-44b4-911b-b200bff8cc7f",
          "length": 282,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "b08bf91a-bf4c-49b0-9e1e-21dbd729cfb0"
        },
        "item": {
          "id": "aca27d98-8f82-47a5-b5a8-7a3242c1fa1f",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "8d2e95b0-f7aa-432a-9da1-3eb1921abee9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72354b2c-751f-483c-9fb6-1fd1c5fdb3ea",
        "cursor": {
          "ref": "e99f2e65-a327-47a3-a9bb-c5537d19f78d",
          "length": 282,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "037f9ab4-0b1c-4e09-b0ce-749c8a8aab95"
        },
        "item": {
          "id": "72354b2c-751f-483c-9fb6-1fd1c5fdb3ea",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "497ac20d-5c98-4a42-a835-d01a4d23ba18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c8f5bd7-78d1-47ab-99e8-4bb0478aa2e1",
        "cursor": {
          "ref": "22b29e51-581e-4e45-8ed6-7615a72140c7",
          "length": 282,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "5b5429c9-f252-4c20-9b11-c8f7ee0c86b4"
        },
        "item": {
          "id": "8c8f5bd7-78d1-47ab-99e8-4bb0478aa2e1",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "f3998171-ad72-4230-9cc9-97e7f4fe8ef2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b99673f-ac5d-43cb-93b4-01d0524d4ad3",
        "cursor": {
          "ref": "6258f775-0726-48d1-97eb-c5d77cd46441",
          "length": 282,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "3f929b6e-0140-4c36-89e3-c831f4de21ca"
        },
        "item": {
          "id": "5b99673f-ac5d-43cb-93b4-01d0524d4ad3",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "6a9b9d74-4e5b-43b9-83e6-f0f2ab73d53c",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 23,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efb82b86-0c10-40d3-b56d-73cf7d4eed32",
        "cursor": {
          "ref": "c1d68d7c-c393-45a6-9b3b-db8c563931ed",
          "length": 282,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "cdd7bbc5-0c34-47b8-b4e8-ce77f73a3b24"
        },
        "item": {
          "id": "efb82b86-0c10-40d3-b56d-73cf7d4eed32",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "96235fb4-e9be-408c-9c0c-26734492705c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee212e93-131a-48c8-a699-9cfe17bafbdc",
        "cursor": {
          "ref": "6d759a42-b341-4d45-bed5-9afb975cd2ee",
          "length": 282,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "8e47e208-1c80-4267-ba9f-8cf40649fce5"
        },
        "item": {
          "id": "ee212e93-131a-48c8-a699-9cfe17bafbdc",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "82180369-22a8-4344-8678-b73dddedd28a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "effbe387-360e-43a1-9750-462361c03ad3",
        "cursor": {
          "ref": "8a6edcfe-6280-4eeb-afc0-a144838cb827",
          "length": 282,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "ecc2a20a-feb3-43e1-b695-d3715632a8d3"
        },
        "item": {
          "id": "effbe387-360e-43a1-9750-462361c03ad3",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "c105030c-1936-4bad-a090-7c302538efff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ce53df6-64cb-4352-92c6-4dffb17aa6bc",
        "cursor": {
          "ref": "84050cee-0ce3-4167-bf72-d2793b90be97",
          "length": 282,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "7dc96928-e468-4c4d-afcb-85d85595870a"
        },
        "item": {
          "id": "4ce53df6-64cb-4352-92c6-4dffb17aa6bc",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "6fb2d65b-e9bd-42d6-91ef-cd9b73062008",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab3bc41c-687e-4650-9502-c2fec0ce5a44",
        "cursor": {
          "ref": "03032c34-04ed-4bdd-b512-6e54242c85cc",
          "length": 282,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "4c1da631-72d1-4063-850e-db465234c15c"
        },
        "item": {
          "id": "ab3bc41c-687e-4650-9502-c2fec0ce5a44",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "1443d8c0-e215-4a98-9a89-17ccba15fbcf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9795c4e-7749-44b5-9bbe-189e2bb88411",
        "cursor": {
          "ref": "b726f432-4c16-48cd-81ba-0236ac74a299",
          "length": 282,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "1e5f2bdd-89c8-42c0-9e41-129019bb4bf0"
        },
        "item": {
          "id": "f9795c4e-7749-44b5-9bbe-189e2bb88411",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "760829a6-d945-43bf-b08f-25ba20aa8150",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c948fb84-cb4c-4845-9b62-883ae693aaa7",
        "cursor": {
          "ref": "097e083e-6afc-43f6-89ba-b78a953cc3f0",
          "length": 282,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "940c59f4-88b6-48c2-9682-0b13c8e12e8c"
        },
        "item": {
          "id": "c948fb84-cb4c-4845-9b62-883ae693aaa7",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "459f90b7-3ed9-489e-920f-91366aad4e91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20cc83cd-6394-4eaf-872c-8130f6013009",
        "cursor": {
          "ref": "ca9197ed-ffc9-4d67-924c-f9caf9fe173b",
          "length": 282,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "4568ab74-8ea7-4400-8e4d-4a53129f6f3a"
        },
        "item": {
          "id": "20cc83cd-6394-4eaf-872c-8130f6013009",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "4433c9c8-6509-4b84-a049-5380b5310351",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "207e5dbc-6b56-4c37-9099-42d3f1457a78",
        "cursor": {
          "ref": "a163675e-2bdf-44e4-b69f-4ab7c10571b3",
          "length": 282,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "c52f96a0-35a6-427a-ab01-add610291cd5"
        },
        "item": {
          "id": "207e5dbc-6b56-4c37-9099-42d3f1457a78",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "565279d8-1850-4666-ad27-8056bbdc6a9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "292514c1-aad3-43ef-9485-cb625c85de90",
        "cursor": {
          "ref": "fa7c6077-b55f-42b0-ba55-f19d81724759",
          "length": 282,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "ee0e2403-c692-457c-a123-e2b7ec0fb224"
        },
        "item": {
          "id": "292514c1-aad3-43ef-9485-cb625c85de90",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "36feb594-af05-438e-9559-5147358e35f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "846642c7-0d85-4a2c-af79-eac3c57be3b9",
        "cursor": {
          "ref": "efe07b83-8799-4c74-b3d7-92fdec201a2f",
          "length": 282,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "a35bbf62-180d-4e6f-83d0-62df19a5cca5"
        },
        "item": {
          "id": "846642c7-0d85-4a2c-af79-eac3c57be3b9",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "12097d26-cd15-472e-bc34-ba6cbd2e42fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5eef4c50-6aac-4ed4-bc97-f7e52248ab0e",
        "cursor": {
          "ref": "fc92a168-90b1-482c-bd47-f4d833cd6dab",
          "length": 282,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "103d3339-523e-4c69-a6f7-c30b40ef2b0f"
        },
        "item": {
          "id": "5eef4c50-6aac-4ed4-bc97-f7e52248ab0e",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "e4a7f4de-5eb4-49e6-adad-8f35192754f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4c5f2cf-0f58-4a9b-a11d-d901838f995e",
        "cursor": {
          "ref": "df304270-3148-4fdb-920b-2921b550632e",
          "length": 282,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "63454490-8035-4caf-8446-9835420151ff"
        },
        "item": {
          "id": "f4c5f2cf-0f58-4a9b-a11d-d901838f995e",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "4baea5be-14fd-4419-9ea0-62ef53565a13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec3be15e-27a3-44da-9261-a14778d34def",
        "cursor": {
          "ref": "37574639-4764-49ef-bb04-7cc21db3aa24",
          "length": 282,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "7a7040f8-3dd1-46f0-adc1-ed32cfab3441"
        },
        "item": {
          "id": "ec3be15e-27a3-44da-9261-a14778d34def",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "7ba4f812-8407-4b8f-859c-a6bee862607a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e96861e4-6f9c-4697-8170-a71688ee3531",
        "cursor": {
          "ref": "f884ee10-c948-4052-8a33-070d4ea99681",
          "length": 282,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "7acca2d2-53d9-4925-b0fd-e70e75f2da58"
        },
        "item": {
          "id": "e96861e4-6f9c-4697-8170-a71688ee3531",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "1b63669c-e9c6-4d44-9f4a-208f2729c5f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d361be82-f71a-4edb-a13f-823bbe18439a",
        "cursor": {
          "ref": "17517d5f-11b3-42a0-a403-ebc0bfc91344",
          "length": 282,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "858fabd0-d0fa-47ff-b9ba-8ff98c29e61c"
        },
        "item": {
          "id": "d361be82-f71a-4edb-a13f-823bbe18439a",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "f468e6e3-3d87-45f8-8183-adc581d5977c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d32b0ef-cd57-41a9-9204-c72eba2c950a",
        "cursor": {
          "ref": "a20ee4d2-6b46-45f4-b422-51e5b9ce8776",
          "length": 282,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "efbf87dd-e8d8-4fb4-9c70-1a4313501d04"
        },
        "item": {
          "id": "9d32b0ef-cd57-41a9-9204-c72eba2c950a",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "ae6b8c3b-6d9f-4470-848c-9e8962853dd3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7b2ad7d-452c-41f7-b18a-1b857865f0cd",
        "cursor": {
          "ref": "babf45ca-207d-4916-b105-4137c18ab2c3",
          "length": 282,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "f944bc57-7439-44b3-8d1e-bb928b7bf8a7"
        },
        "item": {
          "id": "e7b2ad7d-452c-41f7-b18a-1b857865f0cd",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "aab94adb-ec60-4221-9f29-defe976fcf31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82c63fc8-bd7b-4817-a618-00dd6cbcc4d9",
        "cursor": {
          "ref": "2e9f8e40-7ec0-48b7-83ea-488804757c48",
          "length": 282,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "8d7c24b9-6603-4824-b3fc-5e13647dae15"
        },
        "item": {
          "id": "82c63fc8-bd7b-4817-a618-00dd6cbcc4d9",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "16b970c8-bb68-4759-ae36-01ac5798e9b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "729ba480-1c5d-434c-b075-808b7fd4c611",
        "cursor": {
          "ref": "d1714db0-b07c-4a0c-bd2b-100282f6d63f",
          "length": 282,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "3ba3dfab-d795-4e18-a810-3f3208d05b76"
        },
        "item": {
          "id": "729ba480-1c5d-434c-b075-808b7fd4c611",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "06f10eff-7aea-41c6-a599-9a90cc05aa80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ead530b-6afe-437b-8fb1-b184e5fd0e68",
        "cursor": {
          "ref": "79b08fb9-af62-4415-9a9b-f4acd0ebf55f",
          "length": 282,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "f1139212-c7a8-4e16-a11b-bc15950e061a"
        },
        "item": {
          "id": "0ead530b-6afe-437b-8fb1-b184e5fd0e68",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "a42f219f-9fb3-4996-8458-e00b7b359fcd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6772cbef-3060-43a2-bcc7-03dcf5fd0564",
        "cursor": {
          "ref": "731de344-aef2-4f36-82a6-2b1c2c7d67c6",
          "length": 282,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "b07a7670-a51b-4d57-9cbe-17fe68746930"
        },
        "item": {
          "id": "6772cbef-3060-43a2-bcc7-03dcf5fd0564",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "b6717dcf-b7bf-4cfd-a5b4-1c8b6e1f2118",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75d87799-d4e8-47b5-baf1-0a9522cb1ae3",
        "cursor": {
          "ref": "a237590d-23a5-465f-9490-883a6f9a2189",
          "length": 282,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "98bf15fc-515c-4904-a381-ddeba8f53be5"
        },
        "item": {
          "id": "75d87799-d4e8-47b5-baf1-0a9522cb1ae3",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "69ef1b02-7d09-4e2c-a5c7-538ff83540b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e137469-eb07-45ce-9a62-cf8083c6d225",
        "cursor": {
          "ref": "4d1d2ee6-41ad-4e42-9076-6cd0f2bbed62",
          "length": 282,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "85aa039b-08e4-4a93-8613-393aa65100aa"
        },
        "item": {
          "id": "0e137469-eb07-45ce-9a62-cf8083c6d225",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "44de6cd7-7f59-4622-b4b2-ffd9d267ae05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1612573a-0031-4cc1-905b-386e4b8564a2",
        "cursor": {
          "ref": "94ed445d-06fe-4075-b216-69341b730cbc",
          "length": 282,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "f54125c3-5aa3-4638-8840-c44327b7bcdc"
        },
        "item": {
          "id": "1612573a-0031-4cc1-905b-386e4b8564a2",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "3a66ea6b-b5bd-4eb5-bbb0-1ba55dd4e353",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5d448ab-8765-448d-b30f-646ce8aa5db3",
        "cursor": {
          "ref": "fc00484d-34f4-4d23-8fbc-86fa5bcd33d2",
          "length": 282,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "1df4ff00-90e8-49b1-bdf0-a9f713a1a038"
        },
        "item": {
          "id": "f5d448ab-8765-448d-b30f-646ce8aa5db3",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "af3aac0b-4b26-453f-9f54-754ba2f69a3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a523a00-5dda-488b-a5f8-7892e8285e61",
        "cursor": {
          "ref": "1af6ccd3-f3bc-48a4-bcf5-c9e2eed97849",
          "length": 282,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "c17ee87c-c4b3-49c0-a35f-e9faa0a9c117"
        },
        "item": {
          "id": "0a523a00-5dda-488b-a5f8-7892e8285e61",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "c8f1e42c-b358-4854-851c-edcb48f2172d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf777847-bc14-4c9e-930c-4934b228af4b",
        "cursor": {
          "ref": "d54b3dee-46ee-4fb2-a69b-eda53de4185c",
          "length": 282,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "ab10ad29-4ef6-49dd-ad8e-a86593e7d44c"
        },
        "item": {
          "id": "bf777847-bc14-4c9e-930c-4934b228af4b",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "0c1768dc-4c5f-48e6-9696-651a40941dcc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e4b15e0-2bf0-438d-938a-98cbd84b713c",
        "cursor": {
          "ref": "fdd675e3-8a25-44c7-b244-9e00a6f44fd3",
          "length": 282,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "cf3dbf90-afff-4775-8fa2-f086b7d92629"
        },
        "item": {
          "id": "1e4b15e0-2bf0-438d-938a-98cbd84b713c",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "2844201f-fc56-4f92-bcd8-7aab9fcdbc36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20ffc1ed-23d4-47c7-b060-bcd9db903f6f",
        "cursor": {
          "ref": "c361c511-1f18-4392-b43d-bcbf6c1b2a76",
          "length": 282,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "c37de86b-5482-40fe-a511-606f7fdc2d13"
        },
        "item": {
          "id": "20ffc1ed-23d4-47c7-b060-bcd9db903f6f",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "708f2ec3-b4ac-4958-ac5d-5addf3772b73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a56efd1f-00d4-4a98-ac0e-0d77ed997ef7",
        "cursor": {
          "ref": "719033d8-62a0-46e8-8f3c-b34ae87b73d6",
          "length": 282,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "433d35a3-f2dc-471f-b1e0-3556b3a5a100"
        },
        "item": {
          "id": "a56efd1f-00d4-4a98-ac0e-0d77ed997ef7",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "1c48c80a-c538-4a88-bc84-2a10e9bd9636",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 169
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "646c7c12-9c27-4543-92b0-03466aca8d51",
        "cursor": {
          "ref": "51261f43-df39-4a97-9346-cf29c1558d94",
          "length": 282,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "962f41c0-262d-491e-b650-dcdf626dd626"
        },
        "item": {
          "id": "646c7c12-9c27-4543-92b0-03466aca8d51",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "f061ace1-88c0-434c-9274-982787b38a63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3895b1c-c91b-41ba-b2bb-4391ead0fd52",
        "cursor": {
          "ref": "b7b54c29-3d29-4525-922a-854e755a4ee3",
          "length": 282,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "bebe6a35-d315-404b-8545-9e4cc14c0348"
        },
        "item": {
          "id": "f3895b1c-c91b-41ba-b2bb-4391ead0fd52",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "9c48ff70-d72c-479f-8822-4be9aabba842",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07cb42d0-43b8-48d6-a132-c994bc1e6545",
        "cursor": {
          "ref": "12c78d4e-dd40-4d96-800d-4e73914dc0db",
          "length": 282,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "f098fe5d-7c55-4400-9ce4-b9f926b149f9"
        },
        "item": {
          "id": "07cb42d0-43b8-48d6-a132-c994bc1e6545",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "65bfe34c-8154-456a-a2f0-912a6eb26d23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcb97f7a-573d-4083-8883-7e9c29ea363c",
        "cursor": {
          "ref": "e872dfdf-7d0e-4d45-9c2a-7c780a61150b",
          "length": 282,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "938639ad-53f6-4eca-a87e-2e1d9f01ad07"
        },
        "item": {
          "id": "fcb97f7a-573d-4083-8883-7e9c29ea363c",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "0181eb38-36e6-4125-8b50-0c4dd56df5f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bcd5cfba-fa45-4452-8e24-8c750d57a83c",
        "cursor": {
          "ref": "69494e1e-d175-4787-92b9-4087c8140c23",
          "length": 282,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "05fd42eb-65cd-4700-9197-95e38c189ae8"
        },
        "item": {
          "id": "bcd5cfba-fa45-4452-8e24-8c750d57a83c",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "7bf620ee-fc82-414a-b04a-9e5a848d4274",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50cca2b9-dc52-4dcb-895c-bb181d23c68c",
        "cursor": {
          "ref": "617d63d8-3f51-42c5-8f6d-aef89047d898",
          "length": 282,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "2dccd545-35ee-4461-a610-80679d9c0785"
        },
        "item": {
          "id": "50cca2b9-dc52-4dcb-895c-bb181d23c68c",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "5a25f04e-6707-4e21-aeec-92688eb52885",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6052baa7-b1ea-46a0-aa11-4c9d9fe39b5f",
        "cursor": {
          "ref": "ef1de1f0-bc6a-4a21-bfa0-7e78845c16cf",
          "length": 282,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "0150d636-69af-44f9-a764-0e1d4ce95604"
        },
        "item": {
          "id": "6052baa7-b1ea-46a0-aa11-4c9d9fe39b5f",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "5858efcc-6d76-46b1-83cc-2e5842ca5b96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df9f877a-f37e-46db-b783-5e4bd55f1d41",
        "cursor": {
          "ref": "018ece5a-4f11-4029-80a5-a8cb978bb607",
          "length": 282,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "fe420951-8284-4134-93fb-53f7a86103c4"
        },
        "item": {
          "id": "df9f877a-f37e-46db-b783-5e4bd55f1d41",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "732c4877-d71c-4320-bc23-36bef94070de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77300673-b39a-4e35-a59c-8a5305badea7",
        "cursor": {
          "ref": "58683841-bda9-4132-8ec3-2379c77dba77",
          "length": 282,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "cb1a50e5-8647-4e77-86fa-5cc2140966ad"
        },
        "item": {
          "id": "77300673-b39a-4e35-a59c-8a5305badea7",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "2d3a18cc-07f3-44cd-8c68-bc8de0f45b44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b1ec38a-f53e-43ad-a9fa-9ec22fdeb96f",
        "cursor": {
          "ref": "d52673ed-00c3-47bb-a05b-73cd646e0f05",
          "length": 282,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "9ad082ed-9679-48c5-9214-f6dabcb89434"
        },
        "item": {
          "id": "2b1ec38a-f53e-43ad-a9fa-9ec22fdeb96f",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "8f114b1f-0e8f-47b1-9a35-bd44090adf41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d470a8f-7e91-478d-9b0c-5762c33a5991",
        "cursor": {
          "ref": "dc4863cb-14e0-4a2c-bda1-bfdfffaee814",
          "length": 282,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "5ce47296-5fc9-42b8-b1a0-dc52cb928638"
        },
        "item": {
          "id": "8d470a8f-7e91-478d-9b0c-5762c33a5991",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "a818389d-0ac0-42a1-8499-854684ff8760",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20b8616d-d807-4f84-92d4-6ffc212e973b",
        "cursor": {
          "ref": "003c22fa-88f2-4c34-a7c8-86262d9f86a9",
          "length": 282,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "2ae3c1f6-c3c0-4653-9b25-e0b5c351a34a"
        },
        "item": {
          "id": "20b8616d-d807-4f84-92d4-6ffc212e973b",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "5437fe1b-a364-4952-9d8a-b8898b546374",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e0635e4-8fac-403c-98b5-54668163fc15",
        "cursor": {
          "ref": "75d289f9-7e0a-4303-81cf-a4907a582e39",
          "length": 282,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "6539d6c4-668e-4956-9ed6-a0f43c47579d"
        },
        "item": {
          "id": "3e0635e4-8fac-403c-98b5-54668163fc15",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "1eff9d36-7675-456a-b03c-55ff5a106378",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19e4b426-0438-4128-a5dc-321382bbaa9e",
        "cursor": {
          "ref": "bac2a14d-637a-4628-b673-42513ae5612b",
          "length": 282,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "d333d599-fbc9-489a-8f9b-40b609a781eb"
        },
        "item": {
          "id": "19e4b426-0438-4128-a5dc-321382bbaa9e",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "c0d9984f-d919-4051-b2d1-76f96388bcac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73f98965-f41c-496f-8fed-8869186dcedc",
        "cursor": {
          "ref": "92791133-dc96-425e-bd07-41c1078e7321",
          "length": 282,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "4fc770b4-6542-4f66-9519-bd4d74b0a75b"
        },
        "item": {
          "id": "73f98965-f41c-496f-8fed-8869186dcedc",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "7557d9ca-34a2-4a61-95e9-cbe6b436725b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30c68df0-9cd0-418a-92a1-c13ae070fc69",
        "cursor": {
          "ref": "553e1605-940d-4ab3-92a4-661c14542e79",
          "length": 282,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "a1e72cc3-9525-4560-af4b-0868a08f2547"
        },
        "item": {
          "id": "30c68df0-9cd0-418a-92a1-c13ae070fc69",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "df3b5da7-2c7f-4cc9-bfee-d467395ee834",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34493c6e-a055-497e-a03a-db91fa567e8b",
        "cursor": {
          "ref": "0ddde7cd-4485-491a-86be-eba84d5381b4",
          "length": 282,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "d07ca636-5b54-46c2-9a5c-996d829baa7d"
        },
        "item": {
          "id": "34493c6e-a055-497e-a03a-db91fa567e8b",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "f95bdcf2-a52a-437a-a904-3d3c63759b67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af1c938d-d9c7-4179-8dd7-a242af487100",
        "cursor": {
          "ref": "a3cacf90-24a9-43ce-a08e-6d4b350073e5",
          "length": 282,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "510dcf64-7e11-4c86-8a63-621b1cf36e2d"
        },
        "item": {
          "id": "af1c938d-d9c7-4179-8dd7-a242af487100",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "cd3b2cfe-fa55-4290-b551-e719d8876c57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc9b8e51-3d5b-4323-84f5-db88bce460d1",
        "cursor": {
          "ref": "915f9755-d401-4ef4-a47e-112960c1f7bd",
          "length": 282,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "72dac6f4-8a05-4d99-a81f-9a2582e87c03"
        },
        "item": {
          "id": "bc9b8e51-3d5b-4323-84f5-db88bce460d1",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "028ad4b9-3242-4b61-9f7f-0c17dabdfbe5",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 9,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "179eb789-2fc7-4c16-bd38-35097b80f7e3",
        "cursor": {
          "ref": "d36a081b-b370-48d7-8061-21f91320134f",
          "length": 282,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "76177747-9995-4439-8097-d2851aa74310"
        },
        "item": {
          "id": "179eb789-2fc7-4c16-bd38-35097b80f7e3",
          "name": "credentials_issue"
        },
        "response": {
          "id": "8a2d1a24-4205-4159-85d8-f01de5f36632",
          "status": "Created",
          "code": 201,
          "responseTime": 44,
          "responseSize": 916
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "0eee3ccf-58e3-4444-93eb-fd995033e0d4",
        "cursor": {
          "ref": "fe307f7d-559e-4804-80af-08e4c3ecf3bd",
          "length": 282,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "6e5860c6-3837-4813-bda9-616b04f70cd2"
        },
        "item": {
          "id": "0eee3ccf-58e3-4444-93eb-fd995033e0d4",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "9d13bd8b-5e6c-49d3-bf7d-71cf7537bed1",
          "status": "Created",
          "code": 201,
          "responseTime": 73,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d9fc76c-2035-4dff-856f-9e24ad712797",
        "cursor": {
          "ref": "36fdc95a-82a4-4388-b583-114796514ab3",
          "length": 282,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "a23bcae4-9f8e-4eb9-bd94-53dd92ad6413"
        },
        "item": {
          "id": "2d9fc76c-2035-4dff-856f-9e24ad712797",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "dd4d5433-3480-4b9e-a794-3f12fb0a751a",
          "status": "Created",
          "code": 201,
          "responseTime": 83,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3d1298f-5ecd-451c-864f-bbd47b900531",
        "cursor": {
          "ref": "65cd2606-8797-431d-9956-32f8c6f5dd08",
          "length": 282,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "d931b030-fe81-4d91-a720-84dee9b7f3d7"
        },
        "item": {
          "id": "d3d1298f-5ecd-451c-864f-bbd47b900531",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "7525c6e4-0e8c-4aad-b731-4b86b399ba7b",
          "status": "Created",
          "code": 201,
          "responseTime": 33,
          "responseSize": 928
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "e51c8cc5-cdca-4ff2-985b-5653eeee44f9",
        "cursor": {
          "ref": "45343f0a-ce0f-462f-a7d9-02559187e9f4",
          "length": 282,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "c2e11089-0b34-45d7-97c4-0c5ced0ce0f7"
        },
        "item": {
          "id": "e51c8cc5-cdca-4ff2-985b-5653eeee44f9",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "3503bfea-3b57-49c4-a3e1-a4a0a80cb99b",
          "status": "Created",
          "code": 201,
          "responseTime": 35,
          "responseSize": 907
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8685a7d-6224-4114-b710-85423bc613c7",
        "cursor": {
          "ref": "d4552622-e606-43e9-a84d-5e041e37a36e",
          "length": 282,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "fc4dfadd-257f-49af-a96b-1defbd834744"
        },
        "item": {
          "id": "e8685a7d-6224-4114-b710-85423bc613c7",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "0f167957-d661-4a7a-8e82-9cd8c55951a7",
          "status": "Created",
          "code": 201,
          "responseTime": 33,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8803c128-0070-4c8c-a7ac-5f65f5cbf978",
        "cursor": {
          "ref": "4e5e255f-9b09-48c3-8efe-66bda1329c98",
          "length": 282,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "2e8979d9-7f85-473e-abb8-94a764be44f8"
        },
        "item": {
          "id": "8803c128-0070-4c8c-a7ac-5f65f5cbf978",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "5f356e1b-0c8c-424e-a0e9-976b897da912",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb89eea9-942b-497e-a1ae-db2652bf4f05",
        "cursor": {
          "ref": "851332c3-e1ee-48f4-a80a-dd7a67c15c8a",
          "length": 282,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "50473ce4-6c48-4ee7-83a9-4790f200695f"
        },
        "item": {
          "id": "fb89eea9-942b-497e-a1ae-db2652bf4f05",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "6a099b7c-c2a7-4117-8f71-ecaeffca19c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65d689d6-93f1-4ecc-a1d1-c0f2115c7449",
        "cursor": {
          "ref": "9d350200-fe93-44db-b0c0-47ecd85336d5",
          "length": 282,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "5b4b6402-e7f4-4a0f-9f54-e7f55e50d544"
        },
        "item": {
          "id": "65d689d6-93f1-4ecc-a1d1-c0f2115c7449",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "ac2cf687-80f1-4af0-b973-3e8cb37e8ad3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f40c6df-5d6c-4691-802b-f18f5f0c2734",
        "cursor": {
          "ref": "0a260666-e2fb-47f1-8401-b6f7b198964c",
          "length": 282,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "b0d6a1c6-991a-4740-8d9a-3c98f7355921"
        },
        "item": {
          "id": "1f40c6df-5d6c-4691-802b-f18f5f0c2734",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "d5a04360-c311-4a5a-9341-7ad3f7b64819",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94d0f120-e51c-43c9-9111-f9d90efb4069",
        "cursor": {
          "ref": "2c0dd9b5-4219-4e47-b1f8-c293ea93ef3f",
          "length": 282,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "d3fbf7e0-0d9b-4001-9718-0f170a3431bf"
        },
        "item": {
          "id": "94d0f120-e51c-43c9-9111-f9d90efb4069",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "6e8ff735-7ac5-43c7-a988-ddfeb46c89d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0667d1f3-1330-4835-b641-443651e4af7c",
        "cursor": {
          "ref": "a0fea001-24b5-4817-8ae6-5727ec1b6ac1",
          "length": 282,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "dae42252-5f61-4c7f-b72f-3e3ef3e3a166"
        },
        "item": {
          "id": "0667d1f3-1330-4835-b641-443651e4af7c",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "a49afb26-4936-467c-86ad-7aa3e4b16e05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d51ed327-3fec-4800-a628-698eda1ad0fb",
        "cursor": {
          "ref": "9b76e535-0ef7-4d61-84d8-ae33ff0f131f",
          "length": 282,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "f6bcfe0f-c5b1-429d-81e0-81b4895588dc"
        },
        "item": {
          "id": "d51ed327-3fec-4800-a628-698eda1ad0fb",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "2e48115f-ee48-4489-aba3-189973526811",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1e9b2eb-8086-4f4f-98d0-4cd32859cda4",
        "cursor": {
          "ref": "31dfefaa-c6d0-4b0b-ba4f-c5572aab76db",
          "length": 282,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "850a43a9-a6f4-404a-b8e2-df1ab8cf2253"
        },
        "item": {
          "id": "a1e9b2eb-8086-4f4f-98d0-4cd32859cda4",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "63a6109a-f092-4ce2-8327-f9e6f05e27c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "833b00ec-233f-4e86-a3e5-6d5b2bf2450c",
        "cursor": {
          "ref": "6caf7784-9e9d-4969-b082-bbae9e3e8893",
          "length": 282,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "5805675f-98f8-41e2-8d57-52c98be20fc0"
        },
        "item": {
          "id": "833b00ec-233f-4e86-a3e5-6d5b2bf2450c",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "cc72c3f1-53b0-4d58-a819-0cee51e2e1f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b54c9cda-5f24-493b-86ec-7a026fe3245a",
        "cursor": {
          "ref": "e416d131-bfaf-4ece-a4e8-da5fc89a1309",
          "length": 282,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "324812db-30ef-48f6-b98f-c46c24bf8245"
        },
        "item": {
          "id": "b54c9cda-5f24-493b-86ec-7a026fe3245a",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "992314f8-cda7-4058-a125-171736fc0b13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5ecdcb5-e01a-4a3d-8b4e-48c2a944e358",
        "cursor": {
          "ref": "89bca30f-7b96-41c5-b642-f60821374947",
          "length": 282,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "8043abe3-d519-4bd8-8462-66f877f5660d"
        },
        "item": {
          "id": "f5ecdcb5-e01a-4a3d-8b4e-48c2a944e358",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "ee509a89-a577-4042-b63d-0ac253acc78b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e2c71ae-15d1-4d2d-8faf-e0a22b57636f",
        "cursor": {
          "ref": "b6f25d2f-4f55-4901-8106-b5c9024d137a",
          "length": 282,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "7a81863c-1dee-4f43-8edc-4a19d6d00cea"
        },
        "item": {
          "id": "6e2c71ae-15d1-4d2d-8faf-e0a22b57636f",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "0c932729-0c3a-41de-a835-330838a5e5e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fac806bb-cbd3-44c6-b292-4fc9d29466b2",
        "cursor": {
          "ref": "60814e08-a1be-4307-8150-14ac7048ef86",
          "length": 282,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "efba128e-a28a-4397-84cd-0a07757d2006"
        },
        "item": {
          "id": "fac806bb-cbd3-44c6-b292-4fc9d29466b2",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "e39c8f8d-9e44-4a05-a09b-e134d60c869e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa17f7dd-eb08-409a-a13c-f7584358c431",
        "cursor": {
          "ref": "300a7c23-9dc7-4b40-9109-50ec465e1f85",
          "length": 282,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "a5773fd2-3c41-448e-9bec-baff805f3ede"
        },
        "item": {
          "id": "fa17f7dd-eb08-409a-a13c-f7584358c431",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "cf89fbbe-b865-41d4-b424-8f80b6ab511b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c33f0b18-a7c8-41db-b7b2-1309b9f7e9a9",
        "cursor": {
          "ref": "f24991b1-d06b-4def-990a-20cfd16ca244",
          "length": 282,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "ce292c0d-afa6-437e-9d7b-3252b8b09ead"
        },
        "item": {
          "id": "c33f0b18-a7c8-41db-b7b2-1309b9f7e9a9",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "5bc3d267-9d96-4861-b565-451cad805c45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa8936cf-2fff-4f0e-ab02-737c88cad12e",
        "cursor": {
          "ref": "a8e446f5-2578-4737-977f-75a762601000",
          "length": 282,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "fa9f2148-e602-4a96-9d0e-16519a0388ea"
        },
        "item": {
          "id": "aa8936cf-2fff-4f0e-ab02-737c88cad12e",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "b10f8bce-aa4a-4a5e-8fc0-47b2b6d391fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7784e106-2be9-4cfc-b39f-e0aea8e0d9da",
        "cursor": {
          "ref": "4a5e42a1-91f4-47bc-bbae-11325e696960",
          "length": 282,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "3f05d2e1-7d70-4e74-a604-85e18e3ce70d"
        },
        "item": {
          "id": "7784e106-2be9-4cfc-b39f-e0aea8e0d9da",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "6a19c726-55cc-4554-ae39-826ffb210ae0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccac8827-c73d-4f0d-bcbb-138e3e14d2c7",
        "cursor": {
          "ref": "9cfaf7a9-b5c2-4bf5-9a65-4767799d42ee",
          "length": 282,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "416f5d65-b731-4a48-b2b9-40c343cc9acb"
        },
        "item": {
          "id": "ccac8827-c73d-4f0d-bcbb-138e3e14d2c7",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "4c06da20-c1d0-4ec8-8b12-15e480912d9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "315546bf-a28b-4bc7-b2c0-7e7db585da2c",
        "cursor": {
          "ref": "b591aa4a-f870-4707-bb5d-63a5ac5f0e40",
          "length": 282,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "84976543-614c-4232-a07f-3d8990c2813c"
        },
        "item": {
          "id": "315546bf-a28b-4bc7-b2c0-7e7db585da2c",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "b25de8d8-03a4-4765-b916-05b9f79fe631",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e662a9d9-1be4-4e71-bef6-9d99be6ca46e",
        "cursor": {
          "ref": "0fb2a3a5-c7d5-46b6-9e3a-cd093b4a8097",
          "length": 282,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "74387df9-43d1-4d01-b7f6-20f82588a6d1"
        },
        "item": {
          "id": "e662a9d9-1be4-4e71-bef6-9d99be6ca46e",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "30eec446-6139-4a9d-97fa-0c225265283d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ba379f0-d026-49ca-bc29-e21217c55e3d",
        "cursor": {
          "ref": "222efddf-8e7d-4082-ac9d-4ba39dd3a7d4",
          "length": 282,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "950d784f-7b16-4c35-a2aa-296d3c02dde2"
        },
        "item": {
          "id": "8ba379f0-d026-49ca-bc29-e21217c55e3d",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "8ce010b9-8f7a-482a-a1e7-36f2f2505733",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9383947f-a0b5-432e-8913-3e5ba11614f7",
        "cursor": {
          "ref": "7fa1d253-1b64-4887-ae23-c410f937c5cc",
          "length": 282,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "cfbc34ec-9e0e-4b7c-a39a-99ff782ab14c"
        },
        "item": {
          "id": "9383947f-a0b5-432e-8913-3e5ba11614f7",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "5eea26a2-2cec-49ba-ba53-c711cf091d5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e930be8-6eb5-4314-9de6-3480b528ad67",
        "cursor": {
          "ref": "bdd6ffed-91d4-43ba-a80b-b07a07aed9c3",
          "length": 282,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "89e22a8e-d617-4211-8766-cc4cd3dd45dc"
        },
        "item": {
          "id": "3e930be8-6eb5-4314-9de6-3480b528ad67",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "87beb697-81af-4c67-af52-65bf8958074d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8869cbd2-dbc1-46b7-a371-a99f1cd4402c",
        "cursor": {
          "ref": "c2154125-8573-43a0-a017-bc64c1917d2c",
          "length": 282,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "151ae01b-d1eb-45a4-b941-3230f4ef4a0f"
        },
        "item": {
          "id": "8869cbd2-dbc1-46b7-a371-a99f1cd4402c",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "34f4d409-cc89-4e0b-8e63-5cdd066a9bea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09d3df2e-6a21-466c-8e7a-ff866a4867cd",
        "cursor": {
          "ref": "2ed3fe97-6b7d-4f4e-aa57-71dbf8a73c69",
          "length": 282,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "74ba7e05-05d4-496f-baca-c874ded92d33"
        },
        "item": {
          "id": "09d3df2e-6a21-466c-8e7a-ff866a4867cd",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "9ed4fa55-7307-42f8-bf3e-ea7b67ba424a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7bcc122-85d5-48eb-a8af-ad08cf7872ed",
        "cursor": {
          "ref": "29ae876b-e6d2-47a9-88e8-29c7310de5ff",
          "length": 282,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "f9629f30-1244-43a5-acfc-d044e954da5f"
        },
        "item": {
          "id": "a7bcc122-85d5-48eb-a8af-ad08cf7872ed",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "f72b0242-e60d-4fc4-a242-f9b187ad0884",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32d2134d-4047-4934-93de-ffd9413a5361",
        "cursor": {
          "ref": "16e6499b-bfa2-4691-8b4d-cd0d1b9abbf5",
          "length": 282,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "ef51b64f-4740-4bfd-9b83-cd8eb64ff9fa"
        },
        "item": {
          "id": "32d2134d-4047-4934-93de-ffd9413a5361",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "10ed3310-5fb5-4e99-88d7-0f073851bb8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e20ab93b-a63d-45ed-8d8f-e95c18d4d7c3",
        "cursor": {
          "ref": "40205d12-0996-4bd6-a89f-304ea90b5102",
          "length": 282,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "db5d4342-8db6-41ed-a244-85a16ba10c03"
        },
        "item": {
          "id": "e20ab93b-a63d-45ed-8d8f-e95c18d4d7c3",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "7cf69501-d588-4cc0-8208-751b62a69a1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8414ccda-212f-4a3a-896f-d59d8fafd4d4",
        "cursor": {
          "ref": "30b1d13b-ddc3-4f1a-b6cb-0d079f9b6352",
          "length": 282,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "0765bea7-2f80-45d4-8620-b253ace75be2"
        },
        "item": {
          "id": "8414ccda-212f-4a3a-896f-d59d8fafd4d4",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "02eb4966-a169-474c-b1fb-4cb5d22acda1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "249b6b37-45b5-465b-a0e7-e46a19efcad3",
        "cursor": {
          "ref": "48f764c2-55b6-4860-8d50-6953bab770f5",
          "length": 282,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "dbeaa2bc-933b-4dff-a24e-b70cc426c95a"
        },
        "item": {
          "id": "249b6b37-45b5-465b-a0e7-e46a19efcad3",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "f446f1c1-6c07-41aa-8610-630b5e5381c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "553e42f4-04dd-4bf9-b514-0d7e01e01890",
        "cursor": {
          "ref": "b4dd7d31-c931-4937-8b77-539b35a414a9",
          "length": 282,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "f0ac8e0e-3d92-4653-b614-dcc410bd31ce"
        },
        "item": {
          "id": "553e42f4-04dd-4bf9-b514-0d7e01e01890",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "399d35e7-594c-4b71-b3f4-7e44f9c079df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1da2b320-3026-4a15-a5f8-dac90a2777e2",
        "cursor": {
          "ref": "9c511712-8a6c-421b-a88b-c64b4ce74d21",
          "length": 282,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "5624834e-81d4-4bd1-b17e-8c5f9be45bb5"
        },
        "item": {
          "id": "1da2b320-3026-4a15-a5f8-dac90a2777e2",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "ad9a6f56-394d-4a25-9e05-e2aef67301a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff3dca66-f3a5-4c49-b046-bfd4924e32f2",
        "cursor": {
          "ref": "6f887d33-0216-4780-82d5-69ae366358fa",
          "length": 282,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "942e3eb6-c7c2-4d2e-accd-17688277d52f"
        },
        "item": {
          "id": "ff3dca66-f3a5-4c49-b046-bfd4924e32f2",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "c48d555c-a952-4161-86bf-d859dd157d96",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 9,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53dd0af1-55b9-4e9a-bcb7-ada41dca5791",
        "cursor": {
          "ref": "06794a9f-3b53-4024-80f9-4ddf24cadb4a",
          "length": 282,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "052591c9-0255-4680-ac19-51816ba968c0"
        },
        "item": {
          "id": "53dd0af1-55b9-4e9a-bcb7-ada41dca5791",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "55b587ea-0214-44fa-a155-f484fc149f6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3825af0-c9af-48e9-bfc9-b8d5d749e8f7",
        "cursor": {
          "ref": "9ba567b0-97ab-40f5-9cee-86d365aa32b7",
          "length": 282,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "153ecd8f-bc47-4e2f-8134-d2f47e0d5184"
        },
        "item": {
          "id": "c3825af0-c9af-48e9-bfc9-b8d5d749e8f7",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "5cd49131-0185-4dfa-b64c-8e9a3f6c6001",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98a88997-0a81-4857-a49f-f60f4d907a46",
        "cursor": {
          "ref": "b8dbdeb7-2806-4c9a-ae05-77abd18ffce1",
          "length": 282,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "c1388a80-a0bc-4888-a5dd-7cd81632e4f5"
        },
        "item": {
          "id": "98a88997-0a81-4857-a49f-f60f4d907a46",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "067ec996-2e6e-4a09-a418-0c2c67bf963e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d29130c-4da1-4435-be18-e6cc4af4d47b",
        "cursor": {
          "ref": "5ae9cc9f-4630-4194-8403-7547943effa6",
          "length": 282,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "e7766ae1-1072-4773-96a0-f05056715463"
        },
        "item": {
          "id": "3d29130c-4da1-4435-be18-e6cc4af4d47b",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "8378a123-d8ec-4d37-808a-5898218523e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "616af851-a8c4-4c0e-bbcd-2b7777bff911",
        "cursor": {
          "ref": "3b30eee4-1831-4916-aea3-8dc58fb7c5fc",
          "length": 282,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "7178185f-0d38-4db4-a5d6-dd953f8bff3f"
        },
        "item": {
          "id": "616af851-a8c4-4c0e-bbcd-2b7777bff911",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "f81bd113-b812-4f3e-8d29-4be402f6d601",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03519fef-aa4d-41bb-8b31-0bd4592d629b",
        "cursor": {
          "ref": "dfea856e-ce99-420b-8809-21483a66902b",
          "length": 282,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "48c33f4c-803c-4b6d-b3ef-61f05312c27f"
        },
        "item": {
          "id": "03519fef-aa4d-41bb-8b31-0bd4592d629b",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "b57ca4b6-3392-4773-b6d2-74bd7d27b965",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b90cb47-35b7-4674-9720-ed73eefc9b60",
        "cursor": {
          "ref": "4c98b92c-2436-4b96-a5ea-7b9a511b7df9",
          "length": 282,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "344d168f-bc13-4c04-9a7f-87e19eafc14b"
        },
        "item": {
          "id": "4b90cb47-35b7-4674-9720-ed73eefc9b60",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "defa0c3e-8370-47e2-89be-764d741b1fba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7d033de-8d6a-4a3c-9194-ae2b66933dab",
        "cursor": {
          "ref": "6a17e5a6-452d-42dc-809b-b390134c8b55",
          "length": 282,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "97fd1596-f3f6-4ef7-a7a6-12e59e0d8ebe"
        },
        "item": {
          "id": "e7d033de-8d6a-4a3c-9194-ae2b66933dab",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "665691a1-f78b-4b96-9623-efc93fa17e91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76114e7a-b11e-414a-bfac-644542e374bb",
        "cursor": {
          "ref": "2a14e81f-e888-44c5-9725-a1f643809a94",
          "length": 282,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "3cd68026-ab8a-4b85-97e3-df32e9b38015"
        },
        "item": {
          "id": "76114e7a-b11e-414a-bfac-644542e374bb",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "91af6a76-f8ba-4a07-9956-2bbe0aa1c617",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e558cbf8-b505-42f2-b766-a8fbd11170c4",
        "cursor": {
          "ref": "40aa83e0-adf6-4536-92c3-c5be4a8fd971",
          "length": 282,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "84d239f3-8761-4cef-9858-748a83194cb2"
        },
        "item": {
          "id": "e558cbf8-b505-42f2-b766-a8fbd11170c4",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "f3c0be24-4b31-49b8-9246-e8a672458ef7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53bedf97-95dc-44c9-b86c-a312583a83bd",
        "cursor": {
          "ref": "52e9a830-4766-4a67-887c-2d3c7634baf8",
          "length": 282,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "bdc62eb2-9a7e-4258-8177-6e3f17b383ce"
        },
        "item": {
          "id": "53bedf97-95dc-44c9-b86c-a312583a83bd",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "87f81ce7-4b61-4a6e-ae55-f0b907cb5940",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9eb17a52-2a59-42ed-99dc-28c39c91f756",
        "cursor": {
          "ref": "588e0f20-def2-485a-95e4-bd0e9d228bbc",
          "length": 282,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "f1a4ccff-1c36-4939-9f6f-aeba8a2eec29"
        },
        "item": {
          "id": "9eb17a52-2a59-42ed-99dc-28c39c91f756",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "270cc832-72af-408d-8255-0d2090fa02eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11543b70-9d70-4b9d-a01c-52f23e096691",
        "cursor": {
          "ref": "90486866-48e8-47fb-abdc-5d2d325d6a05",
          "length": 282,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "94a071ce-fa77-4aac-a40f-a9e53d85ac2c"
        },
        "item": {
          "id": "11543b70-9d70-4b9d-a01c-52f23e096691",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "2a63430e-2e68-4929-ac2b-517364a1c3bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11bb7b46-47f9-4ffd-8d26-ed2e68e6a147",
        "cursor": {
          "ref": "65121aea-40aa-4b1f-8047-d29d4821417a",
          "length": 282,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "52b66325-8a99-4e3f-b39d-a9ca6638df5e"
        },
        "item": {
          "id": "11bb7b46-47f9-4ffd-8d26-ed2e68e6a147",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "e704d114-027e-46b3-9077-a4c196e5687f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93f008ae-88b8-499f-b589-d0751f38cebf",
        "cursor": {
          "ref": "6fe213e6-f55f-42c5-8e2d-08c3e5961726",
          "length": 282,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "6eab00c0-5cc9-4653-a281-79efdd897c14"
        },
        "item": {
          "id": "93f008ae-88b8-499f-b589-d0751f38cebf",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "cab437dc-9405-434e-b5e2-b977773d8719",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fa72f0c-2ebc-46c6-bf9d-ebde634658ca",
        "cursor": {
          "ref": "ec6d2fea-0a4d-42b2-bdd6-04f398edd682",
          "length": 282,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "258ece34-590a-485c-9cdb-b0d0afe7c4ec"
        },
        "item": {
          "id": "8fa72f0c-2ebc-46c6-bf9d-ebde634658ca",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "89fcf09b-23ef-4d51-86a6-ff9e674515e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "171632d6-0708-4838-bf39-553cfa4caac4",
        "cursor": {
          "ref": "251193c8-e83d-4688-8722-eba311f3dc92",
          "length": 282,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "0aecd778-dfd5-4825-92a8-89eb3d274475"
        },
        "item": {
          "id": "171632d6-0708-4838-bf39-553cfa4caac4",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "2d855a45-d90d-4564-9e9a-4944ca9c8dd4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37d81429-b413-40fb-9a02-d3b01dc57d26",
        "cursor": {
          "ref": "f72a738d-8df9-441a-adbe-68fff9f98760",
          "length": 282,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "c7f5f88f-d6ad-41b7-b2a5-9e4cf85ac11e"
        },
        "item": {
          "id": "37d81429-b413-40fb-9a02-d3b01dc57d26",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "d06fbaa9-514e-43b7-9d91-5d007d2d316f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed4017f3-8928-45a7-bf3a-b7523caa16db",
        "cursor": {
          "ref": "16aaac13-84f4-4e44-90b7-3ae61be3199b",
          "length": 282,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "67419e4e-147b-4489-b936-8fd99ef0b519"
        },
        "item": {
          "id": "ed4017f3-8928-45a7-bf3a-b7523caa16db",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "6e52accc-5da0-414b-bad2-3fdae625b8ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7462cb4-be79-4cc2-a36f-689cfee40a7c",
        "cursor": {
          "ref": "995fde22-0893-41f2-b134-37bc042927be",
          "length": 282,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "4a4ee82e-81e9-4cda-99ae-df631d974d3d"
        },
        "item": {
          "id": "c7462cb4-be79-4cc2-a36f-689cfee40a7c",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "0ca33af3-6e8c-4eba-9baa-a6a23a88015f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3b2edc4-f259-449e-be27-ae97e89d5680",
        "cursor": {
          "ref": "22b9e61f-5abd-4ee7-87e1-f2e1745fdd5b",
          "length": 282,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "ffebe54a-cfb3-4ac1-8018-ffffe8166d11"
        },
        "item": {
          "id": "e3b2edc4-f259-449e-be27-ae97e89d5680",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "1d05b14f-7bd5-4216-ae38-2d2b3904c9d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32369e5a-a582-4375-b4be-a1a016d2b4b4",
        "cursor": {
          "ref": "8840f6d0-bcbb-4b69-ad41-e7343189f0be",
          "length": 282,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "854668e7-da79-423a-b28f-71b9f044bbb7"
        },
        "item": {
          "id": "32369e5a-a582-4375-b4be-a1a016d2b4b4",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "2abcbb2a-b2de-4bcd-9f7b-6bb5ff844c9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13979466-6c1f-4a37-aaa4-185d361ff11c",
        "cursor": {
          "ref": "4fe87374-0a02-4054-92e1-b292ab6bed40",
          "length": 282,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "096d8118-59b2-4484-a4a2-e398529f3b60"
        },
        "item": {
          "id": "13979466-6c1f-4a37-aaa4-185d361ff11c",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "0a46b389-0f4b-4a3d-b56d-6d04a26660a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98a33876-2cbf-49cf-adaa-1f5b2fcc82ed",
        "cursor": {
          "ref": "5007ed3a-3e1b-487e-94f6-b4238010abdd",
          "length": 282,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "e9c1567f-49e9-421e-a742-74ba6fa9b667"
        },
        "item": {
          "id": "98a33876-2cbf-49cf-adaa-1f5b2fcc82ed",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "2bd1f3fe-c84e-4d96-8793-5a86ef514c82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34adeff1-951b-4b42-8cdc-1e9e33b2547c",
        "cursor": {
          "ref": "5bc80295-c7a7-45da-9dae-fe873cbf4717",
          "length": 282,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "372a2318-5463-4066-b564-f51c3a04eb0a"
        },
        "item": {
          "id": "34adeff1-951b-4b42-8cdc-1e9e33b2547c",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "6631fac0-40a2-4b96-b799-a75e00247836",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c5c2bf4-7ac3-422b-94ea-579a291c43af",
        "cursor": {
          "ref": "0041fd19-8b11-4a20-8089-0546306118b4",
          "length": 282,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "8cb08a34-1b6e-4d6c-ad73-0ab66a17a2a1"
        },
        "item": {
          "id": "8c5c2bf4-7ac3-422b-94ea-579a291c43af",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "5caa6de3-018d-4ef1-af99-b8d5d14e03dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55225289-4b6b-4880-b748-bb805415be4a",
        "cursor": {
          "ref": "f2da992b-31b5-4111-9990-167b714fad4e",
          "length": 282,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "e9b48e9c-a337-4ae6-adda-d18a0df43f29"
        },
        "item": {
          "id": "55225289-4b6b-4880-b748-bb805415be4a",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "b163e2cc-8e93-4613-b071-593a04d2d2fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00476c24-3624-4cd9-8949-db01aa26b8aa",
        "cursor": {
          "ref": "d06ab6a9-8cd5-42ff-b22d-7c7879e2c5a4",
          "length": 282,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "ac72af03-67d5-493e-a586-5bac3771f5b9"
        },
        "item": {
          "id": "00476c24-3624-4cd9-8949-db01aa26b8aa",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "792ca032-0426-4428-9c80-c35bb15d14f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20484b58-475d-4384-a93d-5ff62c1e8424",
        "cursor": {
          "ref": "b7c675d4-74fc-474d-8175-55928bdf5c4e",
          "length": 282,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "95b0379e-6b55-4aab-88ba-5a5ad022bd03"
        },
        "item": {
          "id": "20484b58-475d-4384-a93d-5ff62c1e8424",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "1ab7f171-050f-4f4e-96d9-09bc364c3a4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a738dc4-fa25-40b9-8cd7-1149f1c552ff",
        "cursor": {
          "ref": "677875aa-d05d-4cc9-af43-bcd109cc2e70",
          "length": 282,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "6bd1e7a4-b573-495f-ae83-fa6f4302f1ea"
        },
        "item": {
          "id": "6a738dc4-fa25-40b9-8cd7-1149f1c552ff",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "b4341604-40f6-49a5-9044-913044d6f9df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e75eae5b-bcbc-41f1-b925-87572bae5252",
        "cursor": {
          "ref": "a2810bd5-7f75-4851-b443-0d0b2885cc94",
          "length": 282,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "4f1b2ba4-4d45-4c46-be49-b3b072c8b65c"
        },
        "item": {
          "id": "e75eae5b-bcbc-41f1-b925-87572bae5252",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "8aa3c611-0fdd-4f20-82cd-e82d10744499",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b181ddc-496b-4456-bea3-5e06bcaad1e0",
        "cursor": {
          "ref": "115862c2-4d87-4d5c-8c21-d7cc2cab70e1",
          "length": 282,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "6cc74ba3-17ad-4202-a50a-7069e4a6e07d"
        },
        "item": {
          "id": "3b181ddc-496b-4456-bea3-5e06bcaad1e0",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "24c2351c-36f2-48e4-8886-918fa663f02e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "913e39b5-46f5-4698-8516-e6c502031027",
        "cursor": {
          "ref": "12bb689e-c113-4a81-953e-d8d8a6c26cb4",
          "length": 282,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "836977d7-224b-4a45-aac3-3701ff17f341"
        },
        "item": {
          "id": "913e39b5-46f5-4698-8516-e6c502031027",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "02d9b91e-29a3-4328-8c59-ea7fe4e73ff9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6c570e9-cab6-4faa-9d99-0fdd241e1ac1",
        "cursor": {
          "ref": "2c3dcc08-d016-45ba-84ed-fddf2055fe85",
          "length": 282,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "3ff33548-4acd-4abf-8403-8a5505b4d38a"
        },
        "item": {
          "id": "c6c570e9-cab6-4faa-9d99-0fdd241e1ac1",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "ce7a4bb1-ac54-4cec-af7e-6282672da07e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13977130-425b-4c81-a323-189766d6264c",
        "cursor": {
          "ref": "74daa266-55cf-4810-8076-16a3f5683f11",
          "length": 282,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "fbd259d6-c94d-4d3e-a13f-9c8d68d0bf9c"
        },
        "item": {
          "id": "13977130-425b-4c81-a323-189766d6264c",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "7aeca110-7387-4486-95ec-a51f0a8f03b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "610cd571-464f-45e2-bed3-077afe0e0e87",
        "cursor": {
          "ref": "be8242fb-6507-4839-ac7e-8097cf798f9c",
          "length": 282,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "a79b2512-3b7b-4452-a5b8-4e9441775886"
        },
        "item": {
          "id": "610cd571-464f-45e2-bed3-077afe0e0e87",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "248b51d1-6b75-4c4a-8cb9-ccb4e82ae92f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7005194-3155-4d46-b471-dec5a39fdbc0",
        "cursor": {
          "ref": "c81d44b7-712c-4d81-b844-f5357863f0ce",
          "length": 282,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "25197aad-c57b-42f3-86fa-7f981ca84322"
        },
        "item": {
          "id": "b7005194-3155-4d46-b471-dec5a39fdbc0",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "e3f826a4-59b2-43f9-a8d9-93ffe792848b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed6fa4a5-4574-4b62-8017-911ff925d4a6",
        "cursor": {
          "ref": "645a8b09-fbcb-4f0a-be0f-782b65ea2fce",
          "length": 282,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "3c3d7591-a2c8-4a88-bacb-93234af40cba"
        },
        "item": {
          "id": "ed6fa4a5-4574-4b62-8017-911ff925d4a6",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "ed42d9d7-2f2a-4bfc-8990-6f9cd02c8942",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 8,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66593364-6532-4947-9480-1a6abce4e0d5",
        "cursor": {
          "ref": "431a9c56-e93f-462a-8f85-14548098e6bf",
          "length": 282,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "e296b03f-7982-4edb-9bb8-b0da11a6220f"
        },
        "item": {
          "id": "66593364-6532-4947-9480-1a6abce4e0d5",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "0e071ab2-0f0b-4268-a823-770888399685",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b617a793-242a-4fe5-b21f-7ff50f8a3718",
        "cursor": {
          "ref": "a5aeb52f-e0db-46a2-9728-f8f5832c68a6",
          "length": 282,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "7d429ab2-81f7-4836-9192-3627a484ecd3"
        },
        "item": {
          "id": "b617a793-242a-4fe5-b21f-7ff50f8a3718",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "3f3421cc-7eb6-425c-b397-b143d7b0353d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84730bdd-e284-41fe-98fb-70c3e901da61",
        "cursor": {
          "ref": "3633833d-a048-4d53-bda4-bbae591b6bc0",
          "length": 282,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "e2678750-f896-4065-b7ac-8c646a7bb5fb"
        },
        "item": {
          "id": "84730bdd-e284-41fe-98fb-70c3e901da61",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "9374f883-eda5-43ad-939f-50840e7bb988",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a5ccd36-75c3-479c-a09c-67479966c2c6",
        "cursor": {
          "ref": "cac02f8d-b879-4a01-b85a-8ad018f95fdb",
          "length": 282,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "17eba4ad-1b0e-4c3d-a040-dc912ec62f16"
        },
        "item": {
          "id": "0a5ccd36-75c3-479c-a09c-67479966c2c6",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "63089dca-9b5e-489b-9c75-227434a454a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3b29d86-158f-4593-850a-7880278d133a",
        "cursor": {
          "ref": "6a7ce035-ec27-47da-b5e2-3d66b4b1a31a",
          "length": 282,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "8eb1c5f3-eba8-4bd9-a23a-65ee708d846e"
        },
        "item": {
          "id": "b3b29d86-158f-4593-850a-7880278d133a",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "14c04ef6-7dde-4cbc-9c80-492a26466a17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f8317cb-b4a6-43ab-ade9-32404b776116",
        "cursor": {
          "ref": "4e16a230-602b-4892-9970-61edb644f3db",
          "length": 282,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "daa55a8d-e403-45c7-90e6-e1f0c71967b3"
        },
        "item": {
          "id": "7f8317cb-b4a6-43ab-ade9-32404b776116",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "38ea48fe-faf4-467f-bbd5-8c465a2afad6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71ca29b2-cd90-4c4c-8bdd-8005acc36acb",
        "cursor": {
          "ref": "9c3a8539-19e5-430b-b3b0-85a3925b566d",
          "length": 282,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "618a4448-8250-4c13-a404-53803c964952"
        },
        "item": {
          "id": "71ca29b2-cd90-4c4c-8bdd-8005acc36acb",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "66e57057-f710-4d91-8886-a98d2c2a3382",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9347676-c900-427b-9c3f-8eb9ae4193af",
        "cursor": {
          "ref": "c2dc19e7-03b1-48f1-a573-15918786b75c",
          "length": 282,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "37650865-53b8-45bf-8371-4be8ef0ebc7f"
        },
        "item": {
          "id": "d9347676-c900-427b-9c3f-8eb9ae4193af",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "6f34979f-a2ff-41b5-936e-0f59e497bdec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5062b94a-b254-426c-9314-fe3ea5c40881",
        "cursor": {
          "ref": "564510a1-9b5b-4efd-8bee-64d0333a560a",
          "length": 282,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "7e96a9bb-135a-4a23-a077-3f271eed1d61"
        },
        "item": {
          "id": "5062b94a-b254-426c-9314-fe3ea5c40881",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "6427cbb3-96bb-4e9b-9781-dae2f694e8cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04b8b187-2fa3-4799-906c-bce729396f61",
        "cursor": {
          "ref": "2e265083-0c51-4527-93f5-8363afbb2dac",
          "length": 282,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "4c80e9ea-c883-4263-9ab1-ae99f8f8ceb0"
        },
        "item": {
          "id": "04b8b187-2fa3-4799-906c-bce729396f61",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "30f92989-de97-4701-a91a-7d66ea109350",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0fef7f8-4129-4ce1-933c-24cd55fac125",
        "cursor": {
          "ref": "d2f05c7e-beac-477a-8701-a7b03f2b6ee5",
          "length": 282,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "54e1c776-d740-41d4-a5fc-09007f689b44"
        },
        "item": {
          "id": "b0fef7f8-4129-4ce1-933c-24cd55fac125",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "7760e499-fa02-4251-a42c-b31f0d307a34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9848eef1-f341-4058-acf8-15cbc7b2d807",
        "cursor": {
          "ref": "911f01ca-8d11-463e-8bb7-101454edd351",
          "length": 282,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "5d028731-6e09-4316-8b50-70a157f5ffbb"
        },
        "item": {
          "id": "9848eef1-f341-4058-acf8-15cbc7b2d807",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "8908a8ca-1e0e-42d8-a009-fab14cd58d7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df116e19-4631-46a3-ad9f-ec985c25956a",
        "cursor": {
          "ref": "5febd43e-fb0a-40ca-bca0-91ad4262d8f0",
          "length": 282,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "eeb22840-7730-4d1b-b2c6-f6b5bfa62a12"
        },
        "item": {
          "id": "df116e19-4631-46a3-ad9f-ec985c25956a",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "6d5f0ec2-3730-4c74-8cf7-67f66def8ac0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64a3e2d6-765a-4547-a35d-5902fec4e322",
        "cursor": {
          "ref": "361b7f15-9df2-42ab-9e2a-97d99c7bfe9a",
          "length": 282,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "db471c6d-f979-40ac-a74c-631dd8db0abc"
        },
        "item": {
          "id": "64a3e2d6-765a-4547-a35d-5902fec4e322",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "4cabf855-255d-4ba7-9516-3b31329b95fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "721b9894-5ec6-4592-a146-901924f1f110",
        "cursor": {
          "ref": "b37be00d-ccec-4a39-a217-053b28c606f6",
          "length": 282,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "faa8e764-3e19-4041-9337-1807e7811f34"
        },
        "item": {
          "id": "721b9894-5ec6-4592-a146-901924f1f110",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "309d400a-86a4-4c67-af47-8ad2e0f7a95b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "638321c1-b10f-46d9-a9a0-7cf3a85529d5",
        "cursor": {
          "ref": "c75ac5c0-b676-4519-a3c7-bb178db5075c",
          "length": 282,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "bc715a09-6433-4fcf-9118-0ada2f26a6e6"
        },
        "item": {
          "id": "638321c1-b10f-46d9-a9a0-7cf3a85529d5",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "ba164d18-7df5-4b4d-93c4-0620fa9c367a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9051dd4-b50d-4b15-b2eb-bdfa7c08e8cf",
        "cursor": {
          "ref": "436543c2-2c7e-4ac1-b9de-42c287177f28",
          "length": 282,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "f62800e8-a468-47e5-9a63-6fa4c2c84407"
        },
        "item": {
          "id": "c9051dd4-b50d-4b15-b2eb-bdfa7c08e8cf",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "da7525d0-c327-4a09-ad73-c19d2a87dc33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad40f44f-6f01-491f-93d1-362f11fc7d75",
        "cursor": {
          "ref": "94a11446-efa2-4451-a34c-161f6d3c175b",
          "length": 282,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "be33dc08-fbac-4fa5-ba35-61a6f8f111a4"
        },
        "item": {
          "id": "ad40f44f-6f01-491f-93d1-362f11fc7d75",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "bce2971c-66a4-4c57-a057-2cd67743497c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a7c9b9e-32be-4985-ba4a-4c26e66e8313",
        "cursor": {
          "ref": "34de84d0-3b67-481d-8889-b9eb1184222f",
          "length": 282,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "a6c3a53a-01c6-4111-ac94-bffb63fe8147"
        },
        "item": {
          "id": "1a7c9b9e-32be-4985-ba4a-4c26e66e8313",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "c3e66e38-3c3d-4802-8315-ed1941621174",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc43250a-f39c-422e-99c0-f6dd10f9a99a",
        "cursor": {
          "ref": "7e6f89ce-5f2d-4e4a-b677-75c9bfe8d6b4",
          "length": 282,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "12c57b06-5981-4243-94c5-7f4981a160e7"
        },
        "item": {
          "id": "dc43250a-f39c-422e-99c0-f6dd10f9a99a",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "f014c61d-28d0-46d6-9bd0-3380a51c7b5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f9191ba-f1bf-4583-9256-6629ced81342",
        "cursor": {
          "ref": "6f31ed9b-dd0d-43dc-b4a7-95f22c54605a",
          "length": 282,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "f044ea61-abba-455a-adc9-e404f8c4b7f8"
        },
        "item": {
          "id": "5f9191ba-f1bf-4583-9256-6629ced81342",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "822ef6b9-c1b5-44ed-bde1-6783037d6119",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef74c9f6-89bc-4315-be84-a2aed2743fc6",
        "cursor": {
          "ref": "9f91c941-25a0-40ea-bd4a-531ad1f9d228",
          "length": 282,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "1b675c1e-d425-4bea-949c-d7fad912f7e7"
        },
        "item": {
          "id": "ef74c9f6-89bc-4315-be84-a2aed2743fc6",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "aa8e6e48-731b-434f-92a0-6ec915c9d97b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ed35e15-c9af-4cdd-8d72-37031090d96a",
        "cursor": {
          "ref": "61063305-3fd9-43f2-bc88-7eac99eb169f",
          "length": 282,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "bad1e37a-6d33-46af-b95c-a7a6b5fefe47"
        },
        "item": {
          "id": "1ed35e15-c9af-4cdd-8d72-37031090d96a",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "3aa374fe-277b-4cab-94c4-3a8ef52210a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0403549-f6d0-414f-9640-e68320313bce",
        "cursor": {
          "ref": "4e7634a2-c63b-4971-b202-2f3bf0a41438",
          "length": 282,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "42d49e4f-6ec3-466b-9389-b9614b796b49"
        },
        "item": {
          "id": "d0403549-f6d0-414f-9640-e68320313bce",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "696229d5-5ebc-4ea6-8574-7b09aa4d73c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae8778bb-b626-49a9-92b5-e01565d09e9b",
        "cursor": {
          "ref": "95699e3a-c595-4e98-b07d-55777d293ab1",
          "length": 282,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "d681d65c-5be4-48c5-9c55-983f0bb0bb6e"
        },
        "item": {
          "id": "ae8778bb-b626-49a9-92b5-e01565d09e9b",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "7d6dcb78-e5f3-4e99-9cad-b4aab1c202e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 291,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec1f2303-6bfb-4361-a04f-f4dc25ceb665",
        "cursor": {
          "ref": "e8b3ab24-a29b-4d0b-ab65-ad1f8aee34b3",
          "length": 282,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "bad40bfe-f4cd-47c3-8b03-da49da512efa"
        },
        "item": {
          "id": "ec1f2303-6bfb-4361-a04f-f4dc25ceb665",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "d3c7c2a0-6f7f-41cf-80eb-eaca1ee275c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2ccb8a0-f1c6-455d-a9b0-00a6d0fb04c4",
        "cursor": {
          "ref": "7f547c23-2b54-4590-adab-a0e6852b2a5d",
          "length": 282,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "ef1fb134-a4f9-41c7-8aa5-9959da39d697"
        },
        "item": {
          "id": "a2ccb8a0-f1c6-455d-a9b0-00a6d0fb04c4",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "3cd5c01b-c3f5-447c-95b2-1b2151ddf962",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b43a4a3-1973-4a42-9a2e-cdbd4d0c39d7",
        "cursor": {
          "ref": "24e47c33-1204-4c13-888f-385fddd765e7",
          "length": 282,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "5c1adea5-535d-42b8-b2a5-7d00f2bef5fa"
        },
        "item": {
          "id": "7b43a4a3-1973-4a42-9a2e-cdbd4d0c39d7",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "35f68714-1549-4499-9e43-7ff54b04a9ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5b55a27-a8c8-4193-82eb-d86994348b61",
        "cursor": {
          "ref": "bca5fd37-4ef9-42df-9056-6e3c35b64164",
          "length": 282,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "158b383a-5737-46e7-87d2-5edfcf546ce1"
        },
        "item": {
          "id": "e5b55a27-a8c8-4193-82eb-d86994348b61",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "3f288df4-4e45-49f5-9247-84d5f2e597a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 182
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23f86576-b5b3-46fb-81fb-37ef72fdf8e1",
        "cursor": {
          "ref": "ea89d999-c6ee-4f0b-9898-12fd302f3aa3",
          "length": 282,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "3eb533b6-65ca-472c-8c76-3f08f867f767"
        },
        "item": {
          "id": "23f86576-b5b3-46fb-81fb-37ef72fdf8e1",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "5a37a334-b86c-47a3-93ba-e47332907d81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "905f274a-a7fc-42ae-8ae7-8b7899b761bb",
        "cursor": {
          "ref": "fac8b9ae-d4a7-4edd-add2-0f0f8924e9a8",
          "length": 282,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "adda6aec-6e16-4272-a1ae-10154b7ee123"
        },
        "item": {
          "id": "905f274a-a7fc-42ae-8ae7-8b7899b761bb",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "e7da7c7e-6ce5-4e53-bd94-4722b3e8c002",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8b721a3-ea4e-44a7-96f5-fae6eb5b162e",
        "cursor": {
          "ref": "7387b4ef-8f50-4edf-a69f-29f313994736",
          "length": 282,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "55721e6d-2fc6-4a6c-8f8c-ef7e441b8656"
        },
        "item": {
          "id": "c8b721a3-ea4e-44a7-96f5-fae6eb5b162e",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "ebaa6ab8-9ec1-4055-8dc0-9994969c4f37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfadf17f-2e2f-426b-8752-be786d57d51d",
        "cursor": {
          "ref": "cf8507d7-87cf-4bfd-abb3-ceb1272d9e5a",
          "length": 282,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "441f6e22-d33d-47b9-a74f-662c27e88535"
        },
        "item": {
          "id": "bfadf17f-2e2f-426b-8752-be786d57d51d",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "2915a026-50e1-4e21-80ff-49127dab292f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57e5fbdc-f693-4c88-9da6-684a1b670c0a",
        "cursor": {
          "ref": "33a6e9cd-a147-46b2-8330-0d6a67fab923",
          "length": 282,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "77da289a-6c2f-4e74-bbb5-c82762dea63b"
        },
        "item": {
          "id": "57e5fbdc-f693-4c88-9da6-684a1b670c0a",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "4ffb2891-0cae-486e-aeb1-f0062740c81b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1130f35-08db-4a8b-9032-cbdd2858a49f",
        "cursor": {
          "ref": "66d6738f-b591-4b54-898c-c8d77158f07f",
          "length": 282,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "92224499-15c7-48f2-9550-e53f8f644e4a"
        },
        "item": {
          "id": "e1130f35-08db-4a8b-9032-cbdd2858a49f",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "31d49b43-13ca-4612-bd2d-80468ff27bc1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2123a4ae-b8cb-4eb8-9df7-75fd575a341c",
        "cursor": {
          "ref": "e335ab45-b566-4a00-8dac-eaba1163d76d",
          "length": 282,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "1eb8d451-9d55-4567-96c9-871cfda2a5c5"
        },
        "item": {
          "id": "2123a4ae-b8cb-4eb8-9df7-75fd575a341c",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "93762a94-91dc-4dcc-8827-3f7eb4cadc17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d7177fe-a1e2-451e-9e13-c7b79225479c",
        "cursor": {
          "ref": "d92febbd-96b9-4a66-a800-84a4730cf9f3",
          "length": 282,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "3eda54a6-a22e-4348-b3d6-7845cfdcba57"
        },
        "item": {
          "id": "6d7177fe-a1e2-451e-9e13-c7b79225479c",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "5a5deba9-4eff-4865-9c2b-4637cd005eae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "478fbdb6-1151-4273-a86f-f3f8e144ddd2",
        "cursor": {
          "ref": "f117246e-dd56-4486-bc89-26865394c5cc",
          "length": 282,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "96861f38-b4ee-4ee9-8940-42fe03d312c1"
        },
        "item": {
          "id": "478fbdb6-1151-4273-a86f-f3f8e144ddd2",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "947e2f52-6e84-4f16-8ae2-d85828d3418b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c93f311-945a-4d68-b59e-46cb23987041",
        "cursor": {
          "ref": "680ca48b-a51b-4cb1-ae52-341869fe8103",
          "length": 282,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "09bedb80-552c-49f7-a602-082fb7746468"
        },
        "item": {
          "id": "7c93f311-945a-4d68-b59e-46cb23987041",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "4f27f0a3-ee2d-4489-aa15-e1c171a3eecf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bee0a0b8-2ba7-436d-9dc5-df423b502f8d",
        "cursor": {
          "ref": "058bc656-266b-43f3-94a2-bc59cd8772df",
          "length": 282,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "5d352ddd-0022-42dd-a826-a3c76f94aa7b"
        },
        "item": {
          "id": "bee0a0b8-2ba7-436d-9dc5-df423b502f8d",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "baf0fe02-2475-4713-b04c-bd6c851c23c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eeae7126-2031-4f76-bc2a-479235ebe175",
        "cursor": {
          "ref": "76d6da85-f851-4050-9da6-5eed69d1ed72",
          "length": 282,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "c8a72214-8a87-4e20-a9b9-67b041eb29b9"
        },
        "item": {
          "id": "eeae7126-2031-4f76-bc2a-479235ebe175",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "5754d04a-c53e-488f-8534-04dfe8719c60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "effd4669-15e3-49b0-9471-234827293217",
        "cursor": {
          "ref": "bc2a38f7-5e4f-4756-b8e9-5be9f9519fe0",
          "length": 282,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "600e492f-a490-4bfb-b9d9-747b35a2ab74"
        },
        "item": {
          "id": "effd4669-15e3-49b0-9471-234827293217",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "cf051b7a-582b-4610-b2e7-e5e8eec8c1d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc8bd57f-f650-4518-8726-668d91d24212",
        "cursor": {
          "ref": "07280af4-3414-4c5a-9217-8e9b5646c794",
          "length": 282,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "7fb75c9c-42ce-4ce3-a80e-45b8e3418658"
        },
        "item": {
          "id": "bc8bd57f-f650-4518-8726-668d91d24212",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "c1e43dfe-6ff5-4b04-8f51-fd54b270bfd2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "083b234a-58a0-484a-ac4b-0ff530c3023e",
        "cursor": {
          "ref": "83cb511c-99c4-4191-ba38-63f018235937",
          "length": 282,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "b1b3faf9-0d59-4771-8b9a-a800cfe1e605"
        },
        "item": {
          "id": "083b234a-58a0-484a-ac4b-0ff530c3023e",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "23109657-ede7-45ff-9b81-e732a2e78386",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61f71f05-919c-43e5-9300-5048c830f8e1",
        "cursor": {
          "ref": "b7c502f7-5834-4094-8164-4836f2f75b52",
          "length": 282,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "836f6f2e-6c4d-498e-8564-89467924017c"
        },
        "item": {
          "id": "61f71f05-919c-43e5-9300-5048c830f8e1",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "a073ed32-9652-4037-8b6a-6c95cc2a179b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ec34c67-2de2-45fb-acfe-da6eb2de2897",
        "cursor": {
          "ref": "12e82954-6691-4e09-8e95-744669c9cb1e",
          "length": 282,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "1c769dfb-1d29-4f98-b2cb-5f1a0af94ae6"
        },
        "item": {
          "id": "3ec34c67-2de2-45fb-acfe-da6eb2de2897",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "31726a3f-9454-4b3f-ac44-5b1a4bc7b893",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13cb72e4-7610-423b-92ae-c8ce4c425d23",
        "cursor": {
          "ref": "e1033164-56e8-4d38-82ea-9ba032ad11e3",
          "length": 282,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "5143041e-0517-449e-95c1-0999d69ccac3"
        },
        "item": {
          "id": "13cb72e4-7610-423b-92ae-c8ce4c425d23",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "7b061fde-dced-4cc5-9202-a171f3d7d572",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "667cfc3e-e659-4aab-ac2f-190dd3833458",
        "cursor": {
          "ref": "07272862-e936-451c-a7b7-b07c2becc7f7",
          "length": 282,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "6ea5ecad-f20b-4d72-88b0-a23a779768e5"
        },
        "item": {
          "id": "667cfc3e-e659-4aab-ac2f-190dd3833458",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "9a59ddd0-f5f6-44aa-93be-b9cb06672453",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "090bb85d-6a5b-4bd1-967f-7f325b1d226e",
        "cursor": {
          "ref": "c339feb0-02dc-4dbe-83e0-f982465655e8",
          "length": 282,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "39a88a47-0f1c-49db-8c41-985c7bbf7aa5"
        },
        "item": {
          "id": "090bb85d-6a5b-4bd1-967f-7f325b1d226e",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "e427c99e-fca1-4d5f-bc3c-229b342ac07a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4faf6328-2f2d-441f-8e0d-0442c6a83f6d",
        "cursor": {
          "ref": "88aec955-9cf7-47cc-ab81-be35c2c1a125",
          "length": 282,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "762d15dd-e407-4494-8355-aee3ebd7a125"
        },
        "item": {
          "id": "4faf6328-2f2d-441f-8e0d-0442c6a83f6d",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "018d5641-c3d6-4e4f-88d8-99488d5729c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf6d093b-5e93-4236-afba-4c4cb0374c2d",
        "cursor": {
          "ref": "2098c076-9761-4be3-905e-8371daacd2d2",
          "length": 282,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "dec3d23a-89e5-418c-b788-9f17c51b14de"
        },
        "item": {
          "id": "cf6d093b-5e93-4236-afba-4c4cb0374c2d",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "4e1d2689-a5fe-43e4-92b3-b57a1bc22b6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fd7d10e-ef7c-491e-8767-0859312ad6bf",
        "cursor": {
          "ref": "5e8e7d65-b657-4fe8-a87b-a82db4909fac",
          "length": 282,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "fffe93a0-6a0d-4178-a168-f3d9bb29625e"
        },
        "item": {
          "id": "2fd7d10e-ef7c-491e-8767-0859312ad6bf",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "77cfa2ad-fa30-4655-890f-44bb3dbd2457",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c347dc1f-75a4-4a35-bd15-6dbc60ae07eb",
        "cursor": {
          "ref": "5f07c721-01db-4f50-bb53-21de115eb81e",
          "length": 282,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "27bbe091-8b25-4d2e-bbcd-fde7fd11d1dc"
        },
        "item": {
          "id": "c347dc1f-75a4-4a35-bd15-6dbc60ae07eb",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "ebdcbb73-df21-49bf-875d-cc41c13d584a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1383cf27-a66c-4f56-98f1-48c058eea759",
        "cursor": {
          "ref": "8e9351f6-bc03-45ef-b2dc-ad810b16fb90",
          "length": 282,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "9eb395d8-bbbe-44a9-86ce-c6250534a760"
        },
        "item": {
          "id": "1383cf27-a66c-4f56-98f1-48c058eea759",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "3747f0d0-3fed-437f-ac96-740096be4b66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "230f1d52-5638-459d-971d-f6011cf6766d",
        "cursor": {
          "ref": "f41ef65d-578d-4c42-8bcf-4b5fedbbbbdd",
          "length": 282,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "bc410d7b-8947-4abe-9201-b105a5d0c203"
        },
        "item": {
          "id": "230f1d52-5638-459d-971d-f6011cf6766d",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "e452d58c-7818-406d-93c6-a1cd96f7597d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57e151a8-aa0b-4474-914e-670272568a3b",
        "cursor": {
          "ref": "d26882ad-5155-4e50-9915-6f51b900b20c",
          "length": 282,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "8dc6beae-8004-44be-a921-d6bf05dea95d"
        },
        "item": {
          "id": "57e151a8-aa0b-4474-914e-670272568a3b",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "048fb30c-c23d-4d1c-be0e-e90a7c0920a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e9c6ea1-ff15-45e4-b9c4-7360c3423bb5",
        "cursor": {
          "ref": "6a24d06f-4917-42cb-8030-bb48c52a939f",
          "length": 282,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "43eb8265-6d91-49d0-9d9a-4c812dc740ac"
        },
        "item": {
          "id": "8e9c6ea1-ff15-45e4-b9c4-7360c3423bb5",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "704f4d69-c5bf-4d7e-ab08-74487e7e8776",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6141cd19-21a9-466b-aa50-ef07e879affb",
        "cursor": {
          "ref": "d40b3207-3e0e-4a23-8a80-53471f08b0e0",
          "length": 282,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "28e388b4-6fbd-4bb1-bdb1-3be609ce8d31"
        },
        "item": {
          "id": "6141cd19-21a9-466b-aa50-ef07e879affb",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "3a5968ba-f946-41ec-b985-ad44ba64b107",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02d010b0-6476-489b-b09b-9acae7ab3e2a",
        "cursor": {
          "ref": "08b41c32-5543-4286-91d8-eaa72b1e07ad",
          "length": 282,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "7a37f08b-fdbf-45ab-be20-245e50a64594"
        },
        "item": {
          "id": "02d010b0-6476-489b-b09b-9acae7ab3e2a",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "2fb0db63-af90-4453-8c89-92c98acf5c34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80c53d06-594a-4ca0-9c47-7efe5be20c60",
        "cursor": {
          "ref": "f375dc19-9654-4833-b627-8bb2e4eca37d",
          "length": 282,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "6340ae7e-a3b7-4dc9-9319-1903f71fd9fe"
        },
        "item": {
          "id": "80c53d06-594a-4ca0-9c47-7efe5be20c60",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "af7a56c8-e531-45b0-9c76-3e8fee051523",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c03eb9f4-b990-430f-bbf8-3164283a5818",
        "cursor": {
          "ref": "a68b3ae8-93ee-4200-8f11-a07ea2dad086",
          "length": 282,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "0a0e104e-1680-4c1a-bd25-fb33cf5cc8d6"
        },
        "item": {
          "id": "c03eb9f4-b990-430f-bbf8-3164283a5818",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "715c305a-a30b-4b68-a171-42dbafd17af8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8975308-c552-4f42-a2de-59b0f0b6bc0f",
        "cursor": {
          "ref": "879fbed0-09f4-41d9-9b2a-e4a0f3bafaea",
          "length": 282,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "fdfb9373-b128-412d-9de3-f4d6f17cdc39"
        },
        "item": {
          "id": "a8975308-c552-4f42-a2de-59b0f0b6bc0f",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "d668da6e-c9e5-46e5-86e2-1af3c1da2041",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30cc4563-40d1-4b42-8152-97db552b7324",
        "cursor": {
          "ref": "bff554a1-53c8-49b9-a212-499862e28a15",
          "length": 282,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "e5c01c34-1bbf-4102-ade9-3b7766881d27"
        },
        "item": {
          "id": "30cc4563-40d1-4b42-8152-97db552b7324",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "ae587f5e-c5fc-43bd-9ff9-5527a3ded6a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d49d934d-619a-4249-8bf8-e3cf03e5e3f8",
        "cursor": {
          "ref": "c194135f-6d62-49b0-9b11-35f359205206",
          "length": 282,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "53efd08a-7a9f-4b22-8b4a-24f8ce5331e9"
        },
        "item": {
          "id": "d49d934d-619a-4249-8bf8-e3cf03e5e3f8",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "32319977-dc68-4ee4-ade7-5345e96a8826",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59d0ce6f-0fec-4131-845f-08ddb3dc4ed7",
        "cursor": {
          "ref": "4c29b6ba-1282-477c-98b0-6f7dddb5e841",
          "length": 282,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "38b5b59c-48cb-4d41-b147-59f08adbd42f"
        },
        "item": {
          "id": "59d0ce6f-0fec-4131-845f-08ddb3dc4ed7",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "97c5a816-9bb4-429f-bbac-e353c773380a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a21619e-4b51-40de-bed9-88c46dfa9e9e",
        "cursor": {
          "ref": "dae7d91a-363a-4a53-8a99-ab387674c574",
          "length": 282,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "230f8ac2-3cb6-4965-9234-ee491b52249e"
        },
        "item": {
          "id": "7a21619e-4b51-40de-bed9-88c46dfa9e9e",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "3ef12978-3cb5-437c-9a64-3e8a87fd14f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1cc581dc-f94b-4b5e-b8a1-8497297fbe68",
        "cursor": {
          "ref": "3ea8f9f4-c054-4d92-a38a-03b794d23291",
          "length": 282,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "0dedcdee-6e5b-44c3-84c7-97e5dcda3e69"
        },
        "item": {
          "id": "1cc581dc-f94b-4b5e-b8a1-8497297fbe68",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "281b832c-37e2-4fe6-8d98-2ef15cac241e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a97b861-e5fa-4059-bcea-263eef1efcd7",
        "cursor": {
          "ref": "04c33246-ce55-48d0-aaaa-ec21c07e10fd",
          "length": 282,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "0553f6d2-7002-4d5b-be41-912bc6733733"
        },
        "item": {
          "id": "5a97b861-e5fa-4059-bcea-263eef1efcd7",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "e87fb52c-a29b-4c1f-8030-93fac5a87fa4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c80db9c-4c3a-4e20-9d35-0d35a2159a21",
        "cursor": {
          "ref": "831f6067-d003-4f1d-987d-d72bb69ccc76",
          "length": 282,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "018a04bd-06e8-4f58-81b7-424411eab52e"
        },
        "item": {
          "id": "9c80db9c-4c3a-4e20-9d35-0d35a2159a21",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "1800e680-6676-460c-a28e-9b244351ae79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "505629e0-581d-4180-9f6f-e7bbb12dc18b",
        "cursor": {
          "ref": "807426f1-8998-4e9e-8dbc-41693517c454",
          "length": 282,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "bf76dab3-bd3c-4e85-aed1-cc89b49949a9"
        },
        "item": {
          "id": "505629e0-581d-4180-9f6f-e7bbb12dc18b",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "60adf2eb-cd46-4e50-88df-79549e1238e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8a89379-05a0-4aa4-a38e-32545a5a7900",
        "cursor": {
          "ref": "387e5b03-a6ab-4128-b210-a847f5b74b7b",
          "length": 282,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "a0a10566-f095-453a-b010-a48994af32e5"
        },
        "item": {
          "id": "e8a89379-05a0-4aa4-a38e-32545a5a7900",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "551583c9-50c0-44e2-bc31-98de2490acdc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c22240b-8e50-451a-ba3c-abf9f93a4338",
        "cursor": {
          "ref": "1ea8d374-1a99-4cf3-aea6-fc277b422ee7",
          "length": 282,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "e212c3d4-aec8-49c1-ac50-c3f1220e6d4a"
        },
        "item": {
          "id": "7c22240b-8e50-451a-ba3c-abf9f93a4338",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "53757785-fcf5-47e4-acad-cc8e52ecfe9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c9a0ae1-7ae1-4358-8c60-14610f390162",
        "cursor": {
          "ref": "94610a95-65e6-422f-a364-db3edeb0d1c9",
          "length": 282,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "00054779-dd56-475d-9eb5-d90464ece4a3"
        },
        "item": {
          "id": "2c9a0ae1-7ae1-4358-8c60-14610f390162",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "836e6ddc-f299-4dec-b894-1a08cdafc043",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77298d8e-43f6-472e-888b-63d80b8072fc",
        "cursor": {
          "ref": "ecf24280-4764-442d-b90e-41e6a350f938",
          "length": 282,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "2269908f-f810-44a9-a71f-55ace1791f83"
        },
        "item": {
          "id": "77298d8e-43f6-472e-888b-63d80b8072fc",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "fb66aca9-d491-4e0a-85d8-7ee8a7738903",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5db85e8-3ad9-4f87-ad3f-564cfb9d579d",
        "cursor": {
          "ref": "059d18d2-b8c9-4a9b-b17c-ca2cc3f68095",
          "length": 282,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "b498bd19-3b25-47c6-ac4c-c755f0524757"
        },
        "item": {
          "id": "c5db85e8-3ad9-4f87-ad3f-564cfb9d579d",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "2c46ba83-b4da-4315-a38c-a18b3ffea8ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f66642eb-0fa4-4de5-8a86-265db3e2ed28",
        "cursor": {
          "ref": "fca456ea-90dd-44d9-91bf-721310a32b0d",
          "length": 282,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "6f73d73f-c219-4dc5-8199-a406461f863b"
        },
        "item": {
          "id": "f66642eb-0fa4-4de5-8a86-265db3e2ed28",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "68141afd-59a2-4006-a69e-1791314be845",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "264f0faf-0819-4cb2-9c32-f45983c1d41f",
        "cursor": {
          "ref": "7c1e410b-affa-407b-b826-311ec07fa918",
          "length": 282,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "dfc5134a-3961-4f90-82d0-08024e873acf"
        },
        "item": {
          "id": "264f0faf-0819-4cb2-9c32-f45983c1d41f",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "9d718eae-402b-44a2-8f9d-1e8022be9709",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5637ee71-51dd-472a-80bd-f4e0fded70d4",
        "cursor": {
          "ref": "7d335176-aa23-4484-82b5-909e58ee7446",
          "length": 282,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "5c6a4489-d593-4f67-a5a9-a4b964bb8290"
        },
        "item": {
          "id": "5637ee71-51dd-472a-80bd-f4e0fded70d4",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "72f9df40-74ea-4068-8263-ff153a7071dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88c52fce-e31a-43d7-aba2-64146111c395",
        "cursor": {
          "ref": "75153f03-ea24-4519-adbb-344039f65cb6",
          "length": 282,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "bd9dc2f2-839b-4b5b-8f18-5b18973425e4"
        },
        "item": {
          "id": "88c52fce-e31a-43d7-aba2-64146111c395",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "f03ff04e-4885-4820-a52e-f0b59e0c2b6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bb9d86b-efb8-4dc9-9828-209077078252",
        "cursor": {
          "ref": "02cebc6a-4cdf-4511-b40a-b83ddf2e285c",
          "length": 282,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "e930209f-9ea0-4818-b62d-1474072f018c"
        },
        "item": {
          "id": "9bb9d86b-efb8-4dc9-9828-209077078252",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "bd269f23-ce9a-462a-8fb3-bf3547739bc6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2aba3493-c3a8-46f5-8523-482f2507ef5f",
        "cursor": {
          "ref": "08574b51-18f8-4a6e-b3b5-fd0f319dd60e",
          "length": 282,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "533f7b27-da8b-49a5-84dd-9a31909eeefd"
        },
        "item": {
          "id": "2aba3493-c3a8-46f5-8523-482f2507ef5f",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "eb302366-52aa-4754-91c3-db04d7c1e9ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51c7263f-9412-4dbc-b544-07e52070d0a5",
        "cursor": {
          "ref": "17b86de3-fab6-40ea-b464-a057af8a4079",
          "length": 282,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "60880637-d5b6-4243-8770-69df3b2492a4"
        },
        "item": {
          "id": "51c7263f-9412-4dbc-b544-07e52070d0a5",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "bffd15f3-1b06-41e9-8acd-7909b233a3a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab97a02f-8d55-4f7f-8c0a-f690425d21a4",
        "cursor": {
          "ref": "9dd320a2-d2ce-4483-b283-164efc10dd57",
          "length": 282,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "1d19b7ea-aa51-4e0a-82c2-35aee1539357"
        },
        "item": {
          "id": "ab97a02f-8d55-4f7f-8c0a-f690425d21a4",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "99fe3f1b-1297-4edd-8e54-e2860ec0f2fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b90bebd5-d17c-43c2-b429-85a905ab5f90",
        "cursor": {
          "ref": "55f0832d-74da-4b45-905c-3f4056cfb245",
          "length": 282,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "504aaa64-5bfb-4b2a-a3f9-f52f80294595"
        },
        "item": {
          "id": "b90bebd5-d17c-43c2-b429-85a905ab5f90",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "7d4e42da-70b1-4a19-a4d0-718fcb992981",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6964a2d8-e458-4ccf-9e75-ff8e7f2fb11d",
        "cursor": {
          "ref": "9760e6ce-fdae-4aac-b221-880241b99760",
          "length": 282,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "20a01f8e-3003-408c-bf1e-87a4821c05f2"
        },
        "item": {
          "id": "6964a2d8-e458-4ccf-9e75-ff8e7f2fb11d",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "89ffa2fd-c634-425b-9e42-897ff543614e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23fd65d6-4acd-4bb8-b7e6-7fc6c15ebffb",
        "cursor": {
          "ref": "7deecb82-4832-48e1-bd85-69cfeeeb8649",
          "length": 282,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "a5518851-6420-4a0c-98e1-07ee9770c37b"
        },
        "item": {
          "id": "23fd65d6-4acd-4bb8-b7e6-7fc6c15ebffb",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "ce3418fe-4ca8-4776-ae00-9ddf6d41d4df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d99b5eec-40a1-45e8-a410-0f246240710d",
        "cursor": {
          "ref": "3192a727-f1a4-4b7a-afed-b8a67e6b9b10",
          "length": 282,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "11b9e721-882d-4f63-9ab0-e26ab76fc4e6"
        },
        "item": {
          "id": "d99b5eec-40a1-45e8-a410-0f246240710d",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "dac552ac-a818-4ec3-969b-45c4bf951f33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac3485b1-72b5-4025-985b-322658e4cc91",
        "cursor": {
          "ref": "07f5db26-78d2-4801-93e1-d7a630164b12",
          "length": 282,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "ebe5c452-b32d-44d1-aadc-81a50aaaa71d"
        },
        "item": {
          "id": "ac3485b1-72b5-4025-985b-322658e4cc91",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "be263ef6-196e-4a1f-993d-f1507ca33879",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85b4d689-f36f-41b4-8ef4-7aa053083033",
        "cursor": {
          "ref": "775cea05-87ba-44e7-993d-0e14edb59887",
          "length": 282,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "f0e602cc-e176-4a8a-aea5-bef85cbc63e0"
        },
        "item": {
          "id": "85b4d689-f36f-41b4-8ef4-7aa053083033",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "160e4b13-4e98-4c68-9bbd-ecb24adafbd9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b9d3121-ca3c-458b-aa8b-b0802a832c2b",
        "cursor": {
          "ref": "3527fa6b-7b2c-4fc7-a3bb-d233aa4a23bf",
          "length": 282,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "ad01e43d-065b-4dbb-acc3-6dd729e0987b"
        },
        "item": {
          "id": "2b9d3121-ca3c-458b-aa8b-b0802a832c2b",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "76f3c658-2788-4fa6-bb5b-06cb3f5c8ed2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1477125e-0500-4063-adb3-353bf678c159",
        "cursor": {
          "ref": "25c2ce7c-cb0a-4bbd-92b0-29dc92a979dc",
          "length": 282,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "e84b01f5-2fcf-45a0-822f-1c6de2a633fa"
        },
        "item": {
          "id": "1477125e-0500-4063-adb3-353bf678c159",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "af4a3720-3399-42fc-b28d-2bfc39b57745",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ea46012-53dc-4c12-bb03-809336d26280",
        "cursor": {
          "ref": "94f394cb-009e-4e24-b8ec-6b3e6e48f341",
          "length": 282,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "ed351c8a-f8d6-419a-b53e-e88d3d9df643"
        },
        "item": {
          "id": "0ea46012-53dc-4c12-bb03-809336d26280",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "5e24ac4d-da78-4cca-8009-cbdf15b3a27a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3320a065-6a0d-45f3-92a2-5a5424a4bdfa",
        "cursor": {
          "ref": "e6bd1497-fb0f-4b04-a35c-559e13040481",
          "length": 282,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "ae23f8c8-2d90-4957-8494-80c582499ffb"
        },
        "item": {
          "id": "3320a065-6a0d-45f3-92a2-5a5424a4bdfa",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "3d412b03-24d0-4732-ac49-c4fe148e9007",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba886572-0f3b-444e-80a2-5aa312efc9ce",
        "cursor": {
          "ref": "dcbd8394-ecd8-4080-b918-e2e8366f2e17",
          "length": 282,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "2db90f25-1e4d-489c-84f3-e07b30bc9448"
        },
        "item": {
          "id": "ba886572-0f3b-444e-80a2-5aa312efc9ce",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "55e56cfc-1004-45ab-97fd-0f55a84dc863",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40c3422a-2275-4224-a679-80946824184c",
        "cursor": {
          "ref": "a7308d8b-f612-4d84-8b67-7c346dc6d368",
          "length": 282,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "efc7f185-dc63-4a75-84c2-53ac5df5d11d"
        },
        "item": {
          "id": "40c3422a-2275-4224-a679-80946824184c",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "c21161fb-fc0a-4f58-8a0b-2785dc052cb4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78534929-23be-41b7-86fd-00e84c3f0335",
        "cursor": {
          "ref": "4b9bc87c-07f0-490e-b759-f640847e788a",
          "length": 282,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "cfa1cbe3-4f44-45d2-a9a9-b8c45de5f965"
        },
        "item": {
          "id": "78534929-23be-41b7-86fd-00e84c3f0335",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "d5d5d838-e8dd-4549-b313-da701b1f3078",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc3364d1-0a4d-49bd-bd53-17f49c2d7c2f",
        "cursor": {
          "ref": "8caaec21-107a-47e3-a833-29a552380460",
          "length": 282,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "c37a0278-008c-48d5-a5c0-2fbe6835db27"
        },
        "item": {
          "id": "fc3364d1-0a4d-49bd-bd53-17f49c2d7c2f",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "76e23e2d-fa3e-453a-801f-92d7b5e6279f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39bac4ca-2094-4a85-9f6b-abefb32276b1",
        "cursor": {
          "ref": "edd7c8db-37bf-4d25-a5e1-579a89bae2ed",
          "length": 282,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "0339ee6f-9620-4661-8d0c-2695ed779596"
        },
        "item": {
          "id": "39bac4ca-2094-4a85-9f6b-abefb32276b1",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "be0c165f-cd7e-423e-b353-d3c1d1cb5358",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 8,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f3c13fb-e083-4284-919c-c60e008f1e53",
        "cursor": {
          "ref": "2ed48888-af95-4b05-9290-be02a635a280",
          "length": 282,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "389e507b-f8f2-4f04-b1e1-3dccfe0baa0b"
        },
        "item": {
          "id": "5f3c13fb-e083-4284-919c-c60e008f1e53",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "a31a2b04-5d35-40c8-9e2d-5275db9b6340",
          "status": "OK",
          "code": 200,
          "responseTime": 9,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "339e2f96-c79f-4e14-86b7-42fa9fdf8238",
        "cursor": {
          "ref": "e4f0a377-8a69-4e46-919e-5e0325c88319",
          "length": 282,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "d1c28956-b8e9-487a-b4bc-ba8232545e81"
        },
        "item": {
          "id": "339e2f96-c79f-4e14-86b7-42fa9fdf8238",
          "name": "credentials_verify"
        },
        "response": {
          "id": "344c0181-095b-4c4d-9216-7d6f9e16332a",
          "status": "OK",
          "code": 200,
          "responseTime": 24,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "20c86ec3-2018-4572-8c30-c324d80aa4e1",
        "cursor": {
          "ref": "4d9ba6e8-37ac-4ab9-8924-609c3711817b",
          "length": 282,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "89b0a952-d0ac-418b-9f1d-343d3cac7250"
        },
        "item": {
          "id": "20c86ec3-2018-4572-8c30-c324d80aa4e1",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "ae095013-bba1-4212-b508-e47a1acd809a",
          "status": "OK",
          "code": 200,
          "responseTime": 24,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fbd465f-9384-4c72-8213-974e566a308a",
        "cursor": {
          "ref": "b357c8ea-f89e-486d-a724-8aee8d2ae017",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "438a33ce-1f6c-4762-ad79-9f322d834452"
        },
        "item": {
          "id": "2fbd465f-9384-4c72-8213-974e566a308a",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "72f11905-7a75-4966-9e81-27cc6335e8e6",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 8,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fbd465f-9384-4c72-8213-974e566a308a",
        "cursor": {
          "ref": "b357c8ea-f89e-486d-a724-8aee8d2ae017",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "438a33ce-1f6c-4762-ad79-9f322d834452"
        },
        "item": {
          "id": "2fbd465f-9384-4c72-8213-974e566a308a",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "72f11905-7a75-4966-9e81-27cc6335e8e6",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 8,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ecf2f0d-a860-48fe-afae-2d330e764aa7",
        "cursor": {
          "ref": "9816f7ba-3285-41d3-bf7d-c80aeecb2c51",
          "length": 282,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "a9b51530-5e62-47e6-896d-a9f4975d0607"
        },
        "item": {
          "id": "5ecf2f0d-a860-48fe-afae-2d330e764aa7",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "cbbaac50-dbd6-41af-9731-7e3c474bc3c1",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 8,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67f3fc09-2b44-412d-8db1-080936b372bc",
        "cursor": {
          "ref": "d7013d78-1373-491e-b335-6a29fd5e63c0",
          "length": 282,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "3d7a5937-880c-4ab4-813a-9d1ac7eec275"
        },
        "item": {
          "id": "67f3fc09-2b44-412d-8db1-080936b372bc",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "7dcbf2f6-98ee-4acf-8b7f-57394f12556b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 8,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}