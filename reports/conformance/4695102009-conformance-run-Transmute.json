{
  "collection": {
    "info": {
      "_postman_id": "a8035051-bb5b-4670-abe3-cfb96bc141e9",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "1d19fb9b-a2fe-4717-afd5-4c20d22b8b3a",
        "name": "Clear Cache",
        "item": [
          {
            "id": "e1c60b62-f9c5-4665-ab9d-e166b97ea010",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "3ce46bd0-c5da-40b5-bc89-b113fec5b6f7",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "887cc299-2484-41fb-937e-e7b9f0d1ab77"
                }
              }
            ]
          },
          {
            "id": "e8e3dc42-0c61-4818-b8df-64e997854c8e",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "8ab369fb-18c9-4fa8-ac3a-85e9d685ff8a",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "0b088f0f-693f-4f42-ab7c-f8b4f301e922"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "64b4cba8-f39e-4cbe-9a7b-c385e8ad6b75",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "0794b5e1-8c53-4d61-832e-8d46e15d624d",
            "name": "Positive Testing",
            "item": [
              {
                "id": "e1c2844c-70ca-43f9-991e-5ec37444ac2e",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "10a406ee-5cb0-4276-aa47-a7b168b4b75c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "aa4c524d-8b35-44fd-bf94-8bd0b2cbcbf3"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "0a36c4b9-29aa-4d1e-bcb6-7406377347fa",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "3b6609a8-51ab-482d-b2d6-1f413e8f0150"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "82f8b459-7587-4ce0-b0b4-37dee85a1813",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "b75627a8-56b0-4712-8586-1be8dcbb6d5e"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3298571d-bac7-42e5-aac9-4cafdad8a4c2",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "07695381-0a3d-459b-8f47-9be304953889"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "014bb0d0-9f68-437f-ab45-65421bed89fd",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c0d651cb-bc00-4fb8-99b5-6e4d386d4979"
            }
          }
        ]
      },
      {
        "id": "9f9986ee-af9a-48a0-8f4b-0c099cfa05c7",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "2a03f6c2-ac2d-4d4d-9d11-b3e3d4cfd720",
            "name": "Negative Testing",
            "item": [
              {
                "id": "afc12701-ef0a-43bf-8631-d803b3639ca4",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "4ab070ef-9248-49ce-be16-347038e2aa27",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d0b5825-680a-441c-9285-cd784d5c25f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c3c9e889-abcd-4054-a0cc-45242d420dfb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f500f79-33f0-42b9-ba14-6ca264105fb4",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ab08ba3-0ce8-4198-80c7-4ac1a98edd0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d99487cf-a77f-4e6b-9190-f21612bc406c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6cbabea1-b140-45d8-9438-627cf1535618",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aba5685e-0b56-47f1-9281-b3f5fab029f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5659adf0-521b-45bf-92ab-f19efe43ed11"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "447bd375-9370-46d8-9c26-2a181c19991a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "36b2c242-35d4-4ecc-ade7-8df8164e3977",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c00b457-d8aa-4505-923a-83bd844a369c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c9ff5d5d-228d-4a5c-b47b-e244bdf4f951"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30456eed-5dd9-45a4-9506-20bf38571fef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b896fb90-fc76-4be8-a6b3-ea56b5251c72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b49c03f-2f2d-4ceb-91a5-72956d9cacbd",
                    "name": "identifiers:missing_scope:resolve:dids",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d61a243-b743-4dab-b5d2-a2109aec4afe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d841233a-7d79-4a86-a899-ee39357092ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dee6a048-5a24-4e38-bd05-438562e53982",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"resolve:dids\" scope",
                            "utils(pm).getAccessToken('')",
                            ""
                          ],
                          "_lastExecutionId": "0884fafc-6517-4640-b546-a981a780ab6b"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "211af1df-b915-40f0-81f5-602a10cbd495",
            "name": "Positive Testing",
            "item": [
              {
                "id": "78943c7c-07f7-4211-8ea3-48fb83c92096",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e65c0e5b-6ac6-4dfe-8488-e9f31f567840",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "178c980d-9346-407c-be2c-3046798dfd33"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d0d3231a-460a-41b6-9e6a-d311d875f58c",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"resolve:dids\" scope",
                "utils(pm).getAccessToken('resolve:dids');",
                ""
              ],
              "_lastExecutionId": "057679d0-b602-4251-9a96-d02ed21497c4"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "573840ab-eb2a-466e-a91e-ecb601ba76b8",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "cfac17d0-86a6-43a1-86bf-770a19e4b356"
            }
          }
        ]
      },
      {
        "id": "cb689901-1b0e-4dc5-a1a6-35de1da18762",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "1f8cb2ed-d923-4889-aed2-359b463ae529",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d86498f5-429b-45db-9eaf-5ddb43ccd424",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "e1273ca3-d5b3-4046-a132-97bc3f19c1c0",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "152edf62-0941-43e0-82ee-cc5a29900034",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00e89a16-6e68-4f38-811e-6c20359a0023"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "544d2a7b-bbe5-47d1-949f-eb9b25d0a131",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a44e9896-d7b6-44ed-b42f-a7ae085284e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0129c0b2-e8e6-4bee-b1ba-1195daccf9aa",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3758bb07-93fa-4c18-bd95-82b2afb933e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "527c5871-ce7b-489d-8a6a-0519f143cf16"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d77c543e-06ae-4bd8-bf88-bb45e4bc32d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3d21a9c8-9090-4b7e-b3d3-f75d3b8966f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49de55d4-f1a7-405e-9426-2ad8a92079a2",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a0f84dd-1ec6-485a-8780-7f68b04c3006",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7781590-e1cf-43de-80b0-33c4b98a5874"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fde28718-4b1b-422c-806c-5678effee5ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8ff49c7e-f5fd-4aef-83d5-cdf6ab9ed37e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20bb77a3-561e-4d4d-95c4-2187edca2668",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83b5cbf7-792b-4a14-90b4-077a2d5f5390",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b979181b-9ab9-49df-a88f-2837337425f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a3e386a-354f-4f0d-8106-f3ebf1ec20ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f3e15190-3e10-4c49-9f56-6fc68caea7e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "415fe111-e472-4cf6-98df-4878eef15bc1",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91e5672a-20d5-49df-b1e9-513ac238db61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a6a81cd-f846-477c-b50c-3895e3527123"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1e90e55-dba8-4456-8919-76994a4dfcf8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "96becbb2-126f-490e-99b7-7c96a06e892f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34030271-dce3-4c9c-ac6d-449390737965",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79666a2a-d1ec-42dd-80d5-64a6da7e86b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc0280f9-8762-43f7-b247-4d72ef5bb6a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5f45fcd-4d94-4a70-8e76-d58979f51377",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0821324e-53de-4099-b92c-a29653e6feeb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "756e0e71-575f-4a7a-9fcd-43b4b588bdc0",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97e499de-e480-4daa-95a2-bdfe8f4dbe52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce42d904-718b-433a-a669-8e43016f20e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ecc4a741-0c3e-47da-9bbd-2126babeb159",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b83f407a-2915-44e7-9a94-d68049cbf7bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7072b6e6-19f1-45cc-8968-ad75c28bb4c6",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a6bb529-4e3a-4e2e-9bdd-e0550caea1d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "97991a3c-66fc-446f-ad7f-6379a0a94a78"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff4fa695-8df0-4122-b50d-84361caa5e01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f83bdaed-b2bd-4c77-9977-6bba80beef54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05a23ee0-eca0-4f29-a941-7c4869a760af",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5db19f22-6ac1-4d60-9460-0a799814df81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca2179be-f3ec-4a7d-b3f3-79996b665317"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95704e9c-0d9b-4551-b13c-4c4f190faf5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "db40f6c8-01e6-46ca-87ff-64cd74af06af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30ab67ea-2736-481f-b315-3035635ebdd4",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a63a1ed-9ba5-43ce-b573-9f3dcab77c78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6faa4c2-55ee-4f78-beaf-6f67b7b61479"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e1c2f58-5d42-46ab-9a76-662ee2f1a336",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6bade5c1-6b5a-42ca-b6d1-42599dfba2dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2d562eb-d760-4cd8-a816-23149c45e8e5",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "499a446d-9301-4261-ae4a-6da9150880f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8175eb7-7bc8-48a6-a5b5-ca146393e45e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c5db9ed-09ae-4f33-8e8e-98fd579bdfad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8a8e8c47-d7cf-4ba2-938a-e502eba77c14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebda3c08-7b8a-451e-9643-64febafada25",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18769d87-b292-4294-89d9-92b1c1872420",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7021d34a-817c-42f5-9535-2fdc58a8b82d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee73f7c2-955f-417c-9de5-d97e161f999c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "84e26146-972c-4052-910c-0542815ca2ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bd4e81b-1854-4715-9479-a1bb7414aefb",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8834fab8-a3d6-4c03-a46a-9d0229232230",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e2d089c-f91f-4b0b-8cb5-b76285470108"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f60d50e-9af3-4327-8355-eff6a02fd342",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8aad948f-0e32-4431-81e0-ed2f20cfb906"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49a2ebd5-fcbc-48e0-a993-2acb4a39a31d",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab2df27c-34d5-4627-96c4-bb27f0c07c9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f26a926-f5e2-49eb-af43-78d0701c6357"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21b9ef41-dee5-4d0f-871e-b75c0c3eb906",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "471c3642-0093-4955-80a2-d1d3b34761bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42c640e2-f2d0-42ba-b401-c1939b2c2fef",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf7ccf9e-22f9-4a3a-afc4-cd6601b58fe0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a5d1028-b7cf-4ddd-835e-c88f4b532a0a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9799d842-9790-4006-bf07-fd6c9cbe6a76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4ff5509b-a58d-41eb-adc1-1faf1dbc46d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76a0e7b9-4d5e-4d39-b2fc-ff08419ff18d",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2f9cd69-0a42-4675-a23e-cce4c5cb1b8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb3f9c40-1e61-48ee-b841-9068983d402a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c137238-49f8-4e1c-a4bf-d208eed09afe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0310b7c1-d244-4de6-b7f1-669a10f83815"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2ab42b0-614b-4cb1-a8f3-9b5380df33e4",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "411a01bf-08b6-4f77-920d-a0e0d388f046",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01d1382c-a4a6-478a-be38-cbc3d4269760"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54389b7b-962f-40f2-9fe4-7474b9de5931",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5384e296-e742-41db-96d9-2addf20dc616"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6ad0fda-fb22-401f-9a37-514ca275d13b",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0423aa0-4900-4a0e-98d4-269d074bc666",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f708b89-e8d5-415d-b618-9b4cba8df0a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40697774-d40d-43ea-8767-5da5d3c03d4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "e21f4a93-df41-4030-811a-7e3fdbcb9f0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5abd1308-b386-4a3b-aca6-32c828767b63",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "838e402e-1e3e-4293-b79e-a2db90e6118d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36b46a64-6e2a-4acc-9454-f98c1a4f48b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11681fd8-d6b3-4b8e-abbc-ee6fcf0428c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a9467605-b452-4886-9c1e-253b50299b00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e3b5c03-6325-4db1-8e2c-87177b4273e3",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "972560cf-ee92-47d2-a3f3-bdaf5407de9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc7f44db-01c5-4bc4-90ce-b59a1dc6bad4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ff8397a-fe0c-43a7-bd4d-2c3f761a5b83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4e2b38a0-4b11-4afd-b13e-00780ff5e74a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b900e9ad-b604-4027-9907-b9c44b263140",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "103ee785-3ab1-4df3-bf97-68174a9f6e01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14f31f94-3925-41b2-a525-3e90c123eb19"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09e61bfd-1d04-4db1-bf88-563172bbcf98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e0ad89b8-553d-49e3-b477-85d95c394ed8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fc93c47-6587-4264-abb5-83d15c72fa46",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55911f42-4a02-4992-8d8d-3ad1ce0cb5e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8f783d2-6a3f-424b-80aa-4de1981a8178"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fbe8ea6-6fc8-42fb-86f3-2a1f5131e45e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "799426ea-33ed-4bcf-848b-49a80281d1f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbd09a73-dbc4-46da-a4a2-e69571371c22",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2572c10-69b8-4f0e-bc15-3793ef6375a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99abe110-3651-4265-9eae-3559356b4308"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5931eda4-42bd-471e-95e1-fec6a51ea74a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "932661d5-1708-4c48-afb9-0e832f62a312"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5fdaf5f-e0de-4d51-8668-5e516d523607",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb925664-d998-4c9b-bf4b-ce0d83e74bf3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2efa683b-c0a7-400b-9521-b345c064f883"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dba75ba6-04f4-448c-b3d1-037bce721aee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "c9dcadb7-3c53-4c5a-ad3f-1d3b2a65d188"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63ee5d03-3c53-4974-8976-05bff61cb289",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45a7dd89-ac71-48a4-84f6-53a655e645e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ffb3b90b-5c67-449f-abf6-80c8ccb95e50"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f96a1718-2ca8-47a1-833b-154c6a4d07f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "e57e2dab-025b-491b-82bc-5ba063312b3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30f3c292-a686-4476-9dc7-ade0a296fbcf",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93d60615-2246-4819-9814-b0f64679796a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7c0d540-2dc3-4f4a-a581-a5400e254818"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20942806-a4c9-458d-b09c-b4b39a995483",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "3dc6ef58-9611-4e19-9eb1-d6f5001db3da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e584e371-b9fc-4cf5-aa06-7d3e152bffb9",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ede398ad-0b71-42d9-a621-445aca687c65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2831b5e-589b-4825-9592-d71b1d1332cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80c3dc83-9e30-4ea2-8497-75a4c9b0833a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "46c304ff-1b82-443d-a52e-91af0ac90a98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73184bb0-9d8a-44bc-972d-0f536de1e5f9",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f79a1bd5-28de-4972-b27f-c515df9cf411",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d7de495-1c14-4e67-ac76-492c70ea7286"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e668f463-88b7-4f04-a6f8-68d9c5a3c371",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "1b3a6319-3cb3-4449-9304-007423b6f3c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d177aa3-3f6a-4b81-a527-7dffc44e7264",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a38c9cc5-af96-41e4-ac62-5cf97bcc73db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d98aa402-28ac-4aa4-8bb0-f13b38ba6faa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91d5b360-6f7b-4fed-84e5-a0a3a5565025",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "82c44bbf-5fdd-4424-9f73-a05e7ca0217b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4646ccec-4346-44a3-9960-76b335566d95",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12703777-514c-41c0-9459-089b849825cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2aa68691-1229-428f-8a1b-97b426566821"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09111721-6d25-4ba2-a8c9-1b95b8551f37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "622c4b19-b526-4270-aff7-3ea7dd5a0b2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b55feff-7fd0-4c43-b2a4-756d13290ecf",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e09c7dcc-f3f8-4ab7-9be8-b343c151d1ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b87cbac9-33d6-42f3-935e-44ad0e9effa2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a92cb7c5-2a12-4fb8-86c7-4e448960a2fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "de3bcaa2-d882-42c7-90a8-5238a722831e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db1a1ece-170b-49dc-8533-8a8195f931b9",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60070c3c-714f-48ca-a75f-8d89f2720edd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "002531ff-c9c4-4de4-a9b3-26b101dd2d97"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48f27de8-2a94-4428-919e-202e4c7fc280",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "25c0afc1-8645-460e-8be1-b3e482f4ad20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95c3750b-d1ce-4f6d-9a58-e8a0a595735a",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75661c9c-509c-49cf-9187-61b211bd7d2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8bcf1ce1-cb3e-4e60-8b6c-920ab006a2db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "028bbe79-6d41-4942-86fe-39196238ae83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b8f9ea4e-cea9-4f11-9be3-5447b315c4c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86d1eb2c-14be-484e-ba5f-8caf8e64cb54",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14b4a04c-7dce-4a74-b410-d76fbaedad6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e7376ded-7111-48cc-b80a-064eaafffb53"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd8015c5-6656-4a22-a2bc-432893b10774",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "608e375e-2c5d-469d-98f6-ef8f441e1f7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cda9d04f-9b7a-4464-8c52-c3425a986f7a",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d01d0b5-4e8c-4404-a354-488cad23fa81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0244dd1a-8bbb-4600-90f0-98e296f47c0d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b012216e-6895-4326-a3d5-2958e1f60399",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "6efe292c-286f-4e6c-9777-532a2058016b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f0f83db-1d20-453e-ae15-36f6bfd1663c",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a898f162-f2d5-45b6-ac8f-b6fcad114be6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "74ec3acd-19c3-401a-9238-a12ba669272a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb60e7b8-33e2-4474-898c-5071664de926",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "7fa759b9-58b3-4f8b-a014-48452807fc5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c75345e-2247-4718-b6e5-f0577c1cd4d6",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29774b62-3e18-4d78-a8fc-0ee973ea797f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20174ea4-6750-4297-b808-7ed82b3106e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0c8f0e4-0d30-4ed9-8679-c77b108a230b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "6bd6bb46-37df-4d63-a552-82fdb090c2e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9df29b2e-aac8-45c0-a6d5-ff5542166e63",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "707db93a-24cc-48a3-8acb-88f0130aa56b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7465606a-e473-4ee4-9224-fc7db18e33c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "688756e6-0ffe-4df2-8781-cb90fc09a5e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "2f2e071f-79b7-43dd-b3f4-913217da24df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dabf3ae6-1471-4fb3-984e-ce86e840fb8f",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "210cfb0e-98aa-421c-938f-cbcbf9aebc74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81cd9328-2a44-43a0-beb8-8dc214d4717d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35733221-d11d-45d2-ab3b-aed50850707f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "fa314bb8-3366-4be3-aa93-329ca434b54f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "650cf4c5-06c5-4ecd-9af8-1722bad6b353",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d1c19f0-821d-4e2a-94a9-1e5874b3f088",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f745b312-65cb-4f81-bae5-39b95076beb1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4cb1847d-9f10-4b9f-8a39-d1f4cc3cf828",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "d44e2d5e-5b17-4cbb-a235-38a43a68f539"
                        }
                      }
                    ]
                  },
                  {
                    "id": "caa64c39-08bd-44aa-a8f4-75299b9900f7",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83a76f7a-0115-43b7-ae27-67cdfc373091",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "980d8d2a-cc2c-471c-a09f-a8cb6d3872f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5f8283a-78f0-461a-9517-51f725239a1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "70c7dfc4-fc3a-4107-8664-6656843490e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "627b113d-93ab-4c6e-9164-a01344c14638",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d401fc4-bfd8-4c85-9755-60fbe523ca17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8a3fe21-6dff-4708-87c6-6fe81528e848"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f6e9df7-beb6-4eee-9440-6368adb36259",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "752e6787-21d8-47df-948a-8da9a5a0d3a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f14ecac-7501-4552-9748-83388ce250c6",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21af019a-a901-4917-9735-4be03f65d6ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f826da0a-85aa-46ee-9875-da033df44585"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8f76656-2717-4926-acd9-5e712a53dec3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "1637c8aa-fb32-4962-a0d1-d5dcb875c87e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6019b21f-89ed-4dca-9b67-4f83a41c10ad",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9390e382-5022-4078-9ef0-a9c374cc11eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9dfe6b3-4e4a-4187-9bee-baffb93d6493"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "067dcd87-8e7e-4de2-9522-30d5162ff98f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "5811076a-2506-404a-9286-d24895437988"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7e33637-d19e-4e83-88db-42edbf7cd29f",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08cc9296-81ca-4321-bf93-b1e343eed5c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91db55d5-f8d2-47bd-a521-e168ebfa8c3d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8328ac9-381d-46f0-accf-37b57f1f719c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "20aed672-1e87-4da0-96ca-9b442730dec1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5115d948-bdf5-4df1-b1b2-799e25f2a690",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdc63e1e-5170-40a3-8a73-a370a33bfa80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7f94be7-3004-43d7-80db-b9d881da9575"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afbd2223-5aca-4959-a5ca-61f70a5f291f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ade5c7f6-0b50-488a-bc54-ea3aff5d7d10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5879af6e-ef38-441e-b93c-bc9ca29274ea",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9877185d-2460-4784-a958-2c79adb2c37f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c2123e5-f724-4e92-ae3e-77aa9f9d9bbe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "174caca9-afb5-40df-a917-d4e6c63d1424",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "27706925-8f1a-4b71-89d3-af655a012327"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81192ccd-1e0d-4657-96a2-7bcf397b4eb8",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bee2e01-b527-4a4d-af7d-c2ad5573d3b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ea1ac82-88f0-4c65-9fae-28d6815b52f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f08a1600-38ac-4114-b979-1bdc6c8820b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "96865b9c-588d-47f2-addd-08f8f8e98dde"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c437e08-2546-4b8d-9d01-aad0ead993e8",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55264379-c536-4529-b23a-4f1c47eb14ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25cd5e42-e7fb-4e57-a107-01935be4d167"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b67d4990-ab54-4e74-b149-c5125a1462a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "2af490eb-f9f8-4a34-8d49-7c5dd3d6a236"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25dcd46d-fd34-4511-9dcd-45828c654397",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ac72c38-81ea-4b62-9cb0-54d640e95a82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d575dfa2-16f6-4ebe-8c8d-fd880231eb8a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "533baeb5-2ac3-4234-98bc-eb246f62b6fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f030fa7e-fad7-42a8-b24d-8a0d93d1048b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c2531c0-89e9-4608-b8db-4e31807c3ce5",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57551639-e4c4-4e0e-bc86-4304a5ef19be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f7f2c5c-821c-4333-b45b-587c0983a2e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84b75414-a93e-4bdb-9ac5-d3a2b99e6e13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "d0cb5bc2-1c86-4f87-83b5-5a813f5d9f7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c0597b7-39e8-459b-aaf1-3da1e6dd2203",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d97602f6-528f-4560-ad51-f2801241f2df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a6a923f-9e24-4251-9b77-25869a592388"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aaa9cb20-8bdf-4664-a643-551992c752d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "12b1df96-ee8f-484f-8ceb-2526eac62b65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f40cf8dc-2243-4101-8dba-5008ce37fe12",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "149e1b7c-f32b-4fc7-ae41-266bfcf67487",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d1f9b18-2217-4213-880c-fcad07ed351f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5571e92-e223-487c-bc9b-2465da7bc187",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c76ddb84-d10f-4f31-8a07-6e26e1f3cbb6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aad103e5-9b94-408d-8774-2927f5d757e2",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "379df429-a5dd-47f7-bc8a-2e9051ee79d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0d1a5cf-47d1-479e-8aa9-9280baa6f0b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d533b9ac-0e29-44d9-a0f4-ddf7631df866",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "be4f050e-3336-4873-be70-ca4f6801423f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ba7daef-efe3-4f07-96aa-e06f87b52e4c",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e63e468e-2a92-4ced-b462-904d67a43e9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35df6d6e-6605-4b7b-a913-fbb7ce0b646d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c753ada-7938-4750-ae82-734e3ceb1f35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0dca4b8e-e050-414d-bbb1-e73c504057af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ce3eb33-2501-46c8-bee5-60bfb3b1131e",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6103eb54-376c-41fa-a449-49c3435e6f81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "601117c5-cc67-4dea-9927-69bcfcd3a9bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ae2fecf-9e36-4fac-aed6-a57cef6198f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "7144864a-9857-4ffe-867b-0dccd595b3c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82a6071e-d109-46dd-8f5b-cba2ff091134",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82152eeb-53c4-47d1-b989-2f563ecba3c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e11e2402-ccdb-4a1a-a965-9aa1b22490a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3f7f498-812b-4be4-89ef-a3a1faf43e82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "34e289a5-ae23-4e4b-b863-a7f3d7b991ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5958dad-0359-448b-b63e-5bc8c6e206bd",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "053f0aec-b04b-4cc0-9c07-26c2352c65eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d87fc83-e7bd-4c4a-80c5-07acc195c0ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38c9bcaa-4a26-4ff7-91f0-97f453e9edf4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "969e4261-69ef-4294-9677-84d048d6b07d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5eb22c4-2479-4b82-8260-965869881a7d",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6046b110-1df2-4d8b-a266-d25083111ce4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ae5db44-ebaa-4cd7-82a5-4cea2aac7b5a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33dd5c0e-dddf-4ddc-a580-e1cb2544c83b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "b12814d1-8a83-4ba1-89af-a4597eb015b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3f2be05-0a23-4d0b-ade6-0fafcc5b2ab4",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3ef7ab6-dbee-4ad7-a269-5f50154b050e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d66c75b-38f7-45b9-a6cb-ea0b4c63c2f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5109408d-3d26-4e55-97b3-5235d4c888aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "b04870a1-2b4d-439d-87bc-664e097974c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b8a4b35-fec3-4db9-a567-f74ccc178147",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b0d787b-c398-455f-a5e1-4e1d62a62667",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53a61a32-68c8-438b-9f58-21a9bfc346eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32939034-07cf-431f-a1df-0bd8c097bd94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "39adbe1a-69a2-47cf-ade8-35860ff1d856"
                        }
                      }
                    ]
                  },
                  {
                    "id": "401db68e-3494-4ae2-af27-ad3d42c72804",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c863e058-cc45-4d21-8aa1-de3d7a0c072f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51551b91-4c98-407b-8841-7403697b1ae0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ed2b2e9-fd43-4134-b74e-b06f113ab1ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "a847ee06-5d9d-4e67-8af2-d37214256f6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa2092e1-0178-4416-abc6-41556a19a9d9",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8612c99d-c857-462d-8c29-5191bdecab41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02628d78-6bf1-4c9d-b437-2d16ccb4f18a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3cfaaa81-e9d4-4c46-80fe-90723c1656f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "5c5641bc-86f1-4a92-b410-b1deb45cdaf6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14990849-91b6-4dda-b334-0ff33033eaf6",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af496e07-21c6-4dc9-a750-18e814020702",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17fa6ee0-b90a-4111-b80c-08bc0b6a6c06"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93a61c4a-850e-46b5-b4c5-39fb1735f416",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "09b8814a-5ed7-40c6-9d95-af16a1d48a88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5839ea7-ca08-4bf8-8341-3b6b52ce6ae8",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "beef1dfd-d668-480f-a6c7-bafc8d74bcc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e74700e-2398-4905-bbda-c7434091cbb9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a197490c-1e84-4089-b9e8-5b8dc7c56edf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "83420537-804f-4330-9ec6-ecbd20a0a4b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d31bf82b-1229-477a-868b-bc62d8fb0b36",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbc7935b-3ae5-4d10-8bf2-d706c55668dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf230b17-365b-451a-b31c-180476eb767b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f5eae87-c299-432a-aeae-566b2028d7b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2c54edc7-f2b4-42c0-9b73-380953d50401"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4fedf3c-b62f-4a39-a7f2-581a4cdc203e",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a40f9e65-5641-4af2-817e-c7143a648a6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc4580bd-4b8d-4ec7-997f-e71804d2ad39"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f27ce6c4-29f4-4769-9750-4c0baa030b30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f3697e82-2bfd-4282-8942-1d8fe9bf7777"
                        }
                      }
                    ]
                  },
                  {
                    "id": "525b9cee-56fa-4d6b-900a-91e67f16f5ef",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd71776d-3cd7-4083-92e4-abb95bb50d27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89717ba8-2bb2-4d13-b6f5-b9d7f4b5b80e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "edc391d5-4ffa-40c3-a171-dd35089c3f0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "9bc30cd6-c8a3-4618-9399-751082d9b2ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2220f49-c509-4bd4-860a-e5b0d795a892",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12f30443-ed2a-45db-a472-818cd8cff6d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd5fa856-1d20-4d9b-b794-cd858327759d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04881b49-7d54-4351-840f-cb20a403236b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "37182583-e2b0-4531-9b04-3fed62c422c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a29487ae-6050-4add-8273-adf7bf711143",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29a15a2a-5768-4f9c-966d-93f9d016415b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "530febba-9a00-442d-8ecb-1e3d1cc6b6ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d256d416-1d0c-428c-b6de-a28b74ff7c15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "22019bcd-6f79-4336-a440-f882d2eb2729"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79019147-2d4d-44c2-8288-ab914a13a60e",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4fba8ae6-174d-46f0-9661-fd5108bcff2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50c9c30a-f0a3-4e85-bafd-360a4f6b1a4c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96268c2b-da20-4f79-b831-d3c1f0b2a889",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "28a91864-6ae8-4d2f-a2ed-9b6d9344d1d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0e1ac04-101b-4caf-aba8-ebf36fd2b945",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e8a765a-f9ab-4958-bc93-3ffe07c1ed08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40fdabf1-e31d-46ef-8300-7f5ecea4d7fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc5b22d9-1f9a-4a49-b512-ede427414ddf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "986b9c74-96ca-4851-98a0-9ba6a7359add"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bde2c926-3f88-4ac3-af79-5d631acbf1ed",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3eda197-14e0-4b84-a2be-368b02a33bf6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ebf93412-6dc1-4d75-8b74-cdde96cbe060"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74557d55-d91c-455c-9671-6c9518eae198",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "63da733c-4ccb-4338-89fa-bfc4bd6abae5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af99d1a9-5862-45bf-a6fe-e4216c169330",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9e9233b-43b5-43a0-b0c5-f96550caae0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73123359-323c-47bc-be97-2ac25c58fc26"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b89cceec-cacc-47d5-8371-0306a5ff8b54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0079c666-5002-41af-85c3-e8801f5d05e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b489d6fd-82e0-4fa9-a665-41d3c2aa8195",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "068f0a8c-1e59-448d-91d4-c241e8ef4935",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "435fe6ec-6bd3-4d5a-8cca-f1f38d1ba447"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e61a7332-3da5-4f74-9ee5-9c0f62402938",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "97be9925-5db6-4100-9080-b55d9f6c0ade"
                        }
                      }
                    ]
                  },
                  {
                    "id": "daa3e407-f26c-4ed8-b08a-d71278360b5d",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "301aea79-6385-4d29-8730-29c090755202",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a900b5e-c352-4a5a-bc39-526767d4c164"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f63cc3c-cac4-40b3-982e-381be440173e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "da68f084-e644-4131-acd2-2c06f35f0a89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e1694e2-1d34-4e8d-ba33-7f21e47bd0e3",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e44c8120-c2ec-466f-9f97-4ade4db365bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "137118af-01c4-41aa-b77c-9bba982c6ca0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd1732b8-5a29-4265-a1d0-43a0e03342dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d5b0cd11-f787-43e7-a2b0-184b564bee8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a88577a4-a622-44e5-9144-bb0c0c9b9d13",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "561a16ba-58cd-4c51-894c-287d1f9eebbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55f7aeef-ead5-4444-b6a1-853e6f5f8f4a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e54b3bf1-ba5d-41f4-97df-ad889b552f48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "166503b5-c41d-4813-9c8e-e11f9c86daf7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00d0028f-874c-42d7-bd36-6cdc27f070dc",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eaee61e0-5534-44ae-9f15-7726e84e1d98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ec80df0-64dd-4804-852c-422d71aef0f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cdd959c0-49a0-4902-ae3a-6f5a2a703896",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a31fa839-7986-404c-805f-8d304ff25cf8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "498e2ea4-a4e4-418d-8191-32b05a15da17",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8448bd71-e464-4670-8a23-256977573464",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db2c4ed0-ab2d-4739-92ae-3c8d95704b68"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98a319cf-0773-4a5a-bdc1-17d15cca579c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c6feaaa4-6c90-4860-823e-0291989143ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fd3330b-b886-470c-a978-26f1977caf97",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34022bd4-ffd0-4d56-bee2-32facdfd828a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be9ddc76-63ef-4a7c-98ea-ded00b8c007e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "416d5422-66a4-403c-b1d9-d0519bb206a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "24e3b542-a2be-4d9d-b68f-6f1eb344d922"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0756821-29f5-4dee-83d2-799502a87172",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bd762a3-c714-4238-be19-7a5f8bb097f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c9ae466-0df3-4490-a447-188a74486825"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "985b9c13-aade-4a39-8ef0-b1ecdd1bfd13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "49dd1b2c-64ce-4602-92bc-9e1e63599624"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0065acf6-4813-4dce-b1c4-3abc85a9981f",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff018bfe-7c84-4b37-a01c-1e5a19daf720",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b050b85e-11ad-4a8a-8c0b-9ea7b9d08b97"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b11a894c-e99d-4012-840d-9fd632dfd88f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "921b0697-e408-4128-8520-5e6a040b0b35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85aeee94-482b-40c6-966c-128074eda1ee",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1a09b00-1336-4420-9e1f-f5ff14c6a39f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f534da38-466e-4dc4-be17-44a4f5d783a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32b4d977-58b8-4ed2-b697-c482183e35b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5ea43144-1e8a-4504-af5c-2a63cc7b857a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38121c56-966d-4931-a542-263d2502d220",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7adae4ba-cf30-442b-a4d4-a69bc03e8c1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d69b148-7023-4c76-ab0b-a94a3bc2258a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c270ff89-1693-470d-a816-08d381e4c323",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "52d36582-3562-4d08-af5f-14a0c041230e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd754ea9-5ecb-4a55-a426-d31f5ebd6a32",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42272613-e564-494c-88b9-78e63d42f782",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88269f58-7cc3-4bf6-9f7f-79f81cb4119b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfb5f4a7-d3ec-4abf-baad-ef20d7c37637",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "56feabd6-dcf6-47dd-aab8-511fa5647bfd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e1317d2-9078-4286-899a-2aec9cc0c929",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b44891c4-784b-4bec-8702-196b165c3d69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1063e47c-7cde-40bd-9f18-fcc792f2e75a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6a06278-db07-4d69-90fb-5edfe18f48d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"RevocationList2020Status\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "44eccf06-d048-415d-bf08-3b0ec8458111"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9d67ef5-6855-47ad-9223-ed741f9a87b1",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9703e325-2612-44ba-bb6a-2a1465fc4e1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d130148-ebf9-47a0-bd6e-1cd274592dc0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b213c383-ab73-448d-be33-33b8db671dd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "773e8c27-f029-48d6-9ec5-ffaecaaaed12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7577d2e5-a2dc-4013-89c2-86873623a63e",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbb664b3-f149-41e1-9cda-52d013fd700b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d32e214d-4c01-4a66-9647-3e4052f9ce92"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8755bc21-7abe-49d9-b8ae-326a66059557",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "14401297-ae07-4487-a283-c98c4854de8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c03b9b40-812e-4e3b-93c7-40497e5820a8",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b26c3b8-ed52-4e2a-b42f-dfad09c2ade1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "728685c0-fb61-4c0c-99d2-19c5ba89f8d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96aa885c-86ed-483f-9ae0-fb6d5aff6f03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "9c2f5ef7-2ddf-4a9a-b5a6-e34750868fe8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0d538ca-c117-4612-b18e-f4e6feed4cca",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "977fa8fa-26db-41c5-9d18-bca3814db1e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49c4c8e8-2837-4083-bd00-d0a11755f1ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5dc6851-97e0-44b7-8636-efca45f6d102",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "1b807130-5770-41e4-b11b-e3de158107a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1da23cf-1429-4478-8bb9-2c681c9a21ec",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d69ec23e-8d69-4546-8879-b4796e2b7308",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "0f38c65e-f8e6-46cc-abba-cb5f9a96de5c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2018a954-26db-46b0-98b4-46b23918291f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "65c30045-2230-4124-9129-6739e379809d"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "d5238977-4161-467f-8e10-27fa3d675f80",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "39e4ce5d-82c5-4eb6-adb0-6a4c15c119b5",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cf5a1fe-b6bb-405d-9411-a8967ac27b41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "636a4371-eff8-48ea-b47c-1429bb15e603"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f846299-2db5-48c2-a939-1b6076475e42",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c3446f27-e2b7-4438-a95c-b14864497ee6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "305e9f75-f5a8-4392-894d-3033a5f94e15",
                    "name": "credentials_issue:missing_scope:issue_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15d9025a-e1e4-4189-95a0-a320070f9bc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5fdb831c-25af-4a47-a2ba-f804b235869e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3acaa4c0-e910-4b50-8525-3eb76d8b3830",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"issue:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "486a37d2-905d-485c-8f31-ad6cae6a73d2"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "11e4e341-1d60-4f1b-bc66-871d94734569",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a572d0e1-7331-40c6-a8e8-81e0e1fd2154"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f76a1b51-e9cc-4110-a45b-c7e891c815a3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b26cb4e1-1939-4829-9110-e729d6b2c1fb"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "5aa178fb-ef18-49b2-99f3-872f6c5d8b31",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "72b660e4-2627-4877-b880-4fa1aaf55319"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "c1d11b3e-8365-4409-8bb0-0c743c865cf5",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "7fb0778d-d7f8-4315-b8e2-18266d09aa9f"
                }
              }
            ]
          },
          {
            "id": "af0c6f78-01d1-4fc1-aeec-2a3039c8f5ec",
            "name": "Positive Testing",
            "item": [
              {
                "id": "a8bef644-eeae-4b02-beca-f6b889969f94",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b0ba9540-785d-4a6d-8473-25c1b965ed52",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "4d9ed3cd-8164-4ae0-a475-90ed321dda1f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9460eee3-e7e4-4a5a-8202-d322674d201d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "0a24e85d-6f15-4f70-a8d2-c6811a8f24c8"
                    }
                  }
                ]
              },
              {
                "id": "a8bcbdba-a043-47cf-9ac7-153aaa59b912",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "20d677b9-ff2c-4a2f-86b2-fb2bb018a169",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8172a60e-6202-47bd-a83d-a5c5512607b8"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "77959b3d-af2b-42ae-b443-b52e2549cc66",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "8ffc2473-64c5-42b9-82d6-106fc24812f4"
                    }
                  }
                ]
              },
              {
                "id": "6ac2cdfd-5284-408d-abd8-4a09ff356c3b",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "aebbd70e-b95c-4ade-aae3-36e5cfd3b810",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "2a8970e5-3df8-4dd0-915a-ef9a9af527dd"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8bddb9d1-a511-48ff-ad84-021db9b0afcf",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "789d8313-a4a8-40db-9d80-89de8310fb65"
                    }
                  }
                ]
              },
              {
                "id": "cade5998-832b-4358-ac3d-c25e1dcd7881",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4a23295d-3979-4067-9e60-c5a888a7fdba",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "88498818-7c85-41ab-8cc1-bb42db175552"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a122f169-e8f2-4309-a65e-4d81004cca46",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "b2dc5162-6466-4717-b99a-02918ae8b2d8"
                    }
                  }
                ]
              },
              {
                "id": "88c16f0d-e819-4866-abe6-0a58a3865ca1",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5552a8a3-f11f-4f73-a6c5-64d1d88fb6f2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "5aa1a854-158d-4681-9ea6-93a445bf5771"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "beb94e0e-7be8-4279-98f5-b272e4f3c1b4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "887539c8-ab6b-42ed-beac-e25e726b6305"
                    }
                  }
                ]
              },
              {
                "id": "493ca8e1-3152-4cb1-a6fb-d5e24fa496f1",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5d761e3f-a8c1-44da-b0f0-febf630ab8db",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "243af4b0-8c28-444b-a160-2fdb0ff48e40"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f944f0a8-6527-483f-88c6-3f555ff73c9f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"RevocationList2020Status\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "89f8c89d-434f-41ab-a112-6b12b3ad49cf"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "9695eae9-f564-4891-9340-5476044cd891",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "3d679cf9-c33d-480c-b91a-efb2e6e25953"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "8564efcd-7831-448d-ab46-0795b3cf7ab3",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "9a7de6bf-3bda-4e09-baa6-015a8f28097b"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "19e592d2-17be-4881-9242-cb35c2e025d4",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"issue:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('issue:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "82515e9d-5c75-43bb-8017-44a868626a67"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1879a495-f24e-4932-8faf-5ba2b9d92794",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b823fcd6-d9e7-418c-8428-29750220e659"
            }
          }
        ]
      },
      {
        "id": "05d36e92-36a3-44c1-a1de-89ee70205f58",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "8247fb06-ae89-4ffb-bd0f-48d64f5abf45",
            "name": "Negative Testing",
            "item": [
              {
                "id": "7ef0824c-5b57-4a0b-8d2c-549f587ada3b",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "74e204fc-bd99-404e-86c0-2261390100de",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4cd558bf-d909-4eec-b1d9-2ecba69689be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "891e4c08-779c-405d-bc40-d07ff1466906"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3bfb50f4-40b4-4652-adfa-149826a5c57b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "cec9f4d0-eaf4-4df1-ac33-bc5c2a5d5301"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c46358c3-7912-463e-a9c5-a905859b556e",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "306e7ba0-9598-47b0-bff7-a8d02ab6019b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a272aba1-0339-491b-a953-27c4e91c8622"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "828f5acd-1a3a-4253-81f0-26c2fa8aaa87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "6e8ee0b6-2c35-4e4c-8ecd-221a0f687db6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66f15d57-7505-4a6f-9303-7c5aef4a9d06",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35c8c7a0-6b9a-41d1-ad50-fc8887bfb65e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a22e004-3e9e-4103-9f5a-2c808a2f2051"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e073ae52-4e87-469a-85de-6cd1e18b63bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b6bba4e1-a79c-41f1-9bff-ebba12d1c6e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06cfccae-1abe-405b-9636-79678bf8b224",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce7f8c2f-e4ab-47dd-9a1e-2c9e42aab9f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad74fe31-56a9-4998-a977-ed5481502009"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa43f318-0d75-46c9-963a-aadfc16c93f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1b110189-5a0a-4f1d-b6f3-4a485da9dceb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e23db733-dcff-4be2-8c99-363f698ebe19",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d95c692a-ac5f-40de-9120-6a64357ec669",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "061071cc-3998-4440-bdfd-13ebd1ff793c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eeef4ce3-fc7d-45f5-af85-0f0e1834dd24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8ca96741-1dfd-4a15-a525-6f540f00c9e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f45f720-242e-473b-a567-551f4f0a6823",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72a7ae01-7efa-4688-9484-7387bdc1c5b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fffb84e9-d74b-438b-b61e-ea06cddfad2f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a616ab1-76d5-4659-be17-777325ade05b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "55f1747e-2436-4f7f-8249-094b105e7a1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f86737f1-84f3-477d-8346-ae017629f589",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c0783a3-7d68-413a-89ff-0a6abd476fd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "732c85b7-5be7-4ebe-9e2f-7fcac10ee4c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "938660ce-6b40-4b02-96a1-5653292e03bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "12040122-92a4-4b5e-81b4-606437afb7a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbf21d83-e7fe-4c3e-ad57-5707b421d19f",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d2aa597-0676-4921-98cb-0dc16df12324",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65501041-1878-44a4-9d8d-28cd75c2df03"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef6ecfc4-3a99-4c75-820b-c93901d8179c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3dc2180c-8e06-4681-9d6e-ee983382db3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de80538d-e846-4f00-979c-eaafc923cf22",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ce37e85-d004-460f-abbe-7af365b795b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9941f933-bb80-4c2f-9b63-7a89d9600fa5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0331311e-4d60-42ac-94e7-412b2c4a17a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "324014bd-0212-45e1-86e4-d996ee3bdce1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e12edb70-254a-4497-bef0-978da185c50e",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d4477f3-84e5-440c-aac9-a85be7726948",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66ddb8dc-462d-48b4-9a83-ba03a70d5209"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f5d408a-c42c-4440-b644-8dc2b05179e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "97f06531-4a47-4410-8f6e-fb6d17d3561c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02ff4b33-ffb0-4e64-9f9b-bc37fb0eea10",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f17a5edc-c4fd-4fe7-9809-a80062c97c84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4451b6aa-93d7-41f9-a21f-d2aa8d280d7e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f5459e3-34b2-4948-8c34-764607a47267",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "74ef634b-2372-4e83-896c-cd2781cec682"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e6b50cb-a3fc-47a6-9557-bc14acbfcf40",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bce1b3d-791b-4e66-baa5-7edf3e8e7209",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d990d615-7908-4bd1-9fab-1c8f033eabf9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97f7c4b9-10f9-4768-8afc-d000246ec54c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e6adc84f-aee7-42d8-b984-fb3c61e5098c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a40c9d7-fa3a-4b23-a6f7-7980f805e9e9",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64ebe08c-476b-419f-9711-0fa1fd28f4f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76134897-76e8-481f-8f92-403439448076"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ba10478-c7bf-42e0-8ca1-742b0c257354",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "b46df36b-e14d-4f42-9948-a385d2c34026"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec596600-3208-4e7a-a8ef-64caed65fd5e",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6c10984-a3a5-4dad-a385-272e152096ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1eb1ac39-ca7f-4e33-aeba-f299951ec0c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5aa8aa77-0570-4fd3-a847-ef7afeb86b78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "6759cc94-4677-4ea3-84d0-28f6a3b129ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d9d1fcf-d652-4549-a6f9-91b5fe53c297",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d48b12f-06ee-4a1c-a59a-275eb04e0380",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26c8f438-d39f-491c-afe9-f402181dfa06"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01601240-7417-4cfe-ab5a-1ded9ebc27d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "ba00d22c-79d0-4266-b950-85451a7aa175"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce02bbf3-6b1b-4de3-9eed-fc4bfac47822",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50956855-71f3-4574-9855-a23067a79a12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c83057e7-a35a-4939-9f53-55d92eaaa588"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0796ac60-3d31-4ac5-8094-c22583f68000",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "1a62fbc3-e79c-4c77-8209-af98500ef607"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1d12899-e00d-4276-ac3c-c9d5a7e7eb85",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b747ad90-4d62-4742-977f-145c33170fb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d629abcb-1b80-43fc-b183-1f6d9e42d6a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d2f1823-c93f-4e1f-b608-f3b958d9c50f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "27a40acc-83d5-47c7-9b75-2a18384aeb1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5d59bba-b174-4071-9625-ea2d2b88eca0",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7b10b85-795f-4233-affc-ce19ea610e88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ea88410-33bf-4e30-aba4-06d6a0d38c36"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94dc11cc-df55-4a2d-871a-24a757ba5a80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "d9e9f97c-6288-4323-82ca-ca3de2a74c33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03bbd4b5-a96a-4814-8e87-0b2a12c6891b",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6859995d-b483-4c7d-a413-b73462c825bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48c84753-35aa-40dc-a8fa-236c3922fed7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e73932d-fb48-4a3f-b748-007f157883a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "eb8bfa7e-4a34-451d-8920-9f944e70b298"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de227b96-cf40-4227-ba16-55d6df36c9ea",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb236294-d7ce-4bb3-b9c0-311e84bb99fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58c9e428-524b-490d-8800-a28b8a34f01f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7ef14c7-a5bc-4857-a0b7-2ce786666350",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "55b0fdd5-da89-4951-8490-e564dc91aae8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a07e395-4178-4c70-8468-8d2a16df36f0",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f314473-fca3-4c9f-a205-d4846fe70ca8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7cf98afa-4feb-460f-8b22-846a460a2df5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3973bcc1-b36f-44fb-9eb1-1b23c11dd4af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fde34ed6-b86d-49da-b5d1-f026c4f49fef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f590a8c-e1cf-4c93-9715-787007fb01a6",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d462013-9138-4bcf-818e-28a92cb77b97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4fc9585e-dd5e-42da-ad21-877c88764b99"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b4e6c96-ce2d-4a9b-be8c-fbca74251ebe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c0f3988f-c573-4e11-b03f-32dbb82f7a66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a61d6a5-5525-4afa-a73c-5a064b4fe5e3",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0362a61d-2bf8-4fee-b252-626d260377d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "feb69c72-e5cd-4fad-973a-0c2db1fa2ed5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2836e3f-3b58-44c4-a8e9-6e2676e3736b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bf48c281-b437-434d-9be0-4431b29ad964"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df03e48f-a530-4a18-b9ce-be7a7d516835",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f247827-f9be-4cb9-8cc4-f34e6f1f82e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99cc8a6b-5aed-4ef4-b29f-a282109b9f45"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c708990-52e8-495c-8205-e89a5f8ad76d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4bef8cad-8494-4531-87c1-1fa4f297528a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5a34544-6ca7-48c5-9774-59a04436cf0f",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75c7afd5-e963-40ae-9600-97b6eecbecd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b79f1a1-8a5f-4033-b09b-527b2ee43d9e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57825ff2-7a6e-4d72-9be5-dcac636cfdb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "06757da5-ad45-417c-bca0-68dcc017ca1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34760ed5-cba9-47b9-a1d8-e4c5a8722015",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb639c3b-d72e-4cf0-b171-6dd20f46d37d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c902492-c768-4a7b-8980-00bbc374a797"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "891504f5-2b0d-4412-844d-5e93045393d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "33af0e72-ed14-4487-999b-c8d0f7cf1834"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c22ac1b5-2ce1-4e7c-817f-e2a9850ff42b",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ca9bdef-e9af-49d3-850d-2fe572d6e9fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4149477a-5954-45d3-bbdb-fb8bca4760b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e1eadef-b2b1-46bd-98f2-72a2578ad642",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fc1e94a6-37fa-4561-b762-d39081b333c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbbea586-57d3-4ca2-96be-238095411d67",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ca6453d-21e1-428b-8f89-c6e0cbe7d5b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8c4aa54-fe35-4931-b799-0e33ae3d64d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ba03740-c606-4f72-a54c-5a331d406bdc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "193605c2-6ba1-4a15-86f1-b015ab6499bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28c84d5c-b794-4b3a-8440-6f712df0f211",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "218b2819-498f-4957-b49a-3a941ede5782",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7118701-6a90-4bdd-b096-0ee5db9b7073"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e49b85b-a75e-4f17-b111-cf8c4e252cf5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a8acb889-cf69-4ef7-a2a3-609b59606287"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3bf6a408-8985-45b1-baad-47a3aa15fb20",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5fc6705-e122-4728-aece-4e4aa3206712",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "996e5086-2d52-43b6-929b-cf3a1d138007"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aece6463-b95a-4582-b229-49637a62dbae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c41b750c-8f76-4def-87c5-460a1edfba03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0898c6a-b76f-44b0-9ab4-94ae3f81c3cc",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07a49244-0cba-49ff-a1f1-e602403d0f41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f2cf8f0-a5f7-4572-a2cc-e14802bb1b5b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6155d9ce-1160-47a9-9454-a9df7963169a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "143cbb58-6103-4ebf-960a-40ab099bf266"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4981a293-17e3-42e9-9dc5-67b0af16517b",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9099e87-7218-423a-9aac-113c4d1ecb9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "374f929d-ce5c-4ad8-84e1-e700e2b80ecd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4d9db87-e207-4d3a-880f-2196c6076e78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7a9b466b-ea5d-4855-aabc-7c49536229a9"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "c5a908f4-7cce-4b6b-96f1-6191fde88680",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "05f94672-434c-468e-96c5-6e8e793ff9ef",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "566513aa-c89c-4a75-bde1-8ece28cbd2dc",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "0220110f-985c-4982-9184-23f7f6fed211"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c63fd390-c0ba-4b0d-8b2d-8e1ab58147c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3247b517-f655-4bb6-9cb3-1f15f19d01ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ef2bd0c-2ffb-4bef-b761-755c407be180",
                    "name": "credentials_status:missing_scope:update_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "398bd473-1930-4fcd-aeb0-3022835e483e",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"update:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "9665fe8e-b1ae-42f8-b33d-48e11e7d6828"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "70e19547-1e5e-42d3-8626-475c5ab64f79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3259d484-d0d1-4986-aa85-4f5e5e2f9e7a"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "dacbfd16-00d8-4974-b390-d3cbda85dbff",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7e9ae9ce-582a-42ec-99b4-f958fab8f56f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "629bdbfc-d8d8-4701-bb93-e1fbd5808078",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "87afa98c-6889-4624-813f-581c1a942d6c"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c6a2e55e-382d-4983-895f-44239f1ce21b",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"update:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('update:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "12e27a2a-92fb-48cc-9b33-f1e719b73910"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "829088b0-6ea3-4652-8c11-6e8f286a92c9",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e079b4a0-8164-449d-ab2b-2388c427c06f"
            }
          }
        ]
      },
      {
        "id": "85e87541-d2d1-4a77-852e-40b05a163d0e",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "9c8b0451-53b6-434e-a4d3-975436c68520",
            "name": "Negative Testing",
            "item": [
              {
                "id": "3408b381-ea67-4fa2-b62f-4108cc93102d",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "efcde849-c6b4-4bca-a480-5301c1436780",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e853d1a9-1f03-45b1-94ad-7c11287c7cd3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a965bb8d-9c5c-4554-89ea-1d61a3129aa0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d741ce93-f1ea-41ef-a67e-5e4c1752393c",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8590041-5f37-437a-b6e4-74311e5a1176",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2b88628-555d-4d59-8638-8638bb7c860a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8ae939d-8f50-4c6f-92cf-2f830b6594d1",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38429c91-482f-4634-bb4f-1d7dd56c1338",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f83e9840-5441-4ee7-bd90-e28cc85fdd36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "315bf35d-36e9-4aa0-94e7-884c9990caaa",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1cd86f23-f991-4e5c-b143-0d56f0842af7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac09ebdc-7ef9-4465-9bf0-21ef92bfea5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b781b5c7-9def-4380-857e-c7035be0f613",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51d81248-7454-4744-99e8-bb387677dbc4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10a4a31e-d0ff-4ec7-92cf-1d33f7592eb4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f22a761-2a26-4a3e-9034-75198b229e6a",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07f5d882-b2d9-4151-9ec1-8bcf873fa68a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "576c9ad6-8c28-43f1-8d49-a5fc35195d3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab5628a1-647b-4914-952c-d797c917c32f",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "652978c2-6eab-4fb6-95bf-77c55ac66db1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7a48d7e-5b47-4fcb-a6af-cebeb950e2b2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "84822390-96e5-4c09-bb24-6ec2bbecb0bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "040bbb65-18c5-4b58-bde0-7fb2aae08b3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0aef68e8-869a-4c2e-9d80-c37df02f29d8",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4694fe2-a45b-48e3-af4d-9d1049cbf2ca",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e75d22e7-c887-4868-9311-fe2eee12b3cc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "22aa8d7d-eb56-4baa-81c0-526298edcd1c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94d83d2d-cea9-412f-948d-374959ac1e51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9fc9527-e047-4f12-96db-44952b24fe8b",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82e6927a-5c44-4ff4-b9a4-9b5883254a10",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "78938b1a-f7d2-4299-a4f0-7dde58ede3cc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1412b67b-c8fc-4dbe-824f-9f0b2797ccdd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0a43d66-660c-440a-afa3-fb0c0fa72b1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd490023-802b-47a7-85a2-bfe4b162cb1a",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f365d91-3948-40da-aa25-e81b0c1e38f6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "692eae64-9fe1-444d-94b0-9e040a2b02b8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "961c9623-4473-44b5-9742-c2646faa8398",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18c741ac-9972-4410-8784-2eb74c403e8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c6cbdab-5b80-47df-a2a8-8c3fc49963db",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6490b9a1-9e83-4948-a3d5-129cc2a0e57a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb88ca15-ba97-463b-a249-2ef26bb00ff7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b44ec9dd-5945-4b46-8f06-92abad592bac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b6ece3a-3655-4081-ba1d-afaf3a425288"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64fe8956-36e2-4d67-82a4-a0d07f543e54",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5d194c9-16d4-44d9-89d0-512cf8ed6108",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e403d35d-0bbc-41ae-8085-769eca2bf660"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "963ebf68-3160-4911-813a-ea6af158e7d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b05133cb-2562-44db-8207-4296643b119b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cebe82f8-d7ea-46b9-9ddc-7eceac33ad4d",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e039a8cd-5955-4ae0-935a-eee10e7c23c8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "11b3b6ff-1e3a-43d9-a00e-6a1a36c69c3b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fcce4480-8f4c-40ea-b9c5-50590f4bb953",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a664032a-566b-43a6-b978-ea4c926a285f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58ae1422-bd1f-45cd-ad53-f5d412a6efd6",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30685d91-dc93-43e7-a398-76079635377f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3243f85a-739a-41a5-9742-25baed5bce9a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "393975a9-dc8d-4984-9099-931cf5ac37dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a421735-e43e-41f8-b175-3644fe293e3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da26b063-c4c7-4dc7-ab97-7a0031f1dc2e",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7051f51b-51cc-4559-ad07-c3d35c47eef8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9e7db970-8bbe-4c86-903e-c571512148aa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "11426198-d837-4bc6-99d9-5aaa6be4dfa8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d233dbbd-d5d8-4ab0-8d7e-c9aff489df49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9d418a8-2836-4a27-9565-4b0f0490b5f5",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e533176e-7ce4-4c90-95ff-ad260ec66dc5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f526bb1e-5f9e-4cca-9795-874d9f064dcd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "50260cd5-821c-4118-a0c1-829a10340c69",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8138542-393c-4387-81ac-c457c35dd289"
                        }
                      }
                    ]
                  },
                  {
                    "id": "508efcd5-4146-47e1-bd35-e5aab97fb4f9",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e5a872f-bbb8-4d6d-a362-8f05e683cac0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ecb1818-0e79-4179-b0e9-078672ee0826"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2b33ea2-6b5e-4f7e-a6b7-9d91c5d681ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ffd9e7c1-80e4-40e1-8c84-cdc95ceb95f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19fbabfa-4508-426f-9287-7bc47308205e",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b0620c3-bfed-4488-b411-13be7269a82b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df32bfdf-ad52-40f9-8329-a194e6e2fe72"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ded99167-9de5-44e8-b2a3-47a586dd3e89",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d060a0d9-ef7d-441c-a235-371c735c3e5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b492aa6-5548-4947-9a7c-b05e98dcd043",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7245f2ff-b0de-443e-bca6-b8c9fb83476b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84db50c1-de66-456f-9e39-12f95ffa6c29"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "87b98a1f-5855-44e7-87a3-3efc9c2caef0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9285505-7478-4692-b669-fe339b4f3e7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f450769-0271-4e27-a1fc-4971e214c076",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b51ef082-0d80-42b3-b902-d662ad28b023",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e84eeff-ec33-4beb-8dd9-64c18af91792"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "56b67d5f-2646-4777-a076-c8505df60fae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e1d0998-7e52-4d8f-838c-09d2630b5e92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "607fc596-0fed-4337-bd48-98fb67bc6890",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc307c36-a3e9-41d7-a439-29fe8c3b923d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f8e34de-eb4e-4e0d-914b-25ca940e0a2d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a857564-f6bb-401f-9c10-a1c7619599b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e050b2a-3c56-45fe-99b7-e7b8ff644332"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af7f14e7-7df3-4410-8eba-f436a7aed95d",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2239203e-d3c8-4089-8a15-01cc035bf4de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7fe92ff7-a0b0-4ad5-ab6d-381ad1842731"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "03cbb599-6595-471a-a2b0-c1ad9a2740c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "793a3f05-ecd8-499d-8014-897c375abe27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4310fba-0127-4768-af3e-96df33e66b2e",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8682e483-0aa7-475c-a9c6-2e7fe802577d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bae3a56a-743f-4b37-907c-333ce4d16a49"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5757fa4-f11c-4b56-8e49-06d1feff2b5f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8dbc045-790c-461f-a233-657842b9df15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8b7f052-ebcf-4a58-b381-0e594c74fcdb",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1bd8b5c3-73ca-43dd-bca4-f3e25b2b295a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9bab2f1b-474a-446a-b59b-878167ab591f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f54e0216-3e4a-4b84-bc20-e53782ba7695",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f22b13d-e2e7-463b-95b3-f602b7e74514"
                        }
                      }
                    ]
                  },
                  {
                    "id": "964ff9d8-ff6e-4533-a0ba-d43d18ed298c",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef5761b7-0208-4e9f-8bc2-017452491f39",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bc14051f-13ed-4436-9dc8-0c9afb81ca87"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7999bad-1133-4928-a734-ccd55dcb82f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a092adb9-54f9-4b91-8df1-7740ddd345e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5265a85-084b-4c93-8984-f32da959feda",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "338990a1-58dd-4357-80dd-05712caaaaf4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c8149ff5-da66-42d9-9d8b-de8199ec300c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d64272e8-5ed8-4ed2-8e68-061e4c56cc30",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f6d7366-ac20-459b-abb1-8b26bee3376b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d98c75d-8c0e-4400-af94-de0b6ae32439",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0dfb9512-f805-429f-bd84-66fc122c4999",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "86dc111d-c5f6-409b-949b-1ca94aa05309"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "82d34fbb-fc6a-4a36-8db7-168dc9722e0b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4ec772b-4a04-4d10-b0fc-e7b5e58fd6b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e06d4307-3955-462d-8363-060824bd6ed3",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "515414d4-a5aa-4ff2-9157-7e96b0bf4c2b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59d9efaa-e71e-474c-b957-93bfc2a4aecc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ecd54fd5-8fc8-4c52-a13a-9b8c6bcbde70",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aabc5de3-3d63-4744-8d1c-04e7bf83d4a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b11c1e2-3dd3-4bbd-b02a-f38848dbbcab",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a772c91-ed49-4bae-bf59-e06a8f4a2002",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8a56e8c2-0ce8-462c-97d1-45b8d38c94f2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2a80b54-502b-4302-bc64-ff56c55bdf10",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ec69a9a-b0b8-421c-b174-c2bed957bdba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bf96937-643d-4dd2-b1e1-61697208aeaf",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df1aed6c-f062-4b9c-88c4-68ba26ce8ce2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aefc4eed-999f-44ee-ae7d-592d7f4a9b9f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d539f240-e197-4954-986f-de83fd0ba2c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07cd9ec2-a641-43d8-aeae-644e6176e6e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a29bbaa6-f9e2-420d-9eda-12f8d97004c8",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4efaa17d-2b10-4f12-b672-95e1f26dccd4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c63af0b0-3b2c-4f39-b1c7-a77d8a162dda"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec0b28a7-7702-424a-a2ce-587bb6643fca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e5e52cc-6dc9-4649-97fb-e4844beb353e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8b8e200-88c5-4509-ab60-71ecc25211a8",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acd41344-bd4a-4ebb-bb3c-e0d5d4e4ccd8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b1f2f582-8a20-468b-bf1f-c136b4a106d5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0758007b-defb-42c3-a556-8cc7d18a1335",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de43e397-a288-4067-b08a-7e36f9ada7fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0caa39cd-b71c-4d84-bea5-3f4aad8c3536",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97c9ba63-3b35-45c2-ab3b-2d97b9e5ee2a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1dfcc438-7c1f-4e09-b6cb-07fd1b70134b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b7491b3-d586-4758-a824-0f085198d55e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "717b869f-c67a-43a2-864f-78ba0b07e30e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbd32e63-98f4-4df7-81ee-155b96bb9483",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b60f7504-b446-48ce-914c-15c4cc623366",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3e534dc4-4b78-44a5-a496-b7ec74d0cdb4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed435a38-8cf9-4591-bb34-04fe7e7f45e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d69435b-4cd4-4c77-9c7a-4ab8822f3d55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b43940f-622c-462a-a5fe-f19b2453e2b0",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b92993fe-92fc-4354-b820-8b46337c7508",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a092ba78-9a08-4a69-907d-29a21bfb0548"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2625e795-1c3d-4fab-b301-2897a607aa1c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d9cd022-0417-45fa-b2f6-604ec9daa33b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54f04c3b-510b-4751-b71d-f1e091ff1671",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1ca110d-c10a-4499-a0be-5458e24842ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59eb3fd0-c276-4707-b867-dc01675c1720"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "57edbb0b-c483-41ca-92a5-86af16a62298",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d8399a0-1727-4bc8-b05b-3969943ae4d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5b5dac8-8006-42ed-8e24-f56ec7291ff6",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d70f6caf-5cce-4d63-87ce-486177db8e13",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6beedf0f-66cd-4eb5-8e82-2b999937d85f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4b02c2d-e206-450f-8add-2c5a7ddbe541",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74f58706-108f-4e45-ae2f-314e616c16c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "642430b1-9c8a-4a20-8cc3-66bbfb655d2b",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a590005-fb91-4f11-a6ae-3023509a6f70",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c14ff528-8836-4b9f-9e70-b4b5cdebeb99"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc6c2454-5699-4c12-a99b-167e82a94bf7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4dd91bae-ebb2-4c25-87e5-d9bfd87e021c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2dd15d4-edee-4f06-a0f3-2fd5183c1d50",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6193d5b9-3014-410e-a383-b9163baea92d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b568da49-2286-4029-860f-b878d2a76ef7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f310fce1-6817-4ed4-b731-d981532a60ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28dc59fb-937a-48b4-a81e-248fb431e86d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed749499-429b-4079-a6d6-9a14a95743a1",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75378390-11b2-48b0-ad0b-f8baca300328",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "605caed3-1704-467f-94d2-4e464877e479"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f852502-9c8c-4f98-8eeb-9cc490d59c92",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "817314a9-f0b0-43f6-ab73-be05de4e6620"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c682d7ef-d5fc-4755-8aab-6faa95c7521a",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04f7ead0-58bf-4b0e-b515-ccf7406cbfe4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f41c13fa-2136-4bdb-95a3-961f12142824"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb45bdaf-ce6b-4b2b-bc02-1aab558efe49",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aeb7ae13-ef70-43f5-807a-80a41dac0b65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17675efb-7764-4a90-9df8-230027ff8e09",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d53f31f-2836-4d9c-a5ab-31a4c5b95866",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd8ee232-73f0-4d51-8baf-234b7211acad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6447e04c-461d-4ebf-8b92-6c2cb262b1f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01aeeb15-9c0f-47e7-bd2c-382d34a7e19e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbd21b83-b2af-4274-b304-905a6ac748ae",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d520ad95-83c3-4ac2-9e90-da5b7ce4397a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b2782ce-561a-4b3c-8e84-117efad62b4c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "31bf0271-d8b2-4188-880e-cd248f187e11",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "258522fc-33ea-43d4-8d4d-40e320eba4c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be64f64f-e8c5-486d-9e25-09745f719fa8",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "daa81b32-c5f8-48c4-941d-e1ff5fca2d83",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed1a9c67-e24b-4e35-a055-ac303e70ca69"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d7b6566-7c00-4ccc-8d0d-d78d65aff17d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac1a3cbe-99b7-448c-8380-68aa6a54a06c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae0df2fd-f109-47c1-9409-9d93c20ab6ff",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9355273a-28bb-4803-8d86-42a110dd44cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dbd9d73f-8442-4802-9b91-024045af1c4c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe1db1fd-4ec6-4a05-808f-0ac14fb0c161",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b771b74-2349-4344-91a9-d96f92945ec8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c617165-087f-4498-9ff5-117b48591c85",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2001951-9ff0-4249-ba8e-7c46cdedb85f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "665db077-a7cb-4711-b760-5888abd6c34b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d303758-101e-462a-b76f-fe8670980edd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "48104bc1-2bfe-4ae4-adef-be28a0165b87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "718d241e-1e4f-44cf-9766-75ef3dc929c6",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c32d7e6-7c9a-403c-bc9a-5c325bb0d611",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c2a24b45-c7b1-4b68-a22e-aa1f21eddf83"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4166f391-8421-4f6c-be37-4ff7f5db3bfd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f192e2a8-100b-47b3-86fc-bfe0a3e80c62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8f02caf-5136-4267-8d71-e5e57c239189",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f3eb9ae-9775-4425-9b2a-b428f629736d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3af4fc68-86ba-483e-beaf-a25730b587a6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3e16ce1-46df-415d-b34e-43d09a88a62b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b41f8361-9dee-4afd-a890-422a74d08871"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca4031ce-c653-4135-ae8f-646c602f7370",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "313cb483-fc67-4bd3-950a-64e52615d1aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25c2c5ff-5cb0-4b4a-86f2-4b7a0545505f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc252bfa-da7c-4f82-ad15-efff0a28f0b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb192aa3-ab12-405e-a83b-706eccf2382a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7820c506-1142-4b08-bdeb-d2053491dc5a",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ba5cd26-ced7-4ca4-80ba-783fc92b5b82",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f54e5c4-a900-420f-8ea9-4b200ebd0d11"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbedc71e-4428-4727-ac84-8e40a9ade59b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02770f35-9a1b-43e1-9f4d-131729a0b48b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93a95288-20e3-4ed0-87d7-a8da65a0a516",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75270b3e-7657-4588-9f77-8391e743c8a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b768f82-129d-4fd3-9cba-f46cb0acce96"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "253cbec6-0999-41f4-b83b-5bfc35afd3de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef34bcf0-c4a1-4423-bae8-a5dadf9c276c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5bf0ad0b-dd01-4e4e-84bc-f734898c87fe",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c20940f0-4b8e-4afd-9bc2-d1fc901193fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6f854a1-22a0-4c8d-8af9-5ff368704e83"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0339e5f-e76b-433a-9277-0fc4c07d6b9c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "455880c2-71c1-4780-8fb2-ccbf45add68f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2073b6c7-821c-489b-9636-2299554f0140",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a81bd142-d292-4a4c-a95c-8ccfdaf7a905",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d4a9ceb-ff7a-4550-b82b-bda0e90ad1a9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "45a23e1f-df5d-4120-85c6-ca202aeba146",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f22e970-8855-4f3e-99ee-41280fb5977c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "854c99fa-8f4a-4444-a07c-a22c7ebfb9f9",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cad4ae9a-4dbb-4ec2-8ea1-f2f3a2eb297e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05706cfe-f784-418e-bde4-154151e2cac6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a4122b7-2b58-4e0d-afdc-e00c8c501bc8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0500b6b3-1897-4163-986b-90532d85371b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c40942b-3a47-4836-bfa4-b05f469a4a34",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a68fd5e2-ccba-4300-b7c1-d10ce4d866b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4afb9bd2-0f5e-4995-9121-776fd4e04781"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b6da06a-86b2-4395-a034-6f90832de8f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9744be0e-7fd1-427e-9153-c6a2a772ac92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c979771-78de-4b90-b19d-e7385d15c4c1",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c403901-7aee-458c-9830-b6e399ec5b3f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bbc808e2-817a-45d6-9c37-4e161c5ae53c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "30c87269-6078-484d-ad67-d7eba143eac1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a019e61-f380-4ecd-86d9-4cbeb24fa220"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14dadab1-69a5-4cec-98d4-0c4b99deab73",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db6a40d9-2007-427d-a40e-7ca88f15789c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8acba21a-7e9d-468d-91a1-087353bca421"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fbdeb79-981c-4a5b-bc9d-7aeed11bba6d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ac301bc-3638-4c83-a39f-41255027b00e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "785f86d5-263f-4ace-900e-46a9310e4643",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "628e3a55-17b1-41d1-80e8-8079c3ee983d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93b37b66-8949-4340-9dda-86777d9e372e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6665b87c-81d0-4cb3-8790-2106a4fc8e6c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a53cfda-33c1-4e2f-b3cd-a7e758924249"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34e18546-22d2-47ee-8624-c3af17c74f5e",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "302fd746-d448-4efc-902a-0869479b7942",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "329a9d21-1e89-4649-afc6-e4733b3e1f7c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "703fa407-516d-4370-b314-e77b76eca064",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4104da72-ad6a-4ea7-b6a3-3f4445aeea8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "872000a8-3de7-4354-a367-ea3ac3ca58a5",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f478f20-3401-4a50-8254-5f03637b0595",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ae67147-cab3-40cc-a057-8926269955fe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "560e24b5-422f-4e56-8409-ecb2135445ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a344e0ac-277c-4b70-a270-3c16b9c87765"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ce3ac2f-ad73-44e6-8c0e-3661bd16938d",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c84d7d6-9c39-4c2c-aaaa-aa9bd3c40012",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad55cb02-2379-46fc-9a3b-e5f0103b9a95"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "02d82586-303c-4c40-a84d-943266bd4fc3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc9203e9-2da9-4ee3-923a-c89bd91f0e0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "241ec5c3-0a6b-42f7-9992-fde767006c62",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76e82a3d-8164-4d13-8d30-dccbb103cb69",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2bd3f19-9416-49e5-97ae-a700f5354fed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a69efc4f-855b-4f3d-84c1-c525b68a03f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23966184-d4ab-4d7d-907c-6c4989ef112b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a2aa007-baed-49e3-ac9a-f751ee4e0861",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab8dd6e6-d9db-4b76-879b-1b163ac18c18",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd20500c-1e8f-440e-88f0-31367a82e708"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b557589f-98dd-4630-8369-29f31746580a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a7a40fa-fd56-423d-9bb3-4ae39a979bbc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1381891e-8b01-44e8-9904-11662b296c30",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc060b69-3796-4ea4-a471-673d0bbf0ce9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "43d5a079-9f02-4138-a7f3-28b38d3bec2f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "64f1c737-bec1-4efa-bd3f-f639c2d5dd2a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67cf80e9-1a10-4cff-9af5-9287f623f299"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72a0ee1b-643d-492e-b089-e1b8cea658c5",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7fe3424-1c3b-4af2-a77c-64f54e626b3b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8b4376e9-d6bf-4baa-9fd6-4654a731211d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c390523d-1e6b-4c7d-aa67-3eee6c25d306",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "910499f2-237d-4130-9fc6-084a65ffa44a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec266f2d-04ee-430e-a714-01606a00d4b5",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31652d23-12ee-4810-90f9-864e9b8a2385",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f81a2440-22f6-410b-a87f-f4e780558338"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "541c51d6-dae2-49b2-9083-52d498bd8c8d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63f4a6f6-6504-489f-823a-f36e451f1326"
                        }
                      }
                    ]
                  },
                  {
                    "id": "344f88ff-876d-492d-a192-fbe03726fa5d",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c5d72fb-df94-48d7-80c9-bbd3fd8eae0b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "07b80f8e-d26b-4f64-9a03-d073247e6ef4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd30b0e4-8a6c-4a3f-abfd-0b41efa95b11",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "32a97fa2-66f9-4792-ab81-c830a68d7280"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba91c5cc-64d4-4045-abbe-f216ca5c89ca",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a81f2537-0b42-48ed-b02c-efc99998263d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "04bac96a-01c0-4b5c-9ada-3c34cd83c43e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c289857f-0716-4430-8209-8bdb4489ae98",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00821ce5-b7e1-49e1-8303-65aea9e85061"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2e45cf2-35d6-4e28-97dd-3cf534868a2c",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25634873-c0cb-4fd8-b050-edf768b62b9b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bf96214b-a334-42a6-ab71-c65c4dc4c7c0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1db5add-fa53-4b1e-8008-230ed34f122b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8768c759-2972-4311-b91f-6a3346a85d23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "869b31b8-67f8-4290-bd17-fa7a97dc1a7e",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e5dd310-3933-4399-bca9-db78dbeadff4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c4923294-2689-4a1d-b2f2-3ace9c7125bc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "030d9722-068f-48f0-a483-7a4c13ea68e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8149573-eda6-4287-aa3b-08e24cf219e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14d8a838-fe6a-40a2-bdc8-8e12410b8a5c",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a5029b5-fd59-4bda-b934-967bbaa3fb1b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5079975f-293d-439c-9427-31aefd3aa5f2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5e36192-9294-48a9-a58c-277e042e592a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f747ee30-bc97-429b-b276-8b3c7cfdc0db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c4e7d13-1ebb-4d0c-aa9d-e1b5a78fd643",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d8dfbfb-db9c-4605-af8c-4460c1313898",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "305ff848-1140-4137-9c3f-2da3e015850b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a9e962d-67a1-4232-bc4d-b55644bf25e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24969e74-515e-4564-9438-287c5f4c5ce3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9bd5a8de-bd38-413b-b5cf-8da19aa57eb6",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f983d3cd-96b1-47eb-a8a1-72070e9ea364",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9354bfec-abc5-4139-91e0-7965a7571ed7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "115b6a83-e0a6-41b5-97a0-333b04e33ad3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09a046b5-8c46-41a1-b964-21bf25cdbb22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "428be35c-a9b3-4a63-9bc1-769018ade26d",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76a7ddf5-e29a-4ac9-8b4c-7bb3d25c7107",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d7b29b55-0fed-41af-92a1-073834b933ad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "00748039-22a5-4a4a-ac0c-1eabbdd2cb25",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72ac0300-d4d1-46ee-b19e-d947f2e34349"
                        }
                      }
                    ]
                  },
                  {
                    "id": "405de67d-392d-4e41-8d5e-2869e249171a",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08dff02f-0ee8-45fb-8ccc-d2ec8ffe1c40",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2d207d41-aa71-454a-8169-573dcb3615ea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "56260fc5-72ca-4ac3-a672-ee5dfb271daa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45084722-4673-40ca-87c6-4c5398469b16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2df9aaab-4bf1-4a07-a8f3-0edfd3664660",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad281773-5aa6-4695-ad95-510545258b72",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "53e40a63-8a2e-4782-8ea8-223e99fb07a0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf1f3faf-b40e-4a42-b063-a8215eeb9c4d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b6b953f-e9f2-49df-a181-461c111c48b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ee6d805-720b-4545-975a-de4381d8785c",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d3c2bf6-062c-4d49-b5f3-b7f33e364124",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "10251d95-c7dd-4aed-8ad4-d360396b604a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "28ea0ac5-1396-4c97-9d9a-5bd4575bc0f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "881e3c29-900b-497b-b8cc-4006f62c1a65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e284453e-2845-48e2-a242-e1aafb5203b5",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d04eece4-ed39-4d19-8f85-42534b830fde",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "403de0b6-0f85-4325-8bd2-bc3dada9058a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3054e9f-4a7c-4ac6-bee8-5f15618f0db5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85356d79-d3fe-4f6c-ae62-fe0ae470fe56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed328132-71cf-4d1b-a99f-9945702824fe",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0569edd0-b6d9-4381-8d2e-770a4cf67f51",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b0b93985-f9d8-496c-bc2b-f7207e7a4b06"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9ed3643-b6a1-41bd-8b12-35fdafee24bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "813cda9d-d213-47f9-932f-53cfde74bdd7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "225115a2-1e0c-4cfd-881c-768a5906e147",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24bb8c41-135b-4451-958f-daa5ce176a05",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "72405c46-60a4-483f-aab2-33de40a15881"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf54a5c9-a4d5-4762-8c12-e09d811db99c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f52a1c65-502e-4b6c-ad7a-9c7e7e492a78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c47e655b-0039-4ec6-8679-8c7aa2596c13",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47aca06f-a793-4dae-85d3-9d1e19e34f70",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "43d445db-d690-4220-85ad-8ebf8786b494"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "73ecbd03-6a70-4cb1-8ad6-345a9d9a3a74",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "206e69d8-1745-45cf-9afc-3c72018f780a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ee9415d-1848-41b5-9f5f-99e502d416f6",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "620a1cc4-c017-491f-aa91-265f636a1749",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "52537290-f9c7-4f07-bbba-b4c562640d2e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3aac0ca-d088-42fa-a381-6097f3c20363",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5613e420-6e95-4e8b-bd2c-999bce7c43d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92879149-fdfc-4b07-9c63-3f4224cecda3",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce89e378-4817-49f6-9608-dce10fe77d5c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3daa1acd-505a-4282-8bbd-2b01fdb0069f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "64975596-9926-4ad0-81b4-55aa4eabf627",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "920a7af8-31be-4495-8197-9ee914560078"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51f5a97b-c2b3-4c68-9f7d-47fe93d0f90c",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95695e0a-25c5-4e69-a2b2-9b7080246e0d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cfd7dee2-d850-4777-9aba-5cdb8ed293d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b32597fb-7adf-43c8-8571-65812c94ba49",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "32b1bc1f-ee3a-43c0-aee4-9dcdcb073c16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b3ffb5c-f873-4d28-92ad-b8d6a3b59ad1",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad86ddb0-ef38-46f2-9f2c-14d00bf971d9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fb3e5c9c-ad93-47cf-bdb1-fda5c045864b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6aa2603-3f44-4f48-bd01-a714539f4892",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dee5c22c-8a18-490b-bf75-5cf5bf3c9b08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e4cda10-e8d7-4b3d-b8b6-c5cdc5d3f7a0",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a567b386-4fad-4388-a9f3-a6f6f66fff39",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9486c8bb-47a7-4a15-a05b-8b152654b232"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "76bfff5e-4d48-4a6f-a06c-a79581a7e20a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4deebb87-91fe-4734-9c53-f0814fec502a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c879f16a-0334-45e0-871e-7093b9567f8b",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98b12833-4a2d-4608-83bb-5a5c1886c855",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1190c7e9-d80e-4a42-aa9e-dc2fd9ad1474"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c3c859e-2fef-46fe-a526-d9fe1055b854",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "089d96b3-2d15-437c-b698-a29a626406e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ac0a1c1-93aa-49e4-a4c4-282b62412cc9",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f6a4121-588a-4f65-925d-91233d20052a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "13e0877a-1250-4a4d-88f3-b51de7d5efec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cb3404c-47f6-4129-8065-b1e3d65763cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42179188-ccc2-4d5a-8af0-eaee008ec6d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2f07354-324c-4289-8716-23d6150c3c58",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "597fdfd8-d284-4cb0-930b-8f0487ea0596",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cb4efa31-e23d-4557-bf8d-897f49b4d7e1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c3533bf-d600-41f6-bfb3-b7bb0a22c8cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f118c68-47b1-4d6b-b167-a65c65601095"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df553d3a-b057-4db2-914c-e5c3ab15501f",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4bd9d9f5-5880-4584-8999-31e838a2bdf1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cd5d11b0-57e6-46ee-9007-e0e6aef5f30c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ca69f88-2d53-4565-a771-63910cda91cc",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cad0f3e1-c915-42e4-8bfb-b7e0c7236b5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "131d8b02-d7e4-4b3a-8992-921da45d3f8a",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c21579f3-8b7d-42e9-890a-a425b3cd3c09",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2c255221-1baf-4952-9a0c-4747ebf7c44d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "140c97c6-4d71-4665-8fd0-ab26c2e50180",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78eef781-6072-4319-a857-c5466364a102"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b869960-095b-43c0-8f19-6c2429357323",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71413185-a6a6-4309-818d-b4f5adde780a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ca2f8e65-6556-4007-8a89-c83ea2a4f2e5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f14eaf9-1c8f-4b99-b93f-daf46026ce0b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ee1d9a3-fff4-4d6a-8031-6e7eb6fef88c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8549178-b784-4712-9458-328c46d40c63",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3333913d-2530-4f92-afb9-3688377c5a2e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ed666a7b-6a97-45fa-9a94-007a048e14dc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "af4cfc5a-7fce-4d7d-855c-ee4b384db29d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1836d933-01ab-4f04-8eb6-ccfc560257ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e7f69ef-c318-4c38-9a5c-a15e67800411",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1c157f9-c2a2-4994-9ead-e939c6ddb7ff",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5e644c6f-f1b2-48e6-87d1-4c09072e48bf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6bc1c8a-0795-484f-ab41-2742c35c715a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd086fc7-6ec2-4e08-88d7-29c90ce21b8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f27fa04f-641c-4db7-8258-81b3d3b0070b",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56797c3d-2ade-471a-859c-b2bc9b4c82c5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "357ae6c7-3ee8-44de-bb9f-db3f3f4f15a0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "860e18ea-964f-41a8-8cfa-7b7bf219e949",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9dd905c2-ecfa-4114-8545-2e384cdcf7a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f543dd3-b3a8-4e9c-a186-2c74de57850c",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "710a8dc4-6ee4-4074-a6f7-041254373686",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0e03438d-46dd-45a1-9078-663213a1f10d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "707b4a6a-e082-4c4a-a3f8-64b0e32f191f",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a51194d9-33fc-4d52-99a6-ff31ddd383a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e772411-8f9c-4b29-8fe5-29abfa7ce15b",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "407f0168-df4e-4179-94df-ed09da95f0c1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4cdc4646-d09d-4dab-8863-6846750a376b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "01a5522a-4fda-4bdc-9cdd-9aca0f5524aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b750cd6-a3e8-4777-9b1d-ecbb27c4d24b"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d11b8789-23e8-4aaa-b8fa-52d672610a5b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8277a7e3-1349-4edf-8b85-d0baa165cebb"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "fadbc387-c3d5-4b70-897b-befe392a4efe",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d310d2e4-ce8d-4551-b23b-bc5ef267563b"
                    }
                  }
                ]
              },
              {
                "id": "d25c9d4c-e1e4-4b6a-9fe1-65d6a83729a9",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "3cc6fcff-a98e-400d-8cc2-bad97a18b772",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b848c4f-f625-4fb1-b056-b5474fd8a230",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "8a05392e-4ddf-4803-8aef-5da69f727852"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "197394bd-45a5-4455-88df-17d934ca9466",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "24234b7e-d1b8-4908-84c3-0ea50ecda133"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7dd680a6-1a1c-44e2-a1e0-90e02f3c945b",
                    "name": "credentials_verify:missing_scope:verify_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a229a9b9-c1c7-4e9b-a913-d64f65f86579",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "90d3a404-a3f8-415d-8cfd-b5c8735dde6b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b464f7a-cc56-467a-b4b1-9457485d8f32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e6eaea37-0c34-44ad-b88c-bbcb09ecd1f8"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "04675b4c-10b9-4ba2-9323-b89bf35abe92",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "cba9bfde-8997-4695-9009-f28ad5ea1920"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "c7513f41-e8fd-4691-9226-157e83584ef9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "afcc8888-fce4-41af-842c-480dba3d323b"
                    }
                  }
                ]
              },
              {
                "id": "6a637480-711f-4707-97c0-fde1a153e8ff",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "0cd4f2fd-e3a1-4eef-8c10-dad283dc3869",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42edfeb3-7b3a-474e-9020-b7f5aedbbb78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "414a96a0-19a0-45e6-bdd7-0e5d6cee35a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59169d96-7904-41bf-b42c-2be57ec0edf5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68506e71-175a-49db-8339-08e18cd6ab85"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "53ce04b9-fec8-4d39-a51f-daa107061b28",
            "name": "Positive Testing",
            "item": [
              {
                "id": "660854a5-cff4-4fd2-8865-c62e40c757d5",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b7e02e89-c04a-4755-8801-8302aacc3bae",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "f540bc15-a551-4a62-ab50-4f31e2d0e0bd"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d919f4c3-145f-4389-baae-bea71a8b733b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "43ded085-b4ea-4b35-b801-091b9ebca79f"
                    }
                  }
                ]
              },
              {
                "id": "bacb5434-7043-4c81-9b67-eab122d794db",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3d443e1c-f673-4856-9859-8aac6b3e0a7f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "800d3dcf-d213-4379-b69d-41c2f35caf41"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "53d2773b-6729-4206-99eb-011b720c4fd8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "305d6a87-b47f-4da4-8f46-11d9aea8ffba"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "77a0a000-b5d3-487c-8d08-4b28cb81a795",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:credentials\" scope",
                "utils(pm).getAccessToken('verify:credentials');",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "6a900414-d9d5-481f-a868-f8a0c1a6af86"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a78628ee-3242-4e30-9885-f134c6392df1",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "71402283-9fd7-4c27-9189-a8d3bd890e51"
            }
          }
        ]
      },
      {
        "id": "f1e50655-a080-4f49-8e5c-4fd417409db6",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "535eb393-d7bf-477c-b8cf-44de1e24333f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "04b41e86-47b0-493f-bf35-2261c398d500",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f45bd575-deb1-4e65-8b7e-0cbcd3f938a5",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "454d130b-32f3-4c7f-b4bb-85452fd18343",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "896fd21d-60af-4396-8bb7-767c65a60ef4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "39019f11-d9e7-43ca-8209-c0b3a50f445e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1d1e6e67-2b31-4f31-aef3-3f06b41e9e70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0a989dc-d1cf-44bc-a399-e81a798f880b",
                    "name": "presentations:missing_scope:submit_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5a39d4c-f460-4f3d-9ddf-58ab30867cae",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"submit:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "8c63ef92-aabb-403a-a21e-fd16f06adb2c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bf9d9e4-5584-470f-a4b0-7ce6d954f3c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a06c9ca1-fe42-4633-a1e9-7184b0ef47de"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5b57d850-b397-4681-9c56-6fe7409a760f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f3758c1d-75e8-46b8-a19f-c1a34192c3a1"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "877b9d9d-d657-47da-bc5c-14cb3c9cf31f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9f9bee6f-1cd9-406b-92b4-3ac8c89eeef1"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "db0e7103-3334-44ea-9b44-8452266c3aca",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"submit:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('submit:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "4d31b83c-6918-4058-a29e-4f91ea41b12c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "80ea2af7-fe82-429e-b8fd-8a126877ace3",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d665b4a0-5e76-47ab-8ce3-430eeb780cab"
            }
          }
        ]
      },
      {
        "id": "a1202470-5ae2-433b-b5a1-7e3658f3e090",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "f19d8904-7d65-4485-9221-27811682e477",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d243cbc7-73d1-450d-be75-d29cacc69725",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ce825cc1-3ac6-441a-bf0e-f101bc294ed0",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dce3ae7c-6f77-4016-9d7a-3b1f61482394",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7549cc3a-dfb8-4082-b3c3-f22c828b1922"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "08e2e26a-d2f1-4699-b284-f0d37bac8f23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "cce215ac-1dde-49ed-961f-b7bcdcb7c79b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6be87b9-4f89-48ad-ba25-c6b434ee4e9f",
                    "name": "presentations_prove:missing_scope:prove_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5dcecc63-eed3-4124-980a-471d7ae10cfa",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"prove:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "48e58ed5-cbad-4bcc-81d2-e281000917ca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a7fdb97-3fdb-41ab-b1f6-19394019214a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5f62568c-2391-4918-b74c-3af0f994c88e"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d87cbea7-e65d-4bbb-a762-3bc804fa0805",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e931ec5f-3df5-4128-93c7-e00f13582bcf"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "4eb876e0-ae1d-489d-83f4-56120bab8680",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "cccc74ba-f95a-4a86-a4e0-1a8ad26f53b8"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ff78b2d8-1ed2-47c6-b15b-86fc3cc27d48",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"prove:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('prove:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "f7d4140a-7dc3-4484-b2d8-db5483fef020"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8d442269-5d9b-45d9-a0ef-a14036e054c1",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "04e002f2-7c37-4a7d-a695-2067849b53c8"
            }
          }
        ]
      },
      {
        "id": "ceea5a1e-0d17-4abf-8449-bcf7ed810314",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "c0960500-e5bb-4382-b4e3-ff548a90d26e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "dbfde6db-244b-4ea6-9045-bba3b8b52b8b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "1b27e146-70b5-4033-8fc3-f06037c676ad",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c238f802-8061-4b49-895d-82638331ea34",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d62603cc-8845-4a4b-aa3b-e4debbdf2b91"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6dc42c8b-ba36-40cc-8b8e-7291b01c7e5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "eded60a0-67c5-46fd-830f-353cb602e54b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d364f80e-3239-4392-a2bb-c5aba3013da2",
                    "name": "presentations_verify:missing_scope:verify_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c71ecb4-70e6-4a77-b98b-9e650e693f58",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "885f28c4-c2df-4bd0-aa02-07a3d35281b6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "53b739eb-d531-445b-ac3d-f07cf2d24d1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2a2b1c6c-a1b8-404f-a545-264c4a69de30"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a0531677-6a7c-4e80-815a-6241f2b631f9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7a717f67-89a4-417f-af78-7848f014ae05"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "3184d735-fddf-4cc8-b6cd-5b2392532937",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d8bca777-9e13-4071-912b-79178f5784af"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a3cde458-c732-4027-837c-f183e6a84ddd",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('verify:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "bdcf6ec1-5fde-45f1-8d40-3b1437c35dca"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3877a235-da22-400a-b2c0-efe1071aae93",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "748e5c3e-7d96-4539-a284-bb8e900e8403"
            }
          }
        ]
      },
      {
        "id": "1d9a5f24-2c90-4b98-a0b1-9220cb624c44",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6252b8d7-041f-4a74-8114-757dcf1d4c70",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4e3c84d3-90b6-4757-b444-29fbb0c1bfd0",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "d1a26efb-ed75-43f1-93de-dc66bffeeafe",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d2ebd93d-515c-4b06-bca1-fe109726e448",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "87275071-cc41-453b-a266-6da5de85a623",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1909,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 260,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 509,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 959,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 777.9423076923077,
      "responseMin": 12,
      "responseMax": 8609,
      "responseSd": 951.3737276951259,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1681432527459,
      "completed": 1681432740560
    },
    "executions": [
      {
        "id": "e1c60b62-f9c5-4665-ab9d-e166b97ea010",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 251,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "21404746-4a87-4a54-8c8d-b0e8051cc223",
          "httpRequestId": "f7813611-abec-4e6f-b5c3-a94bb4a7c080"
        },
        "item": {
          "id": "e1c60b62-f9c5-4665-ab9d-e166b97ea010",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "7323cedb-7e54-4157-be7b-a4ca2f195573",
          "status": "OK",
          "code": 200,
          "responseTime": 62,
          "responseSize": 0
        }
      },
      {
        "id": "e8e3dc42-0c61-4818-b8df-64e997854c8e",
        "cursor": {
          "ref": "7b75cb51-88bd-4129-ae9d-1b22f3582081",
          "length": 251,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "dcbc0656-493e-42f4-bca6-6a88eeee5eac"
        },
        "item": {
          "id": "e8e3dc42-0c61-4818-b8df-64e997854c8e",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "7829676d-8404-4d9d-a14c-8cce6a518059",
          "status": "OK",
          "code": 200,
          "responseTime": 12,
          "responseSize": 0
        }
      },
      {
        "id": "e1c2844c-70ca-43f9-991e-5ec37444ac2e",
        "cursor": {
          "ref": "534a18c5-f195-4f0e-80a1-211512496723",
          "length": 251,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "b7079fd4-08a9-4343-9e7c-d8d9e329cedc"
        },
        "item": {
          "id": "e1c2844c-70ca-43f9-991e-5ec37444ac2e",
          "name": "did_json"
        },
        "response": {
          "id": "84e20dd5-d411-42fd-9e4e-feea615c965b",
          "status": "OK",
          "code": 200,
          "responseTime": 1150,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ab070ef-9248-49ce-be16-347038e2aa27",
        "cursor": {
          "ref": "9f707fe9-feec-451b-b5ee-2ac82246bee8",
          "length": 251,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "c9098fa9-ed5d-4e3a-a91a-eb9af83e0984"
        },
        "item": {
          "id": "4ab070ef-9248-49ce-be16-347038e2aa27",
          "name": "did:invalid"
        },
        "response": {
          "id": "96016085-158d-4203-8ff2-bebcc6d09968",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 740,
          "responseSize": 398
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ab070ef-9248-49ce-be16-347038e2aa27",
        "cursor": {
          "ref": "9f707fe9-feec-451b-b5ee-2ac82246bee8",
          "length": 251,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "c9098fa9-ed5d-4e3a-a91a-eb9af83e0984"
        },
        "item": {
          "id": "4ab070ef-9248-49ce-be16-347038e2aa27",
          "name": "did:invalid"
        },
        "response": {
          "id": "96016085-158d-4203-8ff2-bebcc6d09968",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 740,
          "responseSize": 398
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f500f79-33f0-42b9-ba14-6ca264105fb4",
        "cursor": {
          "ref": "396d0b56-36d4-405f-a381-567eb1bd352e",
          "length": 251,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "d70b82c4-420d-42f2-84e2-0f69c34361a7"
        },
        "item": {
          "id": "2f500f79-33f0-42b9-ba14-6ca264105fb4",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "4287808b-5f04-49c8-ab7a-350b84062508",
          "status": "Not Found",
          "code": 404,
          "responseTime": 830,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cbabea1-b140-45d8-9438-627cf1535618",
        "cursor": {
          "ref": "bb63038c-7276-46ef-988b-6e582abd8a2e",
          "length": 251,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "f45602ad-57af-4afc-b921-9db66e0293cb"
        },
        "item": {
          "id": "6cbabea1-b140-45d8-9438-627cf1535618",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "613091ee-a155-4905-b295-19d994ed77e8",
          "status": "Not Found",
          "code": 404,
          "responseTime": 1037,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36b2c242-35d4-4ecc-ade7-8df8164e3977",
        "cursor": {
          "ref": "6949481a-764e-4eaa-8681-41b2d7fd0665",
          "length": 251,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "01aed2a6-edb1-456c-801f-6c844675af4f"
        },
        "item": {
          "id": "36b2c242-35d4-4ecc-ade7-8df8164e3977",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "137ce2b4-412a-4176-9a23-816bd02ce8bc",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 43,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b49c03f-2f2d-4ceb-91a5-72956d9cacbd",
        "cursor": {
          "ref": "5884c598-bbb6-4187-8267-6eaa6160fe9f",
          "length": 251,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "4c9ac729-8ad9-4a6b-be28-8788af901bee"
        },
        "item": {
          "id": "3b49c03f-2f2d-4ceb-91a5-72956d9cacbd",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "b581a730-821b-40a1-8b2f-ec871658e0e2",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 632,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b49c03f-2f2d-4ceb-91a5-72956d9cacbd",
        "cursor": {
          "ref": "5884c598-bbb6-4187-8267-6eaa6160fe9f",
          "length": 251,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "4c9ac729-8ad9-4a6b-be28-8788af901bee"
        },
        "item": {
          "id": "3b49c03f-2f2d-4ceb-91a5-72956d9cacbd",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "b581a730-821b-40a1-8b2f-ec871658e0e2",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 632,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78943c7c-07f7-4211-8ea3-48fb83c92096",
        "cursor": {
          "ref": "c543527c-236f-4bb7-ba65-9ff289d31c34",
          "length": 251,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "bc0d0d08-ccff-4116-bf8c-0078bc025157"
        },
        "item": {
          "id": "78943c7c-07f7-4211-8ea3-48fb83c92096",
          "name": "identifiers"
        },
        "response": {
          "id": "70b2c5df-8fe8-4511-84f6-34a8d6b72c99",
          "status": "OK",
          "code": 200,
          "responseTime": 1084,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1273ca3-d5b3-4046-a132-97bc3f19c1c0",
        "cursor": {
          "ref": "6efb183d-4949-4338-9c6d-5f72380e9230",
          "length": 251,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "828cdaf3-e464-42c2-a4ac-28d9abb08727"
        },
        "item": {
          "id": "e1273ca3-d5b3-4046-a132-97bc3f19c1c0",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "93ff68a4-59eb-4cb3-b932-1984d04ec57a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 633,
          "responseSize": 346
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1273ca3-d5b3-4046-a132-97bc3f19c1c0",
        "cursor": {
          "ref": "6efb183d-4949-4338-9c6d-5f72380e9230",
          "length": 251,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "828cdaf3-e464-42c2-a4ac-28d9abb08727"
        },
        "item": {
          "id": "e1273ca3-d5b3-4046-a132-97bc3f19c1c0",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "93ff68a4-59eb-4cb3-b932-1984d04ec57a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 633,
          "responseSize": 346
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0129c0b2-e8e6-4bee-b1ba-1195daccf9aa",
        "cursor": {
          "ref": "4f2e5232-637c-4ca9-babf-61625d5b7465",
          "length": 251,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "3cc726e8-eb89-4831-a0d7-7069aad4d2b9"
        },
        "item": {
          "id": "0129c0b2-e8e6-4bee-b1ba-1195daccf9aa",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "b5d63acc-3ea5-470c-8877-563a3c88cd13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 630,
          "responseSize": 545
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49de55d4-f1a7-405e-9426-2ad8a92079a2",
        "cursor": {
          "ref": "76deced0-b6fa-4a26-b5f8-0198ec14f792",
          "length": 251,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "28f83508-90cd-46c0-b0ba-0dfa1fdc74eb"
        },
        "item": {
          "id": "49de55d4-f1a7-405e-9426-2ad8a92079a2",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "2107ff3b-3291-4180-b58e-6b4ce3748349",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 641,
          "responseSize": 553
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20bb77a3-561e-4d4d-95c4-2187edca2668",
        "cursor": {
          "ref": "4b15576f-ea5c-48b3-8f3d-51dbeb44008d",
          "length": 251,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "c348fd4a-ae28-4d62-99c1-e976ff5414f2"
        },
        "item": {
          "id": "20bb77a3-561e-4d4d-95c4-2187edca2668",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "05b56f2d-e327-4291-b7bd-28d7b8f3b2d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 628,
          "responseSize": 550
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "415fe111-e472-4cf6-98df-4878eef15bc1",
        "cursor": {
          "ref": "f5162ce6-222e-4bc3-8a65-77e0d635d451",
          "length": 251,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "62cd16c4-9739-4769-bc97-f4516d013364"
        },
        "item": {
          "id": "415fe111-e472-4cf6-98df-4878eef15bc1",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "b97dd6cb-d970-4133-90f9-0400e53569d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 658,
          "responseSize": 552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34030271-dce3-4c9c-ac6d-449390737965",
        "cursor": {
          "ref": "2013b959-1985-40a3-89b0-4f3d392a62b0",
          "length": 251,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "964b718e-d8ef-45d9-a73f-f020bde1639b"
        },
        "item": {
          "id": "34030271-dce3-4c9c-ac6d-449390737965",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "02196946-b224-4500-a00e-25c20759e46e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 647,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "756e0e71-575f-4a7a-9fcd-43b4b588bdc0",
        "cursor": {
          "ref": "976654de-3955-4cae-a069-d4d1b0aebeaf",
          "length": 251,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "0a906528-92f5-4937-b7ad-43cf157d71c7"
        },
        "item": {
          "id": "756e0e71-575f-4a7a-9fcd-43b4b588bdc0",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "466d1636-6f3c-4268-9d1e-70ec6fe19af7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 655,
          "responseSize": 588
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7072b6e6-19f1-45cc-8968-ad75c28bb4c6",
        "cursor": {
          "ref": "8170c6af-004e-4b05-82a0-bc2de2d54d97",
          "length": 251,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "84eb7e24-13f1-466b-9327-aa50fa2f586a"
        },
        "item": {
          "id": "7072b6e6-19f1-45cc-8968-ad75c28bb4c6",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "3afc80d1-f0f5-4ad3-abea-0bca01dd7466",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 639,
          "responseSize": 637
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05a23ee0-eca0-4f29-a941-7c4869a760af",
        "cursor": {
          "ref": "1b5c4ca2-7234-4c3f-8a27-f8910a3bfbf7",
          "length": 251,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "34488d4e-9139-463d-b653-029d57a3cf3f"
        },
        "item": {
          "id": "05a23ee0-eca0-4f29-a941-7c4869a760af",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "0d26a966-7350-4385-8ac5-834a9921add7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 662,
          "responseSize": 606
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30ab67ea-2736-481f-b315-3035635ebdd4",
        "cursor": {
          "ref": "90e511bb-c713-4f54-a7b4-d816f8e9f302",
          "length": 251,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "e140358c-6eec-4771-b639-fe0ea8de73d2"
        },
        "item": {
          "id": "30ab67ea-2736-481f-b315-3035635ebdd4",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "5aaf9ae5-04d2-4aad-8ea6-305ea3bbbeb5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 637,
          "responseSize": 603
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2d562eb-d760-4cd8-a816-23149c45e8e5",
        "cursor": {
          "ref": "05d60cee-574b-41ce-b8fc-74fae2d7d3ed",
          "length": 251,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "635d9670-84ec-446c-8532-f8391680b10d"
        },
        "item": {
          "id": "c2d562eb-d760-4cd8-a816-23149c45e8e5",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "fc394a63-b57e-4132-b924-db8672b966e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 650,
          "responseSize": 605
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebda3c08-7b8a-451e-9643-64febafada25",
        "cursor": {
          "ref": "4042b9da-6085-4b16-9a22-11868d990a21",
          "length": 251,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "ba89af67-df2a-48ff-b9be-bf44a7e94703"
        },
        "item": {
          "id": "ebda3c08-7b8a-451e-9643-64febafada25",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "8e080e02-cb0a-4319-8643-656fc49d4945",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 665,
          "responseSize": 646
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bd4e81b-1854-4715-9479-a1bb7414aefb",
        "cursor": {
          "ref": "f4b1e778-e095-4cd1-9559-3cf39679975a",
          "length": 251,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "65c525e0-05e3-4099-9555-fd7ca1d0f439"
        },
        "item": {
          "id": "7bd4e81b-1854-4715-9479-a1bb7414aefb",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "43e38baa-a7fa-4f3a-884e-46903a17866c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 663,
          "responseSize": 661
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49a2ebd5-fcbc-48e0-a993-2acb4a39a31d",
        "cursor": {
          "ref": "4d6719d1-dc07-4c98-99e2-ef92fc2faa4b",
          "length": 251,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "5c43b2b3-4693-4ad0-9270-030ae651151b"
        },
        "item": {
          "id": "49a2ebd5-fcbc-48e0-a993-2acb4a39a31d",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "f3c93845-7d52-4502-b29e-14fc5a941933",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 654,
          "responseSize": 617
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42c640e2-f2d0-42ba-b401-c1939b2c2fef",
        "cursor": {
          "ref": "81a66158-7a13-4a5b-a2a4-6901bac4f7d9",
          "length": 251,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "4edc0042-ad8a-47f4-a63a-9552292ba65c"
        },
        "item": {
          "id": "42c640e2-f2d0-42ba-b401-c1939b2c2fef",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "85861d04-6bfe-450d-bc3a-887086ce0656",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 617,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76a0e7b9-4d5e-4d39-b2fc-ff08419ff18d",
        "cursor": {
          "ref": "e6fb1afe-a9e8-47c5-94d2-80db761f7a99",
          "length": 251,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "18808965-6c38-4d6b-9170-35e86994ca09"
        },
        "item": {
          "id": "76a0e7b9-4d5e-4d39-b2fc-ff08419ff18d",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "e9e54c94-f5c7-42bb-b3d3-faba33851dc0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 678,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2ab42b0-614b-4cb1-a8f3-9b5380df33e4",
        "cursor": {
          "ref": "78d149c4-d41f-4d7a-bd9f-a74b7b40d0af",
          "length": 251,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "5b3ed15b-fd38-4e23-b501-f9039a8e4d1b"
        },
        "item": {
          "id": "d2ab42b0-614b-4cb1-a8f3-9b5380df33e4",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "5f7e7568-4934-45a4-af86-58550407a3ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 666,
          "responseSize": 666
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6ad0fda-fb22-401f-9a37-514ca275d13b",
        "cursor": {
          "ref": "f796189b-0fd2-4f0b-a915-df58d97a67a1",
          "length": 251,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "8591c32f-c419-4748-ada4-796b41dfdc42"
        },
        "item": {
          "id": "f6ad0fda-fb22-401f-9a37-514ca275d13b",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "79e80827-5679-4c64-a5c5-c38bf6b29bf5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 629,
          "responseSize": 594
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5abd1308-b386-4a3b-aca6-32c828767b63",
        "cursor": {
          "ref": "2409ea23-ceb5-4414-8bc4-db9845caefc7",
          "length": 251,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "e4543e13-3a3b-4b3e-bc33-6f727ed2a70a"
        },
        "item": {
          "id": "5abd1308-b386-4a3b-aca6-32c828767b63",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "64a899d1-a441-4573-ba7b-07639550abf0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 639,
          "responseSize": 589
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e3b5c03-6325-4db1-8e2c-87177b4273e3",
        "cursor": {
          "ref": "3b730c44-23ea-462e-b4e3-14cf856900b2",
          "length": 251,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "abb15a6a-d2ed-445b-8014-9cbbc7c5b58b"
        },
        "item": {
          "id": "4e3b5c03-6325-4db1-8e2c-87177b4273e3",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "fb01a41d-377a-4e11-b87e-d96401b04561",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 663,
          "responseSize": 586
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b900e9ad-b604-4027-9907-b9c44b263140",
        "cursor": {
          "ref": "c7fe2e6b-b19f-4fa4-b94d-2c47b5844f25",
          "length": 251,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "b898df17-e407-4089-9256-17bd30c84520"
        },
        "item": {
          "id": "b900e9ad-b604-4027-9907-b9c44b263140",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "29a2b42b-f325-41a3-b238-5d4840d4f106",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 645,
          "responseSize": 588
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fc93c47-6587-4264-abb5-83d15c72fa46",
        "cursor": {
          "ref": "bec61e94-83d0-4a12-9ff1-f22b52c411da",
          "length": 251,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "255dd270-6686-4ce8-ad56-99ce21bf14ee"
        },
        "item": {
          "id": "1fc93c47-6587-4264-abb5-83d15c72fa46",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "d9f1984d-e0b1-4cec-88b6-6c9d9b14e972",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 635,
          "responseSize": 586
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbd09a73-dbc4-46da-a4a2-e69571371c22",
        "cursor": {
          "ref": "0bc8450c-63e7-4227-9dcb-b735a924e154",
          "length": 251,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "3a1176d2-2a19-40a8-9ccd-917bd3840a3f"
        },
        "item": {
          "id": "fbd09a73-dbc4-46da-a4a2-e69571371c22",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "6c42f568-b39b-4848-a428-57add25b9967",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 638,
          "responseSize": 606
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5fdaf5f-e0de-4d51-8668-5e516d523607",
        "cursor": {
          "ref": "0e938888-b6a0-4951-a36b-7e95cd96cff9",
          "length": 251,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "fc4cb507-19d4-43a7-a390-f69618205779"
        },
        "item": {
          "id": "a5fdaf5f-e0de-4d51-8668-5e516d523607",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "caeb8146-eb67-4b76-86f4-74fe9c8ee015",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 709,
          "responseSize": 608
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63ee5d03-3c53-4974-8976-05bff61cb289",
        "cursor": {
          "ref": "9a644c52-c582-44f7-812e-3e51e8dae97b",
          "length": 251,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "413bd14a-efa3-4367-a13c-7430fe52aebb"
        },
        "item": {
          "id": "63ee5d03-3c53-4974-8976-05bff61cb289",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "e993df88-6b32-412b-a14e-1fe2a0bb8ce7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 705,
          "responseSize": 634
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30f3c292-a686-4476-9dc7-ade0a296fbcf",
        "cursor": {
          "ref": "4013fccd-5ca9-4195-8540-a6d4544b00ff",
          "length": 251,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "2b742d3d-b14a-4064-82b2-03e74eebd81a"
        },
        "item": {
          "id": "30f3c292-a686-4476-9dc7-ade0a296fbcf",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "dfd65113-cd84-46e3-b5c1-6506dc7276fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 680,
          "responseSize": 624
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e584e371-b9fc-4cf5-aa06-7d3e152bffb9",
        "cursor": {
          "ref": "5a22bc63-7ca4-45cb-9d93-ae552cacf69a",
          "length": 251,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "c030c2fb-d902-4133-9e28-a18d7e83a9ab"
        },
        "item": {
          "id": "e584e371-b9fc-4cf5-aa06-7d3e152bffb9",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "b7bdc5e5-e803-4fac-8af8-d7ae3351a53b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 661,
          "responseSize": 621
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73184bb0-9d8a-44bc-972d-0f536de1e5f9",
        "cursor": {
          "ref": "6ceb006e-ecc0-4fa3-acbf-edc25b96238c",
          "length": 251,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "96244c45-3fda-4cab-bb6a-9369f4eec7a3"
        },
        "item": {
          "id": "73184bb0-9d8a-44bc-972d-0f536de1e5f9",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "21eca80e-5d36-4283-953a-38a7624c9ef9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 670,
          "responseSize": 623
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d177aa3-3f6a-4b81-a527-7dffc44e7264",
        "cursor": {
          "ref": "1ad4e06e-fca1-4ad1-8511-eefe1a71ab40",
          "length": 251,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "42534879-38a7-402d-a3b3-801317aa0ab1"
        },
        "item": {
          "id": "1d177aa3-3f6a-4b81-a527-7dffc44e7264",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "4e042e9d-19b4-4c5d-b11e-905dfce2c3ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 641,
          "responseSize": 621
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4646ccec-4346-44a3-9960-76b335566d95",
        "cursor": {
          "ref": "317dd853-edc2-487c-8871-c4138387b6de",
          "length": 251,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "8f7f81dc-a0e2-47a9-ab01-f27e5853fad8"
        },
        "item": {
          "id": "4646ccec-4346-44a3-9960-76b335566d95",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "aa9017ad-dc5c-4b72-9b8f-183d66547dac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 648,
          "responseSize": 546
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b55feff-7fd0-4c43-b2a4-756d13290ecf",
        "cursor": {
          "ref": "cc3c5c9b-3a63-4730-ac6e-838ca1cc5cf5",
          "length": 251,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "d1527cf0-2d21-4c6c-b744-409d89e6da41"
        },
        "item": {
          "id": "6b55feff-7fd0-4c43-b2a4-756d13290ecf",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "f3d0d59b-3aab-4403-8382-7d0141b308ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 631,
          "responseSize": 1046
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db1a1ece-170b-49dc-8533-8a8195f931b9",
        "cursor": {
          "ref": "6b2b6d4e-7c5d-41c0-bbfe-c77a245e0dc4",
          "length": 251,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "64e0db5f-4195-46f1-a935-da8c11fcd8aa"
        },
        "item": {
          "id": "db1a1ece-170b-49dc-8533-8a8195f931b9",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "3d4b6c5b-f4cf-40bf-bc71-5f02f3db6a92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 622,
          "responseSize": 975
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95c3750b-d1ce-4f6d-9a58-e8a0a595735a",
        "cursor": {
          "ref": "593ed674-2674-46c3-88bc-f0bb0ae25270",
          "length": 251,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "aa3f4faf-8706-4816-ab55-73626c26a4b1"
        },
        "item": {
          "id": "95c3750b-d1ce-4f6d-9a58-e8a0a595735a",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "f71190be-e869-4ed4-a9ad-522773faa6ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 652,
          "responseSize": 972
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86d1eb2c-14be-484e-ba5f-8caf8e64cb54",
        "cursor": {
          "ref": "c66275d2-48a8-41c4-9aea-505387180689",
          "length": 251,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "f5defb33-e81d-486a-bb44-a05297a1ebcd"
        },
        "item": {
          "id": "86d1eb2c-14be-484e-ba5f-8caf8e64cb54",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "539c5eb2-dfd2-455e-8cfb-2c36c2bf2f04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 613,
          "responseSize": 974
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cda9d04f-9b7a-4464-8c52-c3425a986f7a",
        "cursor": {
          "ref": "d3e1bedc-a7d7-41e1-b1e2-bc325e077c6a",
          "length": 251,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "98b5b96d-29b7-4a3f-829d-fb114977a79f"
        },
        "item": {
          "id": "cda9d04f-9b7a-4464-8c52-c3425a986f7a",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "14e45eb3-feae-4da6-8090-f62a3efb39cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 631,
          "responseSize": 1377
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f0f83db-1d20-453e-ae15-36f6bfd1663c",
        "cursor": {
          "ref": "585d287d-ac55-4e6b-aa96-5e98d0683d73",
          "length": 251,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "7629bdb4-8b76-4cee-9bb2-4a2a3ebb3a0a"
        },
        "item": {
          "id": "8f0f83db-1d20-453e-ae15-36f6bfd1663c",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "eff73339-aab5-477d-9631-d5acc2cbbc62",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 760,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c75345e-2247-4718-b6e5-f0577c1cd4d6",
        "cursor": {
          "ref": "cc4e7b42-6068-43ea-b549-890bc89d44cf",
          "length": 251,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "f1038100-793a-4721-8dc1-e115a6d6da95"
        },
        "item": {
          "id": "1c75345e-2247-4718-b6e5-f0577c1cd4d6",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "2d160293-7e6c-48f4-a887-67598f88145c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 702,
          "responseSize": 1005
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9df29b2e-aac8-45c0-a6d5-ff5542166e63",
        "cursor": {
          "ref": "64402e2e-a6cb-4305-b745-cec131dbcdae",
          "length": 251,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "58673f24-3c8e-4629-9cf7-aecd2d8cb703"
        },
        "item": {
          "id": "9df29b2e-aac8-45c0-a6d5-ff5542166e63",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "8b549c37-90f0-4fc8-804a-7543e01d3a60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 661,
          "responseSize": 1385
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dabf3ae6-1471-4fb3-984e-ce86e840fb8f",
        "cursor": {
          "ref": "43b48248-ba71-42d8-8ec7-b5d22c095e61",
          "length": 251,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "befaeda3-21ea-44a8-a636-172c9c6e22e6"
        },
        "item": {
          "id": "dabf3ae6-1471-4fb3-984e-ce86e840fb8f",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "ca971695-34db-408c-a4f6-34d890976100",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 671,
          "responseSize": 1314
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "650cf4c5-06c5-4ecd-9af8-1722bad6b353",
        "cursor": {
          "ref": "a0779c71-b443-4790-a1bc-6b78eddabc4a",
          "length": 251,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "fe4b65c2-8e79-4753-8862-b9ee85d07aee"
        },
        "item": {
          "id": "650cf4c5-06c5-4ecd-9af8-1722bad6b353",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "1e6a939c-2a2e-4b0c-86e0-47b4a1653b34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 662,
          "responseSize": 1311
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "caa64c39-08bd-44aa-a8f4-75299b9900f7",
        "cursor": {
          "ref": "9b7e6fec-400b-4597-b8fa-b5874ca2b180",
          "length": 251,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "515857ee-969c-47c3-a014-417f499b7bf6"
        },
        "item": {
          "id": "caa64c39-08bd-44aa-a8f4-75299b9900f7",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "278b75f9-573d-435b-85cd-c418e803ea1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 663,
          "responseSize": 1313
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "627b113d-93ab-4c6e-9164-a01344c14638",
        "cursor": {
          "ref": "1fa87385-cbbd-4246-96d8-362da392dc86",
          "length": 251,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "492538fc-2570-4673-b4c9-8dc58ba9decb"
        },
        "item": {
          "id": "627b113d-93ab-4c6e-9164-a01344c14638",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "e571d08c-8fb9-4d0d-8361-a7c046d34866",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 734,
          "responseSize": 1716
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f14ecac-7501-4552-9748-83388ce250c6",
        "cursor": {
          "ref": "13552afd-4d65-4346-b1de-2044a9ded27c",
          "length": 251,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "79c98141-88a8-4783-96f5-4b6a8b1be1ec"
        },
        "item": {
          "id": "7f14ecac-7501-4552-9748-83388ce250c6",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "89aa5530-ff17-4a6d-8466-be04d3748deb",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 852,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6019b21f-89ed-4dca-9b67-4f83a41c10ad",
        "cursor": {
          "ref": "32fb5eb3-8596-4b27-9e9d-fbe689b46791",
          "length": 251,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "59c76528-14af-40fd-8599-cc6aee03b687"
        },
        "item": {
          "id": "6019b21f-89ed-4dca-9b67-4f83a41c10ad",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "b33b2d6c-4197-4b97-aacf-39d606bee0ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 955,
          "responseSize": 604
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7e33637-d19e-4e83-88db-42edbf7cd29f",
        "cursor": {
          "ref": "1fc96f62-b334-420a-ad3d-07925e569210",
          "length": 251,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "6818819d-57a5-4b38-8e8a-62a5f8c4956f"
        },
        "item": {
          "id": "b7e33637-d19e-4e83-88db-42edbf7cd29f",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "50f9558a-97bd-48ad-9f39-cbb86ff8adf0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1640,
          "responseSize": 628
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5115d948-bdf5-4df1-b1b2-799e25f2a690",
        "cursor": {
          "ref": "9d4eb9c8-a7ff-403a-b6a1-d5d0ee41ebeb",
          "length": 251,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "6d2c2012-e0ea-45f0-a5c2-b168e5736c83"
        },
        "item": {
          "id": "5115d948-bdf5-4df1-b1b2-799e25f2a690",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "5dc9b6d3-72c1-4c40-bad4-1c6d61c31e57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1716,
          "responseSize": 609
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5879af6e-ef38-441e-b93c-bc9ca29274ea",
        "cursor": {
          "ref": "2b0f2436-766c-40c0-9af0-19e90792380a",
          "length": 251,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "b1e6814b-d756-47f8-9825-0a5803625a01"
        },
        "item": {
          "id": "5879af6e-ef38-441e-b93c-bc9ca29274ea",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "8110e70d-9157-43c0-a300-b7547f9232cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2024,
          "responseSize": 606
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81192ccd-1e0d-4657-96a2-7bcf397b4eb8",
        "cursor": {
          "ref": "dd527cfa-39df-494c-a5ef-839152f9dc60",
          "length": 251,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "0bb47abb-cf90-4bdf-aa0e-270fac01927a"
        },
        "item": {
          "id": "81192ccd-1e0d-4657-96a2-7bcf397b4eb8",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "11e5c7c1-2fad-4656-94c5-2f395af033e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1202,
          "responseSize": 608
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c437e08-2546-4b8d-9d01-aad0ead993e8",
        "cursor": {
          "ref": "ff7e6dfd-7f5a-41bb-973a-adbc2733cf09",
          "length": 251,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "620f1a8a-e666-4519-8686-a0a783bb2fe3"
        },
        "item": {
          "id": "8c437e08-2546-4b8d-9d01-aad0ead993e8",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "8589def8-e7d7-447f-be95-13477a459701",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 691,
          "responseSize": 606
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25dcd46d-fd34-4511-9dcd-45828c654397",
        "cursor": {
          "ref": "2e72a32f-ecc3-475c-91dc-0c61bb2e2ae2",
          "length": 251,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "fa327639-33d3-4139-bd61-249c50972a09"
        },
        "item": {
          "id": "25dcd46d-fd34-4511-9dcd-45828c654397",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "1567fcf1-895a-486e-a308-e1af8aface9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 672,
          "responseSize": 659
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c2531c0-89e9-4608-b8db-4e31807c3ce5",
        "cursor": {
          "ref": "1782b58e-d62c-4e94-a3c0-3136ff35b232",
          "length": 251,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "bfe752d5-ec2f-482e-99f1-be8e24b08944"
        },
        "item": {
          "id": "9c2531c0-89e9-4608-b8db-4e31807c3ce5",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "9dbb8977-5e68-46de-97bc-5c3967285b2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 667,
          "responseSize": 629
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c0597b7-39e8-459b-aaf1-3da1e6dd2203",
        "cursor": {
          "ref": "8afc113b-cd50-4f33-ba60-db2bc71306fa",
          "length": 251,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "b8dadd7d-4bf1-469d-982a-a1dff6e3b3e5"
        },
        "item": {
          "id": "6c0597b7-39e8-459b-aaf1-3da1e6dd2203",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "d9ff7371-482e-4835-a392-39d3d1f6aa21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1047,
          "responseSize": 1100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f40cf8dc-2243-4101-8dba-5008ce37fe12",
        "cursor": {
          "ref": "79596ed0-c7ce-4b46-bbba-4778d9d61d57",
          "length": 251,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "be9decef-29d7-4411-8098-a62bb15b7760"
        },
        "item": {
          "id": "f40cf8dc-2243-4101-8dba-5008ce37fe12",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "f1196c10-c827-4f3c-9018-c97e9d2aba00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1271,
          "responseSize": 909
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aad103e5-9b94-408d-8774-2927f5d757e2",
        "cursor": {
          "ref": "5f65a9e0-f54f-4115-a8ba-2eba93fd65b6",
          "length": 251,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "54727b9c-ba6c-4ebd-973c-d91fa57376eb"
        },
        "item": {
          "id": "aad103e5-9b94-408d-8774-2927f5d757e2",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "c2b87404-80dd-40b4-80b2-c6a5446472f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 929,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ba7daef-efe3-4f07-96aa-e06f87b52e4c",
        "cursor": {
          "ref": "be34bef9-9c66-487f-8a3a-f9fdef191cd5",
          "length": 251,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "66a52a60-8531-49ab-959d-fe6bd9bfa7fa"
        },
        "item": {
          "id": "6ba7daef-efe3-4f07-96aa-e06f87b52e4c",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "4640cd55-0eb0-4041-8bd2-fc6e00da9f98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1050,
          "responseSize": 908
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ce3eb33-2501-46c8-bee5-60bfb3b1131e",
        "cursor": {
          "ref": "2c90d3da-ad39-4bfb-9b90-1fd59e0b4bad",
          "length": 251,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "53a7d3e4-4a85-424b-90b5-9f6d0fa4c6e1"
        },
        "item": {
          "id": "9ce3eb33-2501-46c8-bee5-60bfb3b1131e",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "0efaeff0-4160-4da9-a0d4-3c2071c77a92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 661,
          "responseSize": 921
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82a6071e-d109-46dd-8f5b-cba2ff091134",
        "cursor": {
          "ref": "f86a8467-8efe-4ca6-a357-c8dc43167bad",
          "length": 251,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "ec3a629f-959f-4cd7-a8dc-20a744a9fa7b"
        },
        "item": {
          "id": "82a6071e-d109-46dd-8f5b-cba2ff091134",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "b4ff62ef-9c9f-4022-b8a7-c385835de847",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 673,
          "responseSize": 1415
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5958dad-0359-448b-b63e-5bc8c6e206bd",
        "cursor": {
          "ref": "18af9a29-4d6c-4956-b066-4b7ee4ae1d03",
          "length": 251,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "78db4b7e-892a-447c-abb7-dcc3a7e87e3f"
        },
        "item": {
          "id": "a5958dad-0359-448b-b63e-5bc8c6e206bd",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "1a768bf4-a9a4-4769-8a34-09f7cd17f828",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 763,
          "responseSize": 1401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5eb22c4-2479-4b82-8260-965869881a7d",
        "cursor": {
          "ref": "79792e8d-89a8-4a5c-a53d-6c239b3de2e8",
          "length": 251,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "eed55baf-78a2-4c9d-b553-305b6d3304fd"
        },
        "item": {
          "id": "b5eb22c4-2479-4b82-8260-965869881a7d",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "dc30c049-5450-4909-a715-460589c29a15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 702,
          "responseSize": 1398
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3f2be05-0a23-4d0b-ade6-0fafcc5b2ab4",
        "cursor": {
          "ref": "094c6a29-ea2a-45da-9ff8-0f8f070765c5",
          "length": 251,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "df723b9f-51fc-4a2e-aa31-1a5a32bf1717"
        },
        "item": {
          "id": "d3f2be05-0a23-4d0b-ade6-0fafcc5b2ab4",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "a56e7d2e-048a-40ff-a2dd-26dfaf520905",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 700,
          "responseSize": 1400
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b8a4b35-fec3-4db9-a567-f74ccc178147",
        "cursor": {
          "ref": "37653c50-aeb8-457d-8af0-09d86574d374",
          "length": 251,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "6580e625-9221-42ca-9fe3-c397d54b24e4"
        },
        "item": {
          "id": "7b8a4b35-fec3-4db9-a567-f74ccc178147",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "af2b8479-663e-49f9-9485-5203ad0a6565",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 673,
          "responseSize": 1398
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "401db68e-3494-4ae2-af27-ad3d42c72804",
        "cursor": {
          "ref": "4190bfed-3fc7-4e2e-b557-ed22cabaefd1",
          "length": 251,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "ff8a0107-e34c-409b-8b6c-7fa8fe994568"
        },
        "item": {
          "id": "401db68e-3494-4ae2-af27-ad3d42c72804",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "cb7ff251-c6b7-49dd-9789-c2fbc503f3a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 690,
          "responseSize": 579
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa2092e1-0178-4416-abc6-41556a19a9d9",
        "cursor": {
          "ref": "e4c6682d-8575-40a1-9cfd-fa659ef93621",
          "length": 251,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "17158f3b-43aa-4fb3-9142-5ff0afc5aecb"
        },
        "item": {
          "id": "fa2092e1-0178-4416-abc6-41556a19a9d9",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "3811e3a1-bc0c-48ef-92d0-5fa22a558b2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 660,
          "responseSize": 557
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14990849-91b6-4dda-b334-0ff33033eaf6",
        "cursor": {
          "ref": "d4f33d12-c79f-402a-a6f8-d47602ded199",
          "length": 251,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "fe3d9c90-29d1-47aa-a551-80c0ae2f1bc0"
        },
        "item": {
          "id": "14990849-91b6-4dda-b334-0ff33033eaf6",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "73048ef4-0671-42d4-8b7b-9c9654142cd9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 674,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5839ea7-ca08-4bf8-8341-3b6b52ce6ae8",
        "cursor": {
          "ref": "a7ec0326-bd34-405e-b5d5-d6fb303156d9",
          "length": 251,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "74d5f0f0-beef-44c0-8547-3ed603601819"
        },
        "item": {
          "id": "c5839ea7-ca08-4bf8-8341-3b6b52ce6ae8",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "d9422ffd-a68b-4218-8eec-6a6454aeda0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 664,
          "responseSize": 557
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d31bf82b-1229-477a-868b-bc62d8fb0b36",
        "cursor": {
          "ref": "857e1328-fa28-40f3-befc-cde5aaa52d9f",
          "length": 251,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "4365b5a4-cf24-48b5-9218-b32ad9c2a466"
        },
        "item": {
          "id": "d31bf82b-1229-477a-868b-bc62d8fb0b36",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "64372a5a-7d0f-4096-8e34-d494213302b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 638,
          "responseSize": 559
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4fedf3c-b62f-4a39-a7f2-581a4cdc203e",
        "cursor": {
          "ref": "e6a1ca40-2843-4b13-b7b4-c00a7344065a",
          "length": 251,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "e1a15c49-d3a8-4b34-873a-2c7a1f7854cd"
        },
        "item": {
          "id": "e4fedf3c-b62f-4a39-a7f2-581a4cdc203e",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "77be520b-5c20-495a-89d4-6d7227235430",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 644,
          "responseSize": 557
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "525b9cee-56fa-4d6b-900a-91e67f16f5ef",
        "cursor": {
          "ref": "faedc6af-5703-4045-a5c4-b0308a167a88",
          "length": 251,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "9757663c-cf6b-4864-8cd2-b0b5d9e56b06"
        },
        "item": {
          "id": "525b9cee-56fa-4d6b-900a-91e67f16f5ef",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "b4a8ec93-0584-46fd-8641-4dbc372732fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 640,
          "responseSize": 594
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2220f49-c509-4bd4-860a-e5b0d795a892",
        "cursor": {
          "ref": "dc0c7958-6f11-461e-bf5f-db980b879a63",
          "length": 251,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "a85aa9d9-f0b9-48ef-8f78-040dc2595f95"
        },
        "item": {
          "id": "d2220f49-c509-4bd4-860a-e5b0d795a892",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "887ebb9d-3e0c-4b6a-81bd-b8a4a222936b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 640,
          "responseSize": 836
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a29487ae-6050-4add-8273-adf7bf711143",
        "cursor": {
          "ref": "65cf4d1e-e301-4000-b878-08598128018f",
          "length": 251,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "faacb959-ca26-4155-9cd7-158277b67357"
        },
        "item": {
          "id": "a29487ae-6050-4add-8273-adf7bf711143",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "75401485-ebd3-45c2-b966-6be097a9f96c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 651,
          "responseSize": 817
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79019147-2d4d-44c2-8288-ab914a13a60e",
        "cursor": {
          "ref": "6569161c-65d5-483a-b1bf-8f51517674c4",
          "length": 251,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "35c06b1c-e5c6-483e-82cd-74a9b0f36423"
        },
        "item": {
          "id": "79019147-2d4d-44c2-8288-ab914a13a60e",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "61a08e8f-1a40-4788-ac7d-8943dd5be611",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 625,
          "responseSize": 814
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0e1ac04-101b-4caf-aba8-ebf36fd2b945",
        "cursor": {
          "ref": "7e9ff81a-56ef-426d-b465-f05219154e0a",
          "length": 251,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "23721eae-d122-4a09-a821-0d3b172f301c"
        },
        "item": {
          "id": "b0e1ac04-101b-4caf-aba8-ebf36fd2b945",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "d5ff5775-4e9f-4494-944e-45933e3e4b38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 665,
          "responseSize": 816
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bde2c926-3f88-4ac3-af79-5d631acbf1ed",
        "cursor": {
          "ref": "8790c142-6d79-4b3e-a60b-53af6f1ec145",
          "length": 251,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "d49ed987-5185-4534-ab79-2bdb652c566d"
        },
        "item": {
          "id": "bde2c926-3f88-4ac3-af79-5d631acbf1ed",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "9543049b-0223-4c7b-a82e-0d9e069cd32b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 657,
          "responseSize": 814
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af99d1a9-5862-45bf-a6fe-e4216c169330",
        "cursor": {
          "ref": "3c8471da-9284-42ee-88cc-3c4ee2261a3e",
          "length": 251,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "5ed059e4-991f-49d1-8750-dae453337315"
        },
        "item": {
          "id": "af99d1a9-5862-45bf-a6fe-e4216c169330",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "608c25a4-fe3b-4f53-aede-c2d908a70afc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 645,
          "responseSize": 685
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b489d6fd-82e0-4fa9-a665-41d3c2aa8195",
        "cursor": {
          "ref": "5c399181-2aa9-48e9-9c4c-91342c93dc5f",
          "length": 251,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "7407dddb-6680-44ff-b1a0-87f7c90e1550"
        },
        "item": {
          "id": "b489d6fd-82e0-4fa9-a665-41d3c2aa8195",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "0e7e9582-862e-45df-a5fb-534b02e6888f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 625,
          "responseSize": 653
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "daa3e407-f26c-4ed8-b08a-d71278360b5d",
        "cursor": {
          "ref": "88002a35-8343-465f-95d5-37aff9f8875c",
          "length": 251,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "5491a417-fdca-4e00-8eb8-a01d4c94c76d"
        },
        "item": {
          "id": "daa3e407-f26c-4ed8-b08a-d71278360b5d",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "a323d5ec-4597-4d29-9d81-f47544348f05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 648,
          "responseSize": 634
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e1694e2-1d34-4e8d-ba33-7f21e47bd0e3",
        "cursor": {
          "ref": "5ccc1075-ee4b-436b-b3a4-146c3d4eb03e",
          "length": 251,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "69e5e485-ff45-4cb0-885c-c2fb68323b77"
        },
        "item": {
          "id": "6e1694e2-1d34-4e8d-ba33-7f21e47bd0e3",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "0fa0b0a5-68c2-4628-86cf-bf601b2d8b40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1205,
          "responseSize": 631
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a88577a4-a622-44e5-9144-bb0c0c9b9d13",
        "cursor": {
          "ref": "5e76ddc6-77ee-47ee-bec3-408330918b54",
          "length": 251,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "0ff59ae7-a12a-4758-9f74-9b75131bcba6"
        },
        "item": {
          "id": "a88577a4-a622-44e5-9144-bb0c0c9b9d13",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "49bf5b06-0475-4378-b19e-336c667802da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1264,
          "responseSize": 633
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00d0028f-874c-42d7-bd36-6cdc27f070dc",
        "cursor": {
          "ref": "58c8af62-9370-4821-b1b9-257d1f26618f",
          "length": 251,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "bb21f95f-7dec-4803-8511-2a01fdf06de8"
        },
        "item": {
          "id": "00d0028f-874c-42d7-bd36-6cdc27f070dc",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "4bbbce46-475f-4189-acd6-2fc45a8c9d0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1058,
          "responseSize": 631
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "498e2ea4-a4e4-418d-8191-32b05a15da17",
        "cursor": {
          "ref": "4ffb5268-fb19-4476-80ec-1dfefd72dbe3",
          "length": 251,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "ae850b60-2e40-4435-ac9d-ebd499758fb2"
        },
        "item": {
          "id": "498e2ea4-a4e4-418d-8191-32b05a15da17",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "2aa3cb42-3127-4976-8d22-ec5d73f318a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 631,
          "responseSize": 684
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fd3330b-b886-470c-a978-26f1977caf97",
        "cursor": {
          "ref": "185f134e-6257-4a3b-922c-79640dd27514",
          "length": 251,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "f6546104-a14f-435d-9da7-18801c52f7ab"
        },
        "item": {
          "id": "8fd3330b-b886-470c-a978-26f1977caf97",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "4257c746-63c6-4d55-87e9-0996ac12b266",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 647,
          "responseSize": 679
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0756821-29f5-4dee-83d2-799502a87172",
        "cursor": {
          "ref": "6139d739-581d-4288-8007-946865bfcf3b",
          "length": 251,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "2c6eb152-96f6-4d04-99ac-505253e49880"
        },
        "item": {
          "id": "c0756821-29f5-4dee-83d2-799502a87172",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "16b2e0bf-fd41-487b-bdba-5cc635dc4e10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 693,
          "responseSize": 656
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0065acf6-4813-4dce-b1c4-3abc85a9981f",
        "cursor": {
          "ref": "40d5c9b6-b206-4947-b473-e57a81d95f05",
          "length": 251,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "89444a2b-8516-4442-beb6-6c7f63f06471"
        },
        "item": {
          "id": "0065acf6-4813-4dce-b1c4-3abc85a9981f",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "ceeb5762-4ebe-4278-897d-3611a512a1a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 634,
          "responseSize": 653
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85aeee94-482b-40c6-966c-128074eda1ee",
        "cursor": {
          "ref": "3024c5fe-7020-4f45-afe8-f3d572c0da56",
          "length": 251,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "d5aa702c-771a-447e-8dab-8ce71ec99555"
        },
        "item": {
          "id": "85aeee94-482b-40c6-966c-128074eda1ee",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "d1e2c0a8-110f-4054-b7e3-e2558c18771c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 617,
          "responseSize": 655
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38121c56-966d-4931-a542-263d2502d220",
        "cursor": {
          "ref": "48f3eac0-dfa0-4fa0-ac3d-fc25b688caec",
          "length": 251,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "bc576d71-e9cc-4902-a77e-8848b6398178"
        },
        "item": {
          "id": "38121c56-966d-4931-a542-263d2502d220",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "ad941335-3bc6-4733-b8d8-fffc49c45fbb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 645,
          "responseSize": 677
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd754ea9-5ecb-4a55-a426-d31f5ebd6a32",
        "cursor": {
          "ref": "9017bca5-fb54-441e-9aff-0ee1995336a4",
          "length": 251,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "ad097005-da1e-4b3e-8514-3b6817d55ca9"
        },
        "item": {
          "id": "cd754ea9-5ecb-4a55-a426-d31f5ebd6a32",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "c0446af1-6e93-4c5b-9b11-c6be721e9367",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 710,
          "responseSize": 690
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e1317d2-9078-4286-899a-2aec9cc0c929",
        "cursor": {
          "ref": "20018e18-7a1b-4ae1-ac6a-d16c6edd308d",
          "length": 251,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "496db744-29ac-4350-94a5-f3f55024cb80"
        },
        "item": {
          "id": "6e1317d2-9078-4286-899a-2aec9cc0c929",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "93184548-1bb9-4f78-80ef-6b5bed7bd5d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 652,
          "responseSize": 953
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9d67ef5-6855-47ad-9223-ed741f9a87b1",
        "cursor": {
          "ref": "d10b15e4-57ec-4cb9-a553-1fc34c69ed9b",
          "length": 251,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "6c561937-f5df-4708-8da4-58a753b599a7"
        },
        "item": {
          "id": "f9d67ef5-6855-47ad-9223-ed741f9a87b1",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "371cfca0-adcf-4d30-b031-26f0974691d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 651,
          "responseSize": 930
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7577d2e5-a2dc-4013-89c2-86873623a63e",
        "cursor": {
          "ref": "e351abba-aa0c-4312-8ad4-87382283bf4c",
          "length": 251,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "28fb5cdb-1d82-46e4-b0eb-20c555e4a270"
        },
        "item": {
          "id": "7577d2e5-a2dc-4013-89c2-86873623a63e",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "71129b0b-4b8e-4bff-a8c4-1d17727e2a56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 654,
          "responseSize": 927
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c03b9b40-812e-4e3b-93c7-40497e5820a8",
        "cursor": {
          "ref": "fd595746-5ac3-4521-b63f-e63e2daab101",
          "length": 251,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "28344c14-b3d0-4499-9bc9-e9b4a5e3bf48"
        },
        "item": {
          "id": "c03b9b40-812e-4e3b-93c7-40497e5820a8",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "33918a37-0ad2-4daa-99fa-514e394f3cc0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 625,
          "responseSize": 929
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0d538ca-c117-4612-b18e-f4e6feed4cca",
        "cursor": {
          "ref": "efcb6dbf-b038-4409-b1ab-3cb75d8f7e2f",
          "length": 251,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "52edfe08-241b-4cf3-8cca-a030321fef77"
        },
        "item": {
          "id": "a0d538ca-c117-4612-b18e-f4e6feed4cca",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "b887b6f4-d3a0-4ed6-8418-a311501a6324",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 645,
          "responseSize": 927
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1da23cf-1429-4478-8bb9-2c681c9a21ec",
        "cursor": {
          "ref": "cc52445b-1ee1-4d44-a88f-4592a2431067",
          "length": 251,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "7ad78b19-15c7-4bbb-a74d-7ed76b36bd43"
        },
        "item": {
          "id": "d1da23cf-1429-4478-8bb9-2c681c9a21ec",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "20d6140d-8d6d-42ab-b8b6-9398c64e2c47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 650,
          "responseSize": 753
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39e4ce5d-82c5-4eb6-adb0-6a4c15c119b5",
        "cursor": {
          "ref": "31933a74-7c77-44e2-b91e-e8e218f87e10",
          "length": 251,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "884af060-f3d2-4c17-a636-3507cfc24e28"
        },
        "item": {
          "id": "39e4ce5d-82c5-4eb6-adb0-6a4c15c119b5",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "fb5e35c0-2b84-4327-818b-f62d0690848a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 44,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "305e9f75-f5a8-4392-894d-3033a5f94e15",
        "cursor": {
          "ref": "1524b388-9e87-44ac-9247-cdc7ab394704",
          "length": 251,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "8f31a57c-9da5-4fc6-b14f-7bc7fe0b6d60"
        },
        "item": {
          "id": "305e9f75-f5a8-4392-894d-3033a5f94e15",
          "name": "credentials_issue:missing_scope:issue_credentials"
        },
        "response": {
          "id": "544d08c0-ca0d-44a5-ae1a-e09ce2901eeb",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 629,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8bef644-eeae-4b02-beca-f6b889969f94",
        "cursor": {
          "ref": "2ade09e6-6c42-41bc-b020-fea9d5b83f1c",
          "length": 251,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "324d7a30-b105-403d-90ce-4821d7d5d792"
        },
        "item": {
          "id": "a8bef644-eeae-4b02-beca-f6b889969f94",
          "name": "credentials_issue"
        },
        "response": {
          "id": "08d3ab75-02c8-463a-a6fc-6583e20e20d8",
          "status": "Created",
          "code": 201,
          "responseTime": 6038,
          "responseSize": 696
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8bcbdba-a043-47cf-9ac7-153aaa59b912",
        "cursor": {
          "ref": "af7a54f4-0a82-4ca4-9c3a-82c50edebf4e",
          "length": 251,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "921e3a78-eb66-44d0-b514-9f0b43e86494"
        },
        "item": {
          "id": "a8bcbdba-a043-47cf-9ac7-153aaa59b912",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "b9bee8c3-aba1-4122-8a4b-6807e59ae363",
          "status": "Created",
          "code": 201,
          "responseTime": 5261,
          "responseSize": 749
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ac2cdfd-5284-408d-abd8-4a09ff356c3b",
        "cursor": {
          "ref": "d40d4c9b-c5e6-4039-9838-58f052cde1e3",
          "length": 251,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "851a15be-a4be-49b3-bb61-570e194eced8"
        },
        "item": {
          "id": "6ac2cdfd-5284-408d-abd8-4a09ff356c3b",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "8b14d7c4-3017-4085-b910-1a19e29aa527",
          "status": "Created",
          "code": 201,
          "responseTime": 5634,
          "responseSize": 703
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "cade5998-832b-4358-ac3d-c25e1dcd7881",
        "cursor": {
          "ref": "bcbc855e-f153-4c46-a29e-628de4dcec4e",
          "length": 251,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "f54b47c5-8a24-407e-9170-014528621943"
        },
        "item": {
          "id": "cade5998-832b-4358-ac3d-c25e1dcd7881",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "fb0561a3-90d5-4a72-bb03-5a23d1df80bc",
          "status": "Created",
          "code": 201,
          "responseTime": 7902,
          "responseSize": 718
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "88c16f0d-e819-4866-abe6-0a58a3865ca1",
        "cursor": {
          "ref": "7bc3d66f-ff82-42aa-80f0-2b2770eb181b",
          "length": 251,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "0b41c4d1-e24e-4d77-bbbc-683a6cfc3efe"
        },
        "item": {
          "id": "88c16f0d-e819-4866-abe6-0a58a3865ca1",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "c9419009-70a3-475f-a3f1-5a32159ef6b5",
          "status": "Created",
          "code": 201,
          "responseTime": 5936,
          "responseSize": 696
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "493ca8e1-3152-4cb1-a6fb-d5e24fa496f1",
        "cursor": {
          "ref": "edad0cf0-af9c-4ee9-bd6f-fc4c43ae48dd",
          "length": 251,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "030392d2-92df-4cc5-b6e1-55bedeaced33"
        },
        "item": {
          "id": "493ca8e1-3152-4cb1-a6fb-d5e24fa496f1",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "c6df885b-b9a8-46b6-be3d-66a913194e01",
          "status": "Created",
          "code": 201,
          "responseTime": 8609,
          "responseSize": 1037
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74e204fc-bd99-404e-86c0-2261390100de",
        "cursor": {
          "ref": "77ecf277-760b-4164-b1cb-70e029ba4025",
          "length": 251,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "eab8f04d-7bf7-40b6-a66b-71ecf78f36ad"
        },
        "item": {
          "id": "74e204fc-bd99-404e-86c0-2261390100de",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "77c04563-6988-4b1f-baa4-0694321f0f9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 657,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74e204fc-bd99-404e-86c0-2261390100de",
        "cursor": {
          "ref": "77ecf277-760b-4164-b1cb-70e029ba4025",
          "length": 251,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "eab8f04d-7bf7-40b6-a66b-71ecf78f36ad"
        },
        "item": {
          "id": "74e204fc-bd99-404e-86c0-2261390100de",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "77c04563-6988-4b1f-baa4-0694321f0f9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 657,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c46358c3-7912-463e-a9c5-a905859b556e",
        "cursor": {
          "ref": "a52241c6-a7f1-4b4b-842e-e68459142a5f",
          "length": 251,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "ec509c18-5a8f-4bb3-81de-f02914078ecd"
        },
        "item": {
          "id": "c46358c3-7912-463e-a9c5-a905859b556e",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "6bd6d13d-4ef8-4eb9-90ba-37e57fbd05a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 616,
          "responseSize": 661
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66f15d57-7505-4a6f-9303-7c5aef4a9d06",
        "cursor": {
          "ref": "3d9fc9d7-cd8c-4d2c-b9e6-62909fc879ae",
          "length": 251,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "7a06ba58-beef-4775-a01c-8add429f8914"
        },
        "item": {
          "id": "66f15d57-7505-4a6f-9303-7c5aef4a9d06",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "e42f00e1-880e-46c6-b967-1be21f72e5af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 639,
          "responseSize": 617
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06cfccae-1abe-405b-9636-79678bf8b224",
        "cursor": {
          "ref": "be2dadf2-4c25-49fd-a904-f66c3ace6b04",
          "length": 251,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "f352c9be-efa3-4bc6-ade6-96055060c318"
        },
        "item": {
          "id": "06cfccae-1abe-405b-9636-79678bf8b224",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "c6f05b44-c16f-4d62-a823-86ac91b9eba6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 670,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e23db733-dcff-4be2-8c99-363f698ebe19",
        "cursor": {
          "ref": "4ac6facd-4b72-477d-8686-884d25980d1c",
          "length": 251,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "140c6844-359b-4858-bb6a-e19466a720d0"
        },
        "item": {
          "id": "e23db733-dcff-4be2-8c99-363f698ebe19",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "3f2cbc14-715b-486a-a060-11507570f30d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 645,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f45f720-242e-473b-a567-551f4f0a6823",
        "cursor": {
          "ref": "920ae5eb-d99a-450a-94b9-7effdf48487f",
          "length": 251,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "02d1e811-7cee-484f-a556-ad3029468ca4"
        },
        "item": {
          "id": "8f45f720-242e-473b-a567-551f4f0a6823",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "9e63575a-ba84-4f39-9126-118827fdfe6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 656,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f86737f1-84f3-477d-8346-ae017629f589",
        "cursor": {
          "ref": "4cff617a-29c2-4026-a12a-9df656e8dc05",
          "length": 251,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "c7b92cfa-34e8-48db-b9d6-12f1c44a0c40"
        },
        "item": {
          "id": "f86737f1-84f3-477d-8346-ae017629f589",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "595e623a-214b-4cbb-86a4-4b346fcc6a78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 686,
          "responseSize": 431
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbf21d83-e7fe-4c3e-ad57-5707b421d19f",
        "cursor": {
          "ref": "a4b84c26-f944-4664-bc05-0266d2a228e1",
          "length": 251,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "e5592c10-2580-4317-89d3-4c9e7e862cad"
        },
        "item": {
          "id": "cbf21d83-e7fe-4c3e-ad57-5707b421d19f",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "72dff81b-ba6a-43fe-9505-2d3a05cdec57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 681,
          "responseSize": 482
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de80538d-e846-4f00-979c-eaafc923cf22",
        "cursor": {
          "ref": "91fae2d8-a357-45b5-96ec-f27650e5564e",
          "length": 251,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "461caff3-a90f-4cab-8fa6-4a3b72107002"
        },
        "item": {
          "id": "de80538d-e846-4f00-979c-eaafc923cf22",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "ce714c54-0ce8-4ebb-bca8-9b10f6e7cb70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 629,
          "responseSize": 479
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e12edb70-254a-4497-bef0-978da185c50e",
        "cursor": {
          "ref": "7230de47-64e4-44a6-ad66-0a6ae2c3b659",
          "length": 251,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "335e55de-4376-4b41-bf36-3ffd036d339c"
        },
        "item": {
          "id": "e12edb70-254a-4497-bef0-978da185c50e",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "3fffecef-4a9f-45da-a703-87dad0773bc7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 654,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02ff4b33-ffb0-4e64-9f9b-bc37fb0eea10",
        "cursor": {
          "ref": "099fba18-ae21-4a41-b7a5-3f54eac133ca",
          "length": 251,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "d9409b3e-a69c-40cf-8bc8-cd19df6ab48c"
        },
        "item": {
          "id": "02ff4b33-ffb0-4e64-9f9b-bc37fb0eea10",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "9d365842-2647-48f3-a175-a0ff524bb644",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 643,
          "responseSize": 525
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e6b50cb-a3fc-47a6-9557-bc14acbfcf40",
        "cursor": {
          "ref": "2cc141a9-4760-4811-ba41-22f044ccced8",
          "length": 251,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "a0cc9394-f297-4a0f-9ca3-82ebd3a1a9c8"
        },
        "item": {
          "id": "4e6b50cb-a3fc-47a6-9557-bc14acbfcf40",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "c1daa91e-88bc-43d4-94b4-f52048d050cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 630,
          "responseSize": 503
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a40c9d7-fa3a-4b23-a6f7-7980f805e9e9",
        "cursor": {
          "ref": "9619dd3f-cf6d-4f61-af08-cc143ff4e865",
          "length": 251,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "4a67b332-0be9-4c1e-85e9-94c5681697eb"
        },
        "item": {
          "id": "4a40c9d7-fa3a-4b23-a6f7-7980f805e9e9",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "d28092ca-4189-4e69-ab81-be351dc8f526",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 626,
          "responseSize": 576
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec596600-3208-4e7a-a8ef-64caed65fd5e",
        "cursor": {
          "ref": "80e62888-3134-4e06-b9f1-ec1262f62171",
          "length": 251,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "7314f730-29b6-4667-bfc7-dc5604ea8199"
        },
        "item": {
          "id": "ec596600-3208-4e7a-a8ef-64caed65fd5e",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "b5e8f05f-21a6-4c54-a8e4-1264f092ed5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 646,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d9d1fcf-d652-4549-a6f9-91b5fe53c297",
        "cursor": {
          "ref": "db9e5ea2-b02e-40e2-8a7a-24d4e80d80c0",
          "length": 251,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "f707b991-d0dd-4900-aba8-0ee01272aec4"
        },
        "item": {
          "id": "1d9d1fcf-d652-4549-a6f9-91b5fe53c297",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "8fdca95a-8649-4cd7-aa71-becd140043ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 646,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce02bbf3-6b1b-4de3-9eed-fc4bfac47822",
        "cursor": {
          "ref": "cde2e1b4-df62-4f83-afcd-c8eed71b71fc",
          "length": 251,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "6287de27-3787-4181-b43e-fc8d3607b1c8"
        },
        "item": {
          "id": "ce02bbf3-6b1b-4de3-9eed-fc4bfac47822",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "55cb380f-9d0f-4344-af28-3e4a42b7bd3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 649,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1d12899-e00d-4276-ac3c-c9d5a7e7eb85",
        "cursor": {
          "ref": "e490ae65-02e6-44eb-8479-406f9a58bfda",
          "length": 251,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "b954135b-b169-40fe-a55a-bfc253dfc9dc"
        },
        "item": {
          "id": "b1d12899-e00d-4276-ac3c-c9d5a7e7eb85",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "eb46b337-e3e3-449a-9835-481934feb244",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 631,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5d59bba-b174-4071-9625-ea2d2b88eca0",
        "cursor": {
          "ref": "ff7cdc06-28fb-4410-a27a-2c4d42acf2ab",
          "length": 251,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "6997a8cb-547b-4279-a1c2-ece7cb757924"
        },
        "item": {
          "id": "f5d59bba-b174-4071-9625-ea2d2b88eca0",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "5b9e58e5-cc84-42a2-83b2-f8989e97c540",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 656,
          "responseSize": 505
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03bbd4b5-a96a-4814-8e87-0b2a12c6891b",
        "cursor": {
          "ref": "e3463af3-8e47-42c6-b883-01949aae68b4",
          "length": 251,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "121f5082-88d4-40e6-8235-38b0ff3e135d"
        },
        "item": {
          "id": "03bbd4b5-a96a-4814-8e87-0b2a12c6891b",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "5857a4c2-1e95-47dc-a636-06ca5b30199a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 621,
          "responseSize": 493
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de227b96-cf40-4227-ba16-55d6df36c9ea",
        "cursor": {
          "ref": "d700d880-599e-4451-9fb4-cc7b17523eb1",
          "length": 251,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "e85ec5ca-dc18-41a0-931b-2928997d981d"
        },
        "item": {
          "id": "de227b96-cf40-4227-ba16-55d6df36c9ea",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "0c50bcc8-193d-4b93-98ca-5a017f5cb578",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 638,
          "responseSize": 529
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a07e395-4178-4c70-8468-8d2a16df36f0",
        "cursor": {
          "ref": "6821e3f7-b71c-4411-b0f5-89dc40d7a99d",
          "length": 251,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "d980c5d5-27f3-4d66-86fe-1cc10e7770bd"
        },
        "item": {
          "id": "7a07e395-4178-4c70-8468-8d2a16df36f0",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "4fc97a5f-02ef-456b-89a6-f4d4d291b0fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 653,
          "responseSize": 506
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f590a8c-e1cf-4c93-9715-787007fb01a6",
        "cursor": {
          "ref": "ec91d033-5ab8-4616-9a93-e3d20b591271",
          "length": 251,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "8095466a-3cda-4a27-a517-b905a986cb8b"
        },
        "item": {
          "id": "4f590a8c-e1cf-4c93-9715-787007fb01a6",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "0ec834f0-6568-46ed-8a27-5e7d477f0fc9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 674,
          "responseSize": 503
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a61d6a5-5525-4afa-a73c-5a064b4fe5e3",
        "cursor": {
          "ref": "2bae37db-ef7b-41b9-818e-7e3af9dc3395",
          "length": 251,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "5f788e21-090d-40ca-9c49-af867e0d226e"
        },
        "item": {
          "id": "9a61d6a5-5525-4afa-a73c-5a064b4fe5e3",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "57f16ba8-df3c-4fd3-854e-de1e21fdc90b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 668,
          "responseSize": 505
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df03e48f-a530-4a18-b9ce-be7a7d516835",
        "cursor": {
          "ref": "f73061b6-15a9-48db-a106-377269620431",
          "length": 251,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "8e0a7bab-6dc2-42ef-bb9a-e537bd972a4d"
        },
        "item": {
          "id": "df03e48f-a530-4a18-b9ce-be7a7d516835",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "c1bf3658-e07f-4d44-9eee-96ea5384ab2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 632,
          "responseSize": 503
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5a34544-6ca7-48c5-9774-59a04436cf0f",
        "cursor": {
          "ref": "077da69c-e033-4271-a002-b9b27bc0845c",
          "length": 251,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "c16c6cb3-6939-42bc-8da3-c666c768e143"
        },
        "item": {
          "id": "e5a34544-6ca7-48c5-9774-59a04436cf0f",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "6fcb7430-443c-4111-b2cc-ab2af6d1294d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 665,
          "responseSize": 516
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34760ed5-cba9-47b9-a1d8-e4c5a8722015",
        "cursor": {
          "ref": "8caa596b-daab-4717-93b8-8c8e9667bdfe",
          "length": 251,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "15243b47-a245-452a-bc29-5b4bed5dcef7"
        },
        "item": {
          "id": "34760ed5-cba9-47b9-a1d8-e4c5a8722015",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "b4e2e24d-fb09-4135-a75c-5bf3071aefcf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 673,
          "responseSize": 514
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c22ac1b5-2ce1-4e7c-817f-e2a9850ff42b",
        "cursor": {
          "ref": "0c5f479b-5f4e-477f-91ce-d4c4952f7b0d",
          "length": 251,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "d651351f-fd5e-4961-892a-22a61a0c4e86"
        },
        "item": {
          "id": "c22ac1b5-2ce1-4e7c-817f-e2a9850ff42b",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "b6680ed4-1369-4175-80d9-a155e08f20dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1033,
          "responseSize": 529
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbbea586-57d3-4ca2-96be-238095411d67",
        "cursor": {
          "ref": "2fa9475b-63a7-4678-b700-cf02e432fbb6",
          "length": 251,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "276885c6-61f4-474d-9768-0cdc4058d5cf"
        },
        "item": {
          "id": "bbbea586-57d3-4ca2-96be-238095411d67",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "bcfeecd7-280d-44ba-9c2f-dd5f2bc7b9fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1110,
          "responseSize": 529
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28c84d5c-b794-4b3a-8440-6f712df0f211",
        "cursor": {
          "ref": "fc50076c-2256-4997-b876-ab37187cabca",
          "length": 251,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "8580b138-9162-4bdb-9031-09aa18ac6a68"
        },
        "item": {
          "id": "28c84d5c-b794-4b3a-8440-6f712df0f211",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "d1232062-609c-4c2d-adf3-5aa2e8dd7aeb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 975,
          "responseSize": 525
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bf6a408-8985-45b1-baad-47a3aa15fb20",
        "cursor": {
          "ref": "e1335acf-f208-4eb8-8adf-40a7121cae16",
          "length": 251,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "b414d647-ce0e-44d9-a111-f7d4f7431091"
        },
        "item": {
          "id": "3bf6a408-8985-45b1-baad-47a3aa15fb20",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "6bf39b36-5a57-40b9-b502-a2a6ca436de8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 822,
          "responseSize": 528
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0898c6a-b76f-44b0-9ab4-94ae3f81c3cc",
        "cursor": {
          "ref": "eec1f099-662e-4acf-8472-38e3086be89b",
          "length": 251,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "6800d94e-70d2-4b3d-9d68-be90aaa8b41a"
        },
        "item": {
          "id": "d0898c6a-b76f-44b0-9ab4-94ae3f81c3cc",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "ee8aef42-dee1-4a24-bf43-6869aa6d9024",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 675,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4981a293-17e3-42e9-9dc5-67b0af16517b",
        "cursor": {
          "ref": "1cadc14c-61d8-4b07-96ac-cac2aa9576a7",
          "length": 251,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "726f9957-6ad8-4a69-b89a-c36c8cf55317"
        },
        "item": {
          "id": "4981a293-17e3-42e9-9dc5-67b0af16517b",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "c9399bc0-80e7-4db1-82d9-5d95f608a659",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 670,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05f94672-434c-468e-96c5-6e8e793ff9ef",
        "cursor": {
          "ref": "fcae54ba-4ee3-423f-bcce-d84cea09961f",
          "length": 251,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "61c92e64-acc2-4c4b-8788-c6110074df46"
        },
        "item": {
          "id": "05f94672-434c-468e-96c5-6e8e793ff9ef",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "64edc523-8716-4a62-ba4f-100aa1a9c5a4",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 43,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ef2bd0c-2ffb-4bef-b761-755c407be180",
        "cursor": {
          "ref": "709fee9c-9b25-4285-91f7-6c17fe36dd70",
          "length": 251,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "f3e542b4-544e-4235-a145-d041c8785782"
        },
        "item": {
          "id": "3ef2bd0c-2ffb-4bef-b761-755c407be180",
          "name": "credentials_status:missing_scope:update_credentials"
        },
        "response": {
          "id": "fdf5c6c5-6f59-40ad-be09-9a40c419b975",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 663,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efcde849-c6b4-4bca-a480-5301c1436780",
        "cursor": {
          "ref": "8800d77f-da67-43c0-b2db-4a8e390eb492",
          "length": 251,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "567cf07f-caa5-42df-bc23-bf9890c8a3dc"
        },
        "item": {
          "id": "efcde849-c6b4-4bca-a480-5301c1436780",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "c8c330a8-de39-4066-bfca-4c8e25fb3262",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 430,
          "responseSize": 325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efcde849-c6b4-4bca-a480-5301c1436780",
        "cursor": {
          "ref": "8800d77f-da67-43c0-b2db-4a8e390eb492",
          "length": 251,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "567cf07f-caa5-42df-bc23-bf9890c8a3dc"
        },
        "item": {
          "id": "efcde849-c6b4-4bca-a480-5301c1436780",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "c8c330a8-de39-4066-bfca-4c8e25fb3262",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 430,
          "responseSize": 325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d741ce93-f1ea-41ef-a67e-5e4c1752393c",
        "cursor": {
          "ref": "3d3cdb19-be5f-413e-85cd-ac3378a5ae72",
          "length": 251,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "81e869d5-40e9-4fc7-8a26-70e80b1fabbd"
        },
        "item": {
          "id": "d741ce93-f1ea-41ef-a67e-5e4c1752393c",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "8ab8ee80-f543-4219-8b67-8127faa24251",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 463,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8ae939d-8f50-4c6f-92cf-2f830b6594d1",
        "cursor": {
          "ref": "17faa0d0-e690-43e5-893d-bf779a14aacd",
          "length": 251,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "026b64b4-c6db-420a-a053-71cb73b9fa09"
        },
        "item": {
          "id": "a8ae939d-8f50-4c6f-92cf-2f830b6594d1",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "14923a3a-edd4-4dc5-9537-092acf56879d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 432,
          "responseSize": 645
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "315bf35d-36e9-4aa0-94e7-884c9990caaa",
        "cursor": {
          "ref": "1ba2e9d4-ce5b-4986-b5f0-7b6844ed5876",
          "length": 251,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "d54c98fb-02b9-4aec-9be9-ce8888d1764b"
        },
        "item": {
          "id": "315bf35d-36e9-4aa0-94e7-884c9990caaa",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "153d8017-11e7-465d-86c9-cdd16daa0860",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 434,
          "responseSize": 644
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b781b5c7-9def-4380-857e-c7035be0f613",
        "cursor": {
          "ref": "bde6f3c3-a747-47a6-bf58-6de76d0a6c9d",
          "length": 251,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "e907b306-00a3-4d40-8b03-f4b1cef9fd91"
        },
        "item": {
          "id": "b781b5c7-9def-4380-857e-c7035be0f613",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "563bb533-6a98-4a48-b3c5-c23c1a0dc21e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 434,
          "responseSize": 645
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f22a761-2a26-4a3e-9034-75198b229e6a",
        "cursor": {
          "ref": "32e84a4e-0a59-487a-a9ae-16eda8f2e877",
          "length": 251,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "f21ac4cf-efa3-4336-b9df-6ab8882b035b"
        },
        "item": {
          "id": "3f22a761-2a26-4a3e-9034-75198b229e6a",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "3c67a709-4043-4ee3-a4f3-6a74509d1800",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 434,
          "responseSize": 643
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab5628a1-647b-4914-952c-d797c917c32f",
        "cursor": {
          "ref": "fc786c6e-d21f-439d-8eb2-ca0cb847694c",
          "length": 251,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "b5bf4bae-dc10-441c-bc08-2832792baca2"
        },
        "item": {
          "id": "ab5628a1-647b-4914-952c-d797c917c32f",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "38f5976a-4899-4a2e-aad8-85fad9b56df3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 431,
          "responseSize": 1311
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0aef68e8-869a-4c2e-9d80-c37df02f29d8",
        "cursor": {
          "ref": "a918188f-7506-48e2-adb2-f4f07e93186f",
          "length": 251,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "52af3e3d-fc96-4831-a2a6-1d64cfa17a24"
        },
        "item": {
          "id": "0aef68e8-869a-4c2e-9d80-c37df02f29d8",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "70bb9624-ec5f-476e-be66-caa3a7bcb3fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 436,
          "responseSize": 1469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9fc9527-e047-4f12-96db-44952b24fe8b",
        "cursor": {
          "ref": "c1a0830c-1cef-42bb-ae12-369c5aa0e1fd",
          "length": 251,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "8f355d56-759d-4391-ab2c-59478646edc4"
        },
        "item": {
          "id": "a9fc9527-e047-4f12-96db-44952b24fe8b",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "75f2618f-bedf-40b2-9bce-76b67f2c1e79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 449,
          "responseSize": 1468
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd490023-802b-47a7-85a2-bfe4b162cb1a",
        "cursor": {
          "ref": "2ec5a74e-529d-4384-8e79-b72797a9a9a3",
          "length": 251,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "f0ccf966-cdee-4289-a85c-94bfd1ea9cf0"
        },
        "item": {
          "id": "cd490023-802b-47a7-85a2-bfe4b162cb1a",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "e19cb8a5-9e6d-4fd6-9b0a-0084b59e97a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 450,
          "responseSize": 1469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c6cbdab-5b80-47df-a2a8-8c3fc49963db",
        "cursor": {
          "ref": "1b779147-2326-4131-9958-a9f351f3ea0c",
          "length": 251,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "ab365d3d-37b1-4716-a916-cdce244db166"
        },
        "item": {
          "id": "7c6cbdab-5b80-47df-a2a8-8c3fc49963db",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "20e2eda4-0867-43a9-8798-65107e4c0489",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 430,
          "responseSize": 1367
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64fe8956-36e2-4d67-82a4-a0d07f543e54",
        "cursor": {
          "ref": "db6953d2-4409-430b-93ac-e9edcc9dc664",
          "length": 251,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "50ff4b9c-22d9-42c1-b09f-bc219ae9a64f"
        },
        "item": {
          "id": "64fe8956-36e2-4d67-82a4-a0d07f543e54",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "78b40d51-e027-4c8c-a29b-0c8c2d00a569",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 460,
          "responseSize": 1354
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cebe82f8-d7ea-46b9-9ddc-7eceac33ad4d",
        "cursor": {
          "ref": "a17daeec-b912-4aea-91fb-26a77f27d8da",
          "length": 251,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "f2412413-8f69-420b-8602-17d46ec2bc91"
        },
        "item": {
          "id": "cebe82f8-d7ea-46b9-9ddc-7eceac33ad4d",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "242eaaa5-25f7-45c3-b870-58c5dad9a670",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 447,
          "responseSize": 1532
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58ae1422-bd1f-45cd-ad53-f5d412a6efd6",
        "cursor": {
          "ref": "5675598a-c55d-4802-b558-f927a358e59c",
          "length": 251,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "aa8a761b-a7dd-4eca-bbf9-2449e1e6fd2c"
        },
        "item": {
          "id": "58ae1422-bd1f-45cd-ad53-f5d412a6efd6",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "2bc858bc-07d8-4463-8dc7-7d9e6dd3d190",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 468,
          "responseSize": 1522
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da26b063-c4c7-4dc7-ab97-7a0031f1dc2e",
        "cursor": {
          "ref": "b2a4600f-a78c-4302-aa8a-e28f06c18868",
          "length": 251,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "24b8b0a5-8601-4e0b-9222-c9aa3490e0cb"
        },
        "item": {
          "id": "da26b063-c4c7-4dc7-ab97-7a0031f1dc2e",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "6d4877c0-6887-419a-ae90-c28fa8114479",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 742,
          "responseSize": 1521
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9d418a8-2836-4a27-9565-4b0f0490b5f5",
        "cursor": {
          "ref": "ba76bc64-2145-49f5-9554-ea5bee7d1dd4",
          "length": 251,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "ffa198a6-3003-40be-8ae7-08c04bd87ccf"
        },
        "item": {
          "id": "c9d418a8-2836-4a27-9565-4b0f0490b5f5",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "067269f0-e4f4-4ada-b3bf-34be7573fc5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1034,
          "responseSize": 1522
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "508efcd5-4146-47e1-bd35-e5aab97fb4f9",
        "cursor": {
          "ref": "b377c513-4f50-4cfd-9d8e-3e4c20e1a5d1",
          "length": 251,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "aa74c0ae-b416-496a-99a0-80fd44a275f5"
        },
        "item": {
          "id": "508efcd5-4146-47e1-bd35-e5aab97fb4f9",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "629eb9dc-5a63-4b0f-b1e7-44d22b3d51c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 870,
          "responseSize": 1420
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19fbabfa-4508-426f-9287-7bc47308205e",
        "cursor": {
          "ref": "b4e005ee-7c5f-4cf6-9af6-f5a312d4ab6f",
          "length": 251,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "2c2edca6-af92-44c9-ac6f-2e68fd9419ab"
        },
        "item": {
          "id": "19fbabfa-4508-426f-9287-7bc47308205e",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "072a3eb0-9a59-40dc-9226-29a6d3735306",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 879,
          "responseSize": 1374
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b492aa6-5548-4947-9a7c-b05e98dcd043",
        "cursor": {
          "ref": "20ca8548-91e7-4541-8b46-c6b1d059808b",
          "length": 251,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "7e2e8ec9-ba48-4938-abf0-320de404fa60"
        },
        "item": {
          "id": "5b492aa6-5548-4947-9a7c-b05e98dcd043",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "801e9883-da35-40a4-a069-05165539ac36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 734,
          "responseSize": 1330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f450769-0271-4e27-a1fc-4971e214c076",
        "cursor": {
          "ref": "4db7c3c5-bb0b-4d68-98b6-2e779f85fab6",
          "length": 251,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "ace13046-dbf0-49c3-a9a4-e5692399b3a5"
        },
        "item": {
          "id": "8f450769-0271-4e27-a1fc-4971e214c076",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "6a60284c-60ac-487f-9667-d58d9e28f6a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 474,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "607fc596-0fed-4337-bd48-98fb67bc6890",
        "cursor": {
          "ref": "c390c0fe-5a30-4205-9ee6-5c1374152ebc",
          "length": 251,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "6345656a-e47c-4e97-a50f-446c03a7b608"
        },
        "item": {
          "id": "607fc596-0fed-4337-bd48-98fb67bc6890",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "3037f120-e3c2-48fc-bc7e-52c08221db46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 490,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af7f14e7-7df3-4410-8eba-f436a7aed95d",
        "cursor": {
          "ref": "59a20bba-1d02-4523-8c99-001773ad4dc3",
          "length": 251,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "c6490f26-69f3-45c0-a50d-77c9feaafb1e"
        },
        "item": {
          "id": "af7f14e7-7df3-4410-8eba-f436a7aed95d",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "09fdc89d-1c78-4970-a46d-ae61dd89462c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 545,
          "responseSize": 1380
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4310fba-0127-4768-af3e-96df33e66b2e",
        "cursor": {
          "ref": "e2edb386-dcd3-4a91-820d-f1b502c062b9",
          "length": 251,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "4121fe98-9432-41f0-be85-0c0f34806aea"
        },
        "item": {
          "id": "a4310fba-0127-4768-af3e-96df33e66b2e",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "0c5f1713-3b2f-4aa2-98c9-9a1cf00f83c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 913,
          "responseSize": 1360
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8b7f052-ebcf-4a58-b381-0e594c74fcdb",
        "cursor": {
          "ref": "0b25da06-43b2-469a-b4ef-6ec510ff171b",
          "length": 251,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "d5edfbf1-24eb-4794-b9fc-fd0c712cd005"
        },
        "item": {
          "id": "f8b7f052-ebcf-4a58-b381-0e594c74fcdb",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "49e948a4-54ff-460a-bcd2-1370cf096958",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 974,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "964ff9d8-ff6e-4533-a0ba-d43d18ed298c",
        "cursor": {
          "ref": "8f764f52-98af-463d-acdb-77b4fb5e8d20",
          "length": 251,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "51bee4b0-b482-423e-a218-9e58ea08566d"
        },
        "item": {
          "id": "964ff9d8-ff6e-4533-a0ba-d43d18ed298c",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "1dac6e16-9c3f-4f07-b1d1-bfde0c9cbaf2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 870,
          "responseSize": 1318
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5265a85-084b-4c93-8984-f32da959feda",
        "cursor": {
          "ref": "fa67c39f-c90c-468f-bf11-9348536227f9",
          "length": 251,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "4011714e-6bc5-41d3-ac33-1b3a814acd12"
        },
        "item": {
          "id": "c5265a85-084b-4c93-8984-f32da959feda",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "f6ac40fd-c65f-46ca-b25f-afb63dff8e92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 735,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d98c75d-8c0e-4400-af94-de0b6ae32439",
        "cursor": {
          "ref": "ada2ffe7-8588-4192-ab69-46b7daaf0506",
          "length": 251,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "28b31505-7655-4685-a24c-fac404b52c20"
        },
        "item": {
          "id": "4d98c75d-8c0e-4400-af94-de0b6ae32439",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "bce14347-e644-456d-bf01-e92bbc085736",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 441,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e06d4307-3955-462d-8363-060824bd6ed3",
        "cursor": {
          "ref": "4c43abf8-15ea-4432-b76f-6c9b178a3cfa",
          "length": 251,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "df179e74-e91b-48f3-95a7-a7f19ff94fc6"
        },
        "item": {
          "id": "e06d4307-3955-462d-8363-060824bd6ed3",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "a14d9be0-ad07-40d8-863f-dc96f6c51079",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 427,
          "responseSize": 1372
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b11c1e2-3dd3-4bbd-b02a-f38848dbbcab",
        "cursor": {
          "ref": "96822c2d-71c8-415d-a1f1-f781b0db34b6",
          "length": 251,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "5f591b38-0114-41e1-a044-7f9aec238957"
        },
        "item": {
          "id": "1b11c1e2-3dd3-4bbd-b02a-f38848dbbcab",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "f8136155-6ccb-4c13-a3d4-5b148b84fa6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 436,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bf96937-643d-4dd2-b1e1-61697208aeaf",
        "cursor": {
          "ref": "8228d49b-3926-4b2a-b679-1e3bc6d0201e",
          "length": 251,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "e71a175d-1f16-4d12-9d85-ff5a17274a5c"
        },
        "item": {
          "id": "8bf96937-643d-4dd2-b1e1-61697208aeaf",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "90f11975-e91d-4857-9964-fcabbce2c742",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 449,
          "responseSize": 1364
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a29bbaa6-f9e2-420d-9eda-12f8d97004c8",
        "cursor": {
          "ref": "b4190876-4e03-4be7-8c33-9a555306a973",
          "length": 251,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "5abf5c1e-b701-480a-a3d8-f6091f276541"
        },
        "item": {
          "id": "a29bbaa6-f9e2-420d-9eda-12f8d97004c8",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "247512b0-1a06-499d-b35a-7d2f45e38762",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 493,
          "responseSize": 1354
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8b8e200-88c5-4509-ab60-71ecc25211a8",
        "cursor": {
          "ref": "f10ba55a-0001-40a2-80c1-61f437bc9f84",
          "length": 251,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "a145f30e-c283-4778-a3b6-60b70f9b47f1"
        },
        "item": {
          "id": "a8b8e200-88c5-4509-ab60-71ecc25211a8",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "f0421e81-4392-4d7e-b5c7-1d175be581e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1054,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0caa39cd-b71c-4d84-bea5-3f4aad8c3536",
        "cursor": {
          "ref": "4d3f44d1-2038-46d7-b074-71fc0717166c",
          "length": 251,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "77d7d555-b137-4ad5-9c48-8c45f9521d8d"
        },
        "item": {
          "id": "0caa39cd-b71c-4d84-bea5-3f4aad8c3536",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "87ef3b92-41dd-4863-b5cc-e554bec5af93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 854,
          "responseSize": 1354
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbd32e63-98f4-4df7-81ee-155b96bb9483",
        "cursor": {
          "ref": "2db4edfc-af92-4531-83d6-6594a54d5775",
          "length": 251,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "348e06cf-289f-401f-a3f5-e932dbee6a47"
        },
        "item": {
          "id": "bbd32e63-98f4-4df7-81ee-155b96bb9483",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "2f9a6a76-080f-42b1-9849-c26d0aa7d3c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 862,
          "responseSize": 1380
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b43940f-622c-462a-a5fe-f19b2453e2b0",
        "cursor": {
          "ref": "72e81c29-39de-4fda-ae6f-d2dd35c83770",
          "length": 251,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "0b279257-a30a-42c0-be83-9865468627cd"
        },
        "item": {
          "id": "0b43940f-622c-462a-a5fe-f19b2453e2b0",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "d5413f17-0603-4c63-8905-bcd9053fce89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 746,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54f04c3b-510b-4751-b71d-f1e091ff1671",
        "cursor": {
          "ref": "969ed74a-4e0f-443f-a79e-f45125ab6c0d",
          "length": 251,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "2f914409-2062-400e-b38a-bc37d7377f7b"
        },
        "item": {
          "id": "54f04c3b-510b-4751-b71d-f1e091ff1671",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "fe7e2e03-d6ce-427d-9713-969ccf71eea9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 604,
          "responseSize": 1801
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5b5dac8-8006-42ed-8e24-f56ec7291ff6",
        "cursor": {
          "ref": "d498bafd-83c2-42fa-976b-180b509e085f",
          "length": 251,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "4183ce54-a15b-4b82-8091-feec7a1c2321"
        },
        "item": {
          "id": "a5b5dac8-8006-42ed-8e24-f56ec7291ff6",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "15dd171c-bbed-4e92-aa72-1ddc4e689589",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 473,
          "responseSize": 1787
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "642430b1-9c8a-4a20-8cc3-66bbfb655d2b",
        "cursor": {
          "ref": "8287f20f-86cd-4c5f-8590-2ebc989921d8",
          "length": 251,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "d951f4a1-a4d3-4904-92f9-411c77e28278"
        },
        "item": {
          "id": "642430b1-9c8a-4a20-8cc3-66bbfb655d2b",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "51389448-9239-4deb-8260-4c1a3bb6efe7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 467,
          "responseSize": 1785
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2dd15d4-edee-4f06-a0f3-2fd5183c1d50",
        "cursor": {
          "ref": "eea78870-a340-4c5d-b951-f831d13906ca",
          "length": 251,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "c33405be-fc0c-4143-9809-d84e3e1b1d4a"
        },
        "item": {
          "id": "f2dd15d4-edee-4f06-a0f3-2fd5183c1d50",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "6ffe1d14-9601-4ff3-84aa-a35703212150",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 460,
          "responseSize": 1786
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed749499-429b-4079-a6d6-9a14a95743a1",
        "cursor": {
          "ref": "072db7b1-11aa-4d5c-a5c9-25c20854eceb",
          "length": 251,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "7ff0046b-bcae-4052-8d49-3b10cf616f86"
        },
        "item": {
          "id": "ed749499-429b-4079-a6d6-9a14a95743a1",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "cbca2eff-1542-4e78-890c-e11d2a7515d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 479,
          "responseSize": 1817
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c682d7ef-d5fc-4755-8aab-6faa95c7521a",
        "cursor": {
          "ref": "f350be55-1ee6-40c7-898d-2d8fd47ff863",
          "length": 251,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "bf08db49-1c74-45e6-8256-b435b9cb3f15"
        },
        "item": {
          "id": "c682d7ef-d5fc-4755-8aab-6faa95c7521a",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "fbd5ad33-7d5e-4b98-9c44-4811790e7d90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 439,
          "responseSize": 2160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17675efb-7764-4a90-9df8-230027ff8e09",
        "cursor": {
          "ref": "71882987-ad9c-4db6-af50-81f6dc893994",
          "length": 251,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "9476d93e-9c60-4c5b-a1ae-2c09096635ed"
        },
        "item": {
          "id": "17675efb-7764-4a90-9df8-230027ff8e09",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "55861383-eb84-449d-8f5b-5874c9d73f74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 452,
          "responseSize": 2146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbd21b83-b2af-4274-b304-905a6ac748ae",
        "cursor": {
          "ref": "899c40f5-f762-4e7c-8b34-b85c5613eaec",
          "length": 251,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "337676c0-9fba-4396-9ca6-81f4c28ef214"
        },
        "item": {
          "id": "fbd21b83-b2af-4274-b304-905a6ac748ae",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "b0af7c78-0cd0-47ff-bcee-38bd40d06f7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 452,
          "responseSize": 2144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be64f64f-e8c5-486d-9e25-09745f719fa8",
        "cursor": {
          "ref": "d872bb3e-9007-4908-bb7b-2e98404715e9",
          "length": 251,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "2d385705-3929-4fc0-bcef-aca7104f5e01"
        },
        "item": {
          "id": "be64f64f-e8c5-486d-9e25-09745f719fa8",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "7dc03d48-d47f-429a-866b-eb8032cf3a97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 457,
          "responseSize": 2145
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae0df2fd-f109-47c1-9409-9d93c20ab6ff",
        "cursor": {
          "ref": "33591cc4-f748-4962-beee-12a2b4e01348",
          "length": 251,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "d2cf81d7-3de8-4466-8712-85d9118c8cc4"
        },
        "item": {
          "id": "ae0df2fd-f109-47c1-9409-9d93c20ab6ff",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "90a54fbb-86e8-4a8d-b7d4-dd6524e68e8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 458,
          "responseSize": 2166
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c617165-087f-4498-9ff5-117b48591c85",
        "cursor": {
          "ref": "ac242632-f521-4ebf-8b5d-ba9fa99bba8a",
          "length": 251,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "54099f32-3fb1-4829-a057-31273095085b"
        },
        "item": {
          "id": "4c617165-087f-4498-9ff5-117b48591c85",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "24a30835-a8d3-49d5-b968-4ad5f507cac3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 458,
          "responseSize": 1370
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "718d241e-1e4f-44cf-9766-75ef3dc929c6",
        "cursor": {
          "ref": "4e27fc84-0614-4eb6-a106-cbc63291ebad",
          "length": 251,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "e9dcbc12-9362-4b49-af8f-f891acbf9489"
        },
        "item": {
          "id": "718d241e-1e4f-44cf-9766-75ef3dc929c6",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "0d3dc7b7-cfe0-4d65-9dc4-ba3107792812",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 462,
          "responseSize": 1394
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8f02caf-5136-4267-8d71-e5e57c239189",
        "cursor": {
          "ref": "f7d31572-d2f5-4aed-80b9-726af33cda92",
          "length": 251,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "4f77815f-3a8e-432b-83b5-fd1adb2c8990"
        },
        "item": {
          "id": "f8f02caf-5136-4267-8d71-e5e57c239189",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "e6001518-b515-4fe1-9060-1b2cd70d6923",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 480,
          "responseSize": 1375
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca4031ce-c653-4135-ae8f-646c602f7370",
        "cursor": {
          "ref": "103c53c8-be7d-49c2-9360-5ce82d70a881",
          "length": 251,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "2a29a9eb-fd2d-4ea7-a0bb-dff45bfbc0f0"
        },
        "item": {
          "id": "ca4031ce-c653-4135-ae8f-646c602f7370",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "089213cb-a0ad-4463-8725-9a28c6a9933c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 451,
          "responseSize": 1373
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7820c506-1142-4b08-bdeb-d2053491dc5a",
        "cursor": {
          "ref": "72d647f8-b2f3-472c-bb31-8ed36ebbeba3",
          "length": 251,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "8b61e934-d45f-4bb9-a944-864cbaacdf9a"
        },
        "item": {
          "id": "7820c506-1142-4b08-bdeb-d2053491dc5a",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "040f43cb-77ab-4545-86e3-d4bae44b8bd5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 456,
          "responseSize": 1374
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93a95288-20e3-4ed0-87d7-a8da65a0a516",
        "cursor": {
          "ref": "179279ec-7a38-41b9-b875-cb92c266ce6b",
          "length": 251,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "df8259b9-39ca-4d72-bf77-e7699a315019"
        },
        "item": {
          "id": "93a95288-20e3-4ed0-87d7-a8da65a0a516",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "71bcea2f-2b10-4eb4-8a16-46ad03b8332f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 484,
          "responseSize": 1400
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bf0ad0b-dd01-4e4e-84bc-f734898c87fe",
        "cursor": {
          "ref": "0a10c988-1e62-4f4a-b69b-c7c388963819",
          "length": 251,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "ac9af7ce-ac58-4d99-9311-a6ec11b29616"
        },
        "item": {
          "id": "5bf0ad0b-dd01-4e4e-84bc-f734898c87fe",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "bae40a75-b2d6-4023-b511-ff58fe6c5ba1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 433,
          "responseSize": 1430
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2073b6c7-821c-489b-9636-2299554f0140",
        "cursor": {
          "ref": "cabd7b21-118e-4bd6-a2af-f6171a5c5751",
          "length": 251,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "9ae93b92-905c-41d3-8973-8538d69c057a"
        },
        "item": {
          "id": "2073b6c7-821c-489b-9636-2299554f0140",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "4d4c529f-26f2-400a-bbfc-256220f782ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 440,
          "responseSize": 1373
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "854c99fa-8f4a-4444-a07c-a22c7ebfb9f9",
        "cursor": {
          "ref": "cee9c08b-5df6-4d56-97a8-8faec94f45d1",
          "length": 251,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "fd5b6907-bbdd-46dd-b6d3-0f1fe89cf679"
        },
        "item": {
          "id": "854c99fa-8f4a-4444-a07c-a22c7ebfb9f9",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "35cddfdb-1ad8-45a2-a4af-56bd270e68f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 436,
          "responseSize": 1874
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c40942b-3a47-4836-bfa4-b05f469a4a34",
        "cursor": {
          "ref": "168eaa46-da33-4c10-9e7e-dbb05a07f7a6",
          "length": 251,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "b9415592-a3a6-4445-b1b9-0ce88bc3fbd8"
        },
        "item": {
          "id": "3c40942b-3a47-4836-bfa4-b05f469a4a34",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "b9783b56-8b80-4f91-85c9-0beb6ff9efc2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 465,
          "responseSize": 1673
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c979771-78de-4b90-b19d-e7385d15c4c1",
        "cursor": {
          "ref": "7d14a35b-8068-49ef-b2d8-45b6c8de45a2",
          "length": 251,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "0d770029-3753-41f1-8afe-197f4ba64c34"
        },
        "item": {
          "id": "0c979771-78de-4b90-b19d-e7385d15c4c1",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "14a04c68-a1bf-40a1-9461-630c080247d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 432,
          "responseSize": 1671
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14dadab1-69a5-4cec-98d4-0c4b99deab73",
        "cursor": {
          "ref": "c7b9567e-e00b-4105-a8de-0fc1c7e05bb4",
          "length": 251,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "09a373b8-db29-41b6-a823-bcabf9b01be9"
        },
        "item": {
          "id": "14dadab1-69a5-4cec-98d4-0c4b99deab73",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "9731bc5e-f6fe-4cd6-8f16-aba351e4e53d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 442,
          "responseSize": 1672
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "785f86d5-263f-4ace-900e-46a9310e4643",
        "cursor": {
          "ref": "fb86a1d6-5ffa-4edf-b97e-085e16ab2809",
          "length": 251,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "2725f764-6639-4132-83de-315c32c090cd"
        },
        "item": {
          "id": "785f86d5-263f-4ace-900e-46a9310e4643",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "20d178be-f461-431c-acae-30c5f5a47b83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 466,
          "responseSize": 1685
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34e18546-22d2-47ee-8624-c3af17c74f5e",
        "cursor": {
          "ref": "b87e3fd6-fcd5-43d7-9233-c76ab4816402",
          "length": 251,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "b0481f88-1154-4960-910c-2ce92a944b83"
        },
        "item": {
          "id": "34e18546-22d2-47ee-8624-c3af17c74f5e",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "c1905890-7947-4d41-91e6-e2266928acc8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 447,
          "responseSize": 2209
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "872000a8-3de7-4354-a367-ea3ac3ca58a5",
        "cursor": {
          "ref": "f4641a38-a0f2-4c29-8ba2-f56bb522f79c",
          "length": 251,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "c69a6275-310d-4944-946b-2fe2ec2e2ae1"
        },
        "item": {
          "id": "872000a8-3de7-4354-a367-ea3ac3ca58a5",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "53ef4693-c428-4033-a7ab-222fff9fb0e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 490,
          "responseSize": 2195
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ce3ac2f-ad73-44e6-8c0e-3661bd16938d",
        "cursor": {
          "ref": "0da6d750-056e-4a4f-ad31-22b84d789cd4",
          "length": 251,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "a36e2159-0be6-4313-bff5-c295fc14d2bc"
        },
        "item": {
          "id": "6ce3ac2f-ad73-44e6-8c0e-3661bd16938d",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "c74621f7-a2a2-4da3-be35-399c2a4e7f9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 441,
          "responseSize": 2193
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "241ec5c3-0a6b-42f7-9992-fde767006c62",
        "cursor": {
          "ref": "28887cb0-2b06-4e8a-a6b9-9c593baf8490",
          "length": 251,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "b6764392-48fe-4d97-942a-0dfdf5621906"
        },
        "item": {
          "id": "241ec5c3-0a6b-42f7-9992-fde767006c62",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "2595a628-2229-44f6-bef6-851de1e173b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 444,
          "responseSize": 2194
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a2aa007-baed-49e3-ac9a-f751ee4e0861",
        "cursor": {
          "ref": "c89026ed-814b-4bc6-92e9-1692f384984a",
          "length": 251,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "1ae603a9-7b89-4d49-bb4a-2e016d1da7b3"
        },
        "item": {
          "id": "3a2aa007-baed-49e3-ac9a-f751ee4e0861",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "0bedeec7-0e29-4898-825b-6d7b6bacf88c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 740,
          "responseSize": 2215
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1381891e-8b01-44e8-9904-11662b296c30",
        "cursor": {
          "ref": "5fdc2d9b-f9c9-4447-900b-9b3f2c583f28",
          "length": 251,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "a5067de0-5435-45fb-97a0-a5186cf82952"
        },
        "item": {
          "id": "1381891e-8b01-44e8-9904-11662b296c30",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "0f78d1b9-3c58-4409-9eda-32a750fbfd24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 933,
          "responseSize": 949
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72a0ee1b-643d-492e-b089-e1b8cea658c5",
        "cursor": {
          "ref": "f844f805-e4a1-4caf-97ae-f49a6370b541",
          "length": 251,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "3744c678-375b-4c6d-90e4-2a1d7d775230"
        },
        "item": {
          "id": "72a0ee1b-643d-492e-b089-e1b8cea658c5",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "07f07980-1e3a-44dd-b9f6-0feb33d4770c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 940,
          "responseSize": 960
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec266f2d-04ee-430e-a714-01606a00d4b5",
        "cursor": {
          "ref": "b48fa4aa-f02c-41fe-810b-4afac373d66e",
          "length": 251,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "cbbb8294-eed8-432b-9f3e-9ec4a08902d0"
        },
        "item": {
          "id": "ec266f2d-04ee-430e-a714-01606a00d4b5",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "ec212638-d9eb-4405-9d4a-98abcc02c63b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 823,
          "responseSize": 962
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "344f88ff-876d-492d-a192-fbe03726fa5d",
        "cursor": {
          "ref": "9be95053-3864-44f7-82fa-26577a6287ba",
          "length": 251,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "2dd19f9a-7b91-4040-a92c-0da6e7a6e4d8"
        },
        "item": {
          "id": "344f88ff-876d-492d-a192-fbe03726fa5d",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "9141660a-713d-43d3-80f6-22dd39a99573",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 765,
          "responseSize": 960
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba91c5cc-64d4-4045-abbe-f216ca5c89ca",
        "cursor": {
          "ref": "3149a4fd-6b22-4168-a7d9-d947cae8d9c8",
          "length": 251,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "c4afa5b0-68b4-4865-a65a-7552275b70f5"
        },
        "item": {
          "id": "ba91c5cc-64d4-4045-abbe-f216ca5c89ca",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "8e85e110-6b12-4808-bed4-3c24ec8d1bc9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 456,
          "responseSize": 962
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2e45cf2-35d6-4e28-97dd-3cf534868a2c",
        "cursor": {
          "ref": "35e3effb-38d7-47fb-a0ee-1a3a80cd342c",
          "length": 251,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "63b7967f-1bea-43da-9f1d-7a9a6a0af1a3"
        },
        "item": {
          "id": "e2e45cf2-35d6-4e28-97dd-3cf534868a2c",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "11c238f4-5d02-4604-b9f3-7115c59c21f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 462,
          "responseSize": 966
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "869b31b8-67f8-4290-bd17-fa7a97dc1a7e",
        "cursor": {
          "ref": "4d89cdc7-492b-40d7-baa6-af472b15da07",
          "length": 251,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "2a807794-6101-4380-8b64-ecd1534e5f02"
        },
        "item": {
          "id": "869b31b8-67f8-4290-bd17-fa7a97dc1a7e",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "f6a2ddd2-f77b-415a-a880-dd2a987472e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 522,
          "responseSize": 1307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14d8a838-fe6a-40a2-bdc8-8e12410b8a5c",
        "cursor": {
          "ref": "64025018-e87d-4df8-95df-8f00c0d096de",
          "length": 251,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "5060c99f-f6f9-46cb-a145-8ca40d994d53"
        },
        "item": {
          "id": "14d8a838-fe6a-40a2-bdc8-8e12410b8a5c",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "24301d14-8bc0-45e8-b266-462ed607ce5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 453,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c4e7d13-1ebb-4d0c-aa9d-e1b5a78fd643",
        "cursor": {
          "ref": "ebf4188f-b5e6-490a-b75b-3148564e2fd0",
          "length": 251,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "720717a0-6d03-4467-b991-6b6c2900ac79"
        },
        "item": {
          "id": "6c4e7d13-1ebb-4d0c-aa9d-e1b5a78fd643",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "e007d6d2-13dc-4508-b491-a5de6157dcee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 476,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bd5a8de-bd38-413b-b5cf-8da19aa57eb6",
        "cursor": {
          "ref": "fa508804-ebe3-49c7-8e95-fe33c287fa66",
          "length": 251,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "e0e5fdc6-1b41-4afd-afb7-eaf7dd19c7e8"
        },
        "item": {
          "id": "9bd5a8de-bd38-413b-b5cf-8da19aa57eb6",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "18863457-a1f4-4f42-a34a-1c4bcc6591f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 442,
          "responseSize": 1318
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "428be35c-a9b3-4a63-9bc1-769018ade26d",
        "cursor": {
          "ref": "e9dc85f1-2b4a-4e8f-943d-bb392b5ec8f5",
          "length": 251,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "628eb2a1-bbb6-4fd7-a6b2-09de796baf5a"
        },
        "item": {
          "id": "428be35c-a9b3-4a63-9bc1-769018ade26d",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "521f64f5-4e73-45b8-8ca5-8bad29571d28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 487,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "405de67d-392d-4e41-8d5e-2869e249171a",
        "cursor": {
          "ref": "fbb01fef-bf65-4b1d-9957-187045a36b7a",
          "length": 251,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "62f8d070-c055-4ba8-bc16-cca3431b1ad1"
        },
        "item": {
          "id": "405de67d-392d-4e41-8d5e-2869e249171a",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "2cfe7796-3f6a-4193-8f7e-27bd78fa4844",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 427,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2df9aaab-4bf1-4a07-a8f3-0edfd3664660",
        "cursor": {
          "ref": "53e52baf-ba3c-4b4f-8695-95d9bd6b7c05",
          "length": 251,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "2ec5d899-a598-4772-8c6c-5c114346d827"
        },
        "item": {
          "id": "2df9aaab-4bf1-4a07-a8f3-0edfd3664660",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "d9e35463-6d43-4715-98df-e65a1885d35c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 437,
          "responseSize": 1344
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ee6d805-720b-4545-975a-de4381d8785c",
        "cursor": {
          "ref": "db963dae-d9f9-4d1c-a6ab-129d86b030eb",
          "length": 251,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "5d864b9d-335a-4842-9adb-b4419dcaf595"
        },
        "item": {
          "id": "4ee6d805-720b-4545-975a-de4381d8785c",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "597d439a-b62c-4887-9e2e-be32b378fdb8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 445,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e284453e-2845-48e2-a242-e1aafb5203b5",
        "cursor": {
          "ref": "5c4d27cb-d6c5-43b4-baa2-1ade444e69fb",
          "length": 251,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "a82b73aa-f100-4aee-8d50-01da7ddc68ce"
        },
        "item": {
          "id": "e284453e-2845-48e2-a242-e1aafb5203b5",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "b891328b-c0bc-4fd6-a442-7e3f28d9930a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 445,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed328132-71cf-4d1b-a99f-9945702824fe",
        "cursor": {
          "ref": "c05b84e3-9f8d-4def-8751-a86ce5927731",
          "length": 251,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "22e51e56-29cf-43c6-8d5c-38aae5aa7666"
        },
        "item": {
          "id": "ed328132-71cf-4d1b-a99f-9945702824fe",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "5d9f350e-9e37-4f30-9fd0-18b196ec8fc9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 440,
          "responseSize": 1318
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "225115a2-1e0c-4cfd-881c-768a5906e147",
        "cursor": {
          "ref": "74447b05-66a0-4f6c-b771-3d32aefed9c3",
          "length": 251,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "1d45d18d-1115-491d-a831-ed33f98e6a4c"
        },
        "item": {
          "id": "225115a2-1e0c-4cfd-881c-768a5906e147",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "7a4238ab-b518-43ff-ac7b-14d586ff5878",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 453,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c47e655b-0039-4ec6-8679-8c7aa2596c13",
        "cursor": {
          "ref": "a81d5667-b1c7-4e3c-9e47-c3617d50a715",
          "length": 251,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "81166494-70ce-40d9-bb21-4e01e681415c"
        },
        "item": {
          "id": "c47e655b-0039-4ec6-8679-8c7aa2596c13",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "f7401b22-af18-4505-b181-24e667551fe1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 423,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ee9415d-1848-41b5-9f5f-99e502d416f6",
        "cursor": {
          "ref": "c02d8e19-f958-4cda-af16-d9c66e7a17db",
          "length": 251,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "e8095b9d-854b-4709-ad38-c0626e81d7c8"
        },
        "item": {
          "id": "7ee9415d-1848-41b5-9f5f-99e502d416f6",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "40d88d03-40bf-4042-bdc8-97fb2f3fd9f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 435,
          "responseSize": 1298
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92879149-fdfc-4b07-9c63-3f4224cecda3",
        "cursor": {
          "ref": "de105bee-1b20-4b91-be5e-4a1a5e98afcf",
          "length": 251,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "9ddfaea4-c8a9-480e-ae55-321582eec357"
        },
        "item": {
          "id": "92879149-fdfc-4b07-9c63-3f4224cecda3",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "b5f330f2-91cd-4584-97e1-bdc2ab96be67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 442,
          "responseSize": 1234
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51f5a97b-c2b3-4c68-9f7d-47fe93d0f90c",
        "cursor": {
          "ref": "25844e37-6a67-4a1e-871b-9ccc4b3f8f38",
          "length": 251,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "705b94fc-5f8e-4f57-ad30-a9f342fec561"
        },
        "item": {
          "id": "51f5a97b-c2b3-4c68-9f7d-47fe93d0f90c",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "b714ce30-8898-46f5-aceb-c929b7d799b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 441,
          "responseSize": 1233
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b3ffb5c-f873-4d28-92ad-b8d6a3b59ad1",
        "cursor": {
          "ref": "bcd0e134-d305-4425-9e89-4cb902353dc4",
          "length": 251,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "9d9442c9-49b0-484f-8f4c-e24c744ae767"
        },
        "item": {
          "id": "8b3ffb5c-f873-4d28-92ad-b8d6a3b59ad1",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "9e8557a8-2bc4-4089-a2d8-8a93ebf7050f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 471,
          "responseSize": 1234
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e4cda10-e8d7-4b3d-b8b6-c5cdc5d3f7a0",
        "cursor": {
          "ref": "dce6ab0c-d9d3-4415-adc0-6d145daa09e4",
          "length": 251,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "281a24b0-f661-452b-aee1-406ad9cff714"
        },
        "item": {
          "id": "1e4cda10-e8d7-4b3d-b8b6-c5cdc5d3f7a0",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "a054c248-24f0-4626-812c-f9a22ec8ed59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 467,
          "responseSize": 1304
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c879f16a-0334-45e0-871e-7093b9567f8b",
        "cursor": {
          "ref": "f3868acf-ff90-4c23-9cee-ba4aec5027a5",
          "length": 251,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "517ee4d3-f22c-4501-a324-4db44c177aa4"
        },
        "item": {
          "id": "c879f16a-0334-45e0-871e-7093b9567f8b",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "ee0d434c-0a34-4c49-a636-d33b3fc6c5a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 461,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ac0a1c1-93aa-49e4-a4c4-282b62412cc9",
        "cursor": {
          "ref": "9596d944-ac9f-4c0d-a1e5-ec8eae605e7b",
          "length": 251,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "047f0394-be45-4518-bc2b-f3ed53126241"
        },
        "item": {
          "id": "5ac0a1c1-93aa-49e4-a4c4-282b62412cc9",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "7cd5cbd0-0fd5-428c-ac80-49b687b6300c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 436,
          "responseSize": 1195
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2f07354-324c-4289-8716-23d6150c3c58",
        "cursor": {
          "ref": "251bea5e-d626-473c-8b65-a94ff4cc9fff",
          "length": 251,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "5ae87f23-9a4e-46ce-9c00-c2adce0c424b"
        },
        "item": {
          "id": "c2f07354-324c-4289-8716-23d6150c3c58",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "e0f86fa4-02b5-4750-9953-e773a7eb7852",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 441,
          "responseSize": 1194
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df553d3a-b057-4db2-914c-e5c3ab15501f",
        "cursor": {
          "ref": "71d757e7-01f1-4b37-b67b-8da09293dec5",
          "length": 251,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "9464e86b-0e69-49b8-8d5c-c042f7427683"
        },
        "item": {
          "id": "df553d3a-b057-4db2-914c-e5c3ab15501f",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "cc760034-da03-4021-9470-5aae286508c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 437,
          "responseSize": 1195
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "131d8b02-d7e4-4b3a-8992-921da45d3f8a",
        "cursor": {
          "ref": "59a5001e-d691-4920-8624-89b612c86a93",
          "length": 251,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "59afd334-eca7-4f29-92e1-d1a6ef0b07d9"
        },
        "item": {
          "id": "131d8b02-d7e4-4b3a-8992-921da45d3f8a",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "5c4c8f0a-d38b-429f-aeb1-d4db2ea335a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 434,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b869960-095b-43c0-8f19-6c2429357323",
        "cursor": {
          "ref": "ddf033d0-d056-4294-b372-68d2c5b06719",
          "length": 251,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "97938bc3-b9bb-47fe-b674-1970f70bd51e"
        },
        "item": {
          "id": "7b869960-095b-43c0-8f19-6c2429357323",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "eb09fed7-152d-4192-b482-4b1eb7c14eac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 448,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8549178-b784-4712-9458-328c46d40c63",
        "cursor": {
          "ref": "8f64ea29-840d-4ab4-bc8d-fa70e4a4e0c6",
          "length": 251,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "b5ef100c-bb0d-4edc-97b4-0b7f4f4496c8"
        },
        "item": {
          "id": "e8549178-b784-4712-9458-328c46d40c63",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "f6bf5258-5054-4a8b-8dbd-7cb60882b543",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 438,
          "responseSize": 1324
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e7f69ef-c318-4c38-9a5c-a15e67800411",
        "cursor": {
          "ref": "3a934afa-4413-4c6e-843d-ab2253f3ac83",
          "length": 251,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "380039d3-4ebd-4486-89b2-f760323d014f"
        },
        "item": {
          "id": "1e7f69ef-c318-4c38-9a5c-a15e67800411",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "75852e0d-0912-45df-9805-355260b676bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 463,
          "responseSize": 1323
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f27fa04f-641c-4db7-8258-81b3d3b0070b",
        "cursor": {
          "ref": "edfd3275-2baa-4366-b3ab-b2c7ee43449c",
          "length": 251,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "6bab3c92-3ffe-457c-bbf4-3a2b0e9ee622"
        },
        "item": {
          "id": "f27fa04f-641c-4db7-8258-81b3d3b0070b",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "51870b3d-0348-402b-a8ff-6ea897f50ff9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 430,
          "responseSize": 1324
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f543dd3-b3a8-4e9c-a186-2c74de57850c",
        "cursor": {
          "ref": "5d969a0c-e0d7-4ff5-91fa-454914e49392",
          "length": 251,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "2147dcd0-0969-4632-8d9f-f2995c1c7154"
        },
        "item": {
          "id": "1f543dd3-b3a8-4e9c-a186-2c74de57850c",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "7cff07c2-1d5b-4ab1-80d0-0d63c4705e4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 458,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e772411-8f9c-4b29-8fe5-29abfa7ce15b",
        "cursor": {
          "ref": "7fbc936a-570c-4be9-93a4-4070e9c20018",
          "length": 251,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "9c4df005-53af-418d-ac29-b87c9312eb81"
        },
        "item": {
          "id": "3e772411-8f9c-4b29-8fe5-29abfa7ce15b",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "a5ecfd81-d365-44bf-b6fe-c540304f5038",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 446,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3cc6fcff-a98e-400d-8cc2-bad97a18b772",
        "cursor": {
          "ref": "bcde0f89-fa05-429b-8be6-ac16601d78d6",
          "length": 251,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "98b245b0-1a61-420b-b304-d3ce01467805"
        },
        "item": {
          "id": "3cc6fcff-a98e-400d-8cc2-bad97a18b772",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "e6303c48-df40-4bb9-b650-6cb22986fea2",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 43,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7dd680a6-1a1c-44e2-a1e0-90e02f3c945b",
        "cursor": {
          "ref": "c3c4c2e7-2057-4954-b408-a9fddeb69522",
          "length": 251,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "6d826683-12d2-4024-91f9-6cc593848993"
        },
        "item": {
          "id": "7dd680a6-1a1c-44e2-a1e0-90e02f3c945b",
          "name": "credentials_verify:missing_scope:verify_credentials"
        },
        "response": {
          "id": "dad8a3ea-004d-4bdd-abee-b07f24a0ebce",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 437,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0cd4f2fd-e3a1-4eef-8c10-dad283dc3869",
        "cursor": {
          "ref": "41f3614e-21cf-41ac-9de4-f2c2eff0a854",
          "length": 251,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "a974a738-a4d2-4777-9c4d-3619f8eb4369"
        },
        "item": {
          "id": "0cd4f2fd-e3a1-4eef-8c10-dad283dc3869",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "645ea457-2c15-4a08-823d-971b671bdb33",
          "status": "OK",
          "code": 200,
          "responseTime": 499,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "660854a5-cff4-4fd2-8865-c62e40c757d5",
        "cursor": {
          "ref": "99ce09f3-492f-412b-9298-df73e09ea845",
          "length": 251,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "dcc18eaf-913e-4199-a4dc-f57421143f54"
        },
        "item": {
          "id": "660854a5-cff4-4fd2-8865-c62e40c757d5",
          "name": "credentials_verify"
        },
        "response": {
          "id": "112fbaf3-d24c-47a0-8769-b2c045b4f7de",
          "status": "OK",
          "code": 200,
          "responseTime": 2293,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "bacb5434-7043-4c81-9b67-eab122d794db",
        "cursor": {
          "ref": "f8637e52-4722-4f2d-b52d-41f3a408634e",
          "length": 251,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "79e2b915-ba79-4d82-9fa7-a029260a4253"
        },
        "item": {
          "id": "bacb5434-7043-4c81-9b67-eab122d794db",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "12f0ed01-0593-4f43-acac-23255a03c8a0",
          "status": "OK",
          "code": 200,
          "responseTime": 2070,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "f45bd575-deb1-4e65-8b7e-0cbcd3f938a5",
        "cursor": {
          "ref": "52640497-1603-4480-9a5c-fd8b95ef1fff",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "12044489-e46a-40e3-8eb8-cb8be8e617c8"
        },
        "item": {
          "id": "f45bd575-deb1-4e65-8b7e-0cbcd3f938a5",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "ff1b79f2-c468-4396-825d-e7fe17c6d88e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 42,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f45bd575-deb1-4e65-8b7e-0cbcd3f938a5",
        "cursor": {
          "ref": "52640497-1603-4480-9a5c-fd8b95ef1fff",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "12044489-e46a-40e3-8eb8-cb8be8e617c8"
        },
        "item": {
          "id": "f45bd575-deb1-4e65-8b7e-0cbcd3f938a5",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "ff1b79f2-c468-4396-825d-e7fe17c6d88e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 42,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f45bd575-deb1-4e65-8b7e-0cbcd3f938a5",
        "cursor": {
          "ref": "52640497-1603-4480-9a5c-fd8b95ef1fff",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "12044489-e46a-40e3-8eb8-cb8be8e617c8"
        },
        "item": {
          "id": "f45bd575-deb1-4e65-8b7e-0cbcd3f938a5",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "ff1b79f2-c468-4396-825d-e7fe17c6d88e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 42,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0a989dc-d1cf-44bc-a399-e81a798f880b",
        "cursor": {
          "ref": "44488c02-e77f-4cd6-a12e-9fb4ecf95358",
          "length": 251,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "c0a3b166-d8fa-45d8-9d2d-9d156ede4085"
        },
        "item": {
          "id": "c0a989dc-d1cf-44bc-a399-e81a798f880b",
          "name": "presentations:missing_scope:submit_presentations"
        },
        "response": {
          "id": "ea5ff579-ba56-46f9-8c27-1a955d8e5ca5",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 446,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce825cc1-3ac6-441a-bf0e-f101bc294ed0",
        "cursor": {
          "ref": "b4a0260c-c93b-40a1-a6d6-3dbcf889694f",
          "length": 251,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "f81728d5-1dac-4002-94e2-076564035587"
        },
        "item": {
          "id": "ce825cc1-3ac6-441a-bf0e-f101bc294ed0",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "2284499d-0d78-4690-9ae5-bef335e289c9",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 42,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce825cc1-3ac6-441a-bf0e-f101bc294ed0",
        "cursor": {
          "ref": "b4a0260c-c93b-40a1-a6d6-3dbcf889694f",
          "length": 251,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "f81728d5-1dac-4002-94e2-076564035587"
        },
        "item": {
          "id": "ce825cc1-3ac6-441a-bf0e-f101bc294ed0",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "2284499d-0d78-4690-9ae5-bef335e289c9",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 42,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6be87b9-4f89-48ad-ba25-c6b434ee4e9f",
        "cursor": {
          "ref": "c5e5309f-8919-4102-87b4-54b1318adbf2",
          "length": 251,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "e1f548d6-297f-4f51-823f-7a84793c29c7"
        },
        "item": {
          "id": "b6be87b9-4f89-48ad-ba25-c6b434ee4e9f",
          "name": "presentations_prove:missing_scope:prove_presentations"
        },
        "response": {
          "id": "547f1653-dd0e-427a-885b-0bc4bce3ff55",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 1043,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b27e146-70b5-4033-8fc3-f06037c676ad",
        "cursor": {
          "ref": "75291cc6-e76d-4e02-a429-a08511ca9ac6",
          "length": 251,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "bd87283c-1ad0-4c2a-be51-82fce626b506"
        },
        "item": {
          "id": "1b27e146-70b5-4033-8fc3-f06037c676ad",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "3b589344-b07a-4fd5-b8d4-9901cd7901fb",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 41,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b27e146-70b5-4033-8fc3-f06037c676ad",
        "cursor": {
          "ref": "75291cc6-e76d-4e02-a429-a08511ca9ac6",
          "length": 251,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "bd87283c-1ad0-4c2a-be51-82fce626b506"
        },
        "item": {
          "id": "1b27e146-70b5-4033-8fc3-f06037c676ad",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "3b589344-b07a-4fd5-b8d4-9901cd7901fb",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 41,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d364f80e-3239-4392-a2bb-c5aba3013da2",
        "cursor": {
          "ref": "6ead8da8-d63f-406f-b241-83db602e5c8a",
          "length": 251,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "b04ca2ea-f887-46a0-9903-718b049120d3"
        },
        "item": {
          "id": "d364f80e-3239-4392-a2bb-c5aba3013da2",
          "name": "presentations_verify:missing_scope:verify_presentations"
        },
        "response": {
          "id": "eb2be03e-288a-4fd5-acf0-8dc6b83538a4",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 1097,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}