{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "3ec88ab3-bd83-469a-b498-3c6bfd2a4cd9",
        "name": "Clear Cache",
        "item": [
          {
            "id": "3257439e-5ee6-4b55-a68b-650b0dcdb305",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "bec51409-03f7-450c-aeb7-01b3db70d93a",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "bb081f96-6fbe-4e4d-b415-60fb6a642063"
                }
              }
            ]
          },
          {
            "id": "54721037-943b-4b47-a3a7-4bc2609ffc23",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "54e5a7bd-89f9-4894-a850-eee2202ca67e",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "eb5c86df-346f-4ac3-94bc-a6dd7f45e586"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "cc4bfffb-78a0-41ad-a52a-57eeec60d4e3",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "0e575efc-c70c-47e7-adfb-c7bd4988cbf4",
            "name": "Positive Testing",
            "item": [
              {
                "id": "b3bb6eb2-cf9e-4768-8ae3-c6c31010e3f1",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "64a76921-83e2-46e8-bf9b-8feef7e7b783",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a5ed7c6b-5c66-40d7-ac40-1109d0b44592"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "9f23c9f0-80d6-48a4-a455-e7d33ff6db07",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "c6f5761d-d792-4448-b53b-85a7b96cb22b"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "54878b52-0c2a-4f47-9c41-780c449dba88",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "a04a851a-e79a-4d3f-af70-057424093fbc"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "de688825-356a-4035-9ca7-98eacc47d75a",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "379d4e3d-21cd-401a-a582-1ba07710485c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9b391a0c-0e04-4645-a469-acc7e1932ce3",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "2c591ca0-53ed-4572-9ef5-8d6b7883eafc"
            }
          }
        ]
      },
      {
        "id": "af85d702-6d54-4ea2-b6ff-ff24e7489942",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "604fe5bc-ff4d-4dd6-a101-5f458ed2e9e4",
            "name": "Negative Testing",
            "item": [
              {
                "id": "a33fcfa8-260c-4255-92e7-318e5a459870",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "70e31ccc-1bbd-41ba-a895-58e54d152ffd",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e529f40-b27e-49f5-b44e-f9ed5e8fb89c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "740a6263-4696-4179-b508-6059ab065172"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3093697e-d1ea-4abe-9190-e681ab7e88fc",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfd00b52-3f69-4a57-87c6-2ad871ed5959",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1e058534-3fc8-482d-8aa0-fb1c733ae500"
                        }
                      }
                    ]
                  },
                  {
                    "id": "065d7664-19db-4f35-a96c-59f960fbc4e7",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfd8a9f3-e546-4e2b-8f2c-442c9630818d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9578a03b-6515-44c9-ad40-6ad73e2e1be1"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "d72ebb73-5d47-4bbc-989d-62276e68b78b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "58ff8308-2377-437f-8f60-fd3e543b4e8d",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73894689-f05a-4f08-884f-fb49f984e2ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "24303c1a-26d6-4c85-a9c3-01d59813e716"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e2099fc-db8c-4c31-a288-a39653bb8fc5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97835fa9-fe54-44b9-b8cb-ab724fa2a4a7"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "264bd534-81dc-4027-bb6a-d5c85e81ad11",
            "name": "Positive Testing",
            "item": [
              {
                "id": "caa1d9be-7ac9-42b7-a96e-1ee2d83c6dd2",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "dbee5df2-6346-45dd-96e1-b6772a509676",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "5ea01461-c248-4574-a260-43b5e09f4ce3"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7bd846c1-7e6c-4080-a83c-e70ee299a693",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "2074f28c-2d17-4cc5-8b53-e23205446b71"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8baba31f-3e7e-4bc9-906d-5c764e056dfe",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "14330eb6-ff30-4091-a0c3-db999e4c02b8"
            }
          }
        ]
      },
      {
        "id": "684e31d3-06e9-4ee7-b004-91e7757e2a8a",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "a32f2715-74bd-47e8-8d9a-6619be23612e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "af3dbdcc-9020-4b17-9169-a4e4ce4ec11c",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "445cb0f9-a669-4fa2-82cc-71ca33abad5b",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34e5dd5b-a237-4d25-86c2-3dd732bfcd02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d41c163-cff5-47d0-a1f6-3e3c641f2b40"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9a27e32-35f0-4c9d-a9ba-aadfd65c989f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "75d25425-a6e5-4693-810e-fe16098d1db7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebda72fc-cd75-47f7-813b-316b2ec7e274",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5aa84d10-6be8-4572-9892-22decbdc71b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "439b1e04-b942-4a2c-a167-e7d978e87ecb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc050981-b1e0-47bc-ba82-257339c25d17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "00ed1703-9475-4ef6-9ad0-5e2745365dfa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29ecfd7d-4ae8-47dc-822c-4e55378b7430",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "271470c7-6b48-456e-a2d4-a49f08d872a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e3a7084-e562-46ec-92d4-721b33cc1467"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "406a43d8-1208-4aa4-8695-7266a9eed1b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5c23db0f-81fd-44b1-9ccb-a1518dfcd16a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b71bb0f-5a27-4cd6-8c19-cb2aa989e9fc",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac60edc2-e674-4ff5-9f65-996b5ce10940",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd525611-d422-4ef4-b7d0-f68e64371665"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17e6aeae-086c-4aab-9da1-777789c74e3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5dda69eb-b30d-4bf1-a2a1-07716795691c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51deee44-ef1a-4839-99ae-593ed64e75c1",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c787212-502f-4e65-8bde-a799313c8a59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "539da6c7-0ffc-4cdc-bbe0-c7feae748232"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ab172ab-c0cf-409f-a8c4-74e9bc46485b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ca0988ee-56a6-4a38-99a8-23091bd50e86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b7ec359-8ef5-4f24-b610-2cf329a963b4",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ded9cbf7-1003-4bda-96ff-455d25dea8e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ad7fa10-04f4-4b2b-b77e-2acac2ee6fa7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afb60f68-4429-4007-af1b-c163bef4178c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e97c6f3b-1f65-4d01-bb5a-843f728d3686"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0448fa81-098a-43e1-81cf-eaf0acc9bb9f",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6fbceeb-5f9e-427e-810f-ec4ac07acaad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce62b6f5-2273-4ac3-8dff-0566529053e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18ec69b1-e42d-4260-adc2-01e870e095d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "76325a83-ec0f-487c-a964-6f5429fe173e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53853089-e096-4f7c-b443-9d0ecd21b558",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bda79908-6ed7-4ebd-801b-4ad6652feb88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7deb37b-fe65-4b75-84c6-9db50a3bb789"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0603d53c-327c-4ea2-84b7-478ed5d7d60e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e2c38c1d-28a6-4dad-853c-64b5f9da4c4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02f9aa89-d8d6-423e-85c4-c26d9e56d1ce",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5c45ac5-7693-4ed8-be7d-b190581242e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d401708f-4513-41b8-844d-6afc9a8f247d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f67765cb-48f8-4fea-ab57-556f3c022870",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fd33c4fb-dfaa-4f4c-8845-2019dc7dedfb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11098229-9fe6-4fd0-9106-0f0804964b6d",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e5788ce-a408-4d8d-a9e8-761901a1a600",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25cb7f66-60ad-4caa-8ca5-3bfb47cdbc80"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c34fd6ad-6fb4-46b5-b54c-00453569c7a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4f272ef9-ee43-450e-9ffd-afd98a0989fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b5d01c3-ec2b-4770-9a42-c69703951399",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "820b5933-3629-461a-904c-7d29fef0dea4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f7a612d-7d1a-4411-91cb-4425dc1a4440"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4296432-fa74-4720-99c7-6cae7c540b71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "05a205f9-de13-4e77-81a1-59d4e39fdf85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "916671aa-aac4-4290-9410-02f49e812dd0",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8453fc3f-5e7a-4f9c-8885-d60c346b4353",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4ba82ce-5284-44b9-b701-51f4d2d9a146"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "820ab078-7a86-4548-9f53-c81288babc64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a80ee894-ce9a-4655-8ec2-ae4f12ff7c53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe7ccb74-0c6c-40d3-8cbd-ac1e857775ec",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c2be787-b261-4009-acc1-e9596393b19b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c0ff95a-7da3-43e4-a4bf-5bee5161ac4d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce1560ef-496a-480f-bcde-965fbbb677d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1634cdca-0884-421d-b98b-d5b8b3156d31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5fe29b6-f95d-4821-b116-a67bf7faf6ab",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06d68171-381f-43ea-b9ee-1924f2b497de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12c3b90b-102d-4b34-b011-a0a4685db43f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "826c758c-19cf-4c8b-b721-eb9a59aaf2b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "db343cf5-a4f0-4111-aeec-5e988d28b80b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16c979b3-df61-43a6-83bf-f4d628fb66a1",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "095d3ea6-039c-4abf-a47b-5116c9b98c5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b9d4ee8-6988-429f-bc09-a55c64c782f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f45e63a-8877-466b-901c-88e2e170b4df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "908ebf05-aac2-4003-aba6-96a4d9b77bcf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cca0e418-4398-4bb6-a845-a5ee9bb6e4e5",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "953479c2-2e01-4bce-b4d8-30ded4a88b75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bea9ac24-ee64-4f47-bd66-73836f93e072"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ca40983-9d69-45e2-b1f4-8521db10439c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3135c917-3df3-4294-b48b-57e3a0d12eaa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d41317a6-a709-4e16-9712-67ee59d36948",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ec47530-5758-407c-87dc-8bac1aa7f1ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12937959-9807-485d-978e-af65cd180239"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d88e243-3015-42d1-86cd-c0e3904deea6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "90d86be5-5c22-4199-81f0-5c64f286e96a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86c469d6-c23e-411f-812e-4f0737c64929",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f6d9f11-a951-42aa-85bc-6421ebbf92cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d93f127a-7856-46ac-8a28-b2d136baaa03"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fa15bda-1036-4d28-bbdc-b951c7a94cbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "dc7b59fd-1317-4de0-be1d-918fa8c7db29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52fcb512-3114-46ef-9576-4a29dfa74fec",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "326bd2db-2eda-43b0-bd49-b100c72b1803",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e13cbc32-766d-420a-88d2-c213405449ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17417993-56cb-4722-8f02-b77b0430af01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "be894238-693a-48bd-817e-c2e0f67e1958"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9bfdd370-6108-4b88-87db-e842513b96af",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e25fa80-6295-4d18-802e-d0028fcc1828",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b42b846-3c03-4d50-983f-d65ca78cd1df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2710648e-a9d3-4956-8702-8ab813c84338",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a12dd947-2a6c-470a-afe2-f3f99163a80f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e97a9b85-86a4-460b-a659-fb68457b5666",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4f45878-f72a-4526-ad49-cc0a4b2a1c34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94fd73b1-1fbe-47a2-aa52-8ffb783da873"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b68c92f-86d9-45d2-8fb6-e8e3a7684182",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4a9588af-b99c-4d84-bae4-ca340d345e36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd9d735d-43be-4fa7-ba52-44696af3c986",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f275c3ea-9216-4aec-bbbc-636f6a4bd7d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab90c8c0-a5a0-4f7f-aa3f-0360d01a20b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed317e1f-6fb1-4426-8989-21166bd9ecbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a2683ce0-664d-4821-8cdc-aa96a43fa061"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82720e73-09d1-4bb3-ad3a-380d9a1f4875",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7586b04e-93a5-45ee-ae14-c5899f4f11f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b8a9b02-ff28-4f5d-b3eb-7105bcf5227c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "335746a9-bad4-41a0-95f7-f0107b0feed2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a195b033-afd9-4c90-8e9f-725819be7dab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40a2cde0-8066-4d09-bd4b-e95d030003dc",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "644260ad-4831-45db-a910-d5b059f37b60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1066d80b-beda-48b8-b496-5366aae8781e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b61a6ad-c97b-483a-a220-6ac439cf8025",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "8b70fd77-4bb6-4c27-9439-306479ccd3f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d5d3ee3-276c-4383-bc01-7fdadd34c44b",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f4e0189-dcc7-4de1-bf98-74c4fa2727c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b27d70cb-9744-41d8-8c84-bc25feb5ce19"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa4904d4-4bcc-43f3-9551-89c76176d7f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "86610fde-c0c5-4a90-a184-a984b51eddc8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5448204-bcb3-482e-8a55-0e6882665637",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb520b7e-fefd-4767-bb10-6524cf47de09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe2de597-2dfa-4865-838a-701bd24bde2a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69dbcf65-d7ca-478c-b4eb-98cf4168af72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "0d6ecd01-fa3a-4c11-8c7d-827660cf0352"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3de1e6d0-4dfa-4b06-8a0f-bf98e0c2a7ba",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3dacede-bcf9-42c2-914f-7aaebc5af2e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5743e5f-b13c-402d-9a15-038f15ef3773"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "943fe5a0-0835-4543-ac5b-a32a8005912f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "f50f750b-a4b6-4053-8605-c088453745b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "186b8116-d61a-41c3-8fcd-d4380013c536",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f47cdb07-d18d-448a-aeb6-e2305b7deddb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f35abee7-7f4a-4cf8-acff-822c86b09d19"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9446ec18-cd2c-4ee7-bc3e-4c833c9580ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "78fa55eb-1083-465d-b429-51b0a18847ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5128a16-e1ea-4a08-964f-d14395017726",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67f00799-db47-485d-8a5c-64cc69282fc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5cef0078-45d9-4bbb-b153-3d0793e06fac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "732dfaee-975f-4c0a-9bba-62a822395792",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "f9440a00-cec4-4b4d-be69-e7b41a1ee0c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1cee81fc-64f9-4966-bd8e-12214725d46c",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ad4fdeb-fa15-461a-be20-6c4b99e054a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06a6e06e-4237-48f8-90fb-e15a8d3c2546"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09d51a31-e351-4c0a-b040-bdf4d28235f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "405c0752-d17c-43d1-a0a8-5ff2cac4ed1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0162d81-b0fa-449c-85b0-47ad5c8ce230",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bf433b2-4407-439b-9fc3-7f2251e1e40b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41efc621-05f4-45fd-908c-0f4d44c2e654"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "489e052f-073c-4f5d-a882-87f7be7117f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "92d23dc2-a97a-41af-8143-9dce56f4dfbb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b6cabae-93b5-428c-90db-1501cb9889f4",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "213096ae-955a-4b17-beed-92ec879ac1d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9049aed0-433f-4bc7-aba4-bc3eb1e0e10b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddfa8543-790d-41f0-9d01-40e1a806648c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1c0a55eb-88be-493a-b7ad-87fe16f267cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9f3fef3-af6a-40f5-a7c5-e13221408e1b",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4011667-f834-423b-bd6a-eba92937239c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "43f50b1a-f850-4e5a-b7cd-740d198c4675"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2caa400-d0d6-4c7c-854b-b8311ad7fc7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "55a8e4eb-7718-434d-941f-60d0e0b111e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb869195-b270-4a6d-af8a-81bf406bf20f",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6f1139b-901a-4c49-a589-775eb4d64c19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad0f77be-99cc-4781-911f-366654e65a8c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfbea4dc-dda8-45d3-88cf-4b922e264d1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "63ebad57-b9f9-4825-aabe-ff4ae2ddc394"
                        }
                      }
                    ]
                  },
                  {
                    "id": "436aca26-7cec-4c5d-8b8f-d3d70c025da1",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b53ecbe9-5685-464f-ae7d-0c035a931001",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b574b63-2010-424b-831c-046ffed99e48"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "386cb1c0-6928-4552-ae79-b694ca2668bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "e54f7109-d9d4-426c-a0a9-7a76f0cbf1d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "656e48de-7add-4e87-943a-031125c4b179",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ebb41fa-fb18-4350-b111-f17c95a5785b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5baa4841-21c5-4c5a-84d3-9a54699e0935"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "774c5f54-7ee6-4e35-ae91-f0ef4ddc23f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f3d21ab0-610a-42aa-a44e-47a65c547f9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "054300af-8fcf-47a2-8754-9230d898d83f",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc975962-1993-46a8-b5b4-ddcfc17de52b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37b75092-4027-44c5-b3c5-bb9196941d99"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8caa0514-41db-423c-bee7-08b68eb4d240",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c349a5de-45f7-41e8-9b8d-91ccc1142874"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4422ad64-fe4b-4569-bd20-2bbee002bb55",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a6a1117-167f-4954-9363-8f02a936d90f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62248db0-cd79-4890-a06c-12d471df921a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b26ec37c-8547-4abb-809c-f3fb72530c68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "0128afa9-ca7a-4e45-9206-452ef1487998"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62936a26-a0c5-4906-8e2d-788453a8dd36",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fd6bb49-c936-4e77-8ddd-f0372fc97204",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70349a5e-423d-4ed7-a5a9-a1aba070bc8d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d583c003-af46-4f36-8160-897eeb7d1388",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "abacf759-2fc8-4f95-833e-d5767e1096b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ea36682-e076-4353-8009-1b74920dd25e",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a47ab9e-15ae-4c9d-8a0b-4aa6c6805b61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2d855e3-37a0-48c4-b7f7-6e4cb44413ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1903acc3-404f-4c77-8529-3fb448cad97b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "b782e45d-a14b-4c38-90b6-06ccc596b431"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b22e2148-944d-4a08-9249-f0ecfca83706",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b70bc002-f217-490c-b2cf-e9260a982f09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ca4c143-bf0f-4e82-a5cc-abbf5bd4f46a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb01f4af-ae5d-47e4-be7d-35bba228fa5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "46264b59-55e4-4a03-8375-e2dc3868e617"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b73aece-e304-4fd3-8751-59279b253f9c",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f4eb263-360c-4389-a3f9-9646fb7b3602",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d222a086-e8c6-4563-9f73-252366bddac7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8693b28-af43-44fb-85e1-d41cb73ef420",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "50b3872d-dac8-4901-9e83-40cdc81fc05e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9713a66-4ac6-4d86-b41e-b5c0dc1051ef",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8f1c3bf-0df4-433f-a830-75f96335c6de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2fb6f557-9d8d-4e4d-9baf-432a5b31755a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20bdbbcb-6156-4cf6-bf4d-549cea934889",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "17142a56-7d7d-487d-ae44-c5cde1c6cd72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2cb26a4d-aea3-4860-85aa-81a53d88d124",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "289b84f1-58f6-42fa-bee8-b5ffb7c66bbc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c868249-a1d8-4fdb-b155-062c39c79590"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "494d1d03-5c44-4e85-a2c4-68523bcc4a3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "4423ce69-f5f7-4326-9b99-9fb5418092df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d520d460-0239-4079-a9c3-9bf8cfc2413a",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbd25933-cc8a-4f73-8526-11677749f2fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af38a264-c9a4-4127-b42d-3626a2fc94d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96570f42-432f-49fa-9531-26ef9ade95de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "44ff11e9-5ce4-4588-af86-e1a329071a82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2bdc2d87-bb73-4201-b044-d9c60116b30b",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e39ccea-3de5-49d6-a334-4757bd018063",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eaa648b2-9260-4bf5-aaad-d64d460a8eb8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d01b710-5b6f-4fae-810a-954764d689bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1f39368f-a83d-488c-9931-9bd1d69ff306"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97be6e19-6224-47e7-b503-e21cf816b3de",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d89c3b7d-c2d3-4eee-9a4d-91d2ef21f6f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a18bf939-be03-4125-9c57-e5a4c2ab9089"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb8ca58b-76f2-4955-95d8-51e4d4b9eb85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2ae32d5a-d710-4bd0-b4d0-cd5cb79d373e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8477d8cb-4656-4768-ba22-8f81e0f54bd4",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e51d403-c315-417d-a991-936f66a01cd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6ed4831-70d7-46e3-b673-e1e2724c702b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b862e47-5394-403d-9a9a-a8e3cc728893",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "572978dd-675e-4775-b0c3-e9ec7dd75484"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d2f0bb6-cb44-4d43-a8aa-3e28cd92a1bb",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "955b7514-bc31-4012-b97e-0b28a3b4a4b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0d39124-ab34-4e14-aa82-1a30de3e7b3b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e04cfb79-1a69-4a17-885d-dd7b9696e3ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "4d336db8-4ab6-48f2-8d79-baaa55d493fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f28b11b-6b00-4867-aade-51c240db1bf3",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21ead8eb-8840-44ae-8526-bc617aaee6bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee9af5e7-bdcf-437a-b85b-b80dcc1cda8d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ab3279a-754d-48a1-9289-36fc9ec534bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "7f7c0cc0-d01c-4167-9729-65f6f460ae45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b96a325-7001-451b-b5fd-85dc21322923",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc23090c-b5da-4752-8372-cf8c19eae00d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e76d15a-af01-4215-b99a-83e0cda6fc53"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fc17989-2043-4d61-8139-f3a990b684c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "6e1d4c0f-01f0-498a-9270-5b35722adfa8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab3af118-9ea7-478d-b42f-6f7a155f5da4",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a966151-748a-4fd6-9aba-f120daafc4e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "057f9fc9-6804-4669-9d0a-ce9e1ce461ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "183942f1-d424-418c-a892-660445f40e48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "a60da0c9-49fe-4add-9a98-3a70980d55fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfc44fa9-34c1-46d2-bb6b-d45d4181342e",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fa38471-2074-4548-811a-eec10b217b93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d34e5083-47cf-41dc-ad89-09daa289a211"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d8b5963-be94-4ef3-82d6-f2648a4e374b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "cf8098bf-7d07-4f98-b126-a8b82da00992"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8459bac1-d473-49cb-8cf2-f87ef94b21b4",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e8ba07a-8e0c-4620-9233-53ac6c19acb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4311e293-eacb-4946-8831-ccc87f5bbae4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c747c429-1664-4440-ae0c-48e3240227a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f69cd2a6-fe87-409b-b2ce-8267eab1c413"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85fa4253-112b-4ae9-b104-0d81b2aaab40",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66500436-4ea0-4c5f-9c5c-fbf663828c0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a970e141-872f-4789-8dcb-2edac2b0bdaa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2bb20732-5aa9-45da-bfdb-1f8ce67b0b1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "39ff4f3c-f59f-4f96-8f06-bd70c79d09d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9cc8938-baae-4fc4-9cc9-e1440c98f6a1",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e2efcc9-99de-46d1-9410-4304e06d999e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "77001216-d496-4420-8464-dd30f2e785a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "330ad7c7-3a99-49c0-ae7c-839df3ef6642",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "da503fbb-a3b1-4e31-9346-a05ba9c82cfd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce0866d5-393d-441e-a7c3-0da802d460ea",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12262c3e-1ac6-413a-8698-16e939a7fec8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6babd918-c4db-459f-bcad-406c7070d85b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0b6ef09-3fc5-409c-b604-dbba9adcabbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "33186804-7cfb-44ca-8b5c-6f4fbe10707c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b58f25c-9fd6-433b-a0be-5d6fd720e37d",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "788c330b-cfdf-48b1-9748-9da2fdf270ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ea765a9-94e0-4fcf-a711-73e44172568c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8325fe18-6c58-4a15-97c6-6983404cbb4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "ea3d5d37-040c-4b69-9bd2-37d7e2964ce4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68a384bb-a285-44b3-8aa2-508e80bc369f",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b7d5bc1-2780-4522-bbfe-ed37f539818e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7611af7d-e58e-4adc-ac82-f2a479a41379"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee2ec868-4d31-4ab2-aff7-377138eeecb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "28e67e36-ad25-4141-9579-2fd22ae696e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31fab3c7-8aba-49db-bedb-011e080aa534",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be00ddd3-19f1-4eab-8f54-879d1a2c322c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ace55494-8344-4d62-a24f-d9c2a6b9711d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5449c5d0-de40-4781-b375-b889fac05ef5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "ed2a4810-03d2-461b-a499-1c2ba159014b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5303162-764c-4126-ba23-f85ef771bcd8",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f19edf4d-a0aa-45f3-b201-183278e82b1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4ea1739-2a0b-4a94-bfa9-36f1d4880fe0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dca416d2-0170-4107-990d-20d73b671d86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "83fdf397-04cf-4cae-9001-d69672be6bfc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2823cadc-6f5c-4817-9167-0978c156cf9b",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b35c47d-e33a-464c-8863-04e153a9e412",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "057b7add-8ba4-46c0-83b6-9359c4371135"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b384b788-4a91-4a4d-b370-09b83f217db8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "86f08e73-e909-4348-b3e9-1506f4d78be6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a03ab31d-f606-4cde-8937-05e64856673d",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54b3f38c-3a59-4d5b-9e3a-2786ba42293f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d6a29e5-11b8-4f6c-8d1e-cd5412c20ddb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17be6beb-a4f2-457b-b06b-4c5710b00d82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "bd178bb3-dd1b-4ec3-b81f-bb65541412b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c549393b-538d-4893-9e0f-4db3afeeaecb",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "586a6e92-4973-471d-a1b5-87f124c20c7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9080318f-b632-42cb-ae05-7ef6d91ccb54"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a51b587-62bf-4189-a1a8-9dd0eae69bc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "508def11-51de-4148-8499-981dd68659fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87fd6073-cfb7-4b63-9fe8-5de761dce740",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42d4d111-8477-4291-a457-746f5e804e45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5f2fbd9-568e-4c5e-bb09-7c381be2e259"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b284f5f8-36d0-41a4-a1c0-e41ed291a2dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f18256cc-e1ac-4338-81ac-985eaf6117ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8578a484-1901-448b-b2d1-c825aa2c8dd8",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5eceb7da-f476-4bbd-aa9c-249533314c85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac5ee3f3-6b2e-4594-aa66-7a8592c2c93d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0e4c03c-6bce-4faf-b6a6-218cfae4e0ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "bf1bfbfa-bacb-4264-8e33-757d71c22ddb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1fa41b3-f6fb-46fa-afe0-38231a7fb93a",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "baa1d32a-cc4c-4886-b66d-ca8576770466",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7a474f7-2db5-4f48-ba73-0001507094fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "869de355-c32e-440e-b76e-415da65fc3ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "6d2b0d17-7154-44be-95f3-db8c31ed1616"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a28a8364-9904-46aa-9383-f9c6a3e3232a",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1489b669-70dd-460d-add4-177e4aae3500",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60271586-c4f9-4cc4-bfb5-1e9a8fa39416"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f98d733-a5e5-41db-8069-ce8bdec52348",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "582fea87-2dff-437c-b4ce-057b685f316a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4da6b51b-1f53-4504-8de4-7697b8a467d6",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f417d2ee-2525-4889-adbc-2d11462a8b15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec2b1da9-8d3e-4c30-8e7e-1343c062aed8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d70d297c-5ec5-49ec-8be0-129b9057b315",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "51d98b42-2a24-4137-8445-ef80d2ff9fed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d150de1-6881-4a7d-9cb9-2b8c17475567",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e62ef8d2-8ca2-4be5-aaa7-c27b316d7dc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "106d06bd-f4db-42a2-9c8d-df5ec2d00fba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b091d29-88a3-49b7-aa8a-3e4ae609ea5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "931386c9-368c-4cbc-9275-2f9a72794a82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3c50e68-04c4-4f23-b0cc-bcf74b4e1e92",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a337face-03ad-4d92-9981-929aafa6a37e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad62f6ce-f976-4159-aa8e-6d7bef4cb7b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7cb7edf2-f3a4-40dc-a33d-c7a505967fdb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3d12089d-8eaf-4d6b-97d0-f6accd2547a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "922a966c-bdbc-44d2-bfa9-9e951ec337fa",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcf8b36e-3a29-472d-9d08-548d3ff9af14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66e56715-0db1-46ec-9de5-b53fa8ee78db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "875d64bf-3bf8-480f-9882-cf568caa96e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2d9d48b2-6120-4844-a578-7c2fdacbd78a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53583c20-0f06-4398-b1af-d4174ce03c45",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "981f3e39-5a21-43fd-94e1-ad9224427581",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc39e1ea-92a4-4484-a094-fbb131425485"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a91c8516-90e5-4ae4-aedd-4a5a34d87e50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "753079fc-17b3-49da-adc4-2c61032aa9b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab33c785-3058-443f-b0be-db5de4cc778b",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ceb73a84-83b6-4f4e-af4a-b40a182428cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae857947-52f5-46d3-a747-d3186cfafa76"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1485c684-d586-4c2a-852e-e476d6f6035c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "bfad36e8-0aec-4c70-b519-84941a283f6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6f10abd-052a-45e6-9482-7a28fe77b3c4",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c9e2e7f-1d37-45e3-8d34-f6f2179ce048",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a092de1-260d-40da-a67b-eb48cb0b1b32"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0b99233-025f-4409-994c-b4a421b81169",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "9aa846ac-81df-4ef7-be4e-2951e0a57746"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82c52a4c-b207-43ac-8200-efc5d3df1ab7",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43371bc3-82b2-4949-9352-e681f0dcf1d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db73504f-da34-4131-8a65-c3ee22583ff6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "254ddba4-c7cb-4a9b-a8ee-54658168fc56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "18ce6bea-f12a-48f2-bcc5-39daae7b323c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a5d45f6-341e-4c67-9d6d-8c10d3687618",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1dfe838-4622-476b-a38b-9ec85ab485b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13a1cec3-8487-4146-a4f5-db5f675e0734"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d0fef4f-dd62-4c25-8bd9-2cdb30108a34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "eebe7e9e-77de-4dfc-a952-e4987f8509a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2232990-e6aa-486a-ba5b-3b2a8a63af19",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f4a75ff-082b-4a7f-9b8f-bb632853caa8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65c7cee4-81f8-4174-ae24-2198bca1b70b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20169107-9aca-4ad5-9246-fcdf3c7c1c9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5ca2d110-4ce2-46af-a2a1-860fd60ae95e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9eb8c7a8-d737-471f-ab4f-bb77fc7d082b",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4084b59d-008b-42cf-a64c-cd347c21bb59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c7ae73d-51c8-4ebf-8505-574a1dc437eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "656cdadb-c5bd-4130-a36e-f778146925c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "19a57513-9a01-4219-8d6b-76b190b871bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ae74a9e-f6b7-45b5-81c8-ca10268202c2",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1fe6201-da0c-424c-9c11-42abb63f6af4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ee285d6-21a7-499d-a0b8-c8e46fc5d3e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10cd4d9d-3d14-4bb8-8c25-7d6c596a9736",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "247998e4-9e66-4178-a2b7-ddf3e042d5db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac8696bc-f01f-47e5-a56b-2dea43d05060",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e1e0e24-6a45-4b70-9eb5-bbc432b8360d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac01b5ed-dcc3-44cf-9539-bb166fc66fe2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "756505ea-a419-4921-9277-ab82fe118090",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "65c7b21a-1be9-40c4-85c5-02e7db88c567"
                        }
                      }
                    ]
                  },
                  {
                    "id": "511dd342-bf61-48f6-a5ed-e9c66f5d16aa",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65dfca82-4791-4f56-b350-238f5f0133a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5472bf77-b6a4-4ffd-b107-22f0a9929ee7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ac3a229-bc3f-44dd-8e09-73a216aa3d91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "eefdcefc-bdf0-4b5f-8892-df0e21b6bff7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d1b50b6-f778-437b-934b-d65c909d9ed6",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5293b76-39de-4518-86b9-34c6197a4e0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27604bd6-36fd-4460-8115-c788f4077453"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0dc3a1d-bb41-4a06-88fc-3b6d00da0e92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0ac1c3e7-a9ac-41e4-9e52-4d69a660a5f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "128bf062-50ae-4e3c-93f1-e24f45851e02",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d53144c2-2277-45d5-b92c-64c81a12be68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29cae4b1-e8ee-4c05-8d4b-2fb941532946"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4501ce47-1180-43c3-ad00-a38b5074c05d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "edbac68a-ee7b-47c6-a335-cce5123c905c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5b86353-f6b4-422a-a916-c2692e364a65",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ba25de6-9866-4ccb-8f1f-ae93454e3cc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab0b0130-8bd7-42ef-9780-6430c8d55015"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6efc34e-c8fb-4b88-bc36-7c93bc6a3295",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "170e22a0-c294-46d6-a2c4-e42ab80b2ecf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15bbb538-e694-45fc-8501-d7ea0bf43b8d",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54918103-261b-4c3a-a51b-f3b81caf7c7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c29960ca-f8ec-4d5b-a046-449f1c58d75e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0b3ec5d-43f7-4da6-b481-3cedd5b77f43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "9a4d606e-c71c-47d1-9927-c24729a1b8e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f7aa369-77cd-4f2c-83ee-50e16e912ffd",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e1b9b2c-4ee8-4e7b-9b69-d3bdc4b1050f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f64fe01a-ae81-4194-b06b-18354e1304e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1eef94e5-2ca4-4e6b-b570-b3147883d210",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "9350d1f1-0f05-4562-8a01-1c87e2d50a19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c98e0ef-cae5-4421-86d2-3fd09354e242",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "812e98f0-ba77-4960-aa3e-be15e8080338",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "87627782-9e46-4778-abec-73be7118de08"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59cdac03-4078-4946-bd15-93c9a31c6c31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "29a6e95e-d5ca-477e-8d2d-ad3160261428"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e90598d1-3d4c-4f76-acbf-cc6cfbe5b817",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89e27d4a-9adc-4d9a-b7aa-97894532c0dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "930fb1a1-80fe-4ad1-a3ad-cef1ef0e8a71"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20311f27-fc86-4943-a2c7-71674f5e3d0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "d2ec8afe-e0f7-4bf2-911c-1c289f1fd730"
                        }
                      }
                    ]
                  },
                  {
                    "id": "188c160c-2c2c-4e06-a9c7-a111ec6b50f1",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97dbff34-e005-4917-bd99-2e98383089fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16cbd34b-374d-4d80-b73e-e2a99a89e249"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72512af6-a0ae-46d4-998d-8f907c364a69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "3628975a-da0a-4118-bbd6-0815d46748e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "154f0571-411b-4ded-94d9-f49cf1029ca8",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea9d6c4f-9cf5-4bb3-b596-fecc70506f5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4bbb5110-a78a-4be7-9eec-2d7c427e70bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03ca9fac-d52c-4078-8d23-58aa77d6addc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "8e5235f6-e17a-475f-b5d2-470345b3fcde"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e137fac3-6861-48b3-8830-37178fbc7749",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df5c71a2-08c0-4bac-a4af-55f2750d0299",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "a64d6a07-51af-4ab0-8085-631004c8beba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90f467a2-2237-4021-90dc-9ec8ecb9c83b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "b1659ead-dcea-4cf4-86ec-77cab7eaf27f"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "7440a0f5-d075-4202-b6ff-87a16d5ff259",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b78fed18-dda5-410f-9248-cefb14cc8873",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42db5a0a-14d3-44cd-8e34-0db4be8c1004",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "85e31187-f52b-465a-81d4-f0d95a5e382a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a488ed9a-4ffd-4248-ba1a-1eb73d06bd1f",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8bd49b2e-0ce4-41be-955f-31a3ea0c6f09"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ac608011-80b9-4522-8971-0c20a5fd976f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2f35bc6c-7bc1-45e1-80f2-6370b7caec09"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "54295334-8d24-402b-864f-f0dacd7e9112",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e7f6cee2-5874-4619-9afc-bd04da92d277"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "bb8503fd-1fe0-4322-9b8c-92c5699079e4",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "a09cd27b-4558-48dd-9eb3-c7dc1d4aa762"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "78db8087-d0e7-43e1-9b2f-f55804a40b71",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "f4a112ab-b896-442a-bb83-6c37fc824e9d"
                }
              }
            ]
          },
          {
            "id": "4e6629de-1fff-4b0d-8db9-b42f23f2a50d",
            "name": "Positive Testing",
            "item": [
              {
                "id": "51c766aa-3930-4d6f-a71c-2ac51ad6bfc5",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "d86ce9be-fcbc-49c7-bd27-f3aa92407a45",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95849217-f3fe-464f-a689-54462e4cf7ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "872beff9-331b-4f5a-8040-f69c937e2419"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a84f8eb-23cb-47af-a306-662b860b4d36",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "04d33cd2-9d51-4cec-ac2a-8ad075e69f49"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "57ae144e-c291-4bd1-a4b6-fc1e3dd399fc",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6390a435-2f47-426b-ae85-f77593943d67",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ca060f65-6221-448d-8b39-d6fa377d6550"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a507e75d-ae9b-4453-a5d8-7f92b38e902a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "2b91d71b-f3f5-48c9-b182-7b9eaaa00ab7"
                    }
                  }
                ]
              },
              {
                "id": "8938d3a2-10f8-4adf-a07c-57893b78bfc0",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f30f80b6-a299-40b7-923c-c32b05940d1f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "422e57db-0fc3-41cb-8a70-169283af37a2"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "89072ea9-40a8-4457-b207-0e7a01934ec0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "8c6beb26-4576-4c73-84fb-b8a163b8b85b"
                    }
                  }
                ]
              },
              {
                "id": "3f89329c-d316-4ef5-9182-452889e1905c",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "aeeb5850-5b90-4771-82c8-7b598c4d3e89",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "35ef55a7-8bed-4be2-8a76-90dddd053e64"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2b8aae1a-0d2a-4e3a-9746-9ef20e49a630",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "840779c1-0030-4caf-9960-263b761b1487"
                    }
                  }
                ]
              },
              {
                "id": "82b7e8cf-158e-4f22-9ff9-124916255897",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ddeb9d8f-5f08-4930-9ccb-ff49b11c17e7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ed33dcb8-72aa-4812-870a-14411f5e0ef5"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f1c133d9-60b5-4578-866e-99049317dc0a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "958d1b00-f9ef-4c70-b0f7-85091cfd1286"
                    }
                  }
                ]
              },
              {
                "id": "f6f506c9-6eab-4750-b7d8-062f1745c23b",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6a788dc0-9c91-445d-9f0b-1dd3cb3d7a17",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "230d02ab-a4f1-41e3-9d4d-67d751f21de2"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b593cf5d-b1ea-4831-8485-e0282bcd8912",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "6504e09f-f87a-4a4b-9081-71f09f16ef78"
                    }
                  }
                ]
              },
              {
                "id": "967e80e0-d155-413b-b0ed-ffa035781617",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8d31d4e6-0f69-4c6b-a0db-7742a0ee3c8a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c187405d-fed9-4f2b-8d58-299c747bde73"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7054e68b-96bb-48c6-976b-04c064cb6bbf",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "49d8ea25-cef1-4998-8bc4-31f75a10d268"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "a97fede6-5c6e-411a-9438-847830abfcac",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "414a30f1-093a-402b-8814-1fb564fd2d68"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "4112e050-5a7c-43df-b8b7-630b765b10f9",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "ef380ee5-f209-4000-bdcd-abc4ac39cc52"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "48792a6f-30d3-41ac-b966-d4e6fef7134c",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "2b508127-f66d-4033-a4da-81bbdec9d788"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e41de793-1421-4de4-acf8-6e3184115f82",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b04549a4-8cdc-40c5-90c6-72ba35e4493e"
            }
          }
        ]
      },
      {
        "id": "e4a7b309-e199-4dd5-97bc-1a2fe089b1ff",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "c56a31ca-6a3e-444a-8663-49e5d8d171c3",
            "name": "Negative Testing",
            "item": [
              {
                "id": "87ba0db9-3c43-4061-9764-50887b950c05",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "eb019be4-3f4f-4580-8283-d3221b2e6fd5",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3967bc4c-d34e-444b-bc39-bdeff26a3df6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49343faa-f28e-461d-85f9-09f879735298"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fce4946f-3460-4efb-9faf-b281cea72baf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "75850b24-1d23-454f-b2c4-a262e49c00d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06481f4e-78d5-4188-ace2-39b3c8b16720",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6d1fa2e-0220-4419-9baa-905791961fb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "644fda95-a9f3-46ba-aaf7-3e36e9ab1a32"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6799f435-fae3-490c-8091-b8b51854c213",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "36abf044-ea68-40d7-a6fe-07857e127187"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05cc67b7-dc97-47e8-a198-2b972f506708",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f649922-072c-43d2-b5ca-681150340e9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a16ada9d-52cf-46b1-b61d-0a1cc076c2d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a16310b-52de-47a1-9486-c68c3185dc9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "09e75233-8c09-419f-872d-f878a61abe9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b5faf71-8108-4033-bdf0-0d4a752cfc15",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1afae617-867c-4331-97cf-4dbfff503dc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8dc04b75-0862-444b-a82e-5cc9d5a8e020"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8d02ef6-f774-4036-88b1-783459508cb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "68b46523-bfee-4d50-b95c-13f4a3afa061"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75f06dda-5655-4de4-8861-e6f9ebcb8713",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48271644-cb6c-44fa-9d3d-53048af32734",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "119ff84f-52ed-465d-b959-2de0c7902858"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f3f1eaa-77b0-4c3d-b8ca-ba775b181dfb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b8257712-87fe-4f0b-9b26-9dfc0b8a58f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31e4fbb6-75b9-48de-ab83-3fbb2650c507",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d36fe1d3-55c3-4b68-8a39-4f9e24d4c332",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9408beb-01eb-4f1e-9f3e-c4ecb841f1cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee090af9-4757-48a9-988f-87af15def2f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "1af4ee4d-ff9c-4b60-a290-7097b5d703de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "207dceff-9f1b-492a-9d4c-42157711e116",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f27e16f-5a83-4f12-990c-bb7889960c30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3fd9adec-8a3d-458b-b27e-0bcd08d49955"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ab1437d-0954-4f6f-aa21-39c5f2537fa6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "6911da4b-a01d-4a65-9c2c-efcb13f99ba2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35d773fb-3cd4-472c-acd3-24e258062f49",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd0058b4-5d4e-4699-8b49-3f85848cf693",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "029d02d9-8113-4e90-848a-fac1be3657b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95baf5e4-8591-4e58-a171-40277262b492",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2ac4a461-e651-4aff-bf49-8174be677542"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d7a10db-434a-45b0-a299-d710d6ad0642",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ddf1ae0e-ff7c-42f0-ba71-cabc91f88050",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5559a951-6dd2-4da1-8942-6d7652ff423a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8a82453-f988-429d-a4af-b05945581b8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8048dc18-19e9-4959-84a5-795599f87c77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c82f850a-f079-4825-868b-aee89386dba9",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d5e656d-bf1f-4632-9d0a-d285e20c4fe3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af24232d-d677-45c1-b66f-e9121728d2e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc42e589-8036-4346-9af0-b60c6fe12a6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "99b99c8d-651e-4189-aa04-3c1c9cf5350e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65d933ef-7405-49ef-9c33-1048b1adb8a4",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8dfae79f-619f-4e37-8e4c-7e122cb72d4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a980167-5b21-4009-9aab-be0c7a81e19c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d11b914-6dda-4f16-805a-1d3bacbbaf3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "bdc02f88-4556-4ed6-8087-e55a4061f476"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a333086d-a33a-44b7-87b4-ba02d28581ee",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e8cc7e7-a430-4d07-b89c-1434bd08902e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9604421d-60b7-4d3a-8382-b985c6bd39af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "789164f5-97bc-4351-9320-94c95ad7198a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ca2e62f5-b76c-4630-be33-8d7144dc5071"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f80cb40e-002c-4cac-8c41-3ca03ca7b890",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f224e9ab-072d-4ce3-a34d-6a26e570b9b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21c35e89-a292-4ce2-81d7-1c00f2e2012b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6f6c223-049e-4622-90c7-38dbce396e60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "54bb18b4-ebe0-449d-ae2c-a8e439ef3703"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd1a8717-930e-4f35-a4aa-ccf729ac645c",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "332408d0-c55f-4d2a-936f-4eb3e42864b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "466c86e6-2cee-4e50-b680-b24b25068a98"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17749ac8-9ebe-48bb-bcd6-31ff52565382",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "e1a5ba1d-50ff-42d9-93c0-38a7251dea08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1f79e33-7d88-4da7-bdac-f2d7817460c9",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff7b8d2b-20b6-42ab-be5b-ac9b9052520f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54f964c5-2de3-434b-a8ef-d50727bfb328"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca724a41-4c44-4455-a260-00465878c869",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "9b90a3d3-4c32-4e80-be48-4d2837b1c208"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c45f4278-cc18-49c9-8b4f-13a927016069",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fd24228-11cc-47b4-b358-edce30af1381",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8fd9134-5e4f-4483-adf8-cb8826e94f4b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a17c2cb-eb95-447c-ae46-6cf6deb4febe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "9b43e9a7-8c61-4b78-9917-fc3e5d623e8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c114593-605a-4e9b-9c99-6c3ab260859f",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3f7b35e-8d7c-46bb-ae19-5e102e5c7cd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b11be59c-d187-40ee-aaa2-7f442e467124"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7e50e9f-3161-4b60-b743-0ddec06600d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "5858ccf1-f408-473d-a26b-a7e00bced25b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e858c0f-f936-4930-9928-1afed7810ff4",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea721903-b547-4a3d-8c9e-e10049c90bbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd448798-7355-4c79-9815-1842d916f694"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7bf254c-c216-4fdd-9745-7513281cc574",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "20bb2ed1-0907-480a-80b7-2124ebb55dc5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9515a08f-5080-4cc5-bcb8-38d81a2752db",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2ff8af8-b205-4c89-8f3e-de058180bdbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1302e000-c04c-4015-8acf-a37c11601f8a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25d219ae-c86c-4877-b341-5dac7d5776aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a2b58058-5774-4da3-8891-fa94e7756a95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56e0c96f-9add-4a38-9876-3da867318538",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4368202b-d3e8-4c3d-84fa-1488ee04747e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38269857-832a-4d86-b6a1-6344a0f393c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c483f5a-3160-45a3-8aa2-ed1fcd883782",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d3b05ecd-e337-48a9-99f4-dce652655cb5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6cd17a4e-a71e-475d-970e-800a642a5fa7",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f86268b-1c86-4468-934f-54e17c6c2519",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14e8a714-8004-4b2e-8b8c-3a579019b86c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83604cb8-36a8-46da-be4d-bfbbe24dfc7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "999a33b8-01c6-43cc-b15b-9160caf5eb5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d8e4ed8-dd77-4dd2-af72-dc33fbde7c26",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56aaa476-904f-4ee9-a091-b78928a182f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3457be3-1967-4b24-b932-b7759a857380"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e667ebf-45d5-4625-8442-e73594c20411",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c216d28e-cf46-4492-bb62-5a3e2eb92a9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6becd19-615b-43ae-ab2c-42208e0439a9",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "448b8ec5-52c4-4482-a27f-837fc4422dca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ce487cd-f77c-4a2c-a33a-0bc86ebf77de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33f42d56-3e5f-4059-8959-c8acb9f6495d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5c3dfea7-a8fe-4027-89c7-c86cf70a935d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "733d5afb-a82b-4fd2-9616-285ede059033",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62ee3c31-3cdf-4b54-ac37-d35cd7111ec6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74ff40c0-1918-419b-9bba-a6cba95c9e8b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd5b8cb7-4099-4ddb-833d-b06021e89304",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7d33de57-bd2a-401d-ab34-86e0ee841c05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3f0b677-69b3-42ba-9615-591ca7a1038a",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aef3b4d6-2332-4aa7-be91-896666e75d9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0708e0a-3589-499a-8fcf-a7e21feae867"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a26d779f-2447-467a-b6f3-eb62893464b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5f057536-f1a6-4406-9b36-377d3738787b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e98031d8-02e1-4e3c-a883-73d413859509",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "490608d8-305b-4af7-aead-d53231bd62fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63c8461e-1263-4c3d-8015-a930f62dca8f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1489db72-6168-44e0-b4d6-e1886d134298",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "00e1e96d-c1bf-4811-bd62-02ae6b6dad36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5cdf66bc-97dc-4602-ac8a-c1af32a74910",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69d49b6f-481a-4feb-b871-db7a35bfb5f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ae956f2-1881-46bc-bbf8-9395c14b966c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c62d0e5-96d2-48a1-b949-79da3f5af57b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "254ee196-6a97-4e17-8339-db753702224f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0d8ee3a-6d11-42e0-b46f-5650667f07bc",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bf57580-881c-410e-892b-e27bb9fd2d08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6612a15-2cdf-47a6-98fb-e3458329beef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e97338e0-eb0f-4d74-80a6-ecdaa1a82490",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ec1ed3cb-bb49-4c8d-a781-312f60eb706a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3e7bca4-29f8-4db7-9623-a0deb287b90b",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c860622c-a5f2-46b8-9405-1071e5941d7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e76c42a7-5cda-4d66-9a1b-0635d088f1b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9eae0496-40c6-48b8-b27a-e74b376c31ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "29ac71c8-8e02-4b72-8f93-c2229e1fe580"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ae0c1e5-d856-4a55-b8b5-71acac3aa842",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cce9c2c-3033-488f-9d6e-13a8e0c231ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6acc99ca-e9fd-4437-ac24-7f8754704393"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea5da927-575a-4012-9b07-4fbf3c573766",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dcbbc3fb-439f-4ab0-8277-85f8d8118bdc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec23a976-8e9f-48fe-aac6-912e0fdcc996",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85cd3001-0cb4-4597-ba98-eeafe4a452c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed3003bc-0361-4e87-93f6-b3934c01fa18"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dab9ceaf-01c6-4632-8acc-560e2842b0e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5c22f79a-73b7-4b06-9bad-b9381917c200"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abf74861-28fe-401c-8bb8-0f2204bb0c81",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f84a13f-a1ad-48dc-9ab1-6cd0e4171f66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70e1da21-953a-4d4c-ba56-0e2336593a7b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9466afe-564b-4674-80d9-22b7e1beaaf6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "87906b99-c17a-4e0a-bdb3-210aad5e6873"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35895017-a68b-4a13-8841-ec0c7d61743a",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2f1cf18-48c4-4736-a000-d44e9a7df21c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d9afb68-f429-48d8-9772-10909b49a841"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a460ce8b-79ca-4523-8a79-4f49230aac72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e8358058-6c85-4bd3-8504-0d9431616c92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a89f2be-5b1d-488f-ae31-0091cb3f836c",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "013a2c29-a12b-4c8c-bb3b-70e68fac9c8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a792929-a950-46ca-b63b-cc7f0f1b69ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c0e8ae2-e321-4562-8cc9-6f43d1f895e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1e0376b2-89d1-4153-acfe-65135929fe61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe4f6161-89f2-4831-9da1-4871a533fe82",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9c6c68e-30f4-440d-8259-771704ba6073",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96eb4d5a-96c1-470c-9406-ae06ea51e604"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c1f3cc1-a00d-44fc-b6ca-58033e7cc11e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "069eed9b-803e-4c7a-8553-a635ceccb119"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa68d56f-ad3b-4e5c-a385-382cc584e9b8",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4592b8d8-3de9-4d91-a3aa-ce75f063977b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f772fdb4-cbe4-41da-ac83-7df4b28df59c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29dc9859-d351-439c-b23a-845a4982e458",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2e1d25b6-565b-4f6e-8efb-f41137ecae3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d169ae3c-91ff-4562-8987-7025874768d1",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed91236f-f3a5-4313-9390-2d94a068685b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5cda8f4-53e7-46ac-8e07-3c369f1ebbe4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23ab5ddc-ba1e-41d2-a25e-11449e255f39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "41ec981d-abae-4382-bd66-6a086d336866"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "9bd206b4-c51d-4ee0-8953-9f9ddf86a4fb",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "7e3aead8-09e0-4ffd-9402-4c8a46027670",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5b97b2b-22ef-4a77-9907-40df364ac093",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "81539fda-d297-4a63-aedc-e49ce40659b6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b541cf0b-a274-4924-bf0f-b0d0b7170e22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "dff9eaa5-aa01-46ca-a613-d295d9739696"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a9b4f0e9-7513-4b6d-8b77-59b2f39bad41",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f725857c-51bb-4386-80b7-73c296018daf"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ece6da87-447e-450d-94f2-8ec277e17161",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "82745438-0657-4f87-87d5-0fa2619c77ff"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "74814970-b883-4c74-b83b-579d21a60de9",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "89d2a959-777c-442a-993a-4dc0d4ed5f73"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5ffc0312-a6bc-4c80-9512-ee499f56dafc",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "4e1eff55-00a7-4cf6-881b-986859e005da"
            }
          }
        ]
      },
      {
        "id": "72877f8f-e38e-4f87-b511-0a7c3f95e5e8",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "3c837604-fe55-47e1-8154-ab70c1b9caa4",
            "name": "Negative Testing",
            "item": [
              {
                "id": "11ccf393-6e26-4ca3-b1d1-216837d84d1a",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "97ee82a3-4ebe-4417-bad3-515333a50fc3",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd3d3a64-93e2-4299-8984-c3aa973bf3a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80ef6ddc-64c8-4e12-a370-9ca6e70dd4fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33b3747b-61cd-4e92-8beb-87ddedb26373",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85720589-9dbc-4ce6-ba58-1cd6237d9c09",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1766b29a-278b-4d85-a0f6-96add5484a36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90b9f315-1d35-4dc2-af12-e84ddb29f455",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0b840d7-12c9-4af9-8c34-9a6b295afadd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f24b22e7-9ed6-491f-951c-0ac262a093a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd5d8d21-9aa3-4ee0-b139-6aa0ccdabe20",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e319525-e5df-4be3-8f8a-e12ce3135d76",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a65e069c-17f8-4321-b165-d8229a7aa82c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fcc8dc91-f79f-4add-85d1-a6923c92e91e",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17c4489a-331c-4bd1-8e9c-64fc3918bbfa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec740985-fe14-4cde-8933-aef19c346da1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be6d3c23-2161-4847-a297-71f65c0037b1",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc789237-0769-4799-b075-034411877d04",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "41f180ca-abc5-4453-9d10-b0e0d1f0f7e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0a3a63c-b40a-41c7-902e-5bdd15797525",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c86e6b47-84c5-444a-9dda-02b473d2f9f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c3100457-bf84-42ca-a3cb-d0d438954639"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1eddd23e-3033-4629-842f-3e8440d566f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1897a0c-204d-4ef1-9f48-f2757f3d4665"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1df987e9-e9b0-4f6b-98ec-6f6883aff2d3",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f475179-bba1-4eae-bd8a-08a1ac6b460e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "24b47e4b-324d-4fb4-b5c6-2d1daf563a01"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "55f2ac45-f11c-4d6f-8209-54f36e4be9ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3bee7c30-65ef-4450-a840-0985141c9fa2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4886ea16-a652-4b1a-b1bc-9005338878dc",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "028cdfc5-2413-484a-95bf-b5cb9110c76a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7f939bb1-b56a-4c91-a8ef-65cfa78cb484"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ac78bc5-e3fd-48aa-891d-666b43545b83",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc27d237-0775-48ce-8dbe-4cc3dec30d93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ab9d512-01cb-4acb-b8ef-7f567bd64504",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79bcebd5-0237-4e9e-9c15-f6375594e12f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b494c4ff-2387-4eb7-a0b2-becfb8d64ea5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "098cfe8b-6bf7-4570-ad57-0eee50a76129",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed3c4744-8165-469a-8623-a829a6ed2974"
                        }
                      }
                    ]
                  },
                  {
                    "id": "041c6091-f84e-4fd8-ab3e-85efeddbc7e5",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fafa5cc-12ca-4b2e-8836-cbafe39c96b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f25e20d8-5cff-4cc3-9bbd-a06067d5c3c1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "967d7de1-e759-4901-87e5-4ab7826ef273",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54c9f9a8-1538-4064-aac0-26451e75c02e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "895234eb-8aac-4a33-88c3-4a0c2299f729",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1bc0dd45-5b34-46d8-bacc-8d1fa98d9165",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1b64d69-afc6-48c3-9fc2-338a05c0b2ca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d923e62b-0c49-44b6-ad5f-05968e3fc104",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "08b72a7f-678f-4c21-aa17-bd715ff17ca1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f009767-1781-4de7-80b8-06810aad36f3",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c43b449-afc3-4675-a3cb-6fcaabbff85d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0793af40-5371-4793-81b8-36fdc2945a64"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a3bad37-3aad-4514-9c23-266dd1612ff9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "339a2ff6-ce4b-46c4-b67f-e67084cce9d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "651cd975-5ca5-4b1c-bd31-5603226a2271",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4b68995-655b-4e26-86b8-81e1f13abdb9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "75d3d244-231d-4797-a65e-cba7db902151"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "25c2a766-07b9-4af4-a3e9-fad167c6f891",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23bb25f0-69d5-455b-ab69-c17893f46b61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8eb28847-4288-4460-961c-ba96da3b6b24",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "057d8954-205e-4d6d-bd3a-d2812f7ec573",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "94c3cb0f-0508-4068-9127-f256a9efef17"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c7b3151-9f7a-4a84-b4e6-440e9fc7a244",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9157502-054c-4b90-b187-8a6a7d37303f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "904e2bdc-199e-4d01-8b82-229b8cb7c18b",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b121d3a4-ff91-4047-be2b-b901da29a66b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "29d1c6a9-b4c5-4eda-b450-bfec5097fd20"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3870771f-940c-4bea-8e99-69fd6814d055",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce2fac96-2bfd-474b-8af1-cb151b146404"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03082128-4f50-4a13-a6ed-e53cd16f48e2",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6908d480-7ac9-4068-83e8-27468e9236ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be62d42d-603c-4a0a-9622-fc730bca5907"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "80144c6f-cc4b-4c19-82af-7354f33103f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6c00908-8cca-4c0c-a0ce-c99ec29eeb2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4f68576-3103-4125-a5f2-9e980b54afe9",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80e38c56-42b3-43bc-94ac-577c94c078f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a9c09ac-d32e-456b-98b3-b1b902ee40de"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcaa377f-f9f9-4be5-a1f6-20a6b05d6eaf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a965d6c-db1c-4eaf-b744-fecfd9f06cf1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "832ea309-18de-4061-9894-1ac6fe874427",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf6bfc75-bd7a-493c-9a7d-d278f889ee62",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b633b50a-b0fc-4da5-afcb-541c4447b027"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "44b81baa-07ec-48c2-80c1-fd8003660436",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2027c87b-ebce-4798-9d10-bb5d73dbb7aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1920c05d-a7fe-4179-a52c-98d650696124",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e33427f0-5b97-4a91-80fc-474766277f0c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "632c791f-eccf-4dfc-8608-bf3181053921"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e29dccb-21a2-4a44-b54a-89c8dd8f2270",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63db6759-3192-446e-ab5c-6791e977fa4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "951039bb-27e9-4014-a39d-b9b6979e1ac9",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8be174b-edb5-41f2-b283-88926adea67e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d968d8b-fb0f-48fb-911d-7648fb4af6ef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9bc0926-5440-4d55-a503-49b35175d124",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f3b0db3-836b-45e6-81f4-16e8280f357f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c670f36-da59-4777-89e7-430053fd63f0",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d0aa6b6-34a7-484d-9ed5-fe348e129553",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5450f76b-feb9-40e2-8d68-f64b4bac639a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2eb236ac-4522-4110-ae88-c4ae4e288eda",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02219b50-ac77-4881-999a-e9f76cb4e4df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e961cb0-c795-41ad-8856-b0bb9c1c4581",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2a77404-cc2e-4a2b-8948-07f2eb71e971",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4566e57c-e3d2-4e86-bcad-023cecb1dba2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "82ff9ece-9e84-4368-862e-a3b37437fee6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "254690a0-57a8-4786-aaec-6b5cbf8964d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7da914d7-077d-42cf-bd7f-e8804bbac6dc",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0538104-6e66-4544-80e3-2f174c90b4ee",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a84c49ab-62f7-44c2-af3a-d257b522b1dc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a956e80-8186-4021-a6ab-92c0c5934705",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab94339c-9fed-408f-b7a1-58fa81b9c5c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e9caa1e-c1f1-4182-ab81-e5d4fd85d4f0",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba745b46-ec2c-4e22-a477-36cda6234261",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b5c10b2e-df4f-4853-83e1-42681cc555e6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8087a053-1a72-4b45-b24b-2b9c0a0d53e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da19779b-f5ef-4a7b-8532-38bbda9ec991"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2a5fb90-9325-46fe-903b-e56db099ae11",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e8e10fd-44b8-422a-be72-2a93667b4b4f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "41ac6396-cfce-41f0-80d0-c42487948c17"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "76e85ef5-2d1d-4ea8-a7f0-98e175e5851e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "024556d6-1127-4590-b917-dcfacc67825e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a66cf332-0bb0-4407-8551-102b7fb25078",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c369cbe-edfb-4de0-b5d4-58341b80340f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1ee19a01-b6f0-421a-88b6-d8dccf8b5108"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "14f5dc54-fe95-407d-bb93-e24d3a6cb98e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f9966fc-52ce-461d-b601-312c6bd5cdba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "013fb1a5-9397-4a9e-bcfc-a71210066deb",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b987f1f9-3ee3-4137-9b4c-e00301d7c224",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e859f349-f759-42dc-b31e-f4001d7237bd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5559e08a-f493-4b1c-a97d-327ec6eca564",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f980274-ba8a-4727-9d01-0d2b33add934"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51e48744-ec45-4076-b05a-0efee3dbf385",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e96884f-ecd2-4e85-896e-5e6502073c85",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c2a41836-f206-4c82-860a-ed8986ee6860"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9f5a918-8507-4e17-9e2e-7afbe2a629c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50bd7966-e695-4c21-8572-e78c81c7ab2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f594ff12-daad-4816-8986-4e4d563508ef",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d49a24a7-1be9-4d3f-b542-605167c838ed",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0e6c18a5-0963-4a03-a243-5640d17f6b13"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e9dc711-cf14-493a-8556-e8b606639c90",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b6bfbcd1-78d6-40b7-b45c-c18a64bbf92d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e8ea432-b25d-4836-a322-ea525c4d9548",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6745e20c-c51e-4c45-b07d-d8c2c2c20902",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "047a85a9-e27a-454d-9c86-83db7e83cbc6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "60df9ba8-2be2-408c-97c6-77bba9f7599b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c57627a0-b05c-4bad-b28f-2693cfe2e8a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0ac7f55-06a2-44ae-9ba6-7e5d202bbc84",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87c631b0-42ae-4f16-b2df-8e9919e4b108",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "df36205f-2be6-46ff-ae8c-0e4c740c155e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "473036ca-7365-4ecd-876b-1e236fe84469",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1fb4a09-a484-493a-9669-9c89b452c574"
                        }
                      }
                    ]
                  },
                  {
                    "id": "117d449b-46e2-4cde-b746-197a35a077ff",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88970c38-b98c-4194-8ca3-e1175e474856",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cfad2b3d-57eb-4666-b15a-4df6aa72c197"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc5e8a26-ec02-4d30-a62d-837b1b1dbf8c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7540987-7c20-400a-89da-b92f7203cba1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56e64817-3543-439b-9a00-9d6f0b8c1662",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "441dec2c-8be9-4754-b66b-75c5592f2975",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9b13d1d7-c54d-413f-8bcf-1149cada3ba5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5731ee13-0e3f-4244-b4ee-023a398065ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b0a77ae0-f19f-4f8e-89c5-d998e77f10c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff5d95fc-0a8c-44ab-a95d-26d6f37c0471",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0780a9da-8370-49cc-8dd1-feac685f7cfa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "34f822dc-e5dc-42ea-969c-ad49683450bd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f588f90-5164-4d08-b1f1-a2f34a912f6e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02a25243-cddf-4b9f-a923-9c2b0940ca88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af1f3e36-441f-4f67-8b1e-4fce3136b92a",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5e3d4a7-816f-47d6-960e-0bcf0e596d29",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ca5a5f3-7f5c-486f-ba45-dadec8e506df"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "98188a5c-503e-432b-9dd1-2beb4f96e4b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb33045f-e4fd-468b-b8cd-9039575d83a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6592c4dd-3b19-497d-bc74-2a1d2c21d326",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfdbca75-f4f5-41c1-98df-f82b3dff5145",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "485b290b-8621-45d0-82c2-e2f174ad4351"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c8f9292-5085-4949-9bdd-3f774cdbae41",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0964eb60-271f-4be7-9bcc-9f3d9101415e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b475bbf-eb3f-4f53-ae45-a243b455b0c9",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "deef27d8-3b2f-4b6f-8ca6-463f12dd0f29",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05eedade-5f21-451a-903a-9eb6b1a02570"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5ba3546-f40e-4f54-8668-5b1170b9e1e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "520a8c7e-1795-4864-aab5-e012ab4647d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98e21ae8-c6f2-478a-93c8-0db97bf6903a",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fae4aa13-5344-4651-a8d1-5d349b0dcfe2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f120232b-9960-4dd8-a9cf-e3472071e7ad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "608b15af-ebd5-432d-81af-510dfaebb251",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2e21c17-2aed-4870-b1af-e8be02f01843"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dce72674-1342-43ae-8f2e-53a618bb95a0",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94405e5d-e844-4690-b210-fe9d2e0e4a62",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c59b1fb3-2b27-4ad6-96f3-3a3f8ced73a5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f80ebb7-b43f-4855-a305-557b83f1f6f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de00b870-6b0e-4f0f-b161-5b7db21e82e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "088c842a-f67d-4736-8b51-ef9f4629e1d2",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60c3bc6f-c479-4503-abe4-0b99f61ab05f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b0a3cef8-70a3-4d62-aada-0fdadc637185"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2be33159-7954-4bcd-ac69-b7b8c137979e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0342f690-c522-4515-9179-cb3915d7b4e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74504161-bd28-4e5a-aa9e-ab16a08ec6dd",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81bac9fd-b6ba-4af1-928b-677cb5ce5293",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23ad0990-37a9-4fdd-8ad6-85b554372ae7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2acb75dd-40eb-4287-89ef-8795044fa908",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bcf7c0f8-2b18-4487-97c8-66df230fc947"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61591e45-4df7-4d26-a371-c6951424703a",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06015465-9d72-4171-bfe6-0a781db63145",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad027405-7c15-447d-8389-a0dc30c8b207"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f62bcd2-3a81-46f7-93dc-cd0a1e376d26",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2944d3b-ed77-4fa8-9a7c-e1e5c5da8362"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c59a3ec2-709c-461a-9e42-e9429d214e1e",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f875bd5e-6889-4a55-9c4b-c5e692911597",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "32c50ce3-4230-435d-afae-860d89651a4e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "71f63bd3-89d1-4365-9d64-e1cef125f3e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b92a20a-0c0a-4167-b769-c0805abc4e7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dff66d5c-8b73-4556-9f39-e56bcd6766e8",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32b83306-505b-4bcc-a8c2-8a2c3cdab7e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1fd3687b-ed0a-4caa-8376-c8f3fec92d9b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a367f075-fed6-4b66-8024-dd6e8cf6297e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "31df9d8b-3ffc-4d1c-8ce9-5ffad7fcae9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4ebd5a3-4b09-400a-98db-c8770c40a2a1",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14f899c7-bde5-4def-86f3-2ec24658ccd3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "beaec415-7fdb-4196-ab1f-896a86f73cce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c5499b6-2761-4887-9e09-8ad637377713",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c846d8c-cbd4-4477-b383-8dafae473112"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21b2ebd9-aa0e-4ab4-a31a-e7cb24f95d82",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7aba4b3-1233-421b-b84a-6ea9c8cb9afd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c90cda4c-1f66-4c3b-b621-537d80e32535"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "35ae2f6d-681e-4a0b-9851-a2c7ccd96ba9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97e0fd76-84ee-4719-a3d2-93fcd923c221"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9fe31a53-b292-4226-8c16-8afb91800bb0",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c2f749d-7ff3-420d-bcb9-5a6886e617db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47848f47-7dcf-42a7-b8dd-fbad17d074bf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "06ff51e2-0c89-4fc4-9fe5-78114ff0319f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "568b8bcf-bc4f-4558-bb7e-1fa54d419490"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96cad2c4-52b3-478f-b768-f1deecc01b38",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae3b654e-8eb6-4e72-aea2-89bed03d0d0f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf778847-91a6-44a2-b6ae-0833037c3b74"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5816e149-4ed2-49a0-a8e9-a63b50af3680",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "316152a4-dcf5-4abb-89a7-36745858d2ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d58b41dd-d364-473a-a95e-c858455ca63a",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82f6e2e4-d58a-4101-a582-0e69b39450dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dda882b7-8be1-4b2c-8b15-e18dae2687a8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4338fad-8b5a-48b9-9610-50df93ae5470",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00298408-4f35-429f-874a-7b91fbd76562"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fb381d7-f5ed-4546-9a6a-8172ce65939d",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19d19e4c-aba8-4682-a6d0-c4bed03f542d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a228c22f-0236-4cef-aab7-25f7997a0ded"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4038967-7e3f-4e89-a2d7-5a3aa8888cd5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0b0ce4d-aa60-4500-8e5e-93787c63fe38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0844c66-2de4-4ee0-9891-831b085451f5",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1acbf45b-fcdd-4812-ae72-211969007bcf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07a2a2c3-dcb9-451c-a9d3-5386b51ff81b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "740dbfae-ebed-4a86-9937-0f33859b46b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "feadd1ac-6bb1-4217-8e57-b5da119ce7b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a2b1a2e-24f9-4514-b608-0e08525f5ccf",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b8dd9df-af1f-4303-92b6-72b494e87dfa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd8aab87-a567-4a4e-bb3e-a30f0f5028a3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "163417ff-0773-47ca-846d-73eb49b9fd1c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8f98a7d-6781-4e24-9a38-649000574de0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a7d1ba9-8971-4ada-9131-a6116fae1528",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b65e1ab-c6d7-49f1-9034-56b62e4ba44a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9d3d7fc-ad9a-44ee-a672-ca67c468dda2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "26019374-76cc-4118-8c79-e4fd1d2eb59a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ab5dc11-8caf-4b22-871f-100f212d1d47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be84e164-9d17-4ed3-bd3c-2af76fb25353",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6355abe0-0718-4993-b931-4f93fcd81066",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0eb71651-6324-46f6-8270-13c65c71a276"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bdcb4fe2-67c4-491f-ad22-6581ed6e90c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d466ce22-e530-430a-ab8a-4911b5dd5b6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "786a4a22-e004-4de7-a024-ddebe1484345",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c897e5a-d100-48cc-987c-89ee889eaecd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1fa3f421-567c-47c7-8837-6ece72df515e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c003cdbb-dacc-4446-a9e8-f74c0bf2e20f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3fb05cc-db1c-45c3-9986-264f6df60aec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d28cd319-5185-4e90-adcb-a568b16fdf93",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d6b16fd-dea5-44b9-9987-5eae2a4fbc87",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6a291cb-b2a9-4755-9874-a74797b6240c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbe4b5f8-5379-4f44-89be-d8f80c2ec562",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5af3a1bf-4a4c-4f82-ad46-e1f9a387a8d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45921a63-7844-45f2-a31d-b828116957d4",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52508c3f-2a16-423e-986a-8c5896b0f63b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d601011-07be-4019-8a6c-232c47e8f6d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a329b6f-4422-4888-84d4-d769ad4c1923",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1fdb58e8-b54c-4852-96e5-ee8b6d4de8c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3634c46-8737-4d13-8968-3950a04cd65b",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec39f957-c0ef-4f0a-92ad-5fab1451dcc0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9301d52-e5a9-4a68-afa1-f42179d3231a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb716280-7dca-4f1a-8491-c8858d9545cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c374414e-ad8a-466b-9483-e9f36a002bae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80540d1b-d58b-4c30-b3c7-1ffb8b0e4cf2",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4555820f-d713-496e-a666-7a340d3cae46",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "070e1c28-fa94-4318-b9d6-41ffe9ce045f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7feccaa-bba3-423f-8526-c114165e052b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d4fa4b78-3d42-4003-8e5b-9b8e78a8c21b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03ab3efe-93b8-4f87-a988-7f42f77e80ad",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2ad3db4-993c-4ed2-92c9-6720832bbcef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d61b1e8-4884-42a1-bfbf-b69c18535fb4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7475e25d-3322-44ab-9211-af7f95189566",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d33f07e-cf04-424f-addb-7fac90eca15f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7dee56d-3373-4678-bdbd-66556be75507",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8cd085a0-91af-49ee-a5ba-064925c36104",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "41886a0a-587d-45c2-a565-a2f1642feeff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e491656b-a039-4df2-ae64-ecbd25a8f22b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d841c2b6-f15a-40e7-9fc5-8ad7f87c81c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7c64936-768a-4a02-a863-1c27a83a8637",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b292c6e-db38-43bc-b736-023eacca2093",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "758cde23-af2e-4fdb-83cb-fa9d90d7c122"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "449aac89-9bfa-4d7d-b48b-54879d0998b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "266d3859-fec3-4e18-a0ed-ba87d330c77b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cdba18b2-8290-41ee-a86c-a40bba3b10ab",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "653a2025-9d98-4552-8b2b-e8249e925d64",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "abbaf140-cf86-4023-86c4-d71ca6aedec1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3dc4e76c-98eb-463a-9acc-a53bd64ba5cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54b3687a-3680-4bfb-b0dc-6cb54cb3cbdf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81dbe79c-6f39-4fbc-9f51-faadd4250b11",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83449887-4420-4b14-a167-ed08e38fcec2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a77d0173-6402-40b2-8865-4ff91883cc5a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef25f097-a34b-4809-ac79-3df8d3960105",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9518bd3-7c86-4d43-ae70-67a16c15b24d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c3417c2-a28f-43e7-a195-998e926b958a",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3589254-6a06-463b-9a27-a39181e2c730",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "933ca20b-e58c-432c-9a94-27061ea1834d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae8264fc-89b7-4b33-b371-e646be2eaa5c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e5e75bc-25f4-4619-8c8d-0277aca5c169"
                        }
                      }
                    ]
                  },
                  {
                    "id": "158d6f1f-5fdf-47eb-aeb3-d8282ea6fbeb",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b70ed9f6-cb4a-4daf-ae0a-f07148120a45",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1c55558b-c1fb-4ee8-b6ac-ed5a443e2d62"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8ff9ad3-2b94-4c06-bafa-6e28e489724e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd9d5b28-d880-49ca-9914-cb78f00c382d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77fca705-210f-4a6b-8658-e6296e5996ca",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a42a7c7-4d2f-4577-9fff-68774c13aec5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f6ed1de9-b05c-4138-9593-d1a11d1db02f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "160a1341-28ef-4b09-8019-9237a357251b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab49cdc8-e9c5-46ca-8d40-ce412a81aaa8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6379cb9d-8b45-4c01-a588-0a276c2ef60e",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c522fa62-59e8-497c-89ca-f90eaa68396f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5cc46fc3-5d6c-4c55-8a0f-c658be6155bd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b97001f-d0f5-4241-aa72-a113ff7af1b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "915e3a08-448a-45d8-9cc1-9658f9e48c2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8aa2c24d-027e-43a1-bb90-0983f1f85926",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20c9c3ec-00c2-4cd5-aa9c-9602d108d0f3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "807c0c64-86ef-4cc6-bd63-ba24bc93dced"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fb4da0c-2d6b-446c-b7e2-749990cc4747",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53cb316e-5260-4f40-803f-3ebde90815e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9545880-4ca2-44f4-ac07-7f338e99b78d",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "605b0af4-9811-48d5-bb4c-61a5a7d769d1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cd31359b-e4ec-49e1-a551-524103578d6b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f35f9c5b-e823-4116-be62-df12abefe593",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "334fb351-c1a7-4de8-9505-b43363c9b534"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb3f3080-b6f2-42f2-bb2c-aa340cf6973e",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df55bf9c-372f-48d3-a6e8-825eb1eff7cf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "26c94dc3-9d0c-4412-ba0b-56e447f1db64"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "78a3fcf3-6b8a-4361-b737-bf1a231c0f42",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2422b7d8-2750-4414-916f-c647dd273f3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1655e7a2-e71d-4ccb-95f4-3b9247f2f7d9",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23cff7fb-508b-47fc-b5d3-51877167be31",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "33397c34-d2fe-4b66-973d-eff009d4cc64"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "372cdc0d-6db3-4c67-b687-f8ff48dc818a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c3bbcb42-c877-4b4d-ae7e-924b655b30c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1b536c1-d020-49db-b607-81cc4b9f99ae",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "947721ad-7b13-4c91-9eed-7ce9c9c1a33f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cffccc00-12b9-4ca6-bdbc-a72e19e07798"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7e01ce5-bd57-4f1c-9b4c-96da6babb00e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6bae7700-cbb7-4ac6-806b-78699469dde7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79149c6e-2d9a-46ab-9cda-bc62026724ea",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2db0f736-8d1d-4e2b-9673-7fc4dab36b62",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d0c411c7-d489-4688-8ab9-44e8bab69ab8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "733f01e9-185d-444a-8277-3bc37965110a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7b7effb-4aef-4cda-ad83-80ab8bdd3b17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c83d40a-7b5a-45e2-b051-2237512990e2",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6aca2d74-6786-46e8-a6b9-2399801ba250",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4eef8a6a-4215-4646-aac2-c64cc1d9b711"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "330243ff-d443-4f57-8f92-c5eb07eb9d60",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "edbb7bc4-e4de-4639-94aa-fbb8a3c5edba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d1fd22d-ce81-4f95-bbe0-9102ed042858",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a5dae5c-3d5f-483e-b45b-b48a42656b97",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d9e51174-707a-4710-9c0d-a3a988b35d69"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f293d4c-f9f4-4eb7-99b6-ac6a9ffeb1f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "853eaaf4-6627-4f6d-ace7-23d32d0a3085"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cadaacd3-371a-4cde-a0b0-af659fdc98b2",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bde2d219-c558-49cb-a391-faddbc7cd591",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ff8e90ec-acf4-4eaa-9995-951e679969f5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "84766442-fb89-4a23-bca3-1063cecda005",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4abf1093-cf10-4d57-a6ea-b581846a01ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "866c2f78-45d2-4f0b-95e2-ba7a4bf54494",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "070b6b2b-db17-4c3b-8008-ae16890710da",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c2fc0ef1-aeb5-45da-a82c-e64dcb2c55c2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "361e842f-0a0f-472d-b680-db6bbe8d1546",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36d31443-0003-462e-9bb9-32a04b0cd917"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3bec40a9-eab6-400f-a30d-23449e2efa6e",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2053a546-ec1d-4eab-9b7f-a609c5f4c993",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "27242919-6f8c-4206-a463-2fe498795b4a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "741439a0-beff-49fd-aa55-62fd4ffdf35d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "008dd0e0-1313-4579-9e12-76d3b6a34e31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2dc8a67-74dc-4ee1-894a-787ea2938cbe",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a8a9185-9ba5-4967-aae1-ec8b2a253eee",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c01912df-b626-40cb-a139-e59386ed0a08"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ced6277-8a37-4565-84a7-d4ddeb19e6a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7fa23dc3-6b60-4b71-8cad-bdfb46ceaf31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "563e04c6-04b7-4250-86c3-e5eba589b654",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8278aa3a-7df2-4fd9-8bfc-cc0e51bd4460",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e3759c6b-3f99-46df-8bde-3654918a8146"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e94a489-d158-4b9f-83c3-73b033022fbf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4cfa70f8-8980-4996-8ed9-36190e138f30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ecd58bed-d649-4604-93e1-800e03a002d3",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72fa0120-970e-42c5-affe-0eae950d29c6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f07a0742-c012-4922-988b-60ce5301a558"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6174522d-a257-444c-b7b5-5167ce40edee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aeb0b962-c2b2-4b57-9080-b562fdfb3556"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a21c53a-a78a-49e6-917c-c1bbd18fe42e",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86bebf01-e387-4594-96f8-c7b653e61875",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0e34a386-5f22-4e5d-ae2c-db6aa23be522"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6b7d475-2bb1-469d-a7e5-6df1427c427b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c07bbbb-011e-4dd3-87e7-454b95b97765"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79c91825-79fd-4898-bc0e-8b728f5e29d9",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53880890-a15a-4d9f-8bbd-479db223c5a8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2557c604-5fe2-4fce-a99c-d3d20611c54f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5354aa34-9840-4764-9774-7e5868f73c1b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91b5813f-dfc1-4871-a8dc-5d58117de4b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4eff7d1-59cb-4cb8-80d6-abffa8bec889",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92c0ba77-1ecf-4f4e-b9e8-f3841666396b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d1290c8d-e5fb-4eda-a447-d50c9fa096dc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a884e6c-1580-471a-b27a-04c83b5357e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1dcffcf1-202b-413a-bc39-67566d78a46e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66e43d0d-6472-4f1a-a9f8-1596c72fb1c9",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92664bb8-9f47-474a-90a6-5b8e4d73f01f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "68b594c8-5342-4826-91cf-d5daf900181b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "95b8b491-69ec-4639-9777-af0905da2375",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c5039c85-5a28-4493-b5e8-66745b54205c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "152c054a-a148-4f74-a30f-998326293eb1",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da8bce9e-eed6-4646-ad1e-5f8ac95f5dc8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b8a16ae4-8c8c-4622-9f29-2affed87dc4d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "565bb358-10f7-45ae-b114-43d88a5d7907",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6bc16a1a-7895-4f40-9414-042476b501ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9031ea1b-ef10-4d9a-ab36-abe21f55fead",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61328b51-0990-4657-a5f5-642cf5bcad23",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c7a440c5-213c-4501-8424-97b3fd9bd2e7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0cab6bd4-2405-42b3-89f0-0fe3638e8d02",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d89bb4f-f2fb-447f-b8fb-81e85122d102"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ced1a8b6-db10-4e7b-a806-159e1af42c63",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f22f65ae-94d3-4b6a-8429-04c7fe757f94",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5a1902d2-2425-4019-8e49-1355fd870f13"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef3c1417-21bc-4c64-a1cc-1db48b10ce01",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee673372-4337-45d1-8250-9a2ca387332b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f8645bd-a2c7-4353-b2c5-bd92008c2dc0",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6957ff1e-e6ae-4b94-bf59-7e10ef9896a1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d4c048d4-8458-4ecc-b454-24242ad6aff7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "28045a0c-68e8-4bac-b3c1-d75e8bbb5de7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65718961-5342-4c1f-a94b-5a99473ff6ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea749286-b94f-45c3-a113-1a0bfd1298bf",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89708020-6a54-4915-a3b8-03cc2c675332",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "720441ea-5586-4bf4-bbde-198dc9f018a9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "39ceb4b4-5aa9-41f8-968e-da92f67cbbc4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "427bdf51-eaa9-4671-a116-017e944066a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fb54e0d-6626-469f-9f4e-dec6dda181c8",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0932363-a603-4a7a-9b2c-fa6f80f6b39c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2caa98fa-b180-4300-8c17-5abb6f53ca58"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "85b112b4-90b5-413d-9195-5882dc08fc35",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ecd1697d-cafd-44d2-b186-834874ec53a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb856489-cce7-4b96-827f-2db7d97f6dd8",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84fd84f7-1ebb-4c6b-99a9-60e56ad2e313",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "23545281-676a-4944-93f8-5b796bdaab7c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "42644762-afe8-42b0-af3d-bec90a19402b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc9b1588-8fac-4eb3-aa0b-47113036dbe8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "075efa7f-af31-4c14-88a7-70c2058f040f",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5dee0e9c-8a55-4f65-896b-9577a91fe8d7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1fa75101-5887-4262-8feb-1113801a9b63"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff418f99-1e17-4d59-9681-f7a2767d8398",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "408e1b3e-6deb-4a89-9642-8c341ae8cbf1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c07f2140-af38-4fd7-a6ef-717c5cbf5a74",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11638b31-3c1a-4481-b073-1fb22b3985ff",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9376d9dd-56e3-45f7-af97-4140cd4ca2da"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "36ad2958-145e-4f33-8691-1d26c5c79e72",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63eaefbc-e6cd-4c30-a00a-a41f7bcd023b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e39be03-c409-4b26-982b-2dba02ed0174",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e86930e3-00c8-44a9-9ea7-896f3b493d37",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "18b504f9-0262-40e4-9754-8b5a87d8321d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb810938-ff18-4105-b1d7-2f1657ac2553",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71372314-3b54-42b2-aa70-270cc2b69077"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5b5298ce-e1c5-49eb-a9dd-31a9b65d45e3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d0921aa4-dbc7-4c1d-8aa6-7c98957c945c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "de0e64d8-ec7d-46d3-a84c-58a780055e98",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "cb5301c8-ca74-403c-bc1a-d12b90493cdb"
                    }
                  }
                ]
              },
              {
                "id": "a4071cd7-735c-432a-8d56-65b2cdd2d688",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "71dc2d45-82cc-49e6-a857-b302f7c6a81b",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "517d9dec-78d3-40dc-9ff6-6b261fc8f606",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "e3755a56-2849-46a0-8efb-501c08bf4ffc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad4e74d3-7625-4cfd-86f5-f8f94e7600e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9db51f12-e38c-4abe-8b1b-d81307a7ed79"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7e9309d5-d7f6-4cbf-b6c1-c5f9a593ea44",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "61688871-1cc1-412e-a9c6-8cfa08298100"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "323f38ae-7e7b-4051-873d-76bdbfb23907",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "63609768-1b8b-4421-bfd4-b96acd92a8e2"
                    }
                  }
                ]
              },
              {
                "id": "e4679172-28e1-42b6-9264-bb17eeb16372",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "b21c7a37-8840-49e7-ba47-fb69fb54dae5",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "826018f4-bc2d-403c-9ff9-6f60d0bc954b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "b862ef32-2bb0-4378-85d9-fb38b698dea5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91aaf0f1-eec4-4391-a6e0-106d7f3d2fb9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81dd6f0f-403c-498e-b6f6-fd250468e120"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "a5db8c71-2e23-4727-b82c-f95db9cc17bb",
            "name": "Positive Testing",
            "item": [
              {
                "id": "34b1ed19-e14c-4565-a7e6-cb24361e8aaf",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "84eb2fd8-81d1-4a1b-9c0f-d207590762c5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "296b7b4d-d7eb-49c4-98bf-5a3af2aafb83"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "41a36f03-41f1-4783-8406-cc1310458c8a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "be8cce75-1c45-477e-a871-7a9dc1bb0396"
                    }
                  }
                ]
              },
              {
                "id": "3746d44a-93e2-470a-85fa-c387205c660f",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "04c64f11-68ee-442d-8e34-778056eabb73",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "643fa0d9-62cc-4291-baaa-63591346c8ca"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2e3a1d00-d162-4871-b77a-dfa2243c62e4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "254b5d71-6efe-4ee1-9c8d-3fd8dea446ff"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c71c4c14-3154-4e3c-bdf9-59b201ee5739",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "45dfe82d-7947-459c-92ef-20fe4093eb5c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5205a50d-9e41-414f-ae67-f690cdfcfd89",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "18b13364-5191-43da-a294-4d1760106e3f"
            }
          }
        ]
      },
      {
        "id": "9f06189f-e13b-4dfa-ab75-4d782004581c",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "6b945de1-57d4-4215-95b4-a59048118155",
            "name": "Negative Testing",
            "item": [
              {
                "id": "65256306-6b0a-4e0a-aaed-c7a7db9aa7d1",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f67c45e0-c483-41c0-b373-55ff07a154ae",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8d4e909-db8b-4c0d-be53-3889b8d945d7",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "76946714-8eda-44fa-a894-3077d66f4a8c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f035465-9e60-41ee-a3d7-24ce41342a31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6ee969f1-b2a0-416a-8326-bc08f9468d99"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7c5ac77f-7e35-4d7b-ae9e-3814eedd05a7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "71179ece-1f0b-4732-a293-2d7c24c439bb"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "412013e5-06cd-43c5-8445-67046c026665",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e37f3190-991c-466d-89c9-535b510c5569"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e0d7e7e0-3d73-4e50-baac-723d7af66fb9",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "c7aad2fb-7396-4eaa-8a74-29abd55b7bd3"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ee6e9044-bd9a-477e-928c-5d06c143a3f1",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "35fed60d-a2b7-4349-bab9-c84c25441193"
            }
          }
        ]
      },
      {
        "id": "d5d28060-ffa5-4dd2-9048-b5b79547898f",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "5fe356c3-652d-42ff-b2ec-8c75e8e626a0",
            "name": "Negative Testing",
            "item": [
              {
                "id": "846d0b70-f1ec-4715-bc8b-1093eabf9f85",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "949a2bc8-26ba-44ff-b9c4-661313a224bd",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aeabeb40-1cb3-4301-9c63-a0d8ddb6642f",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "12ceb936-6e61-4e28-bcc6-ae54afa5febb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "90d1b7f2-6d34-424e-b4a5-12700fa4dc74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "55e9993c-8f11-48b8-9933-489f7f4543b0"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "29904f44-f90f-436a-8ebb-842c35fe89d0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bf748d90-6690-4e41-9b77-3df3980f189a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "8d7e7921-4c4b-4cf4-aa18-5b47eece02ad",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bb682e28-0220-4093-9ab1-2b288f959fcb"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c5ca252b-23a2-4357-a235-34be134587ec",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "ac7233f6-417f-407c-ba9c-8187fd40944b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0644142f-a012-4f26-93ff-b6ad6312eaa4",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "0badd51b-67bc-4664-9da7-153e8d1277f9"
            }
          }
        ]
      },
      {
        "id": "4354ea73-90c0-4db5-9cbd-783e03262ba3",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "a6c9a002-51c0-4894-a0fc-da0173b2215e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "1bdd6e6d-de8f-4572-a521-ca18bdd6aa45",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "3b034916-6756-4322-bd98-88dfbb1fffa2",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09e4262f-5b10-4555-9ca3-91748748547b",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0223e8a0-6c82-44ae-8c44-1ca40ff00082"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "46dde461-ea3b-4d2f-8fe0-90815530e117",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0c391b1c-bc86-4e40-99f1-95112e31c3dc"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "44edd77c-2801-468b-8c83-d730b5d398aa",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4416de4c-7041-4c17-bbfa-fbb019212db7"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "620c3933-e579-4cf7-b897-0a8570d8434b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "26edb000-5361-4306-967c-ac91d0ea6e01"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a843c663-dca4-47d5-a008-23a7d75129b1",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "525a1b24-201c-46fa-8170-396bd3bf5b0d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d78e8f4f-e54a-4f72-b7e4-cbde1c0a12de",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "70e4274f-b79f-47f5-bc22-63bdb996336b"
            }
          }
        ]
      },
      {
        "id": "2e0b6980-a686-43a3-9738-276281af77ba",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9d60699a-6246-49c6-aef1-ca15cc3f417c",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "29f8051e-5a53-4646-a747-05b7fb0ba689",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "f3f1211b-4243-402f-919d-2237e6927617",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6299cce6-80c8-4985-b978-79e1220eb012",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "30602f15-c67c-4fb3-9fe8-92d65b136701",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1891,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 507,
        "pending": 0,
        "failed": 4
      },
      "testScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 941,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 393.5873015873018,
      "responseMin": 22,
      "responseMax": 11884,
      "responseSd": 1791.7693050106716,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1724287303907,
      "completed": 1724287411556
    },
    "executions": [
      {
        "id": "3257439e-5ee6-4b55-a68b-650b0dcdb305",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "1e11ffe2-588d-4e84-9eac-3a638bd2d3c3",
          "httpRequestId": "058b8752-9558-40e2-b910-c1d04ce8bdce"
        },
        "item": {
          "id": "3257439e-5ee6-4b55-a68b-650b0dcdb305",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "9b2a005a-3b83-484f-ae72-b48f53dc3011",
          "status": "OK",
          "code": 200,
          "responseTime": 80,
          "responseSize": 0
        }
      },
      {
        "id": "54721037-943b-4b47-a3a7-4bc2609ffc23",
        "cursor": {
          "ref": "55731bb8-9cc9-4ec1-80d0-699c36b5c2a1",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "db0af7a1-9143-40bf-b146-96035bd164bf"
        },
        "item": {
          "id": "54721037-943b-4b47-a3a7-4bc2609ffc23",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "74cc400f-3ac0-4900-b1a4-5cd63a60f6b0",
          "status": "OK",
          "code": 200,
          "responseTime": 22,
          "responseSize": 0
        }
      },
      {
        "id": "b3bb6eb2-cf9e-4768-8ae3-c6c31010e3f1",
        "cursor": {
          "ref": "d1f7b0b7-41ca-4f0c-81dc-2a801e595e01",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "b68bc81e-cc55-4c87-9a42-632e3b15d251"
        },
        "item": {
          "id": "b3bb6eb2-cf9e-4768-8ae3-c6c31010e3f1",
          "name": "did_json"
        },
        "response": {
          "id": "686e235a-4877-4c47-a4c8-7bb6a64fd4f9",
          "status": "OK",
          "code": 200,
          "responseTime": 306,
          "responseSize": 1024
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70e31ccc-1bbd-41ba-a895-58e54d152ffd",
        "cursor": {
          "ref": "9b057272-a3a4-4eb3-8de0-f9f8c31fa678",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "86629d23-5779-4932-b09e-368d60e546ed"
        },
        "item": {
          "id": "70e31ccc-1bbd-41ba-a895-58e54d152ffd",
          "name": "did:invalid"
        },
        "response": {
          "id": "3b1526db-ddab-4d99-aadf-1a4774f18b4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2327,
          "responseSize": 25
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70e31ccc-1bbd-41ba-a895-58e54d152ffd",
        "cursor": {
          "ref": "9b057272-a3a4-4eb3-8de0-f9f8c31fa678",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "86629d23-5779-4932-b09e-368d60e546ed"
        },
        "item": {
          "id": "70e31ccc-1bbd-41ba-a895-58e54d152ffd",
          "name": "did:invalid"
        },
        "response": {
          "id": "3b1526db-ddab-4d99-aadf-1a4774f18b4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2327,
          "responseSize": 25
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3093697e-d1ea-4abe-9190-e681ab7e88fc",
        "cursor": {
          "ref": "a38fec4e-a863-4a87-856a-0cf0ece27f16",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "635e8d72-008c-42b4-924c-fdc7642ad4ed"
        },
        "item": {
          "id": "3093697e-d1ea-4abe-9190-e681ab7e88fc",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "4523de83-152a-43b4-8c23-aebfcfd3620c",
          "status": "Not Found",
          "code": 404,
          "responseTime": 2496,
          "responseSize": 65
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "065d7664-19db-4f35-a96c-59f960fbc4e7",
        "cursor": {
          "ref": "bf6c3b76-6ffd-435c-a2b2-a3409455deec",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "cf61ba4f-014b-4670-9869-18354c2304a1"
        },
        "item": {
          "id": "065d7664-19db-4f35-a96c-59f960fbc4e7",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "2fa85d3c-469a-4875-ac17-7f8ba480bb97",
          "status": "Not Found",
          "code": 404,
          "responseTime": 2123,
          "responseSize": 23
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58ff8308-2377-437f-8f60-fd3e543b4e8d",
        "cursor": {
          "ref": "904f4448-06f9-4c19-85e5-9b68fdeffdab",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "6f44fada-fcd4-400c-9723-1fbacd7f07da"
        },
        "item": {
          "id": "58ff8308-2377-437f-8f60-fd3e543b4e8d",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "4c6bcce9-80a1-4006-adf8-9a884c98ee23",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 48,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "caa1d9be-7ac9-42b7-a96e-1ee2d83c6dd2",
        "cursor": {
          "ref": "146fc62b-3a2c-4a2c-a6ad-fc8906360e89",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "ff25a753-ab7d-4e61-a7b5-6961b6035a3c"
        },
        "item": {
          "id": "caa1d9be-7ac9-42b7-a96e-1ee2d83c6dd2",
          "name": "identifiers"
        },
        "response": {
          "id": "ffe871bc-38b7-4201-868e-57aa9c596811",
          "status": "OK",
          "code": 200,
          "responseTime": 2421,
          "responseSize": 1040
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "445cb0f9-a669-4fa2-82cc-71ca33abad5b",
        "cursor": {
          "ref": "33f24a6e-eec3-4308-96a9-5c172c04f8d9",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "3ff939e8-0967-4f8f-ae6e-7a628e6ecbf8"
        },
        "item": {
          "id": "445cb0f9-a669-4fa2-82cc-71ca33abad5b",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "69a17fd3-1590-4c42-8562-f544983b9f20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebda72fc-cd75-47f7-813b-316b2ec7e274",
        "cursor": {
          "ref": "ab26b407-bb21-4eef-a5e9-2c6b83506115",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "defa251f-16b1-4a73-bab5-be7df2e0f9e0"
        },
        "item": {
          "id": "ebda72fc-cd75-47f7-813b-316b2ec7e274",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "80a2dfb2-dd4d-468e-8e83-557f7c95a3b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 89
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29ecfd7d-4ae8-47dc-822c-4e55378b7430",
        "cursor": {
          "ref": "59cb633e-3023-4b72-91a3-fc397ccd5996",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "eeabb27d-9fdc-49c0-9d2b-aa184186e7ef"
        },
        "item": {
          "id": "29ecfd7d-4ae8-47dc-822c-4e55378b7430",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "4e5a571e-176f-47ec-b608-f8be207973d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b71bb0f-5a27-4cd6-8c19-cb2aa989e9fc",
        "cursor": {
          "ref": "11c1b517-b6a6-47a7-bb68-060059e8b1ec",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "90598686-f993-48ea-b35a-99dcaacfef6d"
        },
        "item": {
          "id": "9b71bb0f-5a27-4cd6-8c19-cb2aa989e9fc",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "ccad665e-5a84-4b04-9bb4-cd5b5ea768d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51deee44-ef1a-4839-99ae-593ed64e75c1",
        "cursor": {
          "ref": "13c7a656-e2d3-4ccb-b222-4f80befbfc8b",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "64f94044-8f53-420b-8f27-aaa95ef1e9cd"
        },
        "item": {
          "id": "51deee44-ef1a-4839-99ae-593ed64e75c1",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "58ac5a0f-57c1-4b00-a43c-59a2c37b9667",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b7ec359-8ef5-4f24-b610-2cf329a963b4",
        "cursor": {
          "ref": "7b95c97c-fd84-444f-8d6e-e6893edcfb35",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "986fb5c2-ff2c-4904-976a-2ea428e6eb63"
        },
        "item": {
          "id": "1b7ec359-8ef5-4f24-b610-2cf329a963b4",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "28f5461b-1ad6-4c9d-9d6b-5be0f01b90c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0448fa81-098a-43e1-81cf-eaf0acc9bb9f",
        "cursor": {
          "ref": "c82c3621-51d1-459c-8473-16bd20fc563c",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "37c829ce-d322-45bd-a5b3-4b8df698f4dd"
        },
        "item": {
          "id": "0448fa81-098a-43e1-81cf-eaf0acc9bb9f",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "edeb38dd-97f2-48ce-8653-88eb7e68a985",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53853089-e096-4f7c-b443-9d0ecd21b558",
        "cursor": {
          "ref": "e2437d1e-a89c-4600-9664-a49102cfcf7c",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "0584adc1-4aa8-46c9-a610-59ccd2afd962"
        },
        "item": {
          "id": "53853089-e096-4f7c-b443-9d0ecd21b558",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "7d7c0b88-1d54-4ca5-a0fc-c148f3eb4ea8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02f9aa89-d8d6-423e-85c4-c26d9e56d1ce",
        "cursor": {
          "ref": "5b3a4d06-8a4f-4cb7-9696-72c829331fa7",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "f50930d9-f800-4b33-a923-15b275ae41e2"
        },
        "item": {
          "id": "02f9aa89-d8d6-423e-85c4-c26d9e56d1ce",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "43100898-be78-4b15-baa9-390d9240cdef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11098229-9fe6-4fd0-9106-0f0804964b6d",
        "cursor": {
          "ref": "6b3c902f-41a2-43bf-aae5-54356812565e",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "446d8fbf-c5bc-4e9a-90e7-f071528a7b77"
        },
        "item": {
          "id": "11098229-9fe6-4fd0-9106-0f0804964b6d",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "bcdf74c8-6857-425f-bd35-15d0f94a552d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b5d01c3-ec2b-4770-9a42-c69703951399",
        "cursor": {
          "ref": "75d8f9ec-9a00-4baa-b8a5-5cd7cdd06ece",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "be6ed8c8-6741-4856-bffd-c2920acfa874"
        },
        "item": {
          "id": "2b5d01c3-ec2b-4770-9a42-c69703951399",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "44334f1f-8a1e-4a53-b326-b0a277d6db94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "916671aa-aac4-4290-9410-02f49e812dd0",
        "cursor": {
          "ref": "550a698d-bdce-4d52-a578-58bdd834c14d",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "6b22d4ba-ad7b-4790-a59c-053f28ea943e"
        },
        "item": {
          "id": "916671aa-aac4-4290-9410-02f49e812dd0",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "93b94660-e629-4a98-a8ab-1e026a4359bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe7ccb74-0c6c-40d3-8cbd-ac1e857775ec",
        "cursor": {
          "ref": "8bc886ab-7043-4967-8b64-874d5ff963c2",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "50bd7942-f3fa-4b4a-a775-6ef9f8358b37"
        },
        "item": {
          "id": "fe7ccb74-0c6c-40d3-8cbd-ac1e857775ec",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "eca91824-b890-43eb-9e91-1681a0230f80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5fe29b6-f95d-4821-b116-a67bf7faf6ab",
        "cursor": {
          "ref": "a8bba73b-6241-43da-8b8b-7b794388acd2",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "6ac68bbd-a551-4bb4-8945-b1422ad96642"
        },
        "item": {
          "id": "d5fe29b6-f95d-4821-b116-a67bf7faf6ab",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "cee186ab-8081-40ad-9120-68ef06d608ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16c979b3-df61-43a6-83bf-f4d628fb66a1",
        "cursor": {
          "ref": "d26a0dcb-f57d-4d51-9234-a89a6a239263",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "ca3f9bab-8b07-410d-8c40-f0b986ff4d94"
        },
        "item": {
          "id": "16c979b3-df61-43a6-83bf-f4d628fb66a1",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "ce5ee8c5-4f92-4ee4-8bfc-5d99c39d1f8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cca0e418-4398-4bb6-a845-a5ee9bb6e4e5",
        "cursor": {
          "ref": "91180801-f212-4625-b43b-92ac681f8d23",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "f1fbd03d-cb62-4d1a-a141-2f2570a4fce9"
        },
        "item": {
          "id": "cca0e418-4398-4bb6-a845-a5ee9bb6e4e5",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "c9f6cd12-b9dc-4018-935a-7c1892eaa4e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d41317a6-a709-4e16-9712-67ee59d36948",
        "cursor": {
          "ref": "8266e457-2be0-4db6-9926-9913d68efc69",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "078171e7-2631-4f61-b763-6e3d5b2f4265"
        },
        "item": {
          "id": "d41317a6-a709-4e16-9712-67ee59d36948",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "56d50b2a-53d9-4a68-99d0-39c2b6ce1ac8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86c469d6-c23e-411f-812e-4f0737c64929",
        "cursor": {
          "ref": "757264ab-d651-41bd-9a33-10a301dbf715",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "0864863f-047e-4407-812c-5b6d2c6929e2"
        },
        "item": {
          "id": "86c469d6-c23e-411f-812e-4f0737c64929",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "29333aa6-2d74-420d-961a-9f223346bdb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52fcb512-3114-46ef-9576-4a29dfa74fec",
        "cursor": {
          "ref": "656f39ce-8f61-454a-8bc6-1fe064a1147b",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "14eae297-359c-4f49-90f9-6f0133b50ed8"
        },
        "item": {
          "id": "52fcb512-3114-46ef-9576-4a29dfa74fec",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "bcdcd855-6374-47a8-a5a0-fc3373f74550",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bfdd370-6108-4b88-87db-e842513b96af",
        "cursor": {
          "ref": "c6abff0e-8d5b-426f-87dc-a0e9d091616e",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "028fb57c-820f-4710-ad32-c088c2cf0141"
        },
        "item": {
          "id": "9bfdd370-6108-4b88-87db-e842513b96af",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "2b755a96-fb21-429e-8388-0c0f137c1bef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e97a9b85-86a4-460b-a659-fb68457b5666",
        "cursor": {
          "ref": "299851cb-ce5e-49d0-8e05-9698f096d106",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "b57addf0-5a21-4b2b-9709-e5fef612d16b"
        },
        "item": {
          "id": "e97a9b85-86a4-460b-a659-fb68457b5666",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "84637609-2e21-4f56-a7b6-fae05c7abda4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd9d735d-43be-4fa7-ba52-44696af3c986",
        "cursor": {
          "ref": "31f3f030-a343-4729-8c78-f46ec941adeb",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "fc767a31-2416-4168-80b2-54f06f5635b8"
        },
        "item": {
          "id": "bd9d735d-43be-4fa7-ba52-44696af3c986",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "dae31c2f-4aa1-4567-bb06-239c561eaf48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82720e73-09d1-4bb3-ad3a-380d9a1f4875",
        "cursor": {
          "ref": "9910b05b-c45d-48fd-9c9e-6f7bd65837be",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "46ad8de0-ff4a-40ea-9468-3603d47ec57f"
        },
        "item": {
          "id": "82720e73-09d1-4bb3-ad3a-380d9a1f4875",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "74931049-1e61-46d0-98e2-1fcc1ebf0cca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40a2cde0-8066-4d09-bd4b-e95d030003dc",
        "cursor": {
          "ref": "e67112c2-c23a-453d-96b4-1ca9026d865b",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "8ed66e2e-e303-47fe-98e3-e08d1ddb4880"
        },
        "item": {
          "id": "40a2cde0-8066-4d09-bd4b-e95d030003dc",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "6b0b351b-1c3b-4758-9e2a-31dba930a035",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d5d3ee3-276c-4383-bc01-7fdadd34c44b",
        "cursor": {
          "ref": "6e905e19-85b2-47bf-b098-7054159c8cba",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "ef5deb67-4d2b-4340-8dab-ccf2477a5cae"
        },
        "item": {
          "id": "2d5d3ee3-276c-4383-bc01-7fdadd34c44b",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "fb7c0cb4-78ce-4ce9-a449-160fdf035235",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5448204-bcb3-482e-8a55-0e6882665637",
        "cursor": {
          "ref": "31cb437b-ed28-4ecc-8734-29b4548319c4",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "9221aeee-ba5b-47c6-9d80-93a3a9520d8f"
        },
        "item": {
          "id": "a5448204-bcb3-482e-8a55-0e6882665637",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "c3f01ecc-09cb-41d6-8372-f2afd57758b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3de1e6d0-4dfa-4b06-8a0f-bf98e0c2a7ba",
        "cursor": {
          "ref": "a4ceff67-5cbb-489b-b11e-1f167fa4a3ad",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "3612a028-a92d-4f07-a673-95a577d1ed33"
        },
        "item": {
          "id": "3de1e6d0-4dfa-4b06-8a0f-bf98e0c2a7ba",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "7a6519b4-6174-424d-aec4-5ed82f64276e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "186b8116-d61a-41c3-8fcd-d4380013c536",
        "cursor": {
          "ref": "c5964e57-4ef3-4a73-85e7-334be815e496",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "68b68065-0b26-4809-b46c-1a413c524d6e"
        },
        "item": {
          "id": "186b8116-d61a-41c3-8fcd-d4380013c536",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "00a75c7a-7035-4779-8c6e-d7650889ded2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5128a16-e1ea-4a08-964f-d14395017726",
        "cursor": {
          "ref": "6f7d1acf-9765-45b9-9c39-9fe51449234c",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "ecc0f4dd-794b-485a-a507-564bf19735b7"
        },
        "item": {
          "id": "e5128a16-e1ea-4a08-964f-d14395017726",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "de1f4158-8446-4ed2-91b0-4ad28035517e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1cee81fc-64f9-4966-bd8e-12214725d46c",
        "cursor": {
          "ref": "ec19436d-a369-489b-9a54-3c1b50dfb323",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "5cc5eb6f-7be3-4778-b59f-7afb8f24d364"
        },
        "item": {
          "id": "1cee81fc-64f9-4966-bd8e-12214725d46c",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "c2bee03b-e517-4810-94fd-47de8af45357",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 87
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0162d81-b0fa-449c-85b0-47ad5c8ce230",
        "cursor": {
          "ref": "06de0e48-685b-4bb5-98e1-c5099b714b30",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "6011e0ea-a008-4490-a9e5-b1dd5e49fbae"
        },
        "item": {
          "id": "d0162d81-b0fa-449c-85b0-47ad5c8ce230",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "778405a7-0a9b-4fcb-8404-f1ac490ee774",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b6cabae-93b5-428c-90db-1501cb9889f4",
        "cursor": {
          "ref": "d8679085-af6c-4b51-bbb2-0849d1c60ede",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "16e4bea9-3eb4-4dcf-975f-e7001510f982"
        },
        "item": {
          "id": "5b6cabae-93b5-428c-90db-1501cb9889f4",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "688bebef-ab02-4ada-b0ad-b640bee268d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9f3fef3-af6a-40f5-a7c5-e13221408e1b",
        "cursor": {
          "ref": "464b4a7a-a899-4b44-bd70-13542de97428",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "9766bc1e-ddb4-49b0-a486-22cf58d26549"
        },
        "item": {
          "id": "f9f3fef3-af6a-40f5-a7c5-e13221408e1b",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "cca3ea49-782c-4811-be3f-c23f6ded5ca3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb869195-b270-4a6d-af8a-81bf406bf20f",
        "cursor": {
          "ref": "c71ec208-520d-4794-8388-255390bb7951",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "c3b489f9-bba3-40bc-aa08-aa974b7add92"
        },
        "item": {
          "id": "bb869195-b270-4a6d-af8a-81bf406bf20f",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "fcd2c9b3-939f-4b63-9368-22e0ce7d5eaa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "436aca26-7cec-4c5d-8b8f-d3d70c025da1",
        "cursor": {
          "ref": "f776b40a-be7f-4d63-8b89-b7b18c1a3d5f",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "4944f46a-603f-43e7-9fa4-186feaaf7d3c"
        },
        "item": {
          "id": "436aca26-7cec-4c5d-8b8f-d3d70c025da1",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "8beb4aa1-86df-4000-a230-3a7624361856",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "656e48de-7add-4e87-943a-031125c4b179",
        "cursor": {
          "ref": "0f413236-d5d2-4321-b8fd-69ce843db954",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "a8e10236-ac59-4456-a281-d58a6596f627"
        },
        "item": {
          "id": "656e48de-7add-4e87-943a-031125c4b179",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "a4704305-833e-44eb-b2c9-9604242433c8",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 55,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "054300af-8fcf-47a2-8754-9230d898d83f",
        "cursor": {
          "ref": "5edfb4d6-74b0-452d-9290-bf6a7a729890",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "c0302328-17d0-40b6-9ae1-0333c3d08528"
        },
        "item": {
          "id": "054300af-8fcf-47a2-8754-9230d898d83f",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "4c85014e-779b-4200-9de9-b0c1f58aa70c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4422ad64-fe4b-4569-bd20-2bbee002bb55",
        "cursor": {
          "ref": "b83ea853-f061-4561-badc-9e785ce2aa6e",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "b7aabd0f-53b5-488d-9561-cff8421cdfc9"
        },
        "item": {
          "id": "4422ad64-fe4b-4569-bd20-2bbee002bb55",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "6ad7b61e-6740-4859-8106-2c2c0a99efc0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62936a26-a0c5-4906-8e2d-788453a8dd36",
        "cursor": {
          "ref": "c40e7f70-8c63-4181-8626-3efee81c6741",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "a3e8c090-0e80-4b15-baf8-58a83bf63747"
        },
        "item": {
          "id": "62936a26-a0c5-4906-8e2d-788453a8dd36",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "505a2007-0f34-4a8f-aaad-b65ff300447e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ea36682-e076-4353-8009-1b74920dd25e",
        "cursor": {
          "ref": "9b52a3bd-8db6-4917-a17d-6713513f5e1d",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "50585395-0dc0-43c2-b128-ae15c0bd8941"
        },
        "item": {
          "id": "5ea36682-e076-4353-8009-1b74920dd25e",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "7f042bc9-6f93-41fb-a5c8-ca693ce5a901",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b22e2148-944d-4a08-9249-f0ecfca83706",
        "cursor": {
          "ref": "46a45545-5e7b-46a8-ac6e-5d5fd7ed62e4",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "564ccb6d-ba23-4b42-ad7e-9a4bf6ec2d91"
        },
        "item": {
          "id": "b22e2148-944d-4a08-9249-f0ecfca83706",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "3095598e-0688-450e-ab23-76b7f2524b15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b73aece-e304-4fd3-8751-59279b253f9c",
        "cursor": {
          "ref": "1ab981f4-841f-45ab-9b5e-157c5397d2d4",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "47ed21b6-1d7e-485f-b638-29c6354eafc3"
        },
        "item": {
          "id": "3b73aece-e304-4fd3-8751-59279b253f9c",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "844c0817-6c1c-4781-9220-dd3188d11944",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9713a66-4ac6-4d86-b41e-b5c0dc1051ef",
        "cursor": {
          "ref": "3e56bf9d-b47a-4127-b142-1d6616d2eef4",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "9f1c4d8d-f4cc-4fc3-bf09-e754a752ec26"
        },
        "item": {
          "id": "f9713a66-4ac6-4d86-b41e-b5c0dc1051ef",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "a875304f-8e47-4b7b-a928-9562483e90be",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 48,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cb26a4d-aea3-4860-85aa-81a53d88d124",
        "cursor": {
          "ref": "84cb50d9-be9f-4a13-9c39-31f985de5c84",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "d0be1c52-c6a1-4d85-a5a5-4d3e5fd7b928"
        },
        "item": {
          "id": "2cb26a4d-aea3-4860-85aa-81a53d88d124",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "d5bcb624-0288-4c6b-a50a-71316a54e900",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 93
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d520d460-0239-4079-a9c3-9bf8cfc2413a",
        "cursor": {
          "ref": "20fa7318-5442-4979-b1cc-f537fe41bf84",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "ce90026f-525b-46e5-a0bb-f0a9a7e4df0e"
        },
        "item": {
          "id": "d520d460-0239-4079-a9c3-9bf8cfc2413a",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "e454988f-e3c9-4f56-be9b-76276c399960",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bdc2d87-bb73-4201-b044-d9c60116b30b",
        "cursor": {
          "ref": "0005ac84-77a4-4bd3-8c8f-765c41a2ac2b",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "f040bd5b-e441-432b-92ca-9ff4c54db41d"
        },
        "item": {
          "id": "2bdc2d87-bb73-4201-b044-d9c60116b30b",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "004baba0-a7e2-4373-aa52-790d5e44bb88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97be6e19-6224-47e7-b503-e21cf816b3de",
        "cursor": {
          "ref": "854a70ed-ea42-43ca-af90-9d4e3dcc483c",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "33f16f94-5413-4e3d-bfee-42748449b878"
        },
        "item": {
          "id": "97be6e19-6224-47e7-b503-e21cf816b3de",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "64e04795-aecc-4bbe-b258-171f1eff6340",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8477d8cb-4656-4768-ba22-8f81e0f54bd4",
        "cursor": {
          "ref": "96dd1f98-463e-4fe7-be4a-4588e2d62704",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "2acd9910-a23b-4058-9241-ac7955d8c0dd"
        },
        "item": {
          "id": "8477d8cb-4656-4768-ba22-8f81e0f54bd4",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "e4428ada-e07c-465b-b070-4f5ef23f76d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d2f0bb6-cb44-4d43-a8aa-3e28cd92a1bb",
        "cursor": {
          "ref": "b9a43804-8359-4a7b-9da2-282faf105500",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "4cae73e0-5f67-4652-ac76-c370223d4423"
        },
        "item": {
          "id": "3d2f0bb6-cb44-4d43-a8aa-3e28cd92a1bb",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "2e8c079e-3758-4039-944a-02534b94564b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f28b11b-6b00-4867-aade-51c240db1bf3",
        "cursor": {
          "ref": "0287dcd6-c325-46af-ac6f-cdb3f50594a0",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "b34533d2-1948-4048-a9e7-c2564e52e97d"
        },
        "item": {
          "id": "7f28b11b-6b00-4867-aade-51c240db1bf3",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "cdfa4c83-abe4-4fb9-9402-ac45456d9c2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b96a325-7001-451b-b5fd-85dc21322923",
        "cursor": {
          "ref": "36a4b3b1-9093-45ca-bd72-65eeac16f41b",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "7187984c-916d-4a70-8047-495ebfaea93b"
        },
        "item": {
          "id": "1b96a325-7001-451b-b5fd-85dc21322923",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "4acfdb8d-9fe7-45b8-a466-64211e6189ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 98
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab3af118-9ea7-478d-b42f-6f7a155f5da4",
        "cursor": {
          "ref": "aafa47a7-2231-4696-9fbe-1d6ff12298b4",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "e93e15d3-d786-40bf-a272-a8d3d63a4ada"
        },
        "item": {
          "id": "ab3af118-9ea7-478d-b42f-6f7a155f5da4",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "5c073885-a9fc-4c50-992b-0b5c26c8525e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfc44fa9-34c1-46d2-bb6b-d45d4181342e",
        "cursor": {
          "ref": "bcb483da-7912-4324-8577-e74534534582",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "73dcfdb6-f258-49ac-ba95-cb1d2b6240e5"
        },
        "item": {
          "id": "bfc44fa9-34c1-46d2-bb6b-d45d4181342e",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "d308e9b0-80dc-4d92-ae1d-ad60a09fcc28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8459bac1-d473-49cb-8cf2-f87ef94b21b4",
        "cursor": {
          "ref": "f8824cab-38ab-4b10-b2d3-a85b674ff85a",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "81a49493-8a52-43b7-b60f-c4564be649e5"
        },
        "item": {
          "id": "8459bac1-d473-49cb-8cf2-f87ef94b21b4",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "4a611f1a-f7b4-428e-bec7-305df688db83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85fa4253-112b-4ae9-b104-0d81b2aaab40",
        "cursor": {
          "ref": "f6de6a1b-1549-4dba-a4f0-6d8fd116adcc",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "c7798f64-1d2e-4432-ad2f-cb232ce6e21e"
        },
        "item": {
          "id": "85fa4253-112b-4ae9-b104-0d81b2aaab40",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "74c6f79d-6f59-4967-a87c-0762613e6a10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9cc8938-baae-4fc4-9cc9-e1440c98f6a1",
        "cursor": {
          "ref": "39833ce0-cc4e-4554-919d-ed082b764916",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "04d5f192-df6e-4a94-a695-f5f4ac8e3011"
        },
        "item": {
          "id": "e9cc8938-baae-4fc4-9cc9-e1440c98f6a1",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "cd1d68aa-8789-41bf-b756-6e9551135223",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce0866d5-393d-441e-a7c3-0da802d460ea",
        "cursor": {
          "ref": "f5b28f72-9feb-46e6-b288-aa7ffe476f3e",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "f0766333-1f1b-4838-88fb-2be8776e4c35"
        },
        "item": {
          "id": "ce0866d5-393d-441e-a7c3-0da802d460ea",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "72ac5ccb-755c-438c-ab21-44a98455a502",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b58f25c-9fd6-433b-a0be-5d6fd720e37d",
        "cursor": {
          "ref": "ec88a75c-fb92-471a-81e1-95d1bda27681",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "7c294588-c4b6-4beb-81f2-10f6cb3e01f9"
        },
        "item": {
          "id": "9b58f25c-9fd6-433b-a0be-5d6fd720e37d",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "c0c05980-f7c6-4db3-9725-4cc9c7ee65eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68a384bb-a285-44b3-8aa2-508e80bc369f",
        "cursor": {
          "ref": "695cee0f-120a-48d0-86b4-b66efbcbc3ef",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "61d42dac-3810-4015-a1af-baf993c02ef3"
        },
        "item": {
          "id": "68a384bb-a285-44b3-8aa2-508e80bc369f",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "cc35f8e6-69ad-4cf3-9e0d-0d927e4c7701",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31fab3c7-8aba-49db-bedb-011e080aa534",
        "cursor": {
          "ref": "27c2e7b5-3caa-45c5-af95-378790f3d7f6",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "7c0eb998-bd72-428f-b2ca-438c9441009b"
        },
        "item": {
          "id": "31fab3c7-8aba-49db-bedb-011e080aa534",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "4e255b4a-1ca7-483b-8a91-44e78faacd4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5303162-764c-4126-ba23-f85ef771bcd8",
        "cursor": {
          "ref": "44a99dec-f490-4482-884a-9fb97ec03ab1",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "81a2bf2c-e4bb-4da5-bfc3-b6e131f61158"
        },
        "item": {
          "id": "f5303162-764c-4126-ba23-f85ef771bcd8",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "06a06a7f-918f-462c-8bb9-668b5e75c6db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2823cadc-6f5c-4817-9167-0978c156cf9b",
        "cursor": {
          "ref": "506f8eb2-6087-43e1-a874-fb7cd82eda31",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "e9f9f380-1325-42d0-8145-8a0be927ab79"
        },
        "item": {
          "id": "2823cadc-6f5c-4817-9167-0978c156cf9b",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "70285850-6fea-4677-8be9-3a6c20f12ef7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 75
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a03ab31d-f606-4cde-8937-05e64856673d",
        "cursor": {
          "ref": "0757f4c8-955d-4866-97d9-6c35a43206ad",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "8293f23f-8ec0-44b9-85cd-e45c92477dc0"
        },
        "item": {
          "id": "a03ab31d-f606-4cde-8937-05e64856673d",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "e0fccdac-fbbe-44b5-ae2d-473c7d4046da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c549393b-538d-4893-9e0f-4db3afeeaecb",
        "cursor": {
          "ref": "fdced500-d38f-4d0e-ba3c-56774aa978e4",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "0b63dab5-13d9-4b2a-abc1-716e6537ee56"
        },
        "item": {
          "id": "c549393b-538d-4893-9e0f-4db3afeeaecb",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "eee62064-f21e-426f-9266-2929aea46f92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87fd6073-cfb7-4b63-9fe8-5de761dce740",
        "cursor": {
          "ref": "b1f990f5-c337-457e-999d-7425a977fc03",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "24dbe88c-9b1c-45a3-afbd-232d5df7bfea"
        },
        "item": {
          "id": "87fd6073-cfb7-4b63-9fe8-5de761dce740",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "adee39e8-1f5c-49d9-b6be-5c9768717db4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8578a484-1901-448b-b2d1-c825aa2c8dd8",
        "cursor": {
          "ref": "07c07688-4a9b-44c0-87bb-5940d30d1f93",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "4ff83904-9f01-4db2-8124-263ad50f42a5"
        },
        "item": {
          "id": "8578a484-1901-448b-b2d1-c825aa2c8dd8",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "c5adfa79-fe01-4617-8c92-e7d08b76e233",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1fa41b3-f6fb-46fa-afe0-38231a7fb93a",
        "cursor": {
          "ref": "353806f4-0ab8-41cc-8765-272224045af9",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "b1c8ba4e-1ca5-4a86-8aed-22797323d65c"
        },
        "item": {
          "id": "e1fa41b3-f6fb-46fa-afe0-38231a7fb93a",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "85d3dcc6-f487-4a4f-aa0d-37a928fa531e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a28a8364-9904-46aa-9383-f9c6a3e3232a",
        "cursor": {
          "ref": "3bbded7f-6d08-498f-9f74-ecad71f235b7",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "47ab913b-7ed3-497d-9b8c-bd6c671c3faf"
        },
        "item": {
          "id": "a28a8364-9904-46aa-9383-f9c6a3e3232a",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "f9a2ec07-30ef-4566-b192-946accd269cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 87
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4da6b51b-1f53-4504-8de4-7697b8a467d6",
        "cursor": {
          "ref": "bc3e91c8-436c-4723-a902-9a86d0bf268c",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "0266dee3-a7f3-464d-b431-56497a1086c1"
        },
        "item": {
          "id": "4da6b51b-1f53-4504-8de4-7697b8a467d6",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "263b0634-4656-4ab9-83cd-6fd147e71e43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d150de1-6881-4a7d-9cb9-2b8c17475567",
        "cursor": {
          "ref": "55c3304b-791b-4f9d-87a8-b9967a36edba",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "9e8ecee6-7341-46de-9539-6f75eb8295d7"
        },
        "item": {
          "id": "2d150de1-6881-4a7d-9cb9-2b8c17475567",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "25018daa-3f95-44e2-a5d5-6fac7b3a74a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3c50e68-04c4-4f23-b0cc-bcf74b4e1e92",
        "cursor": {
          "ref": "4df1bc7b-e2c9-464c-b00c-9c1b86b7e327",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "d48e4fc1-311f-4e99-ac48-08ca7430286f"
        },
        "item": {
          "id": "b3c50e68-04c4-4f23-b0cc-bcf74b4e1e92",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "d5ffb0b7-68ef-4030-9e5e-8d8b572c0669",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "922a966c-bdbc-44d2-bfa9-9e951ec337fa",
        "cursor": {
          "ref": "5239cefa-c887-4d56-8f1f-d4d21958d6ad",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "23ba8da8-4c2a-40da-9ce3-993156533483"
        },
        "item": {
          "id": "922a966c-bdbc-44d2-bfa9-9e951ec337fa",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "3a8ccffa-78ac-482d-b8c4-c36f219fd305",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53583c20-0f06-4398-b1af-d4174ce03c45",
        "cursor": {
          "ref": "aaeeba63-defb-45b3-9635-ded10e2b87e2",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "ee002a77-012c-4611-8642-b248bbab8a87"
        },
        "item": {
          "id": "53583c20-0f06-4398-b1af-d4174ce03c45",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "61d623f8-3da5-4d13-8652-fdbaa8882257",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab33c785-3058-443f-b0be-db5de4cc778b",
        "cursor": {
          "ref": "f2981ebc-3cfe-4b64-8ce9-3ee9d23f570c",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "7dec0c59-cd78-4518-959f-a20b93e61b3c"
        },
        "item": {
          "id": "ab33c785-3058-443f-b0be-db5de4cc778b",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "99c0b36b-03b8-40d6-a74a-74d2fdf89081",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 97
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6f10abd-052a-45e6-9482-7a28fe77b3c4",
        "cursor": {
          "ref": "68ed112e-aca5-49b6-b093-33e8b9332f8c",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "13e189d5-c7eb-4b97-8d43-c508c4d0c71c"
        },
        "item": {
          "id": "e6f10abd-052a-45e6-9482-7a28fe77b3c4",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "ce3696eb-a74e-438f-b636-070cbc9e3704",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82c52a4c-b207-43ac-8200-efc5d3df1ab7",
        "cursor": {
          "ref": "4dd42fe0-fc33-446e-80e1-70d2cf2a8114",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "d37ec56d-8f4f-4389-9042-7f01051045fa"
        },
        "item": {
          "id": "82c52a4c-b207-43ac-8200-efc5d3df1ab7",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "3ff2cb46-3855-4f73-9851-9f6350381ad9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a5d45f6-341e-4c67-9d6d-8c10d3687618",
        "cursor": {
          "ref": "645f8806-2820-4f5d-b450-69405dc29cff",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "ffe7b070-12a2-4dd7-a0a1-c7e3c12a7dcf"
        },
        "item": {
          "id": "0a5d45f6-341e-4c67-9d6d-8c10d3687618",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "16820928-1142-404a-89ac-b8ee0d8aea88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2232990-e6aa-486a-ba5b-3b2a8a63af19",
        "cursor": {
          "ref": "45e6f960-31e1-4660-8652-6c6845e79b51",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "f14e104a-a132-4db4-bfd7-efc07f04d58c"
        },
        "item": {
          "id": "b2232990-e6aa-486a-ba5b-3b2a8a63af19",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "a484321e-0412-4225-9b44-dfa15e798d0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9eb8c7a8-d737-471f-ab4f-bb77fc7d082b",
        "cursor": {
          "ref": "770ad231-f974-49d3-8c8a-90ce3736c0a4",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "709b323f-5bb7-4534-a95f-d3f8cdd221da"
        },
        "item": {
          "id": "9eb8c7a8-d737-471f-ab4f-bb77fc7d082b",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "3036a2b1-d9a1-4e7a-bd9c-4a6354ae424e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ae74a9e-f6b7-45b5-81c8-ca10268202c2",
        "cursor": {
          "ref": "ab371717-fa92-45b5-81c9-9db665f3e045",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "44d5ecb8-0a3d-477b-a664-baf6feff3d5c"
        },
        "item": {
          "id": "8ae74a9e-f6b7-45b5-81c8-ca10268202c2",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "3bda68e0-23f4-49f4-af31-17ae4528ea22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac8696bc-f01f-47e5-a56b-2dea43d05060",
        "cursor": {
          "ref": "f97f4c48-102a-4478-90e0-6545f2c5c3b9",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "ec9181aa-9f14-40c8-8514-d96196e39294"
        },
        "item": {
          "id": "ac8696bc-f01f-47e5-a56b-2dea43d05060",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "454a6bce-40c0-426d-87ab-201dd8176be0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "511dd342-bf61-48f6-a5ed-e9c66f5d16aa",
        "cursor": {
          "ref": "8822b6fb-965f-40df-a0e7-94eb0f2ca107",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "40369fbf-e461-46eb-b05b-3a058018832e"
        },
        "item": {
          "id": "511dd342-bf61-48f6-a5ed-e9c66f5d16aa",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "0702904a-fdaf-4580-ad9d-df9e35e68c03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d1b50b6-f778-437b-934b-d65c909d9ed6",
        "cursor": {
          "ref": "1efc5220-cbf2-4466-888c-5109d5db097e",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "a3a47bac-016d-4cc6-b9df-a8ed74fc68aa"
        },
        "item": {
          "id": "6d1b50b6-f778-437b-934b-d65c909d9ed6",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "35131178-d191-453d-85bb-22115b777e2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "128bf062-50ae-4e3c-93f1-e24f45851e02",
        "cursor": {
          "ref": "eca23440-2ee9-4568-8c53-e9c35b8f8aa7",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "d3c2ab3b-bd54-46de-82e9-7ba5b7eaeefa"
        },
        "item": {
          "id": "128bf062-50ae-4e3c-93f1-e24f45851e02",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "1cc9987f-5062-44f6-b071-785f187aea45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5b86353-f6b4-422a-a916-c2692e364a65",
        "cursor": {
          "ref": "b66100de-1aea-4be1-80ce-f13ff5bbacf6",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "293d55de-1a7d-4cfa-884c-1301836f1271"
        },
        "item": {
          "id": "c5b86353-f6b4-422a-a916-c2692e364a65",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "2da269dd-98ec-4bfe-a00e-73b78c324e89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15bbb538-e694-45fc-8501-d7ea0bf43b8d",
        "cursor": {
          "ref": "944abcbc-ae78-40e2-b9ec-f1e56e65f54b",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "b19fb93f-6351-4817-b901-cd68b5836182"
        },
        "item": {
          "id": "15bbb538-e694-45fc-8501-d7ea0bf43b8d",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "aa529164-6215-4375-9b2e-8e8a00ccacee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f7aa369-77cd-4f2c-83ee-50e16e912ffd",
        "cursor": {
          "ref": "d51250ce-ae6a-423e-a0b1-98f32db8b467",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "4801709a-a9d7-4351-9cfb-8aedb1a20b53"
        },
        "item": {
          "id": "9f7aa369-77cd-4f2c-83ee-50e16e912ffd",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "1598f65b-d345-43df-a1d3-fa6082a84dc0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c98e0ef-cae5-4421-86d2-3fd09354e242",
        "cursor": {
          "ref": "1845dd8d-21f6-4da1-8ef2-08553ea99c0d",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "585f7b0e-b6c6-4fbb-bba5-a92c0b8374b8"
        },
        "item": {
          "id": "9c98e0ef-cae5-4421-86d2-3fd09354e242",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "335dc12a-a8f1-4c63-bfb7-064f022f3d24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e90598d1-3d4c-4f76-acbf-cc6cfbe5b817",
        "cursor": {
          "ref": "178a7b64-1db0-46c9-b1bc-f81e464b3c70",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "39a21042-47a5-43cf-b640-28a474ff9a8c"
        },
        "item": {
          "id": "e90598d1-3d4c-4f76-acbf-cc6cfbe5b817",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "55de628c-0ce1-4b29-944b-158b0f2069b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "188c160c-2c2c-4e06-a9c7-a111ec6b50f1",
        "cursor": {
          "ref": "a1daca36-8d9a-4a50-ad92-eeec9d1ba2f2",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "7f1b8fa0-ba00-440b-b836-dcf1b65fc949"
        },
        "item": {
          "id": "188c160c-2c2c-4e06-a9c7-a111ec6b50f1",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "5d18ec4c-90c3-4df0-be6b-dd05f2a1c8c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "154f0571-411b-4ded-94d9-f49cf1029ca8",
        "cursor": {
          "ref": "4c52429f-d3c4-4d84-9f14-7d5564d3b043",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "57a94ea6-3be8-4ac4-a3bd-26167d4f4c20"
        },
        "item": {
          "id": "154f0571-411b-4ded-94d9-f49cf1029ca8",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "afc82d59-3b9b-4031-9421-421219d79207",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e137fac3-6861-48b3-8830-37178fbc7749",
        "cursor": {
          "ref": "2f653313-c6f6-412f-a6d1-bc4834c5a8a1",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "d64344ec-54a9-4b9e-a1c2-1fceb4dea4e9"
        },
        "item": {
          "id": "e137fac3-6861-48b3-8830-37178fbc7749",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "7bd8ca3d-9b76-4c59-8c70-ab6a4f6703df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 116
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b78fed18-dda5-410f-9248-cefb14cc8873",
        "cursor": {
          "ref": "cc0d18a9-fb7e-4467-afac-3fe1cd1d6d90",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "f9e2d109-c8fa-4a21-89ed-c1b7c11e6866"
        },
        "item": {
          "id": "b78fed18-dda5-410f-9248-cefb14cc8873",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "e6d53f50-0e73-4a10-8b7c-6ed3c99d56a1",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 51,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d86ce9be-fcbc-49c7-bd27-f3aa92407a45",
        "cursor": {
          "ref": "a289c5ef-a7b2-45ec-a72c-5bb7e2ad3cdc",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "5e3a8880-20e5-4f4f-87a2-99d1ababb3c1"
        },
        "item": {
          "id": "d86ce9be-fcbc-49c7-bd27-f3aa92407a45",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "31e8cab2-9ced-43cf-95de-a4e5177d7b65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "57ae144e-c291-4bd1-a4b6-fc1e3dd399fc",
        "cursor": {
          "ref": "efff0ae3-b49b-4aab-99b3-740528fb4113",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "e6ffee04-f93e-4dfd-98ce-6aac3c1ecf99"
        },
        "item": {
          "id": "57ae144e-c291-4bd1-a4b6-fc1e3dd399fc",
          "name": "credentials_issue"
        },
        "response": {
          "id": "f539554d-4cf1-48a5-81b5-57fdd1fa3a85",
          "status": "Created",
          "code": 201,
          "responseTime": 11884,
          "responseSize": 1222
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "8938d3a2-10f8-4adf-a07c-57893b78bfc0",
        "cursor": {
          "ref": "7e0270b1-7410-407a-82ef-80408ec5c82e",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "1c070356-5cfe-43f8-991d-fed4ab0d0be7"
        },
        "item": {
          "id": "8938d3a2-10f8-4adf-a07c-57893b78bfc0",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "90933483-502c-4b35-bd50-50e363d50c01",
          "status": "Created",
          "code": 201,
          "responseTime": 11522,
          "responseSize": 1220
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f89329c-d316-4ef5-9182-452889e1905c",
        "cursor": {
          "ref": "a3f83a69-da10-4c03-9dfa-5db2f643cfb5",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "365e639c-3e25-40e0-b80c-f1cf4fec2011"
        },
        "item": {
          "id": "3f89329c-d316-4ef5-9182-452889e1905c",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "09e89731-7e81-45d1-8870-ee713fa00044",
          "status": "Created",
          "code": 201,
          "responseTime": 11260,
          "responseSize": 1227
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "82b7e8cf-158e-4f22-9ff9-124916255897",
        "cursor": {
          "ref": "bec98da1-d5cd-48c4-a9ca-8e30215c8a4e",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "57074916-6f56-4011-957a-1c364293567a"
        },
        "item": {
          "id": "82b7e8cf-158e-4f22-9ff9-124916255897",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "62cc60b5-2e6c-42c5-a08b-161f60dc23d1",
          "status": "Created",
          "code": 201,
          "responseTime": 11785,
          "responseSize": 1233
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6f506c9-6eab-4750-b7d8-062f1745c23b",
        "cursor": {
          "ref": "b6e7c9fd-0562-4839-9868-10bba97bf7e6",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "846d92c0-931f-4014-94bd-9ee2e0f87bb0"
        },
        "item": {
          "id": "f6f506c9-6eab-4750-b7d8-062f1745c23b",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "e81f24ec-c397-4c95-9db7-9b185d6e9926",
          "status": "Created",
          "code": 201,
          "responseTime": 11435,
          "responseSize": 1224
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "expected '2024-08-22T00:43:00Z' to equal '2006-01-02T15:04:05Z'",
              "stack": "AssertionError: expected '2024-08-22T00:43:00Z' to equal '2006-01-02T15:04:05Z'\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "967e80e0-d155-413b-b0ed-ffa035781617",
        "cursor": {
          "ref": "48b7cd65-2f26-48c2-abce-e59a8183ce6e",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "e0343f2c-5828-4ad5-b52f-52733c433e1e"
        },
        "item": {
          "id": "967e80e0-d155-413b-b0ed-ffa035781617",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "809ceec8-8505-42a3-9f74-8971b9d82a4f",
          "status": "Created",
          "code": 201,
          "responseTime": 11416,
          "responseSize": 1224
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb019be4-3f4f-4580-8283-d3221b2e6fd5",
        "cursor": {
          "ref": "fa7c8399-89b9-4b1d-8fdc-2fa78cd0cbed",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "402e4042-a8fd-4c31-8e59-9eb481108926"
        },
        "item": {
          "id": "eb019be4-3f4f-4580-8283-d3221b2e6fd5",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "f1904c39-4f9e-4000-a31e-7bca32a9ef78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 80
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06481f4e-78d5-4188-ace2-39b3c8b16720",
        "cursor": {
          "ref": "ce3fa08c-2ae1-4823-ad22-471ce63184ae",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "62cb5a2e-ec89-442a-8da3-41f4708b82ae"
        },
        "item": {
          "id": "06481f4e-78d5-4188-ace2-39b3c8b16720",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "2debcd3d-c755-454d-a354-d404e60b39fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05cc67b7-dc97-47e8-a198-2b972f506708",
        "cursor": {
          "ref": "5ed7acc4-c1cc-44da-8325-5e6332d826d2",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "f8cdd04f-7bed-43be-af38-9548180e95dc"
        },
        "item": {
          "id": "05cc67b7-dc97-47e8-a198-2b972f506708",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "88eb501c-524e-40ab-9d0f-68b881b5d700",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b5faf71-8108-4033-bdf0-0d4a752cfc15",
        "cursor": {
          "ref": "0e9dcc63-0e11-40fa-b482-2d60c54bf058",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "731ed429-56ba-4ced-80e5-559f2980497e"
        },
        "item": {
          "id": "5b5faf71-8108-4033-bdf0-0d4a752cfc15",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "9e6d129a-37b7-423b-8026-ea6e1a26a403",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75f06dda-5655-4de4-8861-e6f9ebcb8713",
        "cursor": {
          "ref": "640f54d7-1b26-4794-af15-c1b804c0937e",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "9fa93db6-a349-4cec-8fcd-0eaafc370fd8"
        },
        "item": {
          "id": "75f06dda-5655-4de4-8861-e6f9ebcb8713",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "05b6cb8d-eb27-4dca-8830-3706dec68ff6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31e4fbb6-75b9-48de-ab83-3fbb2650c507",
        "cursor": {
          "ref": "e226f441-a461-46c4-94e8-d3c4226b4221",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "540c4ae7-7856-4e20-9bd8-9f883a0138a1"
        },
        "item": {
          "id": "31e4fbb6-75b9-48de-ab83-3fbb2650c507",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "8874ee00-d9d6-47de-abeb-394d99cbf79c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "207dceff-9f1b-492a-9d4c-42157711e116",
        "cursor": {
          "ref": "e20ae191-dc9a-48a1-bfb1-c2adbaeacb48",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "0f1eff38-9a0d-4ecc-b340-06fd6a189c35"
        },
        "item": {
          "id": "207dceff-9f1b-492a-9d4c-42157711e116",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "ab13ae22-d2a6-494e-9d9d-187db6ef4d8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35d773fb-3cd4-472c-acd3-24e258062f49",
        "cursor": {
          "ref": "02349636-79d9-42c5-9d57-16bfbdc3d52d",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "782d6a30-3a3d-4f36-b77e-13b344e58858"
        },
        "item": {
          "id": "35d773fb-3cd4-472c-acd3-24e258062f49",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "dae8b371-a119-4be3-a175-8a4fbab260cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d7a10db-434a-45b0-a299-d710d6ad0642",
        "cursor": {
          "ref": "b27b93c1-2483-4608-a11f-a30eafaba962",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "d2ee5f94-35af-43d2-84f0-213a9df2fc44"
        },
        "item": {
          "id": "4d7a10db-434a-45b0-a299-d710d6ad0642",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "d4523616-93c0-4f1c-a91d-43e29a663f45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c82f850a-f079-4825-868b-aee89386dba9",
        "cursor": {
          "ref": "94877157-1f63-41aa-b9be-fca883a5a2af",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "97036dff-9b1c-4e23-b63b-b8ac37e7b84f"
        },
        "item": {
          "id": "c82f850a-f079-4825-868b-aee89386dba9",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "37155da5-fde7-4694-97c3-a38156b1e4c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65d933ef-7405-49ef-9c33-1048b1adb8a4",
        "cursor": {
          "ref": "340daf83-3fe9-429a-9fd9-217a6e6bb86f",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "5fea38aa-41ae-4604-b224-cda4a14827c0"
        },
        "item": {
          "id": "65d933ef-7405-49ef-9c33-1048b1adb8a4",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "fbe9d0a6-471e-4e2b-8ffd-35f0d3629770",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a333086d-a33a-44b7-87b4-ba02d28581ee",
        "cursor": {
          "ref": "4ad68110-8961-43f5-9892-bb3c3b08dbb2",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "9a88496a-f402-49f2-b5d9-cf17237a3e49"
        },
        "item": {
          "id": "a333086d-a33a-44b7-87b4-ba02d28581ee",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "e507562e-93b6-4295-b6ee-c09b358da549",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f80cb40e-002c-4cac-8c41-3ca03ca7b890",
        "cursor": {
          "ref": "25ab7803-65c7-4b41-9b0e-61d69f8e84f3",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "d2972a68-2b51-47be-a05b-1fc2b5f9bd53"
        },
        "item": {
          "id": "f80cb40e-002c-4cac-8c41-3ca03ca7b890",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "672ff590-1e5f-4c2d-9f8a-e906e0f18602",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd1a8717-930e-4f35-a4aa-ccf729ac645c",
        "cursor": {
          "ref": "eec2599a-3b65-48c6-971f-9fa123ea35f7",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "e5029ba9-a0f9-48ff-abcc-87e3f778ff29"
        },
        "item": {
          "id": "fd1a8717-930e-4f35-a4aa-ccf729ac645c",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "449599f1-49bb-4817-a8df-72a5590723ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1f79e33-7d88-4da7-bdac-f2d7817460c9",
        "cursor": {
          "ref": "4d475aa3-8b11-49f7-903a-4b320dbea044",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "6ee2d80e-216a-4df1-bc04-8196393b3e0e"
        },
        "item": {
          "id": "c1f79e33-7d88-4da7-bdac-f2d7817460c9",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "c37b5b29-fe73-42db-9fc3-ae012592d4a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c45f4278-cc18-49c9-8b4f-13a927016069",
        "cursor": {
          "ref": "118ac6dc-f728-428f-8861-a95075727e65",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "3c2d15fb-8271-4832-8ce8-d29c9b3e394e"
        },
        "item": {
          "id": "c45f4278-cc18-49c9-8b4f-13a927016069",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "f82f83ed-3bcc-4ac2-8161-bbb8619415f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c114593-605a-4e9b-9c99-6c3ab260859f",
        "cursor": {
          "ref": "06b656f5-98d3-4c78-97d1-83d3dcbb1573",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "74443179-d7d1-42c0-92a9-28a92218e32f"
        },
        "item": {
          "id": "0c114593-605a-4e9b-9c99-6c3ab260859f",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "3956b22e-5656-4708-8cb6-81415205862a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e858c0f-f936-4930-9928-1afed7810ff4",
        "cursor": {
          "ref": "ba5016cf-8121-40ce-acb9-fba5654a35a0",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "e5fa1377-57f0-4cc4-bfe1-24278f32defd"
        },
        "item": {
          "id": "6e858c0f-f936-4930-9928-1afed7810ff4",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "38858c77-0074-4a0e-ac8f-0ac65c5e35d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9515a08f-5080-4cc5-bcb8-38d81a2752db",
        "cursor": {
          "ref": "363180de-b347-4d17-99ec-eb9cfb121e38",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "24eef845-5f4b-4e24-9c4c-ddd58ff3e541"
        },
        "item": {
          "id": "9515a08f-5080-4cc5-bcb8-38d81a2752db",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "95270767-feff-4a1b-a79a-909aea7129fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 93
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56e0c96f-9add-4a38-9876-3da867318538",
        "cursor": {
          "ref": "b5b1690b-a1c7-49b6-b55e-c361ac34ea5d",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "b8285f2b-a78f-4e4e-84c0-032c71b6a891"
        },
        "item": {
          "id": "56e0c96f-9add-4a38-9876-3da867318538",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "e48d5adb-db88-4d0c-8fff-d5a4b6a32ae3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cd17a4e-a71e-475d-970e-800a642a5fa7",
        "cursor": {
          "ref": "571334bb-84fd-4bb9-9543-a7b071707cea",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "653c2355-308a-4cdc-a5cc-86d427bed5e0"
        },
        "item": {
          "id": "6cd17a4e-a71e-475d-970e-800a642a5fa7",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "56a810cb-292c-4f43-801f-98cb66fdadeb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d8e4ed8-dd77-4dd2-af72-dc33fbde7c26",
        "cursor": {
          "ref": "b9b908ab-ef8d-4ba1-b117-da15910fb0ee",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "4f8e9e41-5ce4-427a-b7be-1a03316ab8c1"
        },
        "item": {
          "id": "1d8e4ed8-dd77-4dd2-af72-dc33fbde7c26",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "ca4bffd1-8c25-4a51-af98-b7c038955073",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6becd19-615b-43ae-ab2c-42208e0439a9",
        "cursor": {
          "ref": "353df7b3-f318-46fa-8c6a-150aeaadc1ea",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "c4bbd53a-285f-4898-8d34-33c7d5015188"
        },
        "item": {
          "id": "d6becd19-615b-43ae-ab2c-42208e0439a9",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "b15a96af-cc3d-4604-bde4-5e9ecf47d32f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "733d5afb-a82b-4fd2-9616-285ede059033",
        "cursor": {
          "ref": "6233e833-d518-4ab5-86b0-1931f8dfe8d8",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "3b0af775-5185-432f-912b-371db4c712a6"
        },
        "item": {
          "id": "733d5afb-a82b-4fd2-9616-285ede059033",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "673ed720-31bd-4f62-9471-7bd15927f9d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3f0b677-69b3-42ba-9615-591ca7a1038a",
        "cursor": {
          "ref": "c950cad3-a811-4533-9cea-e9ef9bae705a",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "49ad5ea9-92c2-4959-bcd5-f173a05d22a0"
        },
        "item": {
          "id": "a3f0b677-69b3-42ba-9615-591ca7a1038a",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "76f0da2b-ecc7-4d9a-884c-3bb9666d445d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 108
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e98031d8-02e1-4e3c-a883-73d413859509",
        "cursor": {
          "ref": "c5c55c5b-ee07-455f-a857-d938249a00d1",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "3026e6d5-a711-40e6-bc55-560fd9b73e0c"
        },
        "item": {
          "id": "e98031d8-02e1-4e3c-a883-73d413859509",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "df406529-9f88-4580-ac04-f98f5f3407a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 95
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5cdf66bc-97dc-4602-ac8a-c1af32a74910",
        "cursor": {
          "ref": "41b5e287-4a7c-46d0-ada5-97d27ad67f9b",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "16752ea0-4db6-442c-bfd2-b3e7a4daf5af"
        },
        "item": {
          "id": "5cdf66bc-97dc-4602-ac8a-c1af32a74910",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "42b6e25d-1797-4481-90ca-95fcfca498eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0d8ee3a-6d11-42e0-b46f-5650667f07bc",
        "cursor": {
          "ref": "2283a16c-09f8-4d75-8523-584a22adc34d",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "755dce22-b8a2-4146-940d-54c2b3f17427"
        },
        "item": {
          "id": "f0d8ee3a-6d11-42e0-b46f-5650667f07bc",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "33ed9022-00cf-4b93-8e0f-d77e227893f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3e7bca4-29f8-4db7-9623-a0deb287b90b",
        "cursor": {
          "ref": "a588da31-7b61-4c61-86d4-77057630cb3b",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "51c54663-c52d-4185-9875-06ecd419e58b"
        },
        "item": {
          "id": "f3e7bca4-29f8-4db7-9623-a0deb287b90b",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "9fb68944-bcaf-4ce9-afe0-536de73c4fb3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ae0c1e5-d856-4a55-b8b5-71acac3aa842",
        "cursor": {
          "ref": "69c8a352-12cc-48a1-b036-0f02e4822bd3",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "5786c4ae-234b-47f0-b240-10de497dde66"
        },
        "item": {
          "id": "1ae0c1e5-d856-4a55-b8b5-71acac3aa842",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "0cedf1ca-bf22-499a-99c7-162c65ffb533",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec23a976-8e9f-48fe-aac6-912e0fdcc996",
        "cursor": {
          "ref": "871cde42-9bf0-440b-a0ac-746f04404b83",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "8d5d6fc5-4636-464f-b652-a6ac41baa74e"
        },
        "item": {
          "id": "ec23a976-8e9f-48fe-aac6-912e0fdcc996",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "3ef55633-f586-4133-9a28-76790ba3e26d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abf74861-28fe-401c-8bb8-0f2204bb0c81",
        "cursor": {
          "ref": "4bb20a9b-e6f9-4f2c-a14b-32b0ba050e13",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "a99dee35-3cb7-4455-ac43-87279122e180"
        },
        "item": {
          "id": "abf74861-28fe-401c-8bb8-0f2204bb0c81",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "3ef0f5f7-11bf-4dfa-9417-d0e73d3f05aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35895017-a68b-4a13-8841-ec0c7d61743a",
        "cursor": {
          "ref": "b9997f96-aa0e-48aa-9835-60857f9f87dc",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "2388f63a-de30-4889-ba4b-dc771a0ecb98"
        },
        "item": {
          "id": "35895017-a68b-4a13-8841-ec0c7d61743a",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "acb75bf0-9a7b-4864-a9bb-59ea453dbafe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a89f2be-5b1d-488f-ae31-0091cb3f836c",
        "cursor": {
          "ref": "a4ea534a-68ce-4573-b2be-ac86b52b5b7d",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "cb6e2155-f8af-4d3e-9268-f585f47797a8"
        },
        "item": {
          "id": "9a89f2be-5b1d-488f-ae31-0091cb3f836c",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "d116c2f8-8a6f-4b71-b544-0407b32e28ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe4f6161-89f2-4831-9da1-4871a533fe82",
        "cursor": {
          "ref": "668772ed-85cc-46ff-95c1-95621ba279e7",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "ad2a8532-32c7-49e6-b4bb-a537bcc92c58"
        },
        "item": {
          "id": "fe4f6161-89f2-4831-9da1-4871a533fe82",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "9d624077-2100-498d-8eb8-95786c51ccb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa68d56f-ad3b-4e5c-a385-382cc584e9b8",
        "cursor": {
          "ref": "7527472b-03c1-4d0e-addf-7278e7c66de0",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "c6065c1e-b7c6-4215-8aa2-09e877fc9488"
        },
        "item": {
          "id": "fa68d56f-ad3b-4e5c-a385-382cc584e9b8",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "7f26ca3a-2ca9-488d-b1bb-38bea75dc4ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d169ae3c-91ff-4562-8987-7025874768d1",
        "cursor": {
          "ref": "40f5447f-2473-4976-8278-8eee291ea78f",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "61d03a6d-f44c-4cf0-a19c-7cee31d24c5a"
        },
        "item": {
          "id": "d169ae3c-91ff-4562-8987-7025874768d1",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "81125d51-8360-4dfc-916c-a97d48bdcba2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e3aead8-09e0-4ffd-9402-4c8a46027670",
        "cursor": {
          "ref": "9d04a6a9-df01-4756-a989-7439124d80fe",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "34ec44a3-5718-4da3-855c-4775b6153a0b"
        },
        "item": {
          "id": "7e3aead8-09e0-4ffd-9402-4c8a46027670",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "511d49b1-0c7c-4d12-87f1-2119acd99380",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 46,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97ee82a3-4ebe-4417-bad3-515333a50fc3",
        "cursor": {
          "ref": "ed94d7bb-987d-4615-9044-72cea89f639d",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "a25e68d0-4453-42d4-89b3-517d037dada2"
        },
        "item": {
          "id": "97ee82a3-4ebe-4417-bad3-515333a50fc3",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "12080e2e-fc2d-4dcd-bb99-5ae2f9ead868",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 88
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33b3747b-61cd-4e92-8beb-87ddedb26373",
        "cursor": {
          "ref": "a09179cf-af60-4bea-990c-9e85ceef504d",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "4434c910-9c6e-4386-a516-53a1880d34f5"
        },
        "item": {
          "id": "33b3747b-61cd-4e92-8beb-87ddedb26373",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "67eea8c5-bbf2-4261-8ab3-c82893da09a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90b9f315-1d35-4dc2-af12-e84ddb29f455",
        "cursor": {
          "ref": "46589763-2121-4261-be16-7c72758b9451",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "3fb601bf-353e-4f78-aa39-bf1c9181caa6"
        },
        "item": {
          "id": "90b9f315-1d35-4dc2-af12-e84ddb29f455",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "9d826d9f-8103-406b-a2e0-80e85f40ecd7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd5d8d21-9aa3-4ee0-b139-6aa0ccdabe20",
        "cursor": {
          "ref": "28a577b2-a632-404d-86e7-c578104bc10a",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "41b547a7-1969-45fc-be2c-0c1412b5928d"
        },
        "item": {
          "id": "dd5d8d21-9aa3-4ee0-b139-6aa0ccdabe20",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "1c578464-c168-4fcb-9a5f-31964dc42bb8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcc8dc91-f79f-4add-85d1-a6923c92e91e",
        "cursor": {
          "ref": "38ef9b62-8df6-4de6-996b-b502259a93b8",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "7d1bdc5b-2c5e-43b2-8425-bc243750bb79"
        },
        "item": {
          "id": "fcc8dc91-f79f-4add-85d1-a6923c92e91e",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "378dc278-05f4-444d-ac06-61b633f5e360",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be6d3c23-2161-4847-a297-71f65c0037b1",
        "cursor": {
          "ref": "d0fe4ec0-e261-4d03-9d41-2a2f523866aa",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "934020ea-1ef3-4bac-a60d-073e2ca027b4"
        },
        "item": {
          "id": "be6d3c23-2161-4847-a297-71f65c0037b1",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "e6852b3d-2817-4acc-87fd-1978af165dd3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0a3a63c-b40a-41c7-902e-5bdd15797525",
        "cursor": {
          "ref": "763d75cf-b1c9-4e3a-b9e3-224f025e7be6",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "da5dd10c-005c-43f4-914e-0f98b6b5d968"
        },
        "item": {
          "id": "c0a3a63c-b40a-41c7-902e-5bdd15797525",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "75db69c2-cedb-4a78-b95f-03d606b8d94a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 99
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1df987e9-e9b0-4f6b-98ec-6f6883aff2d3",
        "cursor": {
          "ref": "c5b783bb-dc5b-4790-9d41-09bbfec0957c",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "07b3de49-fa8f-4064-924b-472b733346e5"
        },
        "item": {
          "id": "1df987e9-e9b0-4f6b-98ec-6f6883aff2d3",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "fa0115f3-ed8e-47da-9431-ada5828bac65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4886ea16-a652-4b1a-b1bc-9005338878dc",
        "cursor": {
          "ref": "3f9c9e28-f277-4766-add9-2d42e8d5016a",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "882ffcbf-7cac-487a-bc98-167ebc9b99cd"
        },
        "item": {
          "id": "4886ea16-a652-4b1a-b1bc-9005338878dc",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "66d37fdc-e8d5-4a64-aa47-242c9ebdf4e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ab9d512-01cb-4acb-b8ef-7f567bd64504",
        "cursor": {
          "ref": "4b55683b-cdf8-4f8f-8083-b322dc95ffb7",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "c9b5b958-c3bc-4a40-a9ac-fadcdb980eb1"
        },
        "item": {
          "id": "9ab9d512-01cb-4acb-b8ef-7f567bd64504",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "28061ba3-2c7e-49ec-8eda-8b3a476a7538",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "041c6091-f84e-4fd8-ab3e-85efeddbc7e5",
        "cursor": {
          "ref": "d80fbe8a-4a87-4827-a83e-8cb61876f929",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "b4c3e90c-35f0-412f-ad43-19228e39845e"
        },
        "item": {
          "id": "041c6091-f84e-4fd8-ab3e-85efeddbc7e5",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "b179dd13-f81f-4485-a8df-50e8521086c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "895234eb-8aac-4a33-88c3-4a0c2299f729",
        "cursor": {
          "ref": "1e8fe2d1-f7c0-4d41-9b9f-92a316525fed",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "cfe3e148-8d26-457f-af77-1b55b70096df"
        },
        "item": {
          "id": "895234eb-8aac-4a33-88c3-4a0c2299f729",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "40789180-7767-45e4-bad1-50df73813bc6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f009767-1781-4de7-80b8-06810aad36f3",
        "cursor": {
          "ref": "c20cc896-fa81-4848-a3ff-396caae95c95",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "c927d691-3dee-43b4-9a5d-69b9bbaef057"
        },
        "item": {
          "id": "0f009767-1781-4de7-80b8-06810aad36f3",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "3711dbf4-233b-4fca-870f-a08c46c2673d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "651cd975-5ca5-4b1c-bd31-5603226a2271",
        "cursor": {
          "ref": "1ece2d36-dd32-4f4d-b96d-c04cdfe21a01",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "09244fa5-8021-49c6-a7fa-9e3135a5b14d"
        },
        "item": {
          "id": "651cd975-5ca5-4b1c-bd31-5603226a2271",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "b872404e-b406-4fe7-9a5c-612f42ffcd85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8eb28847-4288-4460-961c-ba96da3b6b24",
        "cursor": {
          "ref": "d60c581d-e592-4b02-9a7f-2f75ae97ca8c",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "9066ea8a-85c9-45a8-b9c4-446934b76ab5"
        },
        "item": {
          "id": "8eb28847-4288-4460-961c-ba96da3b6b24",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "49ab53ea-dcb2-44fa-be86-72e0785f0a22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "904e2bdc-199e-4d01-8b82-229b8cb7c18b",
        "cursor": {
          "ref": "2f38ed77-66ef-4294-82a6-d1c7b1c3013a",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "2fc8f0b8-c03b-4359-8c0b-b189a085bc9f"
        },
        "item": {
          "id": "904e2bdc-199e-4d01-8b82-229b8cb7c18b",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "e749c8ff-a870-49ec-abef-22129b22df07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03082128-4f50-4a13-a6ed-e53cd16f48e2",
        "cursor": {
          "ref": "c555a7fe-bd24-4d92-a465-c9072bed4d7d",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "d63538ac-8847-44f9-b5b4-5b2ac1560cd9"
        },
        "item": {
          "id": "03082128-4f50-4a13-a6ed-e53cd16f48e2",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "1d4bd607-5a93-47a5-8506-9b7e8200d11c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4f68576-3103-4125-a5f2-9e980b54afe9",
        "cursor": {
          "ref": "030ca2eb-bc7f-49cc-b91c-e07adf51000e",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "5f50febb-18d2-4c2e-bde8-576e0054ec7c"
        },
        "item": {
          "id": "a4f68576-3103-4125-a5f2-9e980b54afe9",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "f19c8f8d-6e21-4087-9fb5-c703c587958d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "832ea309-18de-4061-9894-1ac6fe874427",
        "cursor": {
          "ref": "e998233a-72fc-463f-8a2c-dd4ee4726a00",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "8b8c6fa4-fa2d-4533-88bf-66673b888b53"
        },
        "item": {
          "id": "832ea309-18de-4061-9894-1ac6fe874427",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "c26d4047-2578-450b-8303-a84c9d2d3e2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1920c05d-a7fe-4179-a52c-98d650696124",
        "cursor": {
          "ref": "e4798c6e-52e7-4650-8d62-35cb5f647fba",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "c9891432-4149-446a-b094-e90728eaeefb"
        },
        "item": {
          "id": "1920c05d-a7fe-4179-a52c-98d650696124",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "f1761cc3-1718-4be3-badf-132219f38d4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "951039bb-27e9-4014-a39d-b9b6979e1ac9",
        "cursor": {
          "ref": "c4b3e3be-2c41-40fa-8aff-1cad74e6e665",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "aec734b6-34a5-4c7c-87c8-aeec960e7133"
        },
        "item": {
          "id": "951039bb-27e9-4014-a39d-b9b6979e1ac9",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "e52ecca5-07c3-41fd-980a-475d782a159d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c670f36-da59-4777-89e7-430053fd63f0",
        "cursor": {
          "ref": "a6a42952-6dd7-4493-8ab6-3b69b86680df",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "289aa5f8-17f5-4e23-8a0d-86c05197750a"
        },
        "item": {
          "id": "7c670f36-da59-4777-89e7-430053fd63f0",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "25ac170b-cc7a-48a8-b78a-b20718b4f030",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e961cb0-c795-41ad-8856-b0bb9c1c4581",
        "cursor": {
          "ref": "179ce621-ecf9-48b1-a871-dc136daa1d97",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "067f986e-4f4a-4677-8474-4511118a7270"
        },
        "item": {
          "id": "3e961cb0-c795-41ad-8856-b0bb9c1c4581",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "7dda2c00-e1f0-4dd2-9c59-d2f755a2661a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 95
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7da914d7-077d-42cf-bd7f-e8804bbac6dc",
        "cursor": {
          "ref": "d6275063-eb97-4e65-88d9-be735489c7c8",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "aa790278-757b-4901-9769-9c265a4b723c"
        },
        "item": {
          "id": "7da914d7-077d-42cf-bd7f-e8804bbac6dc",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "8685fcdf-4eff-477f-9bf0-35fd777ff18c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e9caa1e-c1f1-4182-ab81-e5d4fd85d4f0",
        "cursor": {
          "ref": "3fd7c71b-ba28-45cc-aecb-60fcf70ffb5f",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "972ba9df-25d2-461d-bba0-7c185e44a764"
        },
        "item": {
          "id": "0e9caa1e-c1f1-4182-ab81-e5d4fd85d4f0",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "dde7cd5f-378f-4682-a194-39276677f1df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2a5fb90-9325-46fe-903b-e56db099ae11",
        "cursor": {
          "ref": "ca21f9dc-4663-48c7-8e83-bcfcfb910b95",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "b774d492-6b9f-47cb-835e-170e94f9cf36"
        },
        "item": {
          "id": "b2a5fb90-9325-46fe-903b-e56db099ae11",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "70f05640-d116-4caf-a365-5f7c6402f962",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a66cf332-0bb0-4407-8551-102b7fb25078",
        "cursor": {
          "ref": "61d800a1-d7de-4c89-a7e9-5cf9225efd0c",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "563954c8-a619-4632-b3e3-e1ba69040108"
        },
        "item": {
          "id": "a66cf332-0bb0-4407-8551-102b7fb25078",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "1453cbb9-43c1-4c54-b365-2dc45ab10646",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "013fb1a5-9397-4a9e-bcfc-a71210066deb",
        "cursor": {
          "ref": "0d791d12-1791-4eef-8ad1-78f52b14fc17",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "a580b121-a869-4cd6-bf7e-380e5f50e330"
        },
        "item": {
          "id": "013fb1a5-9397-4a9e-bcfc-a71210066deb",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "b3047ae7-acc4-47ce-9035-3d9e1563e593",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51e48744-ec45-4076-b05a-0efee3dbf385",
        "cursor": {
          "ref": "9b180311-7748-4aff-8448-e64e1860bf3c",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "5ee0a478-3e81-43e3-9918-f05147cdbe5b"
        },
        "item": {
          "id": "51e48744-ec45-4076-b05a-0efee3dbf385",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "b9207e65-d042-40d1-b3e2-d9d92506f9ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f594ff12-daad-4816-8986-4e4d563508ef",
        "cursor": {
          "ref": "39ad79ac-2ceb-4aff-8209-a56c5f08843b",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "3b83a9b2-7ab5-41cd-b91d-07a97d7ff70f"
        },
        "item": {
          "id": "f594ff12-daad-4816-8986-4e4d563508ef",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "909cdc8d-b422-44b8-b716-1663b631bdde",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e8ea432-b25d-4836-a322-ea525c4d9548",
        "cursor": {
          "ref": "e95187ac-b600-4c9e-a506-d3a62f5c779a",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "a55cab25-f446-4d64-9fd9-2350384b1928"
        },
        "item": {
          "id": "5e8ea432-b25d-4836-a322-ea525c4d9548",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "d2bda6cd-2b4c-447f-b870-f1e3fd27f916",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0ac7f55-06a2-44ae-9ba6-7e5d202bbc84",
        "cursor": {
          "ref": "dc2435cf-f6f9-498d-b41f-6ebe508d4588",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "f0bdcb02-b838-404e-90d6-56538643a264"
        },
        "item": {
          "id": "f0ac7f55-06a2-44ae-9ba6-7e5d202bbc84",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "eb5456ce-eb54-4c64-97f0-105c15f8cc12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "117d449b-46e2-4cde-b746-197a35a077ff",
        "cursor": {
          "ref": "1cf7af0f-823f-4478-8b28-6f11086b8b76",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "588a9577-22c9-4a95-91ab-0a98d44dd620"
        },
        "item": {
          "id": "117d449b-46e2-4cde-b746-197a35a077ff",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "5cbdd524-b73a-415d-a529-7539e13b677c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56e64817-3543-439b-9a00-9d6f0b8c1662",
        "cursor": {
          "ref": "0d33ded1-e965-43a6-9aaa-5f9560f92ad0",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "d704b69f-fb0b-42f9-831f-333787afd224"
        },
        "item": {
          "id": "56e64817-3543-439b-9a00-9d6f0b8c1662",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "18b00d31-cc1a-4123-9f66-ececcf227fe4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff5d95fc-0a8c-44ab-a95d-26d6f37c0471",
        "cursor": {
          "ref": "de118937-923c-4ecf-a3ae-6ec8a4ab60c8",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "ffb10edb-42ee-4cc2-9214-2c56788ac9d6"
        },
        "item": {
          "id": "ff5d95fc-0a8c-44ab-a95d-26d6f37c0471",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "de47dad8-dba3-47b6-a1a6-705d0ebadfcd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 97
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af1f3e36-441f-4f67-8b1e-4fce3136b92a",
        "cursor": {
          "ref": "797c4cbb-854d-4180-b389-f063d695810e",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "981e54fe-ba38-4a66-8a6a-13ef046634b2"
        },
        "item": {
          "id": "af1f3e36-441f-4f67-8b1e-4fce3136b92a",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "98e98c9d-d2fc-4fa6-bdb4-6405c0ba283b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6592c4dd-3b19-497d-bc74-2a1d2c21d326",
        "cursor": {
          "ref": "da7be4fb-d556-4a72-866c-5c74ec42dcb6",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "ff28082e-03ea-41fc-ab7f-f9be71376954"
        },
        "item": {
          "id": "6592c4dd-3b19-497d-bc74-2a1d2c21d326",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "73cee678-4201-409d-8a2c-97bbc591a2d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b475bbf-eb3f-4f53-ae45-a243b455b0c9",
        "cursor": {
          "ref": "8b2c7a19-b2a0-4150-ba99-0b131d239417",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "49b10f3f-e58a-4068-95c3-e726333526f3"
        },
        "item": {
          "id": "3b475bbf-eb3f-4f53-ae45-a243b455b0c9",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "13d38d8c-08be-4b87-bea0-2afdbb2fde34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98e21ae8-c6f2-478a-93c8-0db97bf6903a",
        "cursor": {
          "ref": "bae31893-6d22-4a72-aeec-ddc24148a24e",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "3ff3a9b0-0e23-46b4-98e3-68511ccd8425"
        },
        "item": {
          "id": "98e21ae8-c6f2-478a-93c8-0db97bf6903a",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "8f1dcb01-7cdc-4ca9-9f8e-57bebb892bf2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dce72674-1342-43ae-8f2e-53a618bb95a0",
        "cursor": {
          "ref": "dc413b2f-fa6f-470f-9cc3-c80c0d7ef074",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "043e7067-bedd-4bcd-8c75-6aa34207c86d"
        },
        "item": {
          "id": "dce72674-1342-43ae-8f2e-53a618bb95a0",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "a11beb40-c804-4f09-a4e9-88b46c6020ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "088c842a-f67d-4736-8b51-ef9f4629e1d2",
        "cursor": {
          "ref": "f7af9282-6ba7-4c5b-80a0-e4bc3ea47fec",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "a1f9ec80-ef77-47cc-b08f-da8390e9e6a6"
        },
        "item": {
          "id": "088c842a-f67d-4736-8b51-ef9f4629e1d2",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "560809c5-9860-475a-8e01-72bb3deb74a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74504161-bd28-4e5a-aa9e-ab16a08ec6dd",
        "cursor": {
          "ref": "24b5ea2c-ae9e-465f-97e9-9ad32436cd08",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "c45de43b-2455-4df1-96a4-41908b88aad2"
        },
        "item": {
          "id": "74504161-bd28-4e5a-aa9e-ab16a08ec6dd",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "b683ff4b-2507-4aa5-af3e-308cb3a0b55e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61591e45-4df7-4d26-a371-c6951424703a",
        "cursor": {
          "ref": "557aeb90-fd1d-410d-bbde-7031617451d6",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "94f265ab-00bf-4480-bd9d-9e81e52ea6c0"
        },
        "item": {
          "id": "61591e45-4df7-4d26-a371-c6951424703a",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "d74c6d8a-750b-41c6-8bfa-6c1b54effd01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c59a3ec2-709c-461a-9e42-e9429d214e1e",
        "cursor": {
          "ref": "2872b100-46f2-4c97-9279-44aecf3f5fb5",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "14810f50-3422-4443-a36e-21a5c166eefb"
        },
        "item": {
          "id": "c59a3ec2-709c-461a-9e42-e9429d214e1e",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "e52b2fc5-05f1-4a89-816f-32027b8ba98c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dff66d5c-8b73-4556-9f39-e56bcd6766e8",
        "cursor": {
          "ref": "b3b1e36c-a761-4c3a-8fc1-de7c810f33e3",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "205554f0-bf81-4915-85a6-00f5f6fc0454"
        },
        "item": {
          "id": "dff66d5c-8b73-4556-9f39-e56bcd6766e8",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "adec8ccf-81d0-4658-af4a-4b8937de8be3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4ebd5a3-4b09-400a-98db-c8770c40a2a1",
        "cursor": {
          "ref": "f249be3b-26a6-4957-a91e-fe9c944b394b",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "9fc5d0e0-ce07-4a1b-a171-cf8b34c8a85a"
        },
        "item": {
          "id": "d4ebd5a3-4b09-400a-98db-c8770c40a2a1",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "5c0a2fcc-68ca-4d10-bf67-28f87a50d180",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21b2ebd9-aa0e-4ab4-a31a-e7cb24f95d82",
        "cursor": {
          "ref": "e3e29d7a-c115-4a72-9a10-b6859b60b3a2",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "8ce3af66-932d-4729-a102-ccfbeb8275a3"
        },
        "item": {
          "id": "21b2ebd9-aa0e-4ab4-a31a-e7cb24f95d82",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "9c890743-c98b-4414-8e37-408d93057ab8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fe31a53-b292-4226-8c16-8afb91800bb0",
        "cursor": {
          "ref": "0fc76117-a90a-472d-8e01-e033c252135d",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "df83244d-d64a-49f3-b9c3-639871095a48"
        },
        "item": {
          "id": "9fe31a53-b292-4226-8c16-8afb91800bb0",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "17640f62-ee27-48a4-8c02-cab36ff8baed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96cad2c4-52b3-478f-b768-f1deecc01b38",
        "cursor": {
          "ref": "8057e0dc-4102-403c-a81c-f54b11bb31bf",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "0b0f8846-9617-40b3-8bbb-873a80c471e9"
        },
        "item": {
          "id": "96cad2c4-52b3-478f-b768-f1deecc01b38",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "c917fe4d-33c1-4ca5-a82b-8e9dc7f8f632",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d58b41dd-d364-473a-a95e-c858455ca63a",
        "cursor": {
          "ref": "1aca4809-7964-487b-96e8-9939b4a50ea8",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "26c1ac59-2332-4712-836a-a2bf4d6e6083"
        },
        "item": {
          "id": "d58b41dd-d364-473a-a95e-c858455ca63a",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "a717738f-a608-4cda-9710-08b7cd748c53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fb381d7-f5ed-4546-9a6a-8172ce65939d",
        "cursor": {
          "ref": "bdde13dc-3219-4fd5-8331-0da668e2418a",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "ed89e467-ec75-4c80-a447-7a3d0e43429d"
        },
        "item": {
          "id": "5fb381d7-f5ed-4546-9a6a-8172ce65939d",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "fe27c1fc-9ddd-4b85-a20b-67dfcf4d0fd1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0844c66-2de4-4ee0-9891-831b085451f5",
        "cursor": {
          "ref": "b7f63267-ebf1-4b4e-ab90-5cb08087b355",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "a1605260-3b0f-4367-b2df-dfee3b920ca8"
        },
        "item": {
          "id": "a0844c66-2de4-4ee0-9891-831b085451f5",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "f77b2326-6115-4753-863e-d17564166de4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 131
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a2b1a2e-24f9-4514-b608-0e08525f5ccf",
        "cursor": {
          "ref": "4b96d1e6-8599-4a99-90f7-34413441d14d",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "300288de-f1a3-417b-87f1-4b4515446283"
        },
        "item": {
          "id": "6a2b1a2e-24f9-4514-b608-0e08525f5ccf",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "2a705f0a-2854-4ba5-bf80-053e295c8cd4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 108
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a7d1ba9-8971-4ada-9131-a6116fae1528",
        "cursor": {
          "ref": "5073df2d-8643-4405-9772-3b26a1be6c46",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "f701c2d4-d367-458c-b37a-8d91e2a82e6a"
        },
        "item": {
          "id": "2a7d1ba9-8971-4ada-9131-a6116fae1528",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "a4c295d6-202a-45c9-902f-44dbd7054b58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be84e164-9d17-4ed3-bd3c-2af76fb25353",
        "cursor": {
          "ref": "413388bc-e2d1-4e78-8926-dcef1a931329",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "f9200c85-90a9-42f5-82c1-42772de1a836"
        },
        "item": {
          "id": "be84e164-9d17-4ed3-bd3c-2af76fb25353",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "308fa13c-496b-42d8-bbdb-29acaf2842fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "786a4a22-e004-4de7-a024-ddebe1484345",
        "cursor": {
          "ref": "0ec796a7-6cdb-4a50-aa9b-3215e77a9dd2",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "7ab40bd2-e0c7-4f7e-9e35-d5abeba30649"
        },
        "item": {
          "id": "786a4a22-e004-4de7-a024-ddebe1484345",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "2e6b66c1-5314-4697-8292-cd14716b3685",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d28cd319-5185-4e90-adcb-a568b16fdf93",
        "cursor": {
          "ref": "1e6a427b-3951-498e-837b-12e121f484f5",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "a0be552d-3617-4f75-be92-51d2970a001e"
        },
        "item": {
          "id": "d28cd319-5185-4e90-adcb-a568b16fdf93",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "a7e7dc50-7265-4db1-8a79-00606c24a56d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45921a63-7844-45f2-a31d-b828116957d4",
        "cursor": {
          "ref": "a6882a0b-7014-4d92-9722-6448f3f6c9f2",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "cc457e80-fdf1-4d31-ab42-b267f675a93a"
        },
        "item": {
          "id": "45921a63-7844-45f2-a31d-b828116957d4",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "7b5a8703-1dd0-45d9-a1da-39d9e863c1bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3634c46-8737-4d13-8968-3950a04cd65b",
        "cursor": {
          "ref": "a205597d-1781-4d61-a6f4-8dadd48807bd",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "1855daec-b6ea-4b12-a6b1-674861c44e1c"
        },
        "item": {
          "id": "a3634c46-8737-4d13-8968-3950a04cd65b",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "84bbffb7-7f0b-4a9d-81f3-bd8ae184d4fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80540d1b-d58b-4c30-b3c7-1ffb8b0e4cf2",
        "cursor": {
          "ref": "b5f5ca72-81b4-412c-86aa-fb045ed8d59b",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "d1afa434-2363-4a63-8605-12945d516b64"
        },
        "item": {
          "id": "80540d1b-d58b-4c30-b3c7-1ffb8b0e4cf2",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "6a7e10f3-bd99-435b-9d55-739c8863c170",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03ab3efe-93b8-4f87-a988-7f42f77e80ad",
        "cursor": {
          "ref": "488262ea-9ad9-4c0c-89fa-36e7580c5bb1",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "d813665c-6e64-4a57-89d2-373c70309b78"
        },
        "item": {
          "id": "03ab3efe-93b8-4f87-a988-7f42f77e80ad",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "64fa33ac-fa4f-4105-8f2e-f8cadc343aeb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7dee56d-3373-4678-bdbd-66556be75507",
        "cursor": {
          "ref": "f59be03f-10ca-4f22-bc61-21db10bc2846",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "595bc0fb-9c42-4fa0-808c-e411bbaa47fb"
        },
        "item": {
          "id": "d7dee56d-3373-4678-bdbd-66556be75507",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "d4596381-7448-4ebb-9924-50419495d1c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7c64936-768a-4a02-a863-1c27a83a8637",
        "cursor": {
          "ref": "4e9db069-53f6-4ebc-ba13-2941ce1af8c5",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "c946d751-651b-4608-89ce-8c6143f2d93b"
        },
        "item": {
          "id": "f7c64936-768a-4a02-a863-1c27a83a8637",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "5fabad77-39e2-46ab-bd3a-8409b5d64637",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdba18b2-8290-41ee-a86c-a40bba3b10ab",
        "cursor": {
          "ref": "1fcee179-859b-470a-b4f6-a1d01125e846",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "c100731b-87d9-42e9-938b-397eb28fd9a7"
        },
        "item": {
          "id": "cdba18b2-8290-41ee-a86c-a40bba3b10ab",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "ef941dab-14c2-47d3-9439-76918d1f7fad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81dbe79c-6f39-4fbc-9f51-faadd4250b11",
        "cursor": {
          "ref": "4ec4bb37-58d4-48e8-b840-59d594c0d8ba",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "e73251a7-31ca-47b1-b3f4-1ce867c8e01c"
        },
        "item": {
          "id": "81dbe79c-6f39-4fbc-9f51-faadd4250b11",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "a849dc66-2dba-4cba-a42d-d62b2e7bb4e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c3417c2-a28f-43e7-a195-998e926b958a",
        "cursor": {
          "ref": "d2ec8464-c9ea-4978-b2e5-2d7959971bd8",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "568783c2-35ad-4bd7-bc3d-c6c7ba449e55"
        },
        "item": {
          "id": "9c3417c2-a28f-43e7-a195-998e926b958a",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "79b3273a-0944-4b92-ae4a-85aba4ca66a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "158d6f1f-5fdf-47eb-aeb3-d8282ea6fbeb",
        "cursor": {
          "ref": "ae969b32-bb3c-46a5-89bf-e907d2059c08",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "e9ee852e-f1c7-416d-8745-df3adf3891f7"
        },
        "item": {
          "id": "158d6f1f-5fdf-47eb-aeb3-d8282ea6fbeb",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "59f0efd4-f03a-4a1f-b797-ef046657ad33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77fca705-210f-4a6b-8658-e6296e5996ca",
        "cursor": {
          "ref": "b7111fca-7a27-4732-bd3f-b8c4140a6ca9",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "21af6a04-681c-4f07-a0ff-eece78cc1ad7"
        },
        "item": {
          "id": "77fca705-210f-4a6b-8658-e6296e5996ca",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "27111493-3660-44c8-850c-a3a98f302153",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6379cb9d-8b45-4c01-a588-0a276c2ef60e",
        "cursor": {
          "ref": "b59db62a-c4a8-441b-9c29-9ae46846b287",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "0e75bc40-1c66-4bf7-a753-d71177289a5f"
        },
        "item": {
          "id": "6379cb9d-8b45-4c01-a588-0a276c2ef60e",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "8b8a9ff2-812f-4063-a2bd-172e9c6561d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8aa2c24d-027e-43a1-bb90-0983f1f85926",
        "cursor": {
          "ref": "551e9b7e-88d9-4847-a674-83fcf6c3b1ec",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "2e0d7b94-bbc0-4152-bf45-3ded725d8d6b"
        },
        "item": {
          "id": "8aa2c24d-027e-43a1-bb90-0983f1f85926",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "95dfc8f8-bf72-4d81-8bbc-9ec0e7d3ce40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9545880-4ca2-44f4-ac07-7f338e99b78d",
        "cursor": {
          "ref": "02b9950c-44e4-403d-a665-1ca7298435e4",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "f8d2a03a-6337-4e96-8397-ee61ffe92fdd"
        },
        "item": {
          "id": "e9545880-4ca2-44f4-ac07-7f338e99b78d",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "64d06efb-325b-46a2-8490-4622d0aeaefa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb3f3080-b6f2-42f2-bb2c-aa340cf6973e",
        "cursor": {
          "ref": "7035287b-5cc3-4a8c-aa33-98f68ffcaf23",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "ee280462-fd98-495b-8a01-4394fb903f49"
        },
        "item": {
          "id": "cb3f3080-b6f2-42f2-bb2c-aa340cf6973e",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "e042ab2b-00dd-4255-ad11-27279b9c707f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1655e7a2-e71d-4ccb-95f4-3b9247f2f7d9",
        "cursor": {
          "ref": "c2c783ec-6f37-4bc7-a8e4-e13cfc945cc3",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "f0c0a785-eb2a-46d3-ad8b-b1929399d364"
        },
        "item": {
          "id": "1655e7a2-e71d-4ccb-95f4-3b9247f2f7d9",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "9e0322fd-2cfd-40b6-b36e-d364b12d13d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1b536c1-d020-49db-b607-81cc4b9f99ae",
        "cursor": {
          "ref": "9df17794-aff1-44f3-b2c1-8e3638fed8b0",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "03b9e33f-b681-465d-a516-4fb852f5962f"
        },
        "item": {
          "id": "d1b536c1-d020-49db-b607-81cc4b9f99ae",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "ed1db4f2-88b5-4399-8851-bedd5c7e5d9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79149c6e-2d9a-46ab-9cda-bc62026724ea",
        "cursor": {
          "ref": "06439dd1-a57e-466d-9375-58b6fa72d106",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "d5ada25b-d4d8-4229-8f33-14b68f69bd59"
        },
        "item": {
          "id": "79149c6e-2d9a-46ab-9cda-bc62026724ea",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "594fe8e0-ff6a-47ca-997a-fd2df99f768f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c83d40a-7b5a-45e2-b051-2237512990e2",
        "cursor": {
          "ref": "d447f626-160b-4bf0-a7e3-9644c211cd70",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "c5db0a36-a400-46ea-b56e-2cfc83e9b82d"
        },
        "item": {
          "id": "1c83d40a-7b5a-45e2-b051-2237512990e2",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "9b7a417a-e9be-4505-893d-dd9489e742bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d1fd22d-ce81-4f95-bbe0-9102ed042858",
        "cursor": {
          "ref": "ca3aadc4-eadd-4b86-9334-3cdf230c7ad6",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "e80c6703-f879-4864-a60a-7a498fffb622"
        },
        "item": {
          "id": "2d1fd22d-ce81-4f95-bbe0-9102ed042858",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "903a3bfe-015f-4d9c-b603-ec14be79db94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cadaacd3-371a-4cde-a0b0-af659fdc98b2",
        "cursor": {
          "ref": "db194cd9-7cd8-4059-83d9-1b121f438da5",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "a2ff732a-5135-4cdd-989d-dd0123e5cd67"
        },
        "item": {
          "id": "cadaacd3-371a-4cde-a0b0-af659fdc98b2",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "3a6ebe56-4d93-4154-bdac-e5e331677234",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "866c2f78-45d2-4f0b-95e2-ba7a4bf54494",
        "cursor": {
          "ref": "d63e3556-9eee-4ff6-a990-5d28e8776974",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "1da67e9e-bc63-4d57-ad20-a2e7118198f7"
        },
        "item": {
          "id": "866c2f78-45d2-4f0b-95e2-ba7a4bf54494",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "89943073-1a5f-4b80-9c48-4c53cb169953",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bec40a9-eab6-400f-a30d-23449e2efa6e",
        "cursor": {
          "ref": "a37f22b3-eb50-4888-873d-7c8ea319b7a1",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "2c925ff1-f4b2-47c7-aa3a-8c635307c6d7"
        },
        "item": {
          "id": "3bec40a9-eab6-400f-a30d-23449e2efa6e",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "bac35802-7277-4040-b6c8-e5b3dbe45e1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2dc8a67-74dc-4ee1-894a-787ea2938cbe",
        "cursor": {
          "ref": "a2922b29-7388-40e7-8da7-a38323328d67",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "0792e875-e3dd-4965-9417-17df061fa095"
        },
        "item": {
          "id": "e2dc8a67-74dc-4ee1-894a-787ea2938cbe",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "7ba3a654-d54a-4cb1-a9e0-21a1db3b2c05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "563e04c6-04b7-4250-86c3-e5eba589b654",
        "cursor": {
          "ref": "343d68e3-8e01-4ce4-b974-0dcdd977a845",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "c0eb7bf7-1d74-494e-87ec-4f01ba329c32"
        },
        "item": {
          "id": "563e04c6-04b7-4250-86c3-e5eba589b654",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "1e154d80-4181-4894-9eac-53597fc934f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecd58bed-d649-4604-93e1-800e03a002d3",
        "cursor": {
          "ref": "236149aa-2e3c-496c-a2a6-462c42678ce1",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "77f2c3e7-6259-4e21-a2de-5d6a66578d96"
        },
        "item": {
          "id": "ecd58bed-d649-4604-93e1-800e03a002d3",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "9f0c70dd-f4ab-42e9-920f-f3d693de365a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a21c53a-a78a-49e6-917c-c1bbd18fe42e",
        "cursor": {
          "ref": "f541752e-078a-4318-b3e2-2de4df6ff7ed",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "6d8e0116-c91d-4247-a742-57028a234d54"
        },
        "item": {
          "id": "3a21c53a-a78a-49e6-917c-c1bbd18fe42e",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "255ece8b-1cd3-46e4-b567-2da56ae2e6e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79c91825-79fd-4898-bc0e-8b728f5e29d9",
        "cursor": {
          "ref": "7e793c61-1f42-47b9-9e99-41e5df2d7475",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "332e447d-a522-4003-9b88-dcb424c8963b"
        },
        "item": {
          "id": "79c91825-79fd-4898-bc0e-8b728f5e29d9",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "221e879d-13e5-42f4-b12a-4b9c59d7035e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4eff7d1-59cb-4cb8-80d6-abffa8bec889",
        "cursor": {
          "ref": "c570ff2d-4984-4471-8d0e-7a2a5144db5c",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "7170fd1b-aeef-4d4c-9aee-cafc50bdd0be"
        },
        "item": {
          "id": "c4eff7d1-59cb-4cb8-80d6-abffa8bec889",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "0388afbf-3d9c-47a0-9930-d55b638d436f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66e43d0d-6472-4f1a-a9f8-1596c72fb1c9",
        "cursor": {
          "ref": "130d8249-9776-4c45-98e9-3866c8d39aed",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "4459d435-34f8-42b9-8c54-462133b37e32"
        },
        "item": {
          "id": "66e43d0d-6472-4f1a-a9f8-1596c72fb1c9",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "903131a6-d763-487a-a28f-82057e553049",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "152c054a-a148-4f74-a30f-998326293eb1",
        "cursor": {
          "ref": "209bfe4f-4233-4e99-88ef-a789e1d78c6c",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "212886c4-725b-48d9-8b02-a9ae0892535a"
        },
        "item": {
          "id": "152c054a-a148-4f74-a30f-998326293eb1",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "26f659d9-03ea-4d54-9f05-52edcd7d2709",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9031ea1b-ef10-4d9a-ab36-abe21f55fead",
        "cursor": {
          "ref": "70b93f26-79b5-41ae-b96b-41c4ad0b14a1",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "3cfa8110-70a0-4056-8721-a6f34d63cbaf"
        },
        "item": {
          "id": "9031ea1b-ef10-4d9a-ab36-abe21f55fead",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "b3549880-6dbd-4169-8548-bbd4a87b8323",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ced1a8b6-db10-4e7b-a806-159e1af42c63",
        "cursor": {
          "ref": "a7292274-cc33-406e-9f7e-43f22a845199",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "c7d02929-cd81-453e-bbda-7d322f3c921a"
        },
        "item": {
          "id": "ced1a8b6-db10-4e7b-a806-159e1af42c63",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "c791dd80-36ea-4011-953f-68e90d063ca8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f8645bd-a2c7-4353-b2c5-bd92008c2dc0",
        "cursor": {
          "ref": "c40a10ec-0bd7-4f1a-8c6e-1a59775c4dbf",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "64aea95c-5d58-441f-b27e-416deb707bfd"
        },
        "item": {
          "id": "2f8645bd-a2c7-4353-b2c5-bd92008c2dc0",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "cf7b1352-20ee-4e02-8965-2a135ced6e0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea749286-b94f-45c3-a113-1a0bfd1298bf",
        "cursor": {
          "ref": "31f4ade9-5629-4d20-b409-2b7f501b025e",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "e27e176f-e118-4902-a7ab-893dae5a244d"
        },
        "item": {
          "id": "ea749286-b94f-45c3-a113-1a0bfd1298bf",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "eeb4ad13-221b-4640-84f9-10409a280073",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fb54e0d-6626-469f-9f4e-dec6dda181c8",
        "cursor": {
          "ref": "63b6295f-ef38-4ac5-be03-e4382b08d617",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "e93b6282-6b24-4cf0-801c-98020017e9d4"
        },
        "item": {
          "id": "7fb54e0d-6626-469f-9f4e-dec6dda181c8",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "7bee4191-ab00-4f82-9fed-70905f2e6691",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb856489-cce7-4b96-827f-2db7d97f6dd8",
        "cursor": {
          "ref": "5f62e0af-b781-4388-b53c-097527d6f709",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "e12b5568-ab54-47b2-b46d-b48ea5381c71"
        },
        "item": {
          "id": "eb856489-cce7-4b96-827f-2db7d97f6dd8",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "39b57670-401a-4a8e-9f4a-64ceeba25e0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "075efa7f-af31-4c14-88a7-70c2058f040f",
        "cursor": {
          "ref": "0433e65c-7618-44e8-9622-c2705824c684",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "b5e9a2f7-6c28-4d16-a6f0-4b2f26008a6a"
        },
        "item": {
          "id": "075efa7f-af31-4c14-88a7-70c2058f040f",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "323e606e-8000-49ae-a758-e5a99b82554d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c07f2140-af38-4fd7-a6ef-717c5cbf5a74",
        "cursor": {
          "ref": "3ab03167-2e90-48d8-ac7a-7fff6ce3d7be",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "aa219c2b-a313-4dcc-a0e1-8d45fcb03e49"
        },
        "item": {
          "id": "c07f2140-af38-4fd7-a6ef-717c5cbf5a74",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "0fbc88ee-c6cf-49c1-9607-59171bc2d326",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e39be03-c409-4b26-982b-2dba02ed0174",
        "cursor": {
          "ref": "a491c599-9874-4cdf-9d1d-7154cb4f6a27",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "adb8ce21-f243-450b-a895-b5b837c52306"
        },
        "item": {
          "id": "9e39be03-c409-4b26-982b-2dba02ed0174",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "2455482e-c004-4b4f-a571-98df1e979944",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71dc2d45-82cc-49e6-a857-b302f7c6a81b",
        "cursor": {
          "ref": "962144c5-05ad-49d4-a043-eed24fd8b086",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "b741f8f2-d50a-4092-b380-e091fb566054"
        },
        "item": {
          "id": "71dc2d45-82cc-49e6-a857-b302f7c6a81b",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "347c4059-e90f-4bda-829c-320a2237b7b7",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 52,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b21c7a37-8840-49e7-ba47-fb69fb54dae5",
        "cursor": {
          "ref": "ed2da5f2-a442-4c3a-98ca-42d19f147645",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "30396aef-5d0d-46d8-9ea6-39cda1b871b8"
        },
        "item": {
          "id": "b21c7a37-8840-49e7-ba47-fb69fb54dae5",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "787cf736-62e9-4176-94e6-b043dbc7c603",
          "status": "OK",
          "code": 200,
          "responseTime": 2153,
          "responseSize": 416
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "34b1ed19-e14c-4565-a7e6-cb24361e8aaf",
        "cursor": {
          "ref": "c40dec93-03fd-4d51-91bb-beeaefda38f4",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "38329a3b-9e1c-40f7-aa54-f92ec941b2f1"
        },
        "item": {
          "id": "34b1ed19-e14c-4565-a7e6-cb24361e8aaf",
          "name": "credentials_verify"
        },
        "response": {
          "id": "66e7e8c6-4588-4855-9fc2-c41235aa08e0",
          "status": "OK",
          "code": 200,
          "responseTime": 3244,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "3746d44a-93e2-470a-85fa-c387205c660f",
        "cursor": {
          "ref": "1bf1d4a5-32d8-47cc-93a5-7fddb5f2a3a3",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "13eb74c1-d761-48be-a5fd-73bf8cd3a02a"
        },
        "item": {
          "id": "3746d44a-93e2-470a-85fa-c387205c660f",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "2f54699a-cbe2-4c61-a141-769b29b3bc4d",
          "status": "OK",
          "code": 200,
          "responseTime": 3075,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "f67c45e0-c483-41c0-b373-55ff07a154ae",
        "cursor": {
          "ref": "db7660c0-0739-4097-9b83-6817a6a7da70",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "88e3866c-467f-4f29-b452-a4f5a72aa61d"
        },
        "item": {
          "id": "f67c45e0-c483-41c0-b373-55ff07a154ae",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "fc27773b-bb66-4b07-92d5-bfa79a1a95b1",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 46,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f67c45e0-c483-41c0-b373-55ff07a154ae",
        "cursor": {
          "ref": "db7660c0-0739-4097-9b83-6817a6a7da70",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "88e3866c-467f-4f29-b452-a4f5a72aa61d"
        },
        "item": {
          "id": "f67c45e0-c483-41c0-b373-55ff07a154ae",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "fc27773b-bb66-4b07-92d5-bfa79a1a95b1",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 46,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "949a2bc8-26ba-44ff-b9c4-661313a224bd",
        "cursor": {
          "ref": "f7fdb224-e895-4d85-af85-0dfbde899033",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "b6e02d7d-551d-4803-b38d-df49a155f3dc"
        },
        "item": {
          "id": "949a2bc8-26ba-44ff-b9c4-661313a224bd",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "44e1692b-1d3f-449f-88a7-c627d37e82a4",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 47,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b034916-6756-4322-bd98-88dfbb1fffa2",
        "cursor": {
          "ref": "cb180ddc-1748-4ddc-bcc3-838b7f527636",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "857184ed-8412-41fd-8ba3-d9dce47d87ba"
        },
        "item": {
          "id": "3b034916-6756-4322-bd98-88dfbb1fffa2",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "7cb22916-b567-441d-93ca-eaa13effb864",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 48,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}