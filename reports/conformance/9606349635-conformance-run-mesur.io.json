{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "4db9adf0-4232-4311-89f0-13993a1dba87",
        "name": "Clear Cache",
        "item": [
          {
            "id": "ff1f131e-a5d2-43e6-b632-499c910c950a",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "5e4d33ba-136b-442c-a14e-38d1220dc5f2",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "da27d3dc-5dea-420a-8175-2d8fc703961a"
                }
              }
            ]
          },
          {
            "id": "7592d724-d5f8-4b61-a731-d031ae33a576",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "cae4e974-f2c3-47a1-a436-555ac59eb82c",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "2fcf6ca9-a534-4cfb-bb16-98407e2b94b2"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "2387f0ee-7138-4723-95c3-dd1ce475c4d7",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "bcb551d2-a4d3-4276-9eb1-24ef117cbbb1",
            "name": "Positive Testing",
            "item": [
              {
                "id": "955211f2-7ded-4440-a18f-f0e846b71042",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "11296584-8b13-425a-8d47-558eb8d45322",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e71439a1-4a76-44dd-b54f-074287e001ac"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "6e35aa7e-d38c-4cf2-92f8-77ef0c47f7cf",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "520029d5-b0cf-4e8e-bd70-8cb02e376a05"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "af59776f-38ac-41aa-94f5-bc558d283fc4",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "386f199b-f822-43a4-ada9-718a3fc934cb"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "45f605b8-2d18-4274-b593-6fa339938d5e",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "54ed3fc9-0989-4f31-93e1-2be63d152ef0"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "15398e73-7ea3-4227-a4ac-c1448b5105f5",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "5e93cb82-43df-42b3-90da-4831d4c9496a"
            }
          }
        ]
      },
      {
        "id": "4b8a4260-d508-42f8-9699-715e9107758f",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "eb8a9faf-8570-4b71-8483-9ccff4c2d544",
            "name": "Negative Testing",
            "item": [
              {
                "id": "9a33b1d2-4cda-46ef-a696-e37b76d9c59c",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "e7c1d640-8473-48da-bef2-33055ed27de2",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55cbbe6c-9dfb-40f3-a040-900e2e4dacc0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a6e9d68a-052a-436a-bd03-d78e1a6d89c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75ecb093-58d8-499a-8b20-a660a6f3883b",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4225fb45-9254-4e78-a7ac-fec997cb6a44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "45a0b490-2827-4995-bd07-20b9f74ffd1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "062d76ce-9d52-413c-90b6-4ea729f465ae",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa5db871-4ddf-441c-afec-55ea88a1d0f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "34260962-dc9f-4c1e-873a-1406ca408af9"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "234fe6c2-c891-48b1-b1f5-7a1718cd89d6",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "5912f275-35af-4dd8-998b-fcc96343ed19",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e79e3f3-f353-43a0-8308-ca232d104ff7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "30748643-41e5-4875-9883-887da5788d50"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc65f2f1-cdde-4542-b144-baa6e9eda743",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd44fe19-d272-423c-a69e-4ea4288b17ab"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "c3e91806-5abb-409c-9b1f-4bca8e4a69c2",
            "name": "Positive Testing",
            "item": [
              {
                "id": "84d59c1e-b6d4-45be-b88b-3b79412aeb8b",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "70ed6dbf-0e1f-44d1-8c19-b7dd3ad7a7ac",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "a33e7d12-422c-4ba2-93c9-71380229cd3c"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "39879236-5dd4-496a-b70a-50405933dd1b",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "d6866ba0-09dc-442e-ab9e-ab2e1edfefeb"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4bd326c3-645f-4257-9936-2848c31330ec",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "df8c83bd-a87d-4a22-aee0-6667b0c5f09a"
            }
          }
        ]
      },
      {
        "id": "34216b9c-141e-4806-bf8c-c5305a3b0a75",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "6dcdd260-9e68-4ab6-aa66-7bd780e8d48a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "7b2caab6-34c9-474b-9b1b-2f770b08c01a",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "f5f9585d-783a-42e2-9f8b-d43a4dee9bf3",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4868fb2-2ee6-4a0a-a6a2-f6f8f1785c9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8a723ab-6881-43d5-9c0c-978ee924e976"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e95439f-ebee-4238-970b-5fd9299ac71b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4e3fe9a2-adca-4a15-8603-78c75b529f67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04a1c386-b653-4e1b-ae4b-9ba148496f1c",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f759cd0a-0404-4e62-b2f9-1f11b265848a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b4c635d-4292-413f-9652-321e86ca106f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0501498e-f832-43c5-ba49-b1a62a46c4e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "608ddc2b-ceb2-497f-af03-35a9b1e0fc76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78e6d6d2-ee10-4900-85e8-0f23ec8da232",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28fb52ec-b1c7-4388-b249-4fb8bc3829d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1be9e785-9b36-4c08-a52b-185790210d27"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96225114-eccb-4333-8339-404efa40f1fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "18c9fc8f-b2c2-4b66-9986-02d93f9902a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2a3b92d-3f6e-4f30-b85d-9a75f260a3e2",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4cd7f27-f564-4055-83c4-e4ae33fadc18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "366f1c23-fb95-4d3d-a42d-fc3b7d6f335b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a70a97e-f7ee-4716-bb43-3f550de079bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fa7405c3-865a-4411-84a9-d6f67b072c58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "edc5b7b0-5eb0-49f8-9ba6-b827f7ad6dbf",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "778d19cc-042e-4940-ab80-eb8d6e2544f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "110e5f11-b015-4ab2-a243-3497cf95d40b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eaa8bdb1-f887-403b-bb79-dbdb5c289271",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "605219c0-e48d-4390-8db3-2bd78411f712"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc0b5203-9984-4006-ab6d-326868372bd3",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98ef5f41-45ff-49c0-8783-27b6c2cadd48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3264c4b-8b72-466c-bca3-d521c25ad8d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "553f1990-2a3b-4e16-b836-55f27278863f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a9a24191-5468-4d49-80ea-42f73ff999ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a54ea408-70a1-4de3-92e2-025c6836d8e1",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd6bebe9-0295-4132-9eca-9ebcbb839e5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e5f2fb4-90b5-4b34-8e02-14920c8102bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d618e480-894a-453f-a591-cad767c12466",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "699eded9-fbd2-4316-9597-bbe3f65ba1c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c469d3c-a3d8-4085-a738-a3a8fc04983f",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e85fb16-482f-4e70-9e54-34c08876e576",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6bf66f30-f43c-4511-ab8c-a0ab62978de9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0eb13467-5918-41ea-bd8b-29a5fd955fa1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "849053cd-9d55-441b-bb10-680d1f32aaf7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c62ab02-7e42-42a6-87da-af1dc8a288ae",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32371dea-5ea1-455d-966a-52a828b854e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2362a150-3cfb-4f69-8904-36926b038e10"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ca5a00b-6c4c-4393-81fa-2dc4f6f6fe22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1985486c-7aae-4fb4-bc85-81aa1d82cc0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a2c50e7-6ff1-41d8-b292-5698e481e05c",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23d9115b-56e5-417d-9420-95c139c9e2f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc5ebd15-90e2-436f-a9a0-4b1daf1f836f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f077667e-c818-4a0f-a6a1-1bf0447c4775",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "da5a544f-f766-4c7e-99ab-952ac664daa2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc296117-5519-4853-9274-4e0a660a076d",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3427bcc-53e1-49e6-85b3-a752f51315f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1fa494e-99eb-49ee-aaf9-bfaa645a7064"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4905b3da-0cc5-49d7-bdb9-4ff62df29c58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8ae8858b-90a1-493b-875f-208f70261018"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66fe904c-78ab-4769-898d-9d39e7a74ffa",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6248c719-0637-490d-b789-773d331ded5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b2b0454-51e2-4c65-b9e0-36244d6fe2c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2271cc07-9e6b-4dce-ba08-2f0761ea81d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "37d29017-1373-435b-9a8a-edc3a2f269f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ed703a7-c23c-416e-af1b-7aa53d2a10d3",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "446f3f46-6cc1-4302-82e5-d0fef86657af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7bf2f38a-064e-4542-ac3e-99bb6fb8cb5c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "690453a4-bc72-4f7f-84c4-d42d8c12fabf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5c762d93-eaa9-4e1b-8d1f-613dbfbd5c57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0606bc17-a77e-4fbd-b9b6-795ca25d0463",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e7d2326-45c7-4bdc-bf4a-4731d1ebee70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17a1a6af-b69b-48f3-97c0-b9770dc9cf26"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14c68791-bf8e-4d41-8a3f-2a642ec4e209",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "93d63206-3a12-47f6-ada2-e3b28af881ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35eb4967-8011-4886-ae9d-2462b92fe90b",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5cac0d8b-0ce5-49df-9d36-8fa4a3ab28a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "942ea159-aef2-44f3-a229-77870f309935"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be697136-d926-4687-a3c9-9e184f836abe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7efd4945-01a7-4a9a-92d2-bfdbce71d147"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5524980f-2279-4090-8138-7ac0ef35859f",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e95148e5-ceab-49ce-973b-6b0bd151bcfd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f13eb79-2041-454d-88af-5cbf26cf4e4d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e859bba-9e82-4ac3-821c-038ed2ab3fbf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "de7cdbbd-ca3d-45eb-820f-ccdde0841907"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c717d3f-1eaf-4872-8b78-abf475e3143d",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb51ceda-8038-4a0d-a2ca-d24f45b50732",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2810bc7a-8123-4806-ade3-842dc889e0db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab0ca788-3230-4067-8778-2e99837bf86d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e92f0653-6de8-4b5d-9f64-ee524ea9b16c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f94eedd-8e6b-4980-ab2d-ff7f45bb3925",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e439c08d-09c7-41b4-83ee-ba4a4f3f66d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6da81e6-687c-4c64-a206-d16412abb4b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c853e96-0159-4096-9f1a-3939c2ad6d49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "8c1a0cdd-2b8f-4ab0-ae3f-4def705819ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a13baa8-5de2-44ba-9ba9-fda144ca525f",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b3b1952-b7e3-48e8-a476-23a6a10015a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc220eb7-94a4-4fe2-abd5-bcab4f5d8f74"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "542f7878-ca59-49a2-8940-415c7d0ea342",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c8d097c6-dc53-4c83-9f49-352b257f039c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9bd9d951-dfc3-4099-be55-08323d597fe8",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3414fcb-d5f4-4823-91cf-5736bffb92af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1199992-a323-4bfc-997b-0489062c6ef6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f5bc30c-f71a-43c8-bd80-34f3d84bc988",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ef4d4410-0670-4ff7-b4db-35732303c34c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02237d36-8dd6-41f1-aa3e-20a5c93e0acb",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b22a7ed-5a35-4788-a411-02cc607de774",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cdc5374f-424b-4ca1-a1f9-6cd7dcf372b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7573be86-0521-4912-ae2b-c946dd2f54e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "996d5aef-175f-4dd5-90fa-9b9d6aba506f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f995882b-fd44-4fe3-a709-a1fa08d8747e",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10e91bc5-be35-4d6b-86ce-ef1fce8fe9f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9ca95d1-7cc5-4b0e-beb0-ed46cfea54f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e230b576-002c-4aec-bbd0-956cd849b831",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "0d385aef-ce84-4a43-aa35-949f4177dc15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0c5acd0-d30e-4f5d-a3ec-c24aacf05437",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed2d48f9-42bb-4d1a-93d1-a5f55979b0ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "115fee2c-ef08-4c52-94a5-141b8c75c200"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aab825a2-b7e9-4d51-ae44-f05df3d9ca5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "58909cb4-d107-4935-b34b-36704a212b1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f9b87a0-6526-4267-b51f-af66066932d1",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24491c8b-117b-49aa-8a7d-f24ea0aac920",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86a46f0f-e8e9-4f6a-ae62-d28b9ae4d5f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0defc34-9e0e-46df-bdb5-fe2f7c12a3b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "ba91f469-d5c4-46de-97cc-b0fc6ca79d7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5096229-17b8-4103-91ce-464f4c92e907",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d2b687d-3e18-42fc-bcd5-c60ee6316651",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6829ac66-f35c-4e15-ad87-4805fe107320"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2abd7afd-eaf9-41d6-8bdd-4a6d84bab9cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "9dc73131-2f1b-487b-a1e5-e54ace2ad058"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e499cd5-9a76-4b5f-9ab6-16b8711bfb8e",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dedc7512-022a-4e29-a572-cb737cd674c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ded70890-5517-4cf2-80d6-c1612c6127cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d026a85-f173-4d87-a03b-bf4f1499fdf4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "7662cd30-6b7f-4d50-8daf-da2c5c60c2f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8467964-24fc-4a43-b7ac-31d496a2648e",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1be25ef0-c760-4702-8974-3af4ce8a0c33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78454e7e-8164-4585-a02f-bb36e6128011"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11062147-1b8a-4cf0-95de-c2b6866a42e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "143d0e54-ee60-4be1-ae1b-ee1beece4a9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bca06294-35d4-4f74-b734-aaa4afb49576",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7649834-325a-4dfa-84c0-b42e92535fd8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41200df9-82c4-4c73-8893-e33e5e3da27e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1cfa790a-4f0d-4f48-bbeb-b0690d350ee4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "ac0ced41-4c22-441d-9841-97d60898ea27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6a6fb26-ab16-4d36-89b9-f1753baf7d83",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc3cf9d2-03f5-438a-9f22-8d2d8da6a01f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e49f0295-b220-441b-97b0-136150f35ca8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1eec21e2-ccca-48c9-afb2-60838cfec0c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "a75757af-926a-450a-ae33-a826531f2ed7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa4f7569-8e78-4450-b77b-5fe42bb8c7ed",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c7c5d62-db5a-48ea-b8ec-46943431128b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7cab6df7-800d-4a69-9108-ab27fc1b5f20"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcf459b0-2aaf-4df2-a28a-9b99f9235912",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "151e8c7f-95ae-4d1c-a54b-35c41fada49b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1691e867-b4ae-463a-b5da-f6f6e0d71529",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c65e6e8-fff5-4372-a835-7638feb7f98b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81b72086-d0aa-4d15-bb55-7c2f9ea7f4df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ed79fd5-2e90-4443-b45a-f464fa52223d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "fec4125b-29fa-4593-b92f-c869039d55c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17febfa6-0a4e-43da-a2e1-ba0a1a4cb3a9",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "059df69f-ad1a-4b3e-96ae-14a387bd3a4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5338e39f-fe8d-4fd6-ad23-ad4247906c2c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f83a8ca2-9a6c-4f75-b79f-d640d3322c86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d6fac2cd-aa86-4d9c-9083-e5a34b04d349"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7434682-e307-4e56-aca4-2e14370b9f60",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af090293-97e0-48e9-97b3-c55be9e5ba0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c88eb0e-fca2-431e-88ad-d1179ee90b4d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dad755d7-ba5d-42c6-bef8-7cbe15591316",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5773c325-7fe0-4ed2-9592-f220fb8b6a57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b840d128-7085-4b41-9a14-71ee37eda47c",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9491b31-3a72-40d8-9d1a-c1560f7a2530",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8cbedd10-f635-4b96-b9c0-1b73369da639"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31222aa5-ad53-409f-a7c2-c7003da8b6e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "fdd10940-97c9-46cf-92be-b49dff895811"
                        }
                      }
                    ]
                  },
                  {
                    "id": "392a94fb-7db5-484f-a2e5-c8336d87d72a",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f6f7113-6e31-4432-9938-e0fca3d03acd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8889637f-9daa-4a54-8ae8-83ee0e7647d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84789549-a6e0-4a01-a3f4-e9bf682238ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "2843ec4f-5deb-4b86-9197-02a8103a5336"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24ddb22d-389d-4db5-953e-a38884d18533",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0dec12c-65d9-4e15-b8d3-ca63e4ea1cff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a8a9e6c0-b146-49f4-9626-6da759789b21"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e73d4b01-52be-4103-8947-7f17081f96c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "3c4ff7f9-5400-47cb-8f73-ffc6fcff6aee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a89cf1f7-3f8d-4dfa-b4c2-2868a309577a",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5e1d3b4-258b-43bb-9248-b60c62e70cc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca200069-67c1-4261-bcb2-39dd0b34cbc0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71e86742-81ff-4cee-b89a-ac547a481a37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e774202b-9879-439d-9c14-81796397ea23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c585bab-b5f8-49d4-b839-a809d15a7611",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2eb31053-0249-4dc8-8fdf-2a7c935fb46b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4390344b-ae58-4b42-a9c4-353162b68fad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dad65cb2-91d0-4fb9-a2ca-04d0ac4b700c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "16c3b7e1-c0a1-4038-b822-93d0f6ba0cf3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbc29710-a929-4da9-bc5e-88b27e8e0a85",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96b0616a-fe27-4eb6-a36b-b9e4955a7d32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75e89b45-6816-4406-a069-f8c2e83dfeb9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ea1b015-6f0c-4103-a755-bee072a32e4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "90767241-f868-4f16-8b0e-a25c9914aac9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8749b89-f893-466a-99aa-b5649a73392c",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "878765fc-dcaf-4df4-8ebe-4d6b9c550b9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6565ffb-48c5-487c-9fb0-d5e41751d1ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "245c9437-9168-4f2f-baa4-f77b9aa9b5e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "2a4e06e0-573a-4f65-a172-43ec9828b1b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fcf81f9-51af-4cda-b759-f0ba1670d1ba",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3dc6aa5a-bd28-4fcd-8803-2406aeb7c6f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3d94a13-ae93-4437-b739-64310084172d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db9f8629-898e-4338-acfa-1fe655f311f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "3f00e476-8063-4c50-b14f-dd862e3a3073"
                        }
                      }
                    ]
                  },
                  {
                    "id": "428e8340-fda2-4fb7-9841-6a61ac052f33",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01a0e169-61fa-4474-a5aa-4e35d216294b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08197073-dd6f-47a2-bbd6-552c98bffb44"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9eea7ba9-f7be-471f-9f61-af4fca84d685",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "adbd2fec-af16-49f6-aaaa-087c2456f336"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18f98112-7018-4e7b-ab44-46b087258d35",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77a9832f-b8ee-473b-a170-c061eb0cf349",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d604a66-adbc-4da9-84fb-3521aba9ecad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1de66a16-3d0a-4fbb-a689-0f5b9f1907dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "22ec1825-0c74-4c22-a569-b41e827c566c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c87e438-06ca-41cc-8f6f-a502afa1cb59",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "292bd737-7b7a-4edf-94d7-3a32add59895",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "323f79bc-a2fc-404d-a2ea-19b48ac8fca9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d516921e-1dab-4c60-8840-f4ced3c2f47d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "e8825e16-2e33-488a-a4d9-a6da33209bd0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5734932b-65f3-4bdc-b9b8-124b9f519ca9",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ca9163d-8423-4d63-8fd4-d6bca97b0a49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e7a9db14-c8fb-4ee6-93ab-3399b4f9404b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abb3fdd9-44a6-4eef-9dcd-c7d342c02782",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "46134081-043c-476a-9d05-b3e6a689ad21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e11d829-099e-41f9-9abe-2bd03cb5b28b",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99404cfd-bca3-40cd-9f70-cdf5877fef64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ba8e234-32d8-4617-8131-ebe351ce09e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b25eb81-58cd-4752-b56c-464bd7a377d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "773e6a0f-6af1-444b-89fc-a566b18d0c47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f2b61c1-ac81-40ce-8d68-e8b97f1479fe",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbc75b42-7e8f-4b2f-84d8-a595823e448e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5224d53e-3414-46de-b0f7-6b797d3106ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac251c6c-852e-448b-ac0e-a85114d85037",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3e3afe26-8343-41b1-8236-8f7bc8bde5b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93ef1ea8-fa2e-452f-882a-9366422b44d2",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4996c421-c4f5-4ebe-9cee-e8d077ba36b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30b75bf6-4d61-4c52-899d-a966edf91aee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33662fef-6555-485e-abd8-a78b5af3bfbc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7c035b09-b6f0-447c-8df4-0cb424e824ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bcb381b3-f3d8-40ab-a6a8-892c914b233d",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6736567f-a10e-4be1-ae5c-9bf1a51d24cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7dc1915c-5b52-4847-b892-126b463a09a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e64af27f-0939-42df-a080-4939b2599713",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "889ba255-da06-4e59-b0d0-eb75158a42bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "335077b3-0c1e-464a-8db3-5a51ea959e05",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ebe8c8a-1e3e-40fe-b39c-e1db770ba298",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d0269e2-e396-4263-80a8-4d4c68e29739"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87dbbfcd-b8cb-4f20-9fcc-83b193ad059d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d8b8f552-2897-41ac-81c2-698c71261abb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f3ace31-0d87-4e8f-8563-d33f00bfe075",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e96b28a1-876c-4ff2-a9ba-0af46a625dbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73656838-df92-4aa5-b6f9-81ab19b27d44"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d75d3fe4-3459-4a04-a072-ee4a4ca14536",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "d37924ec-8339-423b-96c5-193729def456"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d42ec35-3f6e-427a-b2aa-2ca7881e74fc",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d8210b1-217b-4bcd-a957-87b8389aaec6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b9a363c-dc24-4253-9fa9-87ef491ef47f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce3e7f11-3b77-4a42-861e-7c19a594c39f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "a30416c8-a123-4663-b95e-df65af4e923d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91cc04be-7f12-4b16-95ae-419d1fa4701f",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d08ca17-5630-4b5f-ab30-8e1177b65a57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a38e09e1-4095-421c-ae13-7fd324737d8e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54cf9d15-0c26-4002-83a0-3cd56d80111e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3400a089-0d94-4a1b-9833-b121e5539783"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9778cac-b490-41b0-8d36-dc5e3d954f54",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5645f7ca-5787-4f82-8e89-97214222e81a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2675d686-d547-46bd-b80c-45d350f29064"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80c529be-5dd1-4737-a633-ff9093ac9573",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "bc88b999-0c20-424d-9d1f-31ed00b933e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b74fd41-aaad-4e95-8a30-e939df62af39",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "178ca6fb-9bfa-45d2-94db-0eeea51b8f1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "009c7c34-30c2-4bd8-8fee-3e01fb34cd4f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f9ca61d-54cb-4d32-9d8e-33527523210d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d9f26a8f-ebd5-42f0-bdae-b2b7b1725ba5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53b6f751-1627-44d4-a43b-3e3dcd6ac657",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "abc0473b-989b-4c85-aaf5-2dcb2dcdba64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d40c1ba4-2c51-447c-9552-5b2aaa37d92f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d28191a-dcf8-4fd0-a962-9f56544d838a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "ffaa61b6-18b9-43f2-9da3-d5e40a50e8bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8249918c-cbd8-48c2-8d16-c79679adacd8",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d2cf84b-8828-4397-bf78-22451508789d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7c273c8-7944-40e5-b36a-a749d49d0a84"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44243525-44f0-4d37-9532-86f1c536ec20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "f42b6bb6-d531-4241-94bb-1a355d4afebb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db02fe03-f8a6-49ee-b1ad-a79c428468b9",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c80a5f03-9d57-4453-9c1f-0d487064c790",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "692eb5c5-2c92-4c3c-bbdb-fcb8c1cf94b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d6e5ad3-6c0c-441c-b28b-2fa29f51ee87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "6bb818f8-b83d-4be5-9e3f-a28ec6761a64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8abcfe4-c88b-4803-9542-728a5a5120fa",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee9d648d-7dba-4fd2-b4cb-1c3f1ffaaf2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa5c64d8-7d0f-47fd-a36d-46879eeba677"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "798549e5-15ad-434f-89ef-e20308bf4cf0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "c0482c75-500d-44cc-9c4d-6bf6d67c6991"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80b750bf-d3aa-49e6-9346-aaaba0c07ecf",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dff08711-63cf-4916-a5eb-8875c22e2e93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e3e2306-c631-47fe-90a2-a9282ea1b72f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bded838f-c030-4437-a6b7-143805e8d7c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "cc8be28b-3c11-46ed-8762-2b4a8e46d714"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1f66dc3-73be-42a9-9590-a9645aca606b",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe9090ab-1e12-40af-a595-bef43de00350",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "937b1ba4-07e6-43d4-a2d6-7ceb7326ea68"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4ea3851-4151-441e-804e-33dda190e500",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "d0eb87ce-9df8-4dd4-a558-43a428feaeb5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8f0aa80-bfc8-4b93-b98c-4a580b5b3e0b",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc4be464-bdfa-4020-8cb3-fd54291ce5ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c52e103b-6a7d-4631-9e7f-7f38ceb58d7d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19d4693d-1633-4b5d-bc67-411d67eaaead",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "d2927e05-a0d3-4fb2-b305-a0e2208cae63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4bd6111-ecaa-49dc-be3f-c7cea1d46c0d",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af730a0c-e456-44ba-99a1-e298ab37a127",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b5c3ce1-0bf0-4c80-b6c5-a7c32e43daea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "749773a9-8cee-4bc9-99d4-b1d0a83ee6f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "4dd9022f-b3d5-40d0-80d2-b0c75c2a6d60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37db6e36-8080-4cc3-a8bc-a24c39f54725",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "deb6135a-4a8a-4408-a4f7-ae071043d241",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8c2806e-7c8c-421d-baa9-2f85d26c7f57"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42407a32-06d7-481e-8249-91e8ca53ecd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f764762c-44a5-4169-8693-117c9c9e6714"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25106802-3448-4271-bd66-f4cb736391ca",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "abbc91e6-857f-4e40-911d-e00e58edc8b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ee3c76b-e709-4d95-9fc5-2a093a4c713e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c03842a-bf65-4ef2-9e66-8c4c91893502",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c4a95280-79db-461c-a658-6f131fec170f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "870bbbb9-928d-475b-bd4b-d4c3be6db096",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "968ef920-b4d2-4c4b-8fec-a1034a940c87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d46c22a-cc48-4718-8485-1cbbf8235834"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "058b62d1-dd9a-43ed-80d5-3843934baeb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d513ccc2-796d-4900-8599-70973c30718b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "765c8c09-b70c-4052-aa56-a21cbd6d3eb2",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d3605e2-4f02-4ea8-8862-fdb595c31afa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60cd69b5-c401-45a6-bd3e-183827f1081f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f14eb4ce-f41d-48a8-b823-7b104313d45f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "4d947aca-3782-4f9a-80bb-78b407771a9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20a5db61-3f00-4631-8813-96ffaf3646f1",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4cac5053-c48f-4142-b3f3-690e922e90d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7945f0a-0c96-49a1-bd00-4004ce0cb092"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77b3e642-dead-4817-ba73-8e38c7a9e046",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "f9630258-d2f8-4c46-9c5f-566ab6d75369"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e026722e-e872-4611-8241-20ae442e7059",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa285bc2-6245-4b46-9f25-10d3c6d046b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cbc34edf-1600-4602-a1e4-78a277710da2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e622dc35-f106-462a-b4ed-eb5d27a7474a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "87419889-0341-4d88-8806-229687ab9a7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14c4d744-63d9-4d35-9bc1-123b59b3e314",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc3390e1-ce75-4235-8826-93169fdfc47d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e20aadb-2487-4f53-852a-b6a99a751e2a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06c810af-04b2-4c1a-8d52-34a8ba90b62f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "bafdf668-d103-4bce-b290-5da4e928f9f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6b692b0-3b7f-45d3-822e-af426ec91927",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f981c7cb-a238-447c-89e0-2efaca4fccf5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e15e7061-915e-437e-9ce2-9a42bd755339"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "faf1380e-cb29-478a-8a40-7bf13d1698da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0939867b-dc90-4f5e-8afa-0cc0e024f89f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a28be0f6-e714-40be-902c-978ff11cbd8a",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ea663bb-a6f6-4e6c-b6cf-17b5135f798c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d358331-ecc8-4d6a-abd2-481e97f62316"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d0dd776-bf02-4322-b6ce-3b988cd07a49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8b97e4aa-8e6c-435e-8894-4fb0a1d3f330"
                        }
                      }
                    ]
                  },
                  {
                    "id": "018c15b2-2fb9-4b1e-bf2e-986906ca30c6",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0df6b3f3-bed7-4c26-924a-eaf448f01374",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7fabaa66-284d-4b6a-9e85-547c6752e90f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b30509fd-4af0-4fc3-b15b-b24c2e9979db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a73ea5b4-4c3b-4477-b81d-44a955006714"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac3d3770-33cb-432d-83ed-6381f085dc67",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07235148-6c46-41b8-81ad-d37b3706e67c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "534785e3-65d9-4fbd-8836-50e86932b987"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e350482-121e-420c-a4fc-6933ace59cfd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1e4019ae-9829-482e-9a9d-28a1d6f9aa0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b693686-29a3-4fef-b26b-71494e2b2123",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20f82d49-7d4a-45ec-90e3-fb3bfe47fedc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2ad814d-b3b9-4563-86a3-183e4621509c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b7986cd-4131-42fe-b25b-a0ce5dc44754",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "620433e6-20ff-4ff0-a854-771e4e07cfce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06ba4bb7-e9ea-4bd4-ac9f-18c0bd33a9ae",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb86d29a-4989-4443-b5bd-93eaf909f8c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e59334b-5b2f-4f6d-b7c5-491cd12d7122"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43b5875d-faee-483b-8e6a-a83e9aae7e29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1bda043a-4cdd-4d99-ad68-4deaa21a499e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7aeb7df5-950e-4736-ac5f-2b5abd3fb4a9",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b606700-0260-479b-b87f-e40d263cc90f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7483869d-8114-44ca-b6bb-5f8af6ae5b73"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09a2f2b4-be63-4062-8b59-1ace179c4b99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4ee569e3-8981-4c67-865c-134e241fd2bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75d88d28-4040-404a-9a6d-65d96f44aa98",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88c0fc7c-dbdf-4b39-8fcb-04e2c526f834",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1818cc69-efb7-49f2-9cea-e8f59089b9a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a130cc75-80c4-45b3-aaab-fbf063db7979",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "16333e49-62da-4ce6-9188-943f893b966f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f8401f6-3cbc-484f-8f20-db7a14739ccf",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b43b5d3-191e-4a3a-be52-819e4e1e1905",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c9b35f2a-2b3d-4c6c-96c4-0aacc5b4ec83"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "367d42bc-37af-419e-b42c-72ea10ce061a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "7ec06865-e8f1-4906-8de3-fe15cb2ecbbf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3e289b6-9a24-43b5-ba53-e3a730eef495",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e3f87a9-6393-4b45-a19c-f0a5f4325790",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5da08b52-4a4c-4869-8f0f-3399304c3298"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "beef9bd9-2a10-4874-b3c8-9810b9de1aea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "16221adf-2426-436c-8ac8-886534a4408e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9449f1c4-802b-4cec-be20-6efde186e222",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "031745e6-a622-4a3a-82f3-b66c9c5350e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e622c271-9871-44b5-8428-394efee00d69"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d68324e7-ca28-4df4-9d8f-a15f7e72b487",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "235b5608-5ffe-4b9f-a5fb-3a1587cf336d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7558db96-a9ef-4fba-82a8-a993cdc7a5c5",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c040e19-6e98-46cf-9d9b-d8bc0fc27915",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44753f25-6a5d-4612-aa53-42078a852c5c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c2f6713-58ba-4037-906c-30da99e7ba79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "52266fb9-4b73-4b62-9a41-035436b594fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88331cda-bec5-4ea4-8818-542fc69976ff",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbf4e4e2-7d4c-48bc-926e-fec4c2dde42b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2473529e-3671-40b7-9fd7-e15c63c27662"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78c0919a-5a89-4490-9bb0-090f913f7d4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5c681796-7e53-4161-a3b3-021c762fb380"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99f482b0-17d7-45bc-bbd0-ff15aefaa4e5",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "239b0a4d-9e25-4eb5-9eb6-9106c1550b25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65748288-9f66-4566-8632-0b5181de7e4b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "248e1063-b3dd-47ff-a74f-11b4ba42e6ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "422298dc-4638-4974-a920-574680bdea48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78cf6907-6de0-45f8-b24d-01d0f2748a75",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7f64175-f907-418a-9404-e3b5d7fde755",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d319fb2-896c-438e-978b-8984300e54ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "baecfe4f-97be-46cc-9487-01ef7a54dcba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "8375ea3b-6287-4540-8282-27167e2493a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d31c0bb-db61-4914-a8eb-9174775dbc34",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea854550-4595-453b-8b41-7435af2c5d95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d88605c-f6ac-4ed7-b5c7-65f87ac591fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbb62bd7-0061-43ba-9084-53db07149f1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "5dbad2a5-8e90-4d6c-a870-c43915686a2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e71b5adf-e022-4a02-8dcd-260a5bdf9de7",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71068b62-f0d3-4ebb-8792-8cdcdbae6da3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a89d15e-51d1-4069-b141-cce7920d474e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "537f3ffb-ca35-4da9-a412-d8796dbaeb24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "884e3dde-c89c-453f-aef4-b5a40c258eff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2a5535e-8f91-42a4-8e59-585c927dee38",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0572a52-6159-4b78-968a-96de4bc3725e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de63053a-0afa-47e1-b48d-9e6c7adacf7f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9984e14a-e0f6-444c-bdbd-794ecbe7bd5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "4347b148-3837-41ee-beaa-5d10f3091162"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c52a260-29b0-4b04-97fb-d20fd8b80bf1",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3dbd421-6e54-47bc-b703-6901fe18b605",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb2e72b5-012b-444b-9ab9-28b4e1e5282c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb7fc5ec-4283-484d-b39e-3dd9bc140263",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "ed58ebc2-1e7c-4feb-b423-5ba5681f176b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "101f5e66-187e-453f-8557-687cafa60a49",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3e23719-3d7b-46b4-9aef-30b86779d51d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ffc0baec-5613-4067-994b-ff5a51171a4f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fd10cca-08e1-41b4-aaf2-84c6d11dede6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "b8e783f4-b9af-431c-a861-0b029922e9bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd05e91d-543b-4d4b-a4be-1328c2943f89",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f186fba-ac85-415c-ab5b-c4a010b80f2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8747bb35-5323-4c81-8f4d-a59423eaf5b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78b2d927-6836-4fc8-9a23-a6cfc4abab15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "da3b2a9a-779c-4bce-8bc2-aff882681a71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c282a434-ec4d-45ef-b955-aab28851ecd1",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfecbd07-1170-453f-a936-88aeeb64053a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "b7eae579-08dd-4ce9-b51f-54da7f57bcd7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0701ed7b-e5bb-435f-ae69-39a8424ccbd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "1ee823bc-4c33-4d34-a7f4-618cfe22f8d6"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "784149fe-3770-4175-be01-2a6fa32d70dc",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "52d78f9d-a594-4ca8-b8db-982830ff32c5",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2271152a-7f38-425b-94b4-e5590660bbde",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "cff5c378-8219-4f1d-8eb7-370c3bfcc56c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "166051bc-721c-473a-91d8-0dbb24b2ac67",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5493e78e-1ed9-494c-90a4-8aa1cd0ba83f"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1f3cdeb8-86ea-49a7-9942-b03460966064",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "16e3fd79-d11c-4e48-b34f-4b70e418b90b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "4743f94a-54be-49fb-8ef1-6ee5d344b819",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7613f21a-d3fc-444d-b802-b6da664f1a2d"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "12c63707-c434-4249-8972-4b27d7f38c3d",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "bc322065-0101-4f2e-97e5-606e392ccf35"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "c561d679-66e5-4518-8589-96723f6b24d4",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "e94aa6d2-58ae-4709-b961-17557503bacc"
                }
              }
            ]
          },
          {
            "id": "462f0413-8ae7-4bdd-abd7-80ba777a8ba2",
            "name": "Positive Testing",
            "item": [
              {
                "id": "aecf0c14-c782-4756-9bed-922541766079",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "9f34d07c-37db-40cd-a4a4-e5911887b142",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9810cbc2-1da1-4b0e-aa31-51e647c3de07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "92112d30-90f6-4f6d-98b5-03d532847563"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7dc8580-0736-42dc-952a-cf42af455255",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12129154-5dd9-4916-ac71-a0cc5e707820"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "6af8e4c6-9d1c-4689-92c1-4cde2b21472c",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "76a672ef-d030-42dc-bd68-a94a94c92f12",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "fac95577-1190-4d19-826d-a9a79d60ee0b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7401a5ca-a341-4b19-89e8-22514948b85c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "db97659a-771e-4a8c-b5e6-68cd40b20a5a"
                    }
                  }
                ]
              },
              {
                "id": "d056374e-c980-4187-9395-68802a369fe1",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8d32f1bd-c7c2-4cf2-8429-dfcd2c1c8d51",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "30653de0-effc-4c59-8c23-ff3aad6d09d9"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "369f7ed7-3104-48a8-946b-eb2e0e75225b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "bfb023cf-4662-4eca-924d-e2ba18f6f1f5"
                    }
                  }
                ]
              },
              {
                "id": "6bd420c1-596f-49db-befe-634ae0a72fc9",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ccd1bb3a-8cf2-4ae4-b737-0da9449f68c0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "980ca6b0-ec13-464e-a8af-65fe88c95bd3"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "58436717-d6dc-42cc-91db-4a5ae93143cd",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "ca9580d7-c969-40bc-8ca4-86c468444247"
                    }
                  }
                ]
              },
              {
                "id": "eadb1e27-8c49-4fba-90bd-6ef0f41f4bb9",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f4ae5c9d-6ee7-4ef7-8dca-23bd8c326971",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "0efa8661-5f88-4bf9-9d74-bab78b529b76"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1bfdb793-8f6d-4e10-8349-ada075b6d18b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "da9b0a39-6c67-4a31-bf7f-1ea72559699b"
                    }
                  }
                ]
              },
              {
                "id": "7f265ef0-b639-474c-8f44-61647b2414f0",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4a10b81b-815f-46e3-af35-3bf6ad741fc4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "4e4959fa-1ff4-4957-83e1-7b9d5bf5c789"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "12d75b49-68d1-4353-9adf-0af0851736ec",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "6677191d-e246-4e7b-af11-3935cdf989e4"
                    }
                  }
                ]
              },
              {
                "id": "33fa0ed0-afaf-4cee-a818-f2fbcec0ce97",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "344c4c8a-5679-4b4b-975f-8ac0e51cb99e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "78587075-946e-4767-b8e9-11ccafdc1404"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "544de762-a98a-4934-827b-c31e60fff5a1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "2414002f-e758-4cd8-a93b-8f359a0fbca4"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "76c784b4-b533-42b6-9778-24788d135591",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "36831400-8421-4d4c-b34a-c0c5092f9a29"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "8d1be22d-fbd1-44c1-9931-6e5542abcf25",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "6630c287-25b4-4213-9676-08f93ad4b7fc"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3c77c4c5-c818-48d5-a95c-5e790e6d7677",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "95000bcc-6515-44b3-9cb9-b3ae24bdac08"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7fd9644c-5490-4900-b65c-02f1d5fc8c58",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "7d48e79f-b81a-4ec1-b3cd-04b6d8e7a64d"
            }
          }
        ]
      },
      {
        "id": "ed1c5e6d-46c8-4122-9321-b3522394c359",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "37588e5c-bdd3-4d60-911b-338a95c8b879",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c909b545-cab0-4622-be8b-8518350db0fd",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "53d053c7-ea1a-47ac-ac14-23012bc02a0e",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e19a2b06-0714-4816-972e-5dc74be445d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb32c21f-ddc2-4fc1-a6a1-848dec749ff8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fe3caf1-007c-4311-a4bf-fe5141fab0dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "5dd6417e-d738-4197-a4e1-e7cad6c21d87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "069d7277-9b76-416a-aaf3-cdbd18f09e20",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5400702-ee69-485b-afb9-39d56c234ccf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14cca112-7906-4676-883a-1efe826fcbf0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0cdb0338-a38a-47b4-a6fb-3d0624dc6676",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "94b7d98f-69ac-429f-903e-cfd6f1cc6db8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84afb30d-ce89-4d61-a517-8986105539a7",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "512a5f65-43a7-42a8-9db1-db357d49c294",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ac6e550-34f6-4957-aff3-4776a174c358"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b023ef2-5e35-4e1f-b863-666802bc8503",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1f61f682-8a28-4cae-81bc-2bee68df1128"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec0d69f8-c7a3-4d63-9aa6-7f846f19ef38",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e9bd2ce-4fa8-4405-bb75-c0f37afdecc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69979ff4-8cbd-41af-8fd7-ba138c5fae26"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c8bb9b1-4db1-4723-a542-f9237e3985e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7f4b06f9-bff6-4104-9d81-2a64be7ddad4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f7e370c-4677-4d3e-a85f-ea29dfa58bed",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8e5826f-27f5-48d4-a733-ebe5c4b0b501",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "108e616a-efa0-4b3b-ab31-f19feda5f680"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52f19ee1-9f8f-4f12-99ca-4909fd568d2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4af657f7-afc8-4397-b634-aeb14cc5cec9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23cba207-d0a9-4077-b4ac-3728f8df49da",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c906ec2d-4061-45ad-8b64-66e6cf97a1a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f4ce1b7-3e15-416e-91d4-1d866d83d969"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eaa4b2f9-de64-456f-a63e-c780e016025c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "48a71f1b-f7fd-4374-a530-2435152a7318"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc215a1a-7053-4959-9457-14d86eea234c",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d998fd15-6dee-417c-a744-d5c0c50dc48f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "052826b2-0b7d-4599-8733-f5d58a1e1bce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e830290c-2bca-4b38-ba17-7a79ea148eab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "56fab95c-1392-4928-bc39-33e20d01bf76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbdad856-b369-4736-b7fd-e95474f2a42e",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b5bf066-140a-4c4e-aa4f-0d618ba0505e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10c5dead-2b47-4344-a865-3effafafc3f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97715946-f495-45c3-965e-359c2d28a89b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "31e2a9c8-e3e6-43ad-a930-ad91a8f61c0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84ded17d-1644-4335-9d61-167482bfba3e",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c4597e3-fdad-41f0-bda6-4d25dbe0d321",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "536eb70d-be13-4b11-9958-5cba87657dcc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a97ba683-e97f-4a05-b567-b4f52e6ad009",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "919c8ef0-5759-4eec-a942-939eff084d64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7ab61c8-54ce-4f08-9280-f7fa738a83c3",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "206291db-aa62-4678-8325-408ae5bf85ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a94691a-e029-417b-82e4-73bb31f5e3d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11f6edf7-9885-4428-82a4-e089fd30f5c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "478321e6-e7f7-4a79-a5fb-6578fa02baa4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66eb720d-3f55-440f-9660-fe70606741e5",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ec40fe5-0263-4366-a761-0c5790cabd21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49ba4c5f-2617-4167-95d2-fd0de652b50d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f21d136c-8567-4333-8ba3-45c90f81763b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "7f6277dd-f38c-4c44-9b5d-4a569328ef7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae5d2648-e9e9-4857-b738-0306807afee7",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bdeb9424-81ce-4d9e-b44b-364e0a00b8fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b4d7b225-dd17-49c3-b7c9-5ca03b42c856"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f6d9869-554b-4791-b2d4-0ad31c440e0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d29e4827-d5ec-4c79-8c42-108ac3d1891b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "208a2c10-9099-4fc5-99df-a63e45c76e09",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b760b49c-c1ef-4f15-b418-56cbf15ada0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd7cac82-e742-445e-8f6c-f7652b4d2d70"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2bf181bd-6f22-4d58-afd6-5409a534bf89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "b871fa5d-e0eb-45e0-81df-8595419bf342"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6557075e-6760-41b7-85c0-a5840b6ff528",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1dfa3885-00e4-4bb5-9a32-872940f2ea61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74c87b3d-c7d6-49fc-92bf-494eaf7c819f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c431cc9-f30b-4d1e-870d-b5dc9c0ebfaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "143531ff-bbd3-43f1-9545-be32316278a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92ceafbe-a193-4c39-bae8-90138a5c487b",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c3b3ade-65dc-40ef-992b-014d7c986bb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d58e015e-c97d-4b8c-a2be-b25ab7392553"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d08e8821-36f6-4875-a11d-10c7e7cde3b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "4cbf4902-5153-433e-bb86-db2ed12d6ed9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "116b13ee-907a-48f4-8885-8936b3a5e815",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2b74944-f8ae-4082-b7a3-c2461b0116dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9084c476-378e-4495-99e0-102548404f8e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3bc0f4bb-52c5-404d-8690-65888bfc039f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "9af099ca-a454-4bd1-8635-714af185df6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "965c3fe4-c0e7-41ca-bb0d-2dc936d6d232",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c325c88-3643-4e5a-a1d1-c4592ce416ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a1c9a8f-3737-4dcc-ae5e-a0bdd0573f3f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86513c26-2be3-4229-847c-d672b9c7663c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "977bb8c3-f17b-4fa8-9cb0-1e049fae3e72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6592335-c1be-407c-ac55-19ddf153dcbe",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd9c7756-78a8-47c5-9d31-ac75475bea38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5340e82-df2c-40f7-b16b-8efd7964ba44"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "233f6a52-2f0e-42cd-add8-90e6d710b844",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "e6629de3-9673-410a-8603-6e6d6e5b1114"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfcdceb6-0cf9-4261-895f-2e5ee66d7ecd",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "777b7c5a-8907-4f61-8fc9-9a7a9b2a749b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "43dc5834-25d8-45ff-9db3-639f38a54032"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b20d118f-7f57-4740-b214-2c877a81f688",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c2125f5a-40c6-44ce-b2b1-6b006f053244"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03027c8e-ee13-4247-9575-639305715926",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff790067-b540-4544-be7c-89edd762b2d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c9a6dcf3-78ad-475f-9631-0674d0bc215a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e89a2645-b865-4864-8000-a5f4a28c4b19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "997446fd-038e-42ca-a80e-68a358647df1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "447c667d-e08c-4db3-8062-96f6f7b0faf8",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71863c06-0f24-452b-8aa6-68e89040069d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6866b6ec-e3b3-4955-8e88-2c9c01963e93"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1dd6ef2-b6ce-4800-8f44-73731c3d5233",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "db734bbd-1751-4d5b-b223-8f089d39fb61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20d475ba-0491-4d6d-9763-e42164461a53",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71683910-1c44-4c0c-858a-350b5f24631e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0bf73f44-9b42-4a52-b4d9-3202294a8703"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4764e3c-9097-4012-99b8-4e2fe6aa155a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "520e9ae7-57b8-4f3e-bd02-79c8cef4c61c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3905f170-e913-4587-9781-1f6e16987097",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b84fe890-4004-4c06-823d-750aa576a058",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d4550e4-0f2a-4969-a8dc-8ed08199a1ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c72c98c-5067-4166-9672-eb9967b3c643",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4507778b-8c07-43f2-9201-0bdc4cfb1bda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4bc3c497-47bf-4849-b838-24e3e1f270c7",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "201c73b5-a6d1-4f04-b61a-cb6bc286a0ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a6be259-0005-44ff-8856-98e5234dc0ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b06e55f5-80f4-4f68-a247-2cbf60dfffce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "14a7fe3a-135e-48bd-856e-314f2b923618"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb750725-a60d-4295-856b-554103d00b46",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fcfedf3d-33ac-4c70-9c65-5ee9b6c7892c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3de842cd-e15b-4476-876f-19e9d9e4df1a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "417f8091-2566-450f-aeab-779597b2888d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ce7d675b-1119-42f9-97d1-7e4ee32889d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25c0b50d-0541-4306-9d69-e560fcccaf93",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56d900c6-05e9-46bb-8311-90c912013fcb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8df3b18-5507-4adc-8e5f-7db811a1ed59"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a277feb3-dcde-4a86-9207-9862d7eac28a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5e8f9551-51b4-41f5-8849-0481c1470535"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b23e3c31-6b18-4f62-93e5-5dee2e672c59",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3738c0a9-0e7c-4fae-ab9e-b63b53f579da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44563d71-d05b-41f8-be5a-8e1ee8f281ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0079f43-dd2b-4395-a842-a539d854f88f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dcc1c0fc-cdd9-44bd-959f-40d6c20ca6a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3805470a-2dce-4b68-b7ef-25a435c33e9a",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a889d50-bb65-4dcd-9fb4-739f3b0b2b74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be7067e9-8eb6-4405-a94c-a0cda8151ea6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c39a80f-6145-4a99-8e8b-c324bcca666d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d429079f-70bc-43f1-8dc1-ae252e20adb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9cb3fe7c-3c0d-4953-85d9-3ef23505becd",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cb3f1a2-9ad7-4a98-a1d1-624a5d818e88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d45de0c5-ac34-4206-8b59-ecc6fef5e82c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a46444d8-9605-4280-b762-af1fac2f1f58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dce21515-6514-4ac0-8699-9310bb229fc0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4cb085fa-1cad-4f58-8fd9-730c41fa8aff",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5d7f161-1726-4c08-a42a-3fb856afdfd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d1cb87e-42ae-46bd-afed-94638b4cee88"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f89d071-39ad-487e-bb30-3ed2561c38dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2880a768-32d2-4654-8b3b-f7929f60741a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1409f19e-9d7b-4ec5-9ed6-6b69e87a1313",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f469f449-44db-4132-861b-693f45fde1fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ec2a35d-27ab-413c-b8d8-1f71eac12853"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "886cb846-c0f2-49d6-971f-8ab2a13b8d2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "211a29be-612d-46c3-ab8d-1876516844aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a910586c-6701-415d-bb16-e60635fa124f",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef05ceca-2002-4066-a04e-5d3b3b101f2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "507346b9-835b-49af-ad86-74229b1bc73f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a33b87b5-1231-4165-884b-a2f6293f0136",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c40e95f0-c0b1-403f-8efb-d9a9398c27fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca711eed-8ec4-4422-8d58-8307d51f2946",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "873fa837-3450-4821-a339-516eeac2e7d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3224447-f4e6-4f36-ae59-b03615da0ad5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8db397ef-48b4-4daa-9fa4-2f5ba09b6f16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "46b1e135-cc6a-471d-9f06-f24c1ca915b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e48448c-1ef3-4930-a076-76e27ee3c0a4",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5cece04d-1e8c-4e1c-af78-74e135b1f050",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a214d111-ff5d-4c45-827c-611d25b9d500"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5556c43-1ce2-42bd-bcd3-496f3970548f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bafd1a2b-1f97-4378-9336-40c41a8ec1f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "978c5d84-8eb1-43cb-9374-566cb6f1e830",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff964027-07c8-42f1-bff7-5a94d4ae93fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20bff2ba-637f-4ea2-836a-656b4aadd373"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55f92752-3001-4cf4-8f08-91afe1189fc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "59ba0fde-80a2-438d-be13-2ef8c0d0155f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d79dd885-be60-481a-b329-cfb2d9d624f5",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb2bb7d9-9142-4fb2-bf99-0bc23a902f4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5cd5ea5e-095f-42cf-9630-702510622ad2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11d40db7-7c97-4629-844d-7f15956fb012",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "11f4ff68-9f9f-45ec-8720-2738dad9fd9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba6b9a87-5a98-47fb-ba62-0743b66166ee",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7d0e904-cc4b-4ee7-b6b0-bdda0df21586",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb87abbe-e11d-4d8a-896b-cd1f4c396cf1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1539ff78-41f2-4593-b5b4-0de9c2623a9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8f43b888-abe9-48ce-919f-67d33d0ffac2"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "3ea27148-772f-44ca-acee-c975f04bd67d",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "aa5b7af5-fb7c-4e4f-9fbb-1834b13da936",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df85339d-58dd-4441-a35f-cc3f58a15023",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "a7298cd5-b333-4cb2-9975-4ce5fffe1229"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "028f2310-2ee4-48e5-94f7-70e3100e9b13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7268e596-a90d-4463-bb8c-68e21685457b"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e4527823-e27b-4797-898a-21aff42b1a06",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "16fa99bd-66db-4174-bb33-d0f90071b33d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ed60e000-59fb-4ce0-86ec-942c9c9dfaa4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c8a175ce-7aa7-4dec-80fb-0d8dad0a6838"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7cc6dadd-3c0d-43d9-8c3b-90d7dcd3b35b",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "ac14d1f4-259b-4241-9b40-b8a32297b30c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "dc8d002a-da18-4e86-8a66-54c8494f9c52",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "1aa4f86f-ec61-4faa-a91a-9ad219407a77"
            }
          }
        ]
      },
      {
        "id": "c1b11cb1-6a54-4acb-a501-a8bf057eabf9",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "b86927d9-73ea-4fe9-a6b0-ebfc27cb5c0b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "bebb8b95-69ac-4a39-9d69-749af016a116",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "d6ecd79b-2523-4616-a39f-82762c35fa4a",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d3d3b03-951a-4947-915a-99e16e469d7d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85071fac-b3c6-4c56-a385-219ec3651f59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "310905fb-fb0b-44e6-9e85-afa4c52de534",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2b5f2d5-af1f-4203-b41e-b0aecf5d5547",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3846370-8e75-4809-82cb-f701501e04f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6da452ac-eef3-4b60-ab12-e588772cda48",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a398dd9d-dc55-43de-be84-f0b31452eeb8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "49a380ec-43af-44fc-a3e1-af5d4ae0b9ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0d2b1fc-0955-4085-a09b-6360fd716cc7",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "303a1451-70a0-4071-81d5-02b04441e160",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3bceb3c6-c1c1-4aff-a941-51d86edd6566"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b6a1fbf-2bde-4559-8727-ed2191505baa",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82d38e49-1612-466f-96c1-65319a461c7a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2935e0e1-28f5-4aa6-90bf-00287b572251"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e4b233a-4b3b-401e-a731-ff014ada123a",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27ded524-a6a7-4f15-a296-4c8449b92112",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "810e0a20-e802-4f2f-8696-66b468fc3fce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1633b0f8-53ba-4857-94be-0998fe276d5e",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5857c433-8582-48c9-ada3-7e18e624589a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "294824e8-0dcd-49b1-8d0a-008c066aa1d0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "409959a3-6c61-418e-a0ee-594f40e0835f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24d5051c-e8e2-4c46-90ad-ce1e070adcc6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7325748-0626-4158-973c-687c4970e540",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "906efab2-2b01-443b-a955-adb50a2b09d3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "13681356-384c-43ef-9f67-df09a6d2d049"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d50e5ea1-d9c7-4eea-967c-b1978951ce8b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70c2e9cc-8bc3-4617-a7f6-265d47c0dd5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "678a96ef-89bf-4d01-b93f-887c8045d71f",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f211c7e-2d1e-44b6-ab79-823b6b12940b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c0a0dde7-687c-4cae-9b66-938bd74ba2e7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c8c2c66-3a65-46e5-bf26-265d5a9eaffc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "351ef927-36a6-4530-96d4-3ad1f26e4971"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32f3ae9d-5bc4-4338-be57-05aec3e73bad",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6dd9deb8-db1a-4c3c-8031-e11a857935ad",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "38e45e7c-de56-4f6d-802b-ccf71e3c5732"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "59b23d5e-1ad4-4de9-aa45-2dc15b3fee5c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3f03a2f-b18b-44bd-b54a-5105671c2674"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9846d38-d6e6-4dbd-bc4e-2f7c0d04077c",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ae50f3f-0f4e-4e3c-b4de-ed4afd28044b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2243b846-1618-49d1-96cb-0d1077564289"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d617336b-b15f-46c4-831c-551c03ffb48c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a8872c6b-fd15-408c-a61f-b280dfaf79c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8ba5824-eef7-4d32-a416-86404e9f7fa4",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a54d6014-bb40-42c6-b3c7-7f8942205c79",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b83b577-6731-4200-bd6e-5af7a420ecd7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e89b0054-2cfa-4ab2-ab44-5a0f15af5be1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6aacf49-d806-4ad0-a017-06b3d49dffdd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a52f1c7-bf79-4159-978d-34f41c46d72d",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b476bf9-c696-45c3-befa-0978ccc1d605",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0e168d4f-1e7e-4842-bdb5-f184581fbc5d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "987dc917-7c74-41a9-9aa9-3469780a8e67",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b2d950c-39dc-4f92-b44a-4e1876790edd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93f20d76-9dcb-4609-8567-35f117db50d2",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84e00bc7-d9c9-4d7e-b0ae-12809de2850e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e4dffc4b-a491-42b4-859a-9a909b73b740"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5c3f0ac-aaf6-4d79-8a24-eb0ee530e792",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09f04d28-ce26-4284-a208-c555f1daf237"
                        }
                      }
                    ]
                  },
                  {
                    "id": "874ba30e-c709-4d22-b392-59df41f6f3cd",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "338066a4-4dd7-490b-abe6-e419b59e8f3e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c309e0d8-db8e-48b8-a150-6a65ff731da9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "15166349-eff2-4ac1-b697-23c4b1bd1057",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "206a9860-04da-45ad-aea6-fff0471f675d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "775aeca8-beb2-4915-9581-05c96f5b2852",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb37a1a4-ff2f-48a3-8da3-30c31933d28c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "235f23a1-9865-4a93-b0f2-04b5fd1714ef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e89320d6-c32c-4c82-86f5-ad69ff265469",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ae4228d-a9e7-408c-abdb-d831c662f264"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5dde9fda-2736-444e-bdc6-398f104dd2fb",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19f6121c-bdc2-49b8-bbd9-fa3a271aebfd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8a78eb2-f3f8-43a4-a7d7-d1220267df23"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1023c7ff-74c5-410d-87bd-6a0c56319883",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "465750b8-1253-42eb-9b5b-7d995f52691f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1563b2ce-a524-44b9-82bd-4b58ad8064f4",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72bacff4-493f-4807-8540-9b324ae4818c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b0ec59c-3ae6-47d8-bcb4-3901e857c2ab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f571519-074d-4603-a8de-161afb32128e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c50d0da-2d08-481e-9a62-95b3fd7c8eae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b362bf0-ddf0-4558-8fdd-6ec193d1c266",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2bcd7f58-ff71-41a4-b137-5f39eef3f10f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b3708f9-ff1b-4f2f-864c-84a54fc6a090"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b26eecb0-06ec-45e6-882b-148f1f17d87f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42dcacfc-5e26-4bbe-9bd7-73a95e372fc3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ec5d3c6-9921-4c46-88c5-0f5b9ef80558",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "750be958-71a1-460b-94ae-e49c975cba20",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b80b5b9-e5ca-469e-99f1-ca1dfd6c0931"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d97b9a9-dd30-460b-9172-9ed9e12d3530",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09c56259-b88b-4191-85b0-0514379aa713"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eeff4019-0add-49d9-b3f7-806eace0f0e8",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e14fa56-adcf-442f-89a6-f6f7ea33d303",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "689169c1-523f-4170-b80f-ebe08edcf5ce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9b21a94-63e7-4e61-b3dc-327fcf377afd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ad2f028-26e5-4350-9f77-60933c75c143"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b46f49d-9d39-4429-a80c-eb409a6bb825",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3713f606-ea93-4738-9d1c-24f51e726052",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c962d46-16a1-4e2e-ba80-9d501abd251d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c9730cf-f174-4545-884c-00427d46c6bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "afd73b25-d263-4383-abbd-c94291049da2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c44e23bc-724c-4757-ae21-bf36530cec29",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c29992b2-699e-4bc6-90c4-202ab9c519f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fbe986dd-dc60-4d6e-98d4-3d61397246a2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f45f08b4-2433-4c1d-aad3-3de6de2a59fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1483f1d6-b136-4646-ad27-00d2e24d0a75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1a31be5-6fb3-4f89-839e-cab5672527c2",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d812a06f-a74d-4122-acc2-e63c0032224c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9045f02e-edce-4a2c-908b-ecd4e382d116"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fcd3064-a5ae-47b9-8867-2bc76deae8ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de80efe5-bdbd-42aa-b46f-a74218379645"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed1cb411-2ecc-4f5c-b533-c627380a2548",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5907dd9a-6dc1-45fc-90e0-f9df02761899",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c6673b34-2f31-4111-9c17-cb5b3c50a33f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "75f374d3-71ac-4edb-8fbd-56f431141937",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "90e211f8-c957-4354-aa0f-4877a09614b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c0673bd-e515-46af-b51c-3a85dc82f5f5",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b27a274-7b59-45e0-a1c1-d2ca524b1175",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "90922808-e524-422e-b20d-35915fe7932d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4deb8225-280c-475f-b6b2-5fb73147a70a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e35fe03-2154-4357-9e17-605369f5716a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eef267f2-67fc-44d3-8f0f-d9baa2fc3e7a",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c98100bb-29ed-4a75-9095-433f49d54576",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e097916a-1e34-4963-8ca7-651cd707a961"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "25d4222a-d719-4927-b3b5-c0fdcac40107",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "778f6d57-ee40-4170-bcc6-738e40c1711e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "603c50c4-0a92-4652-82fd-c5f1a30de3c9",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ff7865f-dec7-44d2-bf25-0df99a4407db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d46a6c1-69da-48af-ae41-3d7bc79891e4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "047c17a4-c621-4348-9ede-0bf0955662e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9ccc5b0-7f0a-4292-b255-ce3b3370e3e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "753d6d69-cde2-4859-8b8b-410e9780fb33",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10d3dc65-1c87-435c-a32e-669cfe4be3b1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "34aead48-ab44-4107-bd55-fb89e9293bdb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "193ac36e-a0cd-4db9-8e47-9df4ea9d30d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a8d21c4c-9762-41ab-8b1b-dfdd1f9f77d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd070958-d0fa-4c71-a3e7-20181e141616",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f9ce74b-dab4-4dac-ab67-a23064217642",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e950a07b-877b-4983-9339-4b63dd4d8803"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "70ea4329-a17d-4aa0-bd2d-3c75ce726757",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1103d874-6c0f-4cbb-8736-2f7021361915"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26e9754f-7ce6-4965-aa36-33f7ddb4043a",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b488d4b-66bc-48fb-96ee-6562bfac8b3e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "76649f48-d865-4492-b86a-9f35cce91eee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf7aaea0-065a-4bfe-902b-efec0da04c2a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6d0d2a5-67f9-4e55-b110-e7986862de88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24b8f056-ae5a-4212-b193-3628ae0b6677",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cdc487da-ac7a-48a9-8d34-5e8d92dc0ca3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d1f08a2c-86ad-44bf-a4d3-27574a4abe23"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "977bc7b0-f6b6-4609-b21e-71550e4a9707",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec00b030-b246-4500-a1dc-04a883f0132a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7b13021-618d-4b20-ab8f-a2d0e2fa0ae8",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2c08299-3648-4141-9eb3-fa3050f53b83",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "696a4634-a9a1-4c4f-b183-2f16c016ead5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca57dd41-caa8-48e4-9db3-dcb5f112b88b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "592edc2d-c70b-43c6-bb2c-ba8344ed8c4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36edc49b-5103-47bc-b028-75c5b79940c2",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "322b67cb-e62e-4e77-8508-f4a8ad869982",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ac5b9068-20a6-4e57-9b8f-9a5a9f5b3a54"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6454f7c-3ba5-4bac-a9e5-8769024456eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a5817cb-4d8a-4bd0-b126-fa90acd5f2d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db142a76-c1d4-43c0-9494-0c83e81f6323",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1172e24-2386-4eb6-babe-20db47fc798d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "315d4978-5b25-4c00-9265-6dd794171d26"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ba76407-05b1-4d0f-8223-ce9087b0eaad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8eb65515-b011-432d-b497-bda57ba432c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18cc7035-bc5c-4044-ac72-abb5bb2f3eaf",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b54ef7ee-5bb9-4d65-bba3-3d0b76a27f97",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f942eef-5a23-4d40-a0c5-c67c00e73b25"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "73a8c654-f298-4a60-b361-2a0749e0916c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84545618-0683-411b-9355-c5b3047bfdff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e068fc6b-ae1f-4f92-947b-859a492bf265",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ed0f60b-2b2c-485a-9957-75165f86fd57",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8ac71da-0a9d-4df7-b84e-6f30e3791a2a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d68adf60-9fa9-42ad-994d-306593720d6d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1734523-172a-4660-bc99-8f14c9bb58b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78db11b0-15c9-44b0-8ffd-d6710104b0b1",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d91c4dc-8f35-45f9-b198-217926f94ce0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0693e922-8975-4544-8e1f-063473079ecf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba80530e-a1d9-4bc9-ad8e-85440e2a924b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35840176-47a3-46db-a03d-c7a9046fda63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50878cc2-15b1-44dc-825b-bd66d14eda89",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36b0b951-134e-4a0e-90be-f7d5642a21d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6712626d-57f7-492b-80d1-be23dc3b94f1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d169f996-ead4-4bf4-91aa-034d7f28b7b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6234f140-b69b-4b58-bd99-74b0541310d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "735f4784-81ab-49bc-a2de-cf0e2c6ac6ee",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3237c8f4-37e2-4c1a-8583-5465d47759c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd66c511-5c17-4e53-82f8-f7bed84418c5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "19fc6954-7e30-4b57-8095-27fda1d8a4c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "31f3bd54-b6f4-4255-b055-1d6fe138a20b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b629e07-dfb3-4282-9863-31c48b77521f",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61b0817e-644d-4aec-beab-d06be98dee7d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b75e50ca-caba-4d41-b208-4fea194a60c3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a715373a-3070-40fc-b997-f76ce071e35b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "140147bd-0949-48e6-a93c-d1dbfe9597ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6fb6a4e9-47b1-446c-8c3c-fea088e81ff7",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79c67b35-8f84-4a15-bff1-4acdffae0f8a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d2cb871-db48-4305-ab02-8d2e1ab971dd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b40922a9-b41d-43c4-aa42-b7f294103708",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd306acd-f1c8-4a61-8b95-06537cdd939e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d14ac64-20cd-44ea-8227-658ff4220e01",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1e4ed81-f235-414a-82ce-34f35d1c4375",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd846c33-2845-4eac-a01e-0e50d02465f3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d378c63b-4c8e-4a23-86fc-3dfa1869c76d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4fc0ccc7-fd08-4fca-93c1-e7299d2ddd73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3451530-0ee2-4088-8d42-83f1aacb1283",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1d20f3e-f625-407b-9c52-5d20b307963d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b96a89a-ba2e-40b1-974e-68822bf3aaac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "50f763ed-b7ed-4829-b940-dc344c8e25ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ffc642be-c967-4cab-9612-407b8ed7a04e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5defb28-73c1-4820-97a0-b192791d0fec",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69f94bd9-52b3-47a1-925e-a8416bd7e7ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "944c6b92-490d-4b35-8c55-d5d0f534cc16"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c8c304f-5da3-4872-aa00-2b1a0002b600",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dcaef8f9-0b51-4228-8381-cdde3781a9fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "976cded0-2120-4bcf-8362-9bdd3ecdea37",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5122e6c-d8be-4130-82d9-bfda39a35dcb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1efbfbae-f361-4fac-934c-fae5e5231fa7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9a26093-5358-420b-9f82-b60b38d5726f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "340a2a1e-b66e-40df-b6db-ab53ff3d49a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c80b911d-49be-4825-8083-5b3ebd5c8fc7",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1064bc0c-bf20-4749-b144-41fafeafb5a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f33db2a-4db9-4173-915b-bc63f27a1461"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fd6da82-36a9-4bde-bc55-bd2abe4ae86c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7118d223-e281-4108-99a6-ec4172056385"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b66132d6-c37c-48bb-b77a-39daf3fdbcf1",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d25c8f41-03f3-4dfc-815b-c00a2b925094",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3df448ac-3cab-4f93-8334-1eb71008b18d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d5da51a-79d9-4852-baf5-10a90343de8d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8993760-4e67-4858-a3b1-a4a2bfcdc7eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5edf77f8-9935-40c2-9532-6e9b3702e337",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dcefae15-9fcb-480b-961a-5096bd614483",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7a6e047-5274-4287-a44b-1a3c1665a254"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bf1350e-851e-42c4-9ef4-33f4318ba4e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d77d2cc-1163-4e11-9405-cc41be6d77af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fec78336-7432-4d73-90b5-a0297e204369",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40347947-d1c8-4439-a1d9-2576978aebbb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f0700f51-4869-483b-a913-ccd654c3a63a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce7cce6d-610e-47c4-8a45-a2180f95589e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c760e563-01e5-4ad2-bcdc-542b36e8fa0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04f4eadc-25e2-430a-8d74-de29d3e8f9cc",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f335569-ba7e-4f48-879e-845f4e64d0dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39f5c34a-d6b7-494f-bebd-d8519dea27e8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9cb700e5-65b1-4855-9681-8b11431de41c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc776d9c-7b06-4dd7-a9fc-2c83b4b15b19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ae997b3-57c4-465d-815d-adb46cb891c4",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2eca34f3-9701-4df7-b2f7-7441a95c9f4f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc17a4c9-2868-4161-a755-55953a8dbd48"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "441fd09b-42fd-45c3-b91b-a6f2150f4b56",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86173a48-0343-4533-aed4-0b50e8a5d53e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd49a6b7-d604-4a0b-828c-199e83a78a7f",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5c85622-e17f-4208-b7f5-186d014e412d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a07953a1-cd06-48fb-aa76-c25e327f17a0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8b8a30d-b836-4730-b6bd-33b1efb3d72a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44f0ac33-17d9-45e9-a535-a6b6af6288a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7778d1a5-c38a-4888-b54a-9c9126054211",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec7ae2fa-bd0c-45a6-96ca-e880a14b3f07",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68377c67-4bde-4ec4-a10c-7c4958743374"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "68f67ddf-c53b-4b71-a295-eadf19e19950",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1bba25d8-9c97-44fe-8038-dd7ff1b478d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c99b8250-a7e6-46ef-8004-e6eb0e16689e",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00e9bc4f-4e70-4b5f-a97f-d9652e8f7fde",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "98f5a8d9-dd2b-4503-9656-962513f11461"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d263420-f865-4f02-8b7c-dbd5a97cc867",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ab02e54-08ce-499c-ab71-14c2acaa9490"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41cef8be-3c4b-4cc9-b9ad-f0f5b34e92e0",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9773d7ff-380d-44db-9972-38724ab0fa38",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b0fddcc-981d-4f66-806a-96aab73c3ae4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a0ca81d-c5ee-4b94-8014-ac0f1db3715d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ea367b0-cd28-472a-b013-e4fddcefa7c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4db601e-0068-4275-860b-d6202919feb3",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8957644-ccd7-4450-8aca-2c4087ac51cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b99a45e-b5e6-4ed0-aaf8-0c3790a24eed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e18a9000-c26d-418b-8d02-9efab31f206f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3bd78a63-64ef-491d-83d1-9d6431bfc349"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8984253e-a018-4142-8862-db6b8cdc1a14",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e21be6c-1cad-476a-9f53-4f0bbc705ff6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "416c845a-8f67-4359-96ef-3fa0f507cc30"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "381e2650-1f29-4ff3-b4c5-11bdf96d9000",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "15593449-ba76-4378-9181-d99faba85eb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b75e449-543c-4e1a-9626-c5f7cc1e2544",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f7dea3f-489e-4161-abff-724bdc2a240e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17c8f4f9-2e1e-4c89-b75f-22b4698a31c0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdd9a5cc-1020-4ad3-8f8c-41de0e4dc3ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd1b50d2-4bf6-496d-9800-3633b2ee8528"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9143c79-60d3-41c8-a6e6-6320c2539534",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ebea2d8-c64f-4e7f-920f-1b771ced5b92",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b6ea6423-a9f5-464a-bb0f-e21bfadf7ab9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce7cc6e4-206a-4bb6-995f-301f47f28bd1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09034593-4bf5-4880-86e2-e0aebc2464ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7501d76-bb2b-4379-b099-9d7ac967d488",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc0bf93b-31e9-4d65-b7e6-c7818346240f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6cf6686-5a4d-4e65-9dd7-9c6f74289609"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a37f26d4-2bf6-4cda-a0a6-bb5b3a71f510",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "15104c7b-2419-414d-94e7-6a7ad13e262f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85bdc736-2b9f-4fef-b703-c936aefe8d6c",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8adef412-be81-4042-aea6-42206d3d7cf0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c683f16-2197-411b-bb2b-e003a229ab32"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3d68dcc-d0c3-400c-84cf-2a4a9a6cdb3b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "007f8d48-878b-4e35-bd8a-1f0e7a469c4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e17e3ca7-ced7-42a1-9489-5d730a4ca27b",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06b1f2d7-4530-431e-9896-de15a5f2ef50",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38a9afa8-ebeb-42ef-a0c5-9a6b7002d4c4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "02bc7917-9eaf-44a6-a0b0-a76a07b885d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a7224ab-99d8-48a7-87a5-09aac10d0a30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf01c8f4-950b-4872-b35c-161748d2729a",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a515b61b-a4af-43a7-86fc-5d884b75ebc8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e9bd1157-f573-42db-845f-61f459a9d099"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6c412bf-cef2-4d42-8226-e5fbe61f4e25",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a96b8897-08af-433b-959a-31a46e51f39c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ee8512c-2da7-4aa7-8441-0da3841c8c27",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce760a53-8515-4bd4-bc62-fa2b7512757b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6b47b3c1-c544-42fd-a4ad-30fca903b11d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d92dac36-ceed-4972-8f54-7770f0974001",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc473bb4-e48e-4f35-a14d-bfd2abd25d77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf4d816c-4492-4bcc-ac97-8006f266e723",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac1677f2-da48-4553-b7d1-1702f2bf44a5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "38bfed47-afc7-4ed1-88ff-497409b1dde9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eac54136-96ff-4018-8e0a-41c5d0be69f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ac04213-71fe-4f3a-acef-0d43750892af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed35b376-ae38-4248-aa80-aba9d3fd5d0a",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f5f30ff-6337-46d1-b053-bc96ed27fdd3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ad1a1bac-1eee-4fcc-8ac1-25a298130d05"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e3c31b6-45d2-4ead-aff4-b1d2fcc2b377",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2218506-82d1-4f80-b740-8e1581b069e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3cc009e-f068-49e6-9f17-f203fecbf2bc",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a049a45a-1b37-4463-bafe-2a7926f454a3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ac9dd76f-8d3f-493c-9278-2468d0bc7641"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a551494b-d9b3-442e-93d8-915d0331374d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f1c4ed2-5269-456e-b822-8ec77b8ede6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55d9fdf2-4cd7-4d26-92e4-d80a368b1198",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c836f39-5aa4-4cd1-81a5-1907c419f349",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a9b79185-4d2c-47de-8118-aaeef2831ef2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7c486f0-1800-4389-9f5a-c0643c313c76",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c229111d-1ade-41fd-9e33-c084513866ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23881faa-99a6-4b53-ae10-57e0e6a0d0fa",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e45d180-d5f5-4315-9301-35cf7123db85",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ddaf3ee8-ced6-435c-8772-39e34a3f0c54"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a5afa88-87bc-4ea3-8394-98442ff92989",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd485e84-fc13-4423-abf4-919440f628ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6f13b8c-d8f6-49a5-b96a-4fe4f464b6ad",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed952c0d-78fb-4ef7-b927-e4149f47a5f9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7a465ce4-74cc-4bb1-a964-70f250477eed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b2383b6-82b4-41cb-ac81-07c9caa3f98e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3b020ca-5e61-4187-9fe9-6c0c3a4a1408"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da4e6eab-0c57-41f6-bc0f-d1a332795baa",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2719f9a-076c-4b6f-bcab-2357102ed80f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8283b5a2-798d-4f1c-93d7-0bfba3335d7a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf115efd-c8fb-41d7-bd18-e779041ef6d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "48e10bc7-1280-4093-afaf-216c20099c5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b90dba2-a318-419e-af13-81d84ecf9edf",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "038a76dc-373a-4fdd-a8f3-47223df85be7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "99ea75c0-9794-4134-9d6f-810ca0334cb1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffadfefc-db8a-445a-a42d-85ffe10362b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e5b7a62-a73b-4881-b5dd-0e97523fccd7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2637dc54-feb2-4402-9897-3377d67caa9c",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d70661f4-fad2-48de-ab0a-dc3a515d95a0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7e654324-2e37-4f9b-8ea7-c7ec03ab65ff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6431eaf0-68d8-47b7-9392-ed70ae1afc8a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ba2b293-ef14-4fd7-9e05-cca084f69759"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9750d8b9-f7fb-4792-ad4d-1efdf93bcc65",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3efb8e5b-65f1-4bef-b941-2399256e304b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ab479c96-1f98-47f9-9027-0158855d996f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1898b8e-96b9-4a8e-ae95-6950804d6791",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7564fa80-e5ea-42bc-b455-02225d33a789"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b63a20d1-4826-4d73-b0e8-8d2a8a1ba47a",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d3cc822-c13b-489b-848d-219a9fa4646b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "22470395-161e-4780-af49-9b6af64b1a3a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb72d080-3c9a-4377-9599-02002310d45f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c23d2b7-a95a-4722-bb03-6e89f00b1638"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78df979a-4d20-43c2-adcd-71d130e49ece",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a48a89fa-cce8-4e0a-9793-02cbd6c5d18b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8569f6f5-736c-4f32-97b7-a57ab1bfc1b6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "63f59195-279f-4ae5-95c7-2cf15ac1d7da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4fa13f7d-9d4a-4bf8-8daf-d957a5913787"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b6609c2-c697-4e52-89dc-44552cde37d2",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fecdd234-113d-4bbc-bcdc-71e4e3b0aea8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "abdd23f0-b195-4ef2-a051-611f2d3f5f80"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3ebe289-f726-4d2c-9b72-4439c4771c15",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b6e66e5-3269-459a-b979-8090950db342"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f586618-f325-465f-84cb-36869a545a7c",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7b93e37-37c6-4c37-ad6f-61f4500858a9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "28f3cef2-4c25-4c8f-9637-98c84bbc15e1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "62d49c5a-8af0-4a7f-a1e3-fe11ab125aa6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "950b3ea2-fb38-4731-b07f-7a74c164ba90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a050ee46-b3d3-4565-a500-6d3f2dcc59a6",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0e1b214-ec7b-4d15-b747-99f019e86c28",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5b548ffa-3525-455c-a851-c4199b6f5904"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc1338dd-36d4-48b8-a1a5-06d146f5c3c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2abb83c1-f4f2-479a-839f-97d8fc601a03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69221d30-a32b-44c0-87a4-08ae4c0b5d73",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab70d42e-cfc0-46c5-b821-d5575c352e2f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3c385724-b21e-46fc-aa3b-9b6c81dbdabd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a2470b6-398a-4264-a1bf-1ea827819ca8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d8306a0-ce6a-4c00-b80c-304c49258793"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12f5e4e5-a2bd-4ca7-ac8d-f35ab500b553",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b4c7a1c-09b9-4dcb-b7b9-b66702a04b8f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "166b3bd6-04f7-4dc9-9df6-5294c55d4432"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9893b174-104b-44b6-97af-a0d4dd94d3cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "100d3a50-71a4-42b4-8388-2a2131c1ea4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "977d49d4-74a1-4dc1-a7d3-1e5d08ba6079",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8bea9be-43a2-4b0a-9f3d-00a70764ba4f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1623a6a8-f6e2-44d3-bc7d-00801d027a6a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d4e0778-c99f-40b9-8ff0-2d34e046c53a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b0697158-cc85-4801-9e2c-51f9d1873e1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "273bc98d-b754-4c68-945a-555f3f05ec4f",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a5d6f21-57d8-4b27-89fc-85df9e3a865a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "82a92312-ae0e-457e-b0ad-652837602694"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "81ddd599-8713-4734-9761-f2bbbd2e51f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62f65644-e8ee-466d-863e-880d8b1c09e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8817f58-7208-4f40-8a9f-938e46eb56d4",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69e18a31-5f0b-4b41-a748-cb0d22acb28a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7293d3d7-14fe-4b83-a4d7-e7d5f903ad80"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6cfb4b4-6112-465b-abb3-34904b1ebc84",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d7aaec9-d9d9-4f59-9b91-7e1599bf2e08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d84d5e69-2b0b-4bbf-affb-bf60b9c9ef87",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "336507aa-c081-4f79-b094-5fb9853b1392",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0930d9a9-2e6a-433e-940a-2e927dc5ac2e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "083f9d44-118d-492e-8df2-30b31c9754d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12a87e16-aac9-421f-83f6-b49cc1cf6f02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b8b8749-e7af-4311-9601-0046094c3499",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19b1c2de-0cba-4bbb-846d-4c5533f52974",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4e57dfe9-4580-4a73-84eb-cdb5b3a3b904"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a210bd8d-a684-41be-a60e-9500fa36885c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5bf33cbc-6dbb-4f49-be16-2ddd40683bd3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbcb56ad-0a66-44d1-8991-299ac17cb8b9",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52dd00fb-a0e0-4015-ae1d-9d96f32c565c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ad3f5597-ef3a-415d-be93-d9a53e801695"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5af63b91-087b-41e1-bf5f-57c2576fd699",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a81326c8-0a2d-4061-b03a-9d34b8c8b5fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc7ac8fc-d90c-436b-acaf-f06666068df4",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e0c36d2-c14f-45ca-8cb6-d29a52af99a8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "43dba174-151b-4db4-bd14-2a2e0d3b471a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb7b93d9-9415-43da-842b-d0c97d74115a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e7ad69e-cb89-4366-a6f1-791b6d4397af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d9f945a-f15d-49f9-b84d-3db20e4903ee",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3a3a689-54bc-49de-97be-7edf11ba62cd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "912e3148-ba60-4eb3-9d87-8f89d4f8276e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ccd84d9a-76ed-4711-a17a-6a8d308f1fe2",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1c9ed21-40bb-4780-ac6d-f797550629b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6573e574-447c-4fdc-9a43-6884fef417d4",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4452793c-7e83-4247-a0e6-9efad2e3445a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d1b5aa81-96e7-4750-8b7a-0f38a00f2cb9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e73f3d8b-b77c-4a68-bf59-b782e26f80b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a95df25c-4637-4ade-bada-e151295e5a60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0e85a08-4c7a-4c9f-b8d3-9e2fddf813d1",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb44104e-78a3-4d30-8748-82819eac6a77",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bf21217f-3ef7-4f94-855a-9b5c967c2fd8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d5a1fef-6015-4f4a-bfb3-65dc58c6f857",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86e7372f-86a7-4a76-bb6d-f1c43dd027f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7cc6d593-a182-46f2-8fdc-2400f7907968",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92621411-ed82-4d2c-b8ee-789de7c6d570",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d86efe05-87f5-4195-a2f6-4cc52c03909a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb112eb6-04a7-4dbe-b965-0c9a4a8e592f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55a1361c-7ca1-4bfa-b3d9-89dc69d3800c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f2358b5-33fb-4197-8085-f591707aa052",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd554d4b-50bc-4957-afd2-0c9e9cfda9fc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "57da5143-353d-4c37-bf84-5fb6a877f78c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "98157ea7-728e-4b54-994e-923916b44c43",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75f83554-e23d-43f5-b9ff-37a5cd4752de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc6e4c24-8459-4a6f-9a1e-dd14a4272184",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5098e7f6-71a8-4c1d-b8fd-67addb23bfa3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d0a5b4d2-5612-46e6-a6ee-1cea5f6ce494"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c308b35d-52b4-42bb-9523-7833bc9e1c58",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ddbce57-bcbf-480c-8481-2c96de42bc29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f085411a-db97-477a-801b-2775711a05df",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71a0bb40-ab30-4098-aa9f-137f805834fc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e90c5dde-2130-440e-ac27-097c262f9de2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c9a132d-3fff-4066-b23b-d6c34f0cbccb",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31187e9a-4548-4b64-b9c9-b4d05d19027b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ddabb8e-ceb9-4ef6-bb30-55aa1b263cd0",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f05a80d-29ae-46b7-96a0-ae03eb8d1bcb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "169c6ba4-3518-4f71-9c1c-144cfe157ab3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9580b1e2-1ffd-45ef-92ba-ed1cefa66ace",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ae6a8d0-9101-4cf7-a4ca-00bab81a7b6f"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c5601b32-f222-4ea2-9342-2a77e3b98ce5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1ad988fe-98eb-4eb0-9172-cb814cd03a12"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e6c99665-ec90-4f09-a35b-b2ad46da4f89",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a1dc9847-7983-4fb6-8939-2f943adda980"
                    }
                  }
                ]
              },
              {
                "id": "161b2d43-695b-4c0b-b44b-a17cbdaa1c50",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "80dd14b1-a2b5-4cc0-9917-87d5dcf73038",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec20e5bf-fffb-41b6-a089-8edd50dd1179",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "e5ae2fdf-ec1b-4a34-868c-5f12cac8743a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d025be2-a417-4d69-8596-31344d98f955",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0790a340-a686-4069-b735-73733f31bb33"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9e70a347-d0ec-4399-b9ca-cac1190096f7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9bfc1aee-de37-4f24-a6df-bc282581e433"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "dea15d63-2cb5-4cae-a2b8-55090eac1e1c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e2bf9162-dc66-4dbd-b83c-dbc3b7869ec5"
                    }
                  }
                ]
              },
              {
                "id": "848a5031-b33d-4ff0-86f7-0b1a97b9aa78",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "6defef6a-7cd2-44da-8d20-47f4d0491ba5",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2807374e-038a-41a8-a361-085a114f4226",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "130101d7-64ff-44fa-8333-2f88a3e0e60c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74fc05ca-0b1a-444c-8639-fca8c1b91779",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ceda58a0-0c7b-4722-af05-caa87f55fdc2"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "f17d9e39-6f9d-4d6b-91eb-470d17581e93",
            "name": "Positive Testing",
            "item": [
              {
                "id": "18ea999a-8505-4aeb-86ec-71eedb3f9386",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "425949d9-b659-4b66-bff0-414803f2542c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "b713301b-f964-4ab2-aeb1-821c5a3e6676"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7a33b908-e7ed-4f71-bd10-64b326e144e6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2c44df0c-c438-42cd-b076-9a92754c84b7"
                    }
                  }
                ]
              },
              {
                "id": "8ce2e133-2e79-4956-9aa2-280b7c17708e",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ddfc545f-c653-4153-9990-bdf3e46c0a67",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "38b375cd-68ee-409e-85ba-4c92b92c2e19"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6b45e914-7f5d-4de9-b93f-a671b48c4806",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2e5863d0-c792-49b0-a4e8-99371def87bb"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "97334d26-3071-4e2d-a4cd-a5e4a3690071",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "8fa44625-1730-434a-ab61-dd2f24f032e1"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7e104568-1539-4e8a-ad2d-e39f86a10760",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6f178c33-44c1-4af7-a8fd-7e9913d5bb19"
            }
          }
        ]
      },
      {
        "id": "6781cb03-3e01-4314-8c8d-616fd9a78c72",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "5e16b635-7861-4879-8281-8f4974d455dc",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d5e45b1b-38d9-4a89-a885-fb4a204d319a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "fed3458c-da0e-4e8a-95f4-5955efccf4eb",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95ca42eb-e1b0-4fd7-af68-89aeeb1747bf",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "d9f34d5a-6bd4-405d-a57b-80e850388326"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf76ac99-fd1c-4b6c-bd88-36efb461d861",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e1e26021-c354-47de-96ab-d3ae7cf26c30"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "03500901-0fa7-4161-a820-fefc940fb58e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5e3633ab-54f8-4d8a-8c68-4884fea2561f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "120db15b-9009-408f-bdeb-214d46e56a19",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3a78168c-b4d3-47d4-a7d4-7070596b3439"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b51f5118-ff6e-4a71-b7c2-7fb5ae7ee626",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "147fe0bd-f6fb-4950-a936-d34daa21a03a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "47d24794-8097-40ff-82c3-70d2292bbd52",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6117f0d2-835b-4b5c-9470-208e846877ae"
            }
          }
        ]
      },
      {
        "id": "62d6091a-4708-4418-902d-02649b4ea705",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "7450e693-33a4-4791-9faa-080df947e30b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "aeff1478-67b2-4769-8c48-21beebb41304",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "705d4fe2-75d1-4fac-bdfc-75938dbb16ab",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ec87829-1c40-431c-9453-563416f8fd3d",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0bb85457-9034-4d96-828f-624c346f5adc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "18341bba-bf80-4118-94da-0043fffb266f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "903d9c70-9231-4dc6-ab2c-a4f2984ee361"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c399ddbf-20f0-4ce3-a099-ec87243e3061",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b5b8533d-fa1e-4276-9640-86f7c3b0a19d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "23aefe7b-dd80-41d0-841b-6225da48f421",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "07f160f3-ad08-4b73-990a-93d254908af2"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ca90ffcd-fb54-4c3d-b938-300f32fee880",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "91d1e649-d308-4302-9628-647910e9d14f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "08379621-db48-47ec-89ca-ab1c1f074e4d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "fd046fde-7918-4a6b-b728-d8ed5aaa2f95"
            }
          }
        ]
      },
      {
        "id": "56d35362-aab9-4447-95b0-b950c49e954e",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "f631ecb7-ca49-4ffb-bd5f-1e7d76709a68",
            "name": "Negative Testing",
            "item": [
              {
                "id": "2e1f8671-8e4b-4aa1-a6fb-97e1cd81fee0",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "505bdc95-fb82-41fb-a0d5-14365feaa0fa",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7899f723-eb68-4ec6-9c6d-165d9711d4f5",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c88a6e0f-87b2-4334-af99-c817c4bab770"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "61b874c2-55c9-4c76-919e-807563cd2c7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a85ff9ba-9d7d-4a02-b878-569cd9297e91"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3e2a6f7b-66fa-4940-b467-2aa33a26313d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fa962a5b-e8a4-4860-a46d-402b7909d704"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "919edf2e-49e9-4c45-b909-f187d4cb364b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3bc326c6-daa9-4d74-b691-ae4c289e6fde"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "755f5ac2-b9c7-487d-9453-a80332358c5c",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "d4c6da0e-cdb6-45af-b4bd-15e029d83223"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e16f95eb-9796-451b-aba6-2b956821953b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "64ecce97-12fe-466f-a936-b3a1f3fe782d"
            }
          }
        ]
      },
      {
        "id": "3252e2fb-2a0a-4934-bb69-b3e7ffe96741",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b46bb9fa-73b4-40a7-b57c-a95b918d2d60",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2f22fb55-08a3-40eb-9c52-227d44b947c8",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "88b91648-d104-48bf-8cbd-95e762793909",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f9b49e6b-79e5-48b4-b289-5392dbb4f3d7",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c2591294-94b6-4f92-b28e-f0ba37e34404",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1891,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 507,
        "pending": 0,
        "failed": 38
      },
      "testScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 941,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 69.43650793650797,
      "responseMin": 6,
      "responseMax": 369,
      "responseSd": 22.638987312502543,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1718930264670,
      "completed": 1718930290407
    },
    "executions": [
      {
        "id": "ff1f131e-a5d2-43e6-b632-499c910c950a",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "7b14edf2-9232-412e-a3da-ce4a011cc259",
          "httpRequestId": "8189639f-8c3c-4de8-914d-0a01c8a54d77"
        },
        "item": {
          "id": "ff1f131e-a5d2-43e6-b632-499c910c950a",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "6682a4c7-44a8-41d1-a713-ab32bb4dfe24",
          "status": "OK",
          "code": 200,
          "responseTime": 46,
          "responseSize": 0
        }
      },
      {
        "id": "7592d724-d5f8-4b61-a731-d031ae33a576",
        "cursor": {
          "ref": "f1153412-ecc8-477b-b85e-f376247d80bc",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "19a68e50-05d0-4da3-ad66-9bcca4518669"
        },
        "item": {
          "id": "7592d724-d5f8-4b61-a731-d031ae33a576",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "1674331f-eca6-4534-a93e-a6cc14b089d7",
          "status": "OK",
          "code": 200,
          "responseTime": 6,
          "responseSize": 0
        }
      },
      {
        "id": "955211f2-7ded-4440-a18f-f0e846b71042",
        "cursor": {
          "ref": "d89861e4-4d0b-47c7-88c0-2b9ebe89c269",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "a168125d-0d7d-4ec5-9bbc-4196dff7dc30"
        },
        "item": {
          "id": "955211f2-7ded-4440-a18f-f0e846b71042",
          "name": "did_json"
        },
        "response": {
          "id": "23e3de1e-6032-47d5-bedd-864090c403b0",
          "status": "OK",
          "code": 200,
          "responseTime": 369,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7c1d640-8473-48da-bef2-33055ed27de2",
        "cursor": {
          "ref": "eafe1f40-a6c0-4326-a6e1-bd558ef23a6d",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "1987c7a9-e00c-4596-893c-f4c102e8f46f"
        },
        "item": {
          "id": "e7c1d640-8473-48da-bef2-33055ed27de2",
          "name": "did:invalid"
        },
        "response": {
          "id": "06e84dcd-056e-483e-87c5-c4e16680aa5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7c1d640-8473-48da-bef2-33055ed27de2",
        "cursor": {
          "ref": "eafe1f40-a6c0-4326-a6e1-bd558ef23a6d",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "1987c7a9-e00c-4596-893c-f4c102e8f46f"
        },
        "item": {
          "id": "e7c1d640-8473-48da-bef2-33055ed27de2",
          "name": "did:invalid"
        },
        "response": {
          "id": "06e84dcd-056e-483e-87c5-c4e16680aa5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75ecb093-58d8-499a-8b20-a660a6f3883b",
        "cursor": {
          "ref": "34e53b90-5d07-4c81-997c-a45d346c2ce2",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "03323215-037a-43a9-bbed-386c965b57fe"
        },
        "item": {
          "id": "75ecb093-58d8-499a-8b20-a660a6f3883b",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "9646181c-35a0-475e-9363-33925bab1886",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 177,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 404",
              "message": "expected response to have status code 404 but got 500",
              "stack": "AssertionError: expected response to have status code 404 but got 500\n   at Object.eval sandbox-script.js:1:5)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "062d76ce-9d52-413c-90b6-4ea729f465ae",
        "cursor": {
          "ref": "6db30f4b-0fac-4195-9ccc-f9f69597ef28",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "f8533142-9662-4912-bbb9-6e30516b7b9f"
        },
        "item": {
          "id": "062d76ce-9d52-413c-90b6-4ea729f465ae",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "cd43a5e4-8219-47d6-845e-83cedba80cf6",
          "status": "Not Found",
          "code": 404,
          "responseTime": 67,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5912f275-35af-4dd8-998b-fcc96343ed19",
        "cursor": {
          "ref": "b59e0e38-0e07-450f-9677-6bf5c600a4dc",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "4dd71de5-d502-4895-9e65-2452d03c86a5"
        },
        "item": {
          "id": "5912f275-35af-4dd8-998b-fcc96343ed19",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "498c1aeb-1cf0-46ac-82e2-c1be455dd37a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 68,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84d59c1e-b6d4-45be-b88b-3b79412aeb8b",
        "cursor": {
          "ref": "fe06eaab-5b38-404f-9a6e-de9ca76e08ef",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "2a3822ae-e451-487a-bfa0-44bcbc07627d"
        },
        "item": {
          "id": "84d59c1e-b6d4-45be-b88b-3b79412aeb8b",
          "name": "identifiers"
        },
        "response": {
          "id": "57abf067-0de3-4530-bed8-6bfb4be7be18",
          "status": "OK",
          "code": 200,
          "responseTime": 133,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5f9585d-783a-42e2-9f8b-d43a4dee9bf3",
        "cursor": {
          "ref": "49f83607-d88b-475a-abf7-7b2b3fc5ad99",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "5ef1f4da-e9d7-4966-a7b3-512674d030cb"
        },
        "item": {
          "id": "f5f9585d-783a-42e2-9f8b-d43a4dee9bf3",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "b45765cd-ab6c-4efa-9150-ff5083c39661",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04a1c386-b653-4e1b-ae4b-9ba148496f1c",
        "cursor": {
          "ref": "709e6831-abd6-4151-802e-9e605b3ad06f",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "1b3d4e93-991d-4f41-8fb6-e9ac1ef27eb2"
        },
        "item": {
          "id": "04a1c386-b653-4e1b-ae4b-9ba148496f1c",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "d45cdc6d-04ae-4eb6-b26e-276405cc6def",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78e6d6d2-ee10-4900-85e8-0f23ec8da232",
        "cursor": {
          "ref": "49321427-247a-4d23-baff-06fac1109347",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "adbe976a-9554-41be-bbf6-91a093889536"
        },
        "item": {
          "id": "78e6d6d2-ee10-4900-85e8-0f23ec8da232",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "093bd56c-7129-4eed-a2c9-f5e08485fdf3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2a3b92d-3f6e-4f30-b85d-9a75f260a3e2",
        "cursor": {
          "ref": "2a4285cb-6c03-4df3-9dc3-37eb11e2261e",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "e18bba7c-841c-44b2-8a72-f3b90f79e6e3"
        },
        "item": {
          "id": "b2a3b92d-3f6e-4f30-b85d-9a75f260a3e2",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "9210b67b-2db1-463d-b638-02d373283d5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edc5b7b0-5eb0-49f8-9ba6-b827f7ad6dbf",
        "cursor": {
          "ref": "1932fb7f-ffa8-4a12-9fc6-312a6aeba494",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "60dfea4f-978e-459f-8efb-976b978f5de5"
        },
        "item": {
          "id": "edc5b7b0-5eb0-49f8-9ba6-b827f7ad6dbf",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "0fbf8012-ec45-4273-ad61-5c5685b0c605",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc0b5203-9984-4006-ab6d-326868372bd3",
        "cursor": {
          "ref": "25b1cb50-c7a1-4d66-8265-5dee3d46855f",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "38345bd0-5787-4ce6-a603-09b33648af39"
        },
        "item": {
          "id": "bc0b5203-9984-4006-ab6d-326868372bd3",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "c293bc53-35b8-41c9-9fda-8de2447a0079",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a54ea408-70a1-4de3-92e2-025c6836d8e1",
        "cursor": {
          "ref": "72c3f78d-010a-486a-b4f0-96b14f95f51e",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "5e0149f2-161c-457f-afb3-965b1e8ef101"
        },
        "item": {
          "id": "a54ea408-70a1-4de3-92e2-025c6836d8e1",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "260d7328-8068-49ab-b873-259aa3a6e362",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c469d3c-a3d8-4085-a738-a3a8fc04983f",
        "cursor": {
          "ref": "67c11f99-1631-468d-9a27-cd073f29c304",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "1aa4b96b-2d42-4741-90db-03f8cf1a1f17"
        },
        "item": {
          "id": "9c469d3c-a3d8-4085-a738-a3a8fc04983f",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "5af02e6e-32a5-48e6-99f8-8124bed16c47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c62ab02-7e42-42a6-87da-af1dc8a288ae",
        "cursor": {
          "ref": "59983583-ad2a-485c-a514-1295f83b76ed",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "8b445658-0baa-47ba-b7f0-18d818b57c8c"
        },
        "item": {
          "id": "0c62ab02-7e42-42a6-87da-af1dc8a288ae",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "2ff2d6a0-ae68-47c5-8327-9669e271cc1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a2c50e7-6ff1-41d8-b292-5698e481e05c",
        "cursor": {
          "ref": "58291f16-c5cf-4f04-a25d-4f77c0a067f4",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "fc7c1b57-3fbc-469f-8be7-cb5af1226636"
        },
        "item": {
          "id": "8a2c50e7-6ff1-41d8-b292-5698e481e05c",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "a3dbcbd7-e1f8-4a6a-86b0-86fefbf8808f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc296117-5519-4853-9274-4e0a660a076d",
        "cursor": {
          "ref": "269516f2-0fd7-48b7-8f55-eec772aa8875",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "3d37bee1-1124-422f-847b-3760ff2f8c3b"
        },
        "item": {
          "id": "bc296117-5519-4853-9274-4e0a660a076d",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "a7ef0dc3-d39b-4264-9ab9-4e94cc55d6af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66fe904c-78ab-4769-898d-9d39e7a74ffa",
        "cursor": {
          "ref": "ac4fc572-0c5a-4acd-a2bc-b91c1b905c64",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "95231725-4ebd-4ae5-832f-5ec15239c5ba"
        },
        "item": {
          "id": "66fe904c-78ab-4769-898d-9d39e7a74ffa",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "d043f57e-1bce-4ed0-861b-335f6ebacd1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ed703a7-c23c-416e-af1b-7aa53d2a10d3",
        "cursor": {
          "ref": "39239cd8-6044-4dff-b9e7-b796cd10aea5",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "44ad937e-41c5-4882-bcd5-947090c3c9b2"
        },
        "item": {
          "id": "3ed703a7-c23c-416e-af1b-7aa53d2a10d3",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "4a97e58d-573c-46a7-99cb-00f30f68b6cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0606bc17-a77e-4fbd-b9b6-795ca25d0463",
        "cursor": {
          "ref": "79c6a6f3-3f45-42f6-8ad7-66fe75b438fc",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "1660483d-fd8a-45e3-bc9a-fd80fe5f0549"
        },
        "item": {
          "id": "0606bc17-a77e-4fbd-b9b6-795ca25d0463",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "bf771dba-50f4-4e3d-a3e4-6de47f3d9bfd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35eb4967-8011-4886-ae9d-2462b92fe90b",
        "cursor": {
          "ref": "99de65ad-bdb6-40e7-afc3-48799e2d1a0f",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "f8176672-696e-4709-9722-bda55e0fff78"
        },
        "item": {
          "id": "35eb4967-8011-4886-ae9d-2462b92fe90b",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "aea3d32e-aa75-4b61-8cfb-17763c5cd434",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5524980f-2279-4090-8138-7ac0ef35859f",
        "cursor": {
          "ref": "b6e3f316-192b-4d60-bac9-78e0af7d6235",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "64c52ff1-e77a-444c-9e5b-a7fe39b55ee9"
        },
        "item": {
          "id": "5524980f-2279-4090-8138-7ac0ef35859f",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "1f9e2966-4bf8-4fed-8eba-1f9dfdb03003",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c717d3f-1eaf-4872-8b78-abf475e3143d",
        "cursor": {
          "ref": "9c84a266-9c5a-4adf-ae29-b3be46ebb213",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "fb3ca76f-7a77-4f35-90f5-219859d2b465"
        },
        "item": {
          "id": "8c717d3f-1eaf-4872-8b78-abf475e3143d",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "605add71-a319-4937-ba68-21852d890e1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f94eedd-8e6b-4980-ab2d-ff7f45bb3925",
        "cursor": {
          "ref": "c51e44f7-7538-4c2c-b279-a0818212c432",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "893df7ae-66db-46d7-83e1-f36e9e04be0d"
        },
        "item": {
          "id": "6f94eedd-8e6b-4980-ab2d-ff7f45bb3925",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "f27d6092-c720-4a37-909d-9032bfd5b676",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a13baa8-5de2-44ba-9ba9-fda144ca525f",
        "cursor": {
          "ref": "45d681bd-bdd1-46f2-8f32-4b92a8cba3cf",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "5436e59b-fd54-4880-a79b-f6da66c204aa"
        },
        "item": {
          "id": "7a13baa8-5de2-44ba-9ba9-fda144ca525f",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "97551f18-0e27-4883-ac74-9e4fdafe0109",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bd9d951-dfc3-4099-be55-08323d597fe8",
        "cursor": {
          "ref": "15c8ed5e-cfd5-4f3b-a403-c12a3863915d",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "11b7126e-1e5a-4076-b74e-8f7e6832eeb0"
        },
        "item": {
          "id": "9bd9d951-dfc3-4099-be55-08323d597fe8",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "5ffc6298-10a5-4009-ab28-1d72c1d9340c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02237d36-8dd6-41f1-aa3e-20a5c93e0acb",
        "cursor": {
          "ref": "a02b7b42-9ada-47b4-bf20-db62e0c0b961",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "ae171b4f-a21f-47e2-a569-d7ab7e9c0a51"
        },
        "item": {
          "id": "02237d36-8dd6-41f1-aa3e-20a5c93e0acb",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "90add0ed-d50d-4994-a417-740baceeea10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f995882b-fd44-4fe3-a709-a1fa08d8747e",
        "cursor": {
          "ref": "3e31dbfd-e1d6-4c94-bfa4-1bca288773da",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "14249c59-23b9-4386-a31a-afe9b1bb86f1"
        },
        "item": {
          "id": "f995882b-fd44-4fe3-a709-a1fa08d8747e",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "8545c760-d139-4a0c-b827-1f14f7a5af22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0c5acd0-d30e-4f5d-a3ec-c24aacf05437",
        "cursor": {
          "ref": "d6cf08d9-c9c0-4de8-baf1-a1736527c647",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "854b16d8-26af-4295-907a-d1a2584796a9"
        },
        "item": {
          "id": "a0c5acd0-d30e-4f5d-a3ec-c24aacf05437",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "6b98419b-5ddd-4eeb-858b-44173e68841e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f9b87a0-6526-4267-b51f-af66066932d1",
        "cursor": {
          "ref": "03df02a6-e792-4045-9100-5c7cac048cf4",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "2bb4fa9d-fbd7-4fdd-b3ac-412452fa181c"
        },
        "item": {
          "id": "6f9b87a0-6526-4267-b51f-af66066932d1",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "285b88f7-35de-4600-b983-49e88540a1eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5096229-17b8-4103-91ce-464f4c92e907",
        "cursor": {
          "ref": "fcc88823-c420-48dd-9767-ed634319b2e0",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "839e0d5a-8b67-49bf-be9c-92698de3985b"
        },
        "item": {
          "id": "a5096229-17b8-4103-91ce-464f4c92e907",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "c8df77cb-1807-4bb3-83ef-99d81888532e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e499cd5-9a76-4b5f-9ab6-16b8711bfb8e",
        "cursor": {
          "ref": "f354cb2e-3f67-4735-a4f1-0b319db55faa",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "9b2917dd-5ad0-4c5b-b1e7-c8ecb966ecd2"
        },
        "item": {
          "id": "9e499cd5-9a76-4b5f-9ab6-16b8711bfb8e",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "4a994920-4ef5-47d1-b8c7-527117bce863",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8467964-24fc-4a43-b7ac-31d496a2648e",
        "cursor": {
          "ref": "bf2c992e-0243-47a5-8eed-41d7a82824b8",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "d00cd5d1-828f-47ca-a40c-378b8907ea5f"
        },
        "item": {
          "id": "f8467964-24fc-4a43-b7ac-31d496a2648e",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "3d38294a-b351-47ae-80f1-2a47e8a7b864",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bca06294-35d4-4f74-b734-aaa4afb49576",
        "cursor": {
          "ref": "171f0703-61f5-4a41-a376-16b1c778cb02",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "12c7c0b0-4c41-4d53-b659-dc7fa4872b3c"
        },
        "item": {
          "id": "bca06294-35d4-4f74-b734-aaa4afb49576",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "9c6ed6f2-f84f-48d1-a59d-029c15f434d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6a6fb26-ab16-4d36-89b9-f1753baf7d83",
        "cursor": {
          "ref": "15eae3c0-fea7-4d8a-b563-bebee8b0a96b",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "1a4fcbe6-fa25-44e0-8b3d-899dc2c44f52"
        },
        "item": {
          "id": "f6a6fb26-ab16-4d36-89b9-f1753baf7d83",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "f864fb36-adce-4dca-a7ae-4693c920ebd8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa4f7569-8e78-4450-b77b-5fe42bb8c7ed",
        "cursor": {
          "ref": "75f7d307-cd94-41c8-b239-a4b18f5f9a5f",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "db9b17c2-2f13-4f73-8009-f982ec3721ab"
        },
        "item": {
          "id": "fa4f7569-8e78-4450-b77b-5fe42bb8c7ed",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "aa8ad6db-8f88-408f-8031-19dc3c9dc581",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1691e867-b4ae-463a-b5da-f6f6e0d71529",
        "cursor": {
          "ref": "4aed677a-6c87-439d-89dc-7a9dad7ea45c",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "2c2203a6-76d8-44b3-a37d-2e058d7bf144"
        },
        "item": {
          "id": "1691e867-b4ae-463a-b5da-f6f6e0d71529",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "58292490-168b-457e-80a6-3b3ea9bc4697",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17febfa6-0a4e-43da-a2e1-ba0a1a4cb3a9",
        "cursor": {
          "ref": "a6549244-b862-41e7-b1b5-07c23e422e49",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "526e1ae4-b2ac-40e6-bf31-f2d0a8e576f3"
        },
        "item": {
          "id": "17febfa6-0a4e-43da-a2e1-ba0a1a4cb3a9",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "bfb61e4a-8d7d-4d40-9a34-f5bfa889ad8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7434682-e307-4e56-aca4-2e14370b9f60",
        "cursor": {
          "ref": "4f02143b-9efc-49bc-9bb8-ffe91a96932b",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "39c9cbad-ca99-4489-a94f-6a0b0b17c601"
        },
        "item": {
          "id": "e7434682-e307-4e56-aca4-2e14370b9f60",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "058807ab-6b79-4864-a589-30437bea4f2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b840d128-7085-4b41-9a14-71ee37eda47c",
        "cursor": {
          "ref": "4a7c9a39-673d-459b-ba71-785856ec6852",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "0debe8aa-ad8c-478f-94f0-e9bb16d55c75"
        },
        "item": {
          "id": "b840d128-7085-4b41-9a14-71ee37eda47c",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "4bcc1bbd-c5f0-4790-b99c-d2f592a6f944",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "392a94fb-7db5-484f-a2e5-c8336d87d72a",
        "cursor": {
          "ref": "592f6258-9894-4dd8-b1bf-9cc3157e2048",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "bd441196-f27f-47aa-acac-9f6a3e317aff"
        },
        "item": {
          "id": "392a94fb-7db5-484f-a2e5-c8336d87d72a",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "3bad6ae7-fa5a-45e4-8d09-060d07827a1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24ddb22d-389d-4db5-953e-a38884d18533",
        "cursor": {
          "ref": "af597325-bf8c-47a7-8e17-32024d1d2777",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "58a4b3be-7229-4e45-acaf-8b5a857216c1"
        },
        "item": {
          "id": "24ddb22d-389d-4db5-953e-a38884d18533",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "82522a71-8b29-4732-acab-77415e2e0342",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a89cf1f7-3f8d-4dfa-b4c2-2868a309577a",
        "cursor": {
          "ref": "191a6502-2d14-4cac-b595-ec60f9b84488",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "037e23a3-471f-45ee-9c03-9a7fee9c1de6"
        },
        "item": {
          "id": "a89cf1f7-3f8d-4dfa-b4c2-2868a309577a",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "fd569383-d508-49be-9d81-ecab62d8e2a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c585bab-b5f8-49d4-b839-a809d15a7611",
        "cursor": {
          "ref": "37fc1f4b-d5ed-42c6-baf5-37cbbbbc5f31",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "a5b8858e-04f1-4065-8616-08f469b9c7bd"
        },
        "item": {
          "id": "8c585bab-b5f8-49d4-b839-a809d15a7611",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "822b1ce7-7799-44f1-b3ac-6685db03ff84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbc29710-a929-4da9-bc5e-88b27e8e0a85",
        "cursor": {
          "ref": "24cdd1d3-a8dc-4092-93f7-bbce1e38ec18",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "50e6d718-31ca-4acd-9982-b1c070d4d14b"
        },
        "item": {
          "id": "fbc29710-a929-4da9-bc5e-88b27e8e0a85",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "b5e20f1c-bb60-488b-86e6-b1ad5b25422a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8749b89-f893-466a-99aa-b5649a73392c",
        "cursor": {
          "ref": "fcab51cd-55d8-4d78-b736-1aae5e07459f",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "bf0272ce-b026-48ee-9818-d684f086fea3"
        },
        "item": {
          "id": "a8749b89-f893-466a-99aa-b5649a73392c",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "9a77e419-ffd3-4bf9-b35d-e39c24b30dff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fcf81f9-51af-4cda-b759-f0ba1670d1ba",
        "cursor": {
          "ref": "012233d0-4bce-4abf-b728-ad3b5a1b5a75",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "0a0e7d71-9bc3-43ea-afff-26c6ef742cb7"
        },
        "item": {
          "id": "7fcf81f9-51af-4cda-b759-f0ba1670d1ba",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "f43c5330-899c-4362-a85a-c55cd106f95d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "428e8340-fda2-4fb7-9841-6a61ac052f33",
        "cursor": {
          "ref": "485949b8-4315-4820-83b5-784d769947bc",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "e2d59cc7-1606-4183-b00f-b449130683a7"
        },
        "item": {
          "id": "428e8340-fda2-4fb7-9841-6a61ac052f33",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "5ef1bf1e-d2fa-4579-86fd-a1bc264fe9a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18f98112-7018-4e7b-ab44-46b087258d35",
        "cursor": {
          "ref": "2a161805-5bf7-4665-bfc8-2234cf52e213",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "7a5b4970-f469-4029-a663-6cdfe23eed66"
        },
        "item": {
          "id": "18f98112-7018-4e7b-ab44-46b087258d35",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "6be145de-e7b9-41d0-9647-45a9350cecda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c87e438-06ca-41cc-8f6f-a502afa1cb59",
        "cursor": {
          "ref": "442346c8-7e24-4bea-99b1-53f9352ffdc2",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "2eda15ac-afe1-4c34-a9c4-0f5da23fed2f"
        },
        "item": {
          "id": "0c87e438-06ca-41cc-8f6f-a502afa1cb59",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "3d5626ba-52b9-43b2-8486-22f55894e335",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5734932b-65f3-4bdc-b9b8-124b9f519ca9",
        "cursor": {
          "ref": "88414884-6e7f-464a-8c99-a6dbb50bbdb5",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "7bc7e3d9-c584-410f-b4e7-322d583375ce"
        },
        "item": {
          "id": "5734932b-65f3-4bdc-b9b8-124b9f519ca9",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "7dfdfbed-5c82-4b5b-af36-4ed5f5ff1c25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e11d829-099e-41f9-9abe-2bd03cb5b28b",
        "cursor": {
          "ref": "adc3c647-d3c5-417e-a606-bc687b385b3d",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "5d274484-fd92-4e0c-be89-a33802ee47db"
        },
        "item": {
          "id": "1e11d829-099e-41f9-9abe-2bd03cb5b28b",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "b9447337-0221-4e67-9790-51ca80174042",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f2b61c1-ac81-40ce-8d68-e8b97f1479fe",
        "cursor": {
          "ref": "4cd716fa-57c0-4441-b17d-517e9bb06fb6",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "282fb3f4-28f1-41fd-915c-1a1010a91875"
        },
        "item": {
          "id": "7f2b61c1-ac81-40ce-8d68-e8b97f1479fe",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "74e34f5f-0d51-4577-bf05-a30d89e7281c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93ef1ea8-fa2e-452f-882a-9366422b44d2",
        "cursor": {
          "ref": "947e0f04-b594-4e1a-907a-069acac01188",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "cad1f7a5-6fad-4ba6-bb2c-217670aa565b"
        },
        "item": {
          "id": "93ef1ea8-fa2e-452f-882a-9366422b44d2",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "7cf1a3a7-b9dc-4967-906b-5aea5449d539",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bcb381b3-f3d8-40ab-a6a8-892c914b233d",
        "cursor": {
          "ref": "9ff624c1-f3fa-4e90-93ee-9c3dbb21b36d",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "aaf45760-f726-4e82-adc2-946d8f4f0910"
        },
        "item": {
          "id": "bcb381b3-f3d8-40ab-a6a8-892c914b233d",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "abfe21ae-4327-48db-8f76-ca75a7819108",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "335077b3-0c1e-464a-8db3-5a51ea959e05",
        "cursor": {
          "ref": "d529c865-2f31-4fd6-a050-3f8be31c76f7",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "c91cbf56-aea0-44f0-8080-2eb7da5ca788"
        },
        "item": {
          "id": "335077b3-0c1e-464a-8db3-5a51ea959e05",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "947302bd-b1e9-464f-9358-5b6d1d0dff29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f3ace31-0d87-4e8f-8563-d33f00bfe075",
        "cursor": {
          "ref": "9fb8d67e-5bbb-4d01-b587-5d2a2d03bfae",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "d663487e-0a56-4224-961d-becf1ac9a79c"
        },
        "item": {
          "id": "9f3ace31-0d87-4e8f-8563-d33f00bfe075",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "2a7e4eb2-72de-4d38-b9b9-887e11859e1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d42ec35-3f6e-427a-b2aa-2ca7881e74fc",
        "cursor": {
          "ref": "4c9c39cf-12a0-4746-9045-26cf1b021f06",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "b0a09b4d-4e66-4a24-8290-f32f5955adc1"
        },
        "item": {
          "id": "6d42ec35-3f6e-427a-b2aa-2ca7881e74fc",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "5095ca5b-607f-4276-9452-4e4693c243ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91cc04be-7f12-4b16-95ae-419d1fa4701f",
        "cursor": {
          "ref": "1ecb41d2-d85b-4291-b3e2-14e4fa6c86a2",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "8deb45b2-74f5-4ed5-b742-cd0f607dd035"
        },
        "item": {
          "id": "91cc04be-7f12-4b16-95ae-419d1fa4701f",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "2a1c0758-f191-4ae8-83f4-10fa77ab8052",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9778cac-b490-41b0-8d36-dc5e3d954f54",
        "cursor": {
          "ref": "b7fcf0da-07fb-49c3-9d8b-728dc3f915e2",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "b048fe02-a0ea-44b2-bd3e-fba94e418c25"
        },
        "item": {
          "id": "e9778cac-b490-41b0-8d36-dc5e3d954f54",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "9a18d4b6-9c78-4b44-90c1-4606b33ab3b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b74fd41-aaad-4e95-8a30-e939df62af39",
        "cursor": {
          "ref": "62a8639e-7b8b-46cb-a6ff-e0e59cfd5809",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "e99f0a35-ca98-444d-bb88-15fc48187c2a"
        },
        "item": {
          "id": "6b74fd41-aaad-4e95-8a30-e939df62af39",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "1ea0bdf6-5a7d-44ce-b295-87108f2a3741",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53b6f751-1627-44d4-a43b-3e3dcd6ac657",
        "cursor": {
          "ref": "6131e733-fdb6-44cc-8c0f-fddd5204df21",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "1c6e823a-97c8-4ac0-8bfd-20af40cc80e4"
        },
        "item": {
          "id": "53b6f751-1627-44d4-a43b-3e3dcd6ac657",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "cb29a51d-f0ab-455a-b45a-d079e623af80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8249918c-cbd8-48c2-8d16-c79679adacd8",
        "cursor": {
          "ref": "edb330a5-c454-476a-93ee-9642d1123f85",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "54d6f0fe-1030-4e85-a1c9-0a1bc5c4907f"
        },
        "item": {
          "id": "8249918c-cbd8-48c2-8d16-c79679adacd8",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "a639b7bd-a731-4334-adc3-e7548fc08a8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db02fe03-f8a6-49ee-b1ad-a79c428468b9",
        "cursor": {
          "ref": "1dbd37d7-b1bb-41a1-b925-c10275d3027c",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "ff9e63ee-9c36-43c3-9337-a412b2b6f7ce"
        },
        "item": {
          "id": "db02fe03-f8a6-49ee-b1ad-a79c428468b9",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "9c7d1b17-34ce-4669-b06b-9fc0df43f87f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8abcfe4-c88b-4803-9542-728a5a5120fa",
        "cursor": {
          "ref": "0aa72fcc-5276-4e82-86ad-1f0554c215b6",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "85470f18-a7eb-445a-877c-92b962a10bfe"
        },
        "item": {
          "id": "c8abcfe4-c88b-4803-9542-728a5a5120fa",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "f5070d85-0a52-4843-980a-db8ddac348d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80b750bf-d3aa-49e6-9346-aaaba0c07ecf",
        "cursor": {
          "ref": "da2a4728-3ead-4b1b-b4c7-7a64479ca98a",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "3921cc6d-59cf-47f6-b56c-921b24856eb1"
        },
        "item": {
          "id": "80b750bf-d3aa-49e6-9346-aaaba0c07ecf",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "a5e842e3-ab5b-44d9-a6b2-17ce9c834f97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1f66dc3-73be-42a9-9590-a9645aca606b",
        "cursor": {
          "ref": "6604b9f8-28d1-446c-bcb5-e2d0bfe60f63",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "eb840398-4a42-4c5f-ab5a-f799667b60f4"
        },
        "item": {
          "id": "b1f66dc3-73be-42a9-9590-a9645aca606b",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "ef8f4aa3-969c-430b-8d04-e0f6766b0ecb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8f0aa80-bfc8-4b93-b98c-4a580b5b3e0b",
        "cursor": {
          "ref": "9121d8e2-08a2-4182-ac19-b66fa4bed81c",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "f63f1e35-bd49-4f1d-a056-6e0ab79f1124"
        },
        "item": {
          "id": "c8f0aa80-bfc8-4b93-b98c-4a580b5b3e0b",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "4dc34e96-493f-4057-8f5a-7539eb569cfb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4bd6111-ecaa-49dc-be3f-c7cea1d46c0d",
        "cursor": {
          "ref": "1eff1f0a-87a3-4924-a045-c2fdbbf41b17",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "b0efb311-5639-436a-a116-7aae4e821908"
        },
        "item": {
          "id": "d4bd6111-ecaa-49dc-be3f-c7cea1d46c0d",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "ab42d5f2-3c96-43e2-819c-38e22dfc05ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 596
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37db6e36-8080-4cc3-a8bc-a24c39f54725",
        "cursor": {
          "ref": "f691478e-7fb2-4353-9c1c-3dca1fc20ae9",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "782267b4-cfc3-4722-8a53-6c4eae91685d"
        },
        "item": {
          "id": "37db6e36-8080-4cc3-a8bc-a24c39f54725",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "26e0c6cc-72dc-4a2f-9b59-9683d6d13ac5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 595
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25106802-3448-4271-bd66-f4cb736391ca",
        "cursor": {
          "ref": "f497bb24-b402-4fba-8dbb-54b6a661eedb",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "8386aa28-fd05-4bb6-9616-79d6a1cf10e2"
        },
        "item": {
          "id": "25106802-3448-4271-bd66-f4cb736391ca",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "388f7107-3d76-47ed-961d-2fa556031a72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "870bbbb9-928d-475b-bd4b-d4c3be6db096",
        "cursor": {
          "ref": "74dd3376-83f2-4a09-990e-808446348537",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "4f6df5b4-0ced-4000-bfb3-e8709bb593e8"
        },
        "item": {
          "id": "870bbbb9-928d-475b-bd4b-d4c3be6db096",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "e81f1dca-8aa2-490f-97b7-e77b1766d825",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "765c8c09-b70c-4052-aa56-a21cbd6d3eb2",
        "cursor": {
          "ref": "09f19208-b895-46d6-9f9e-fde9ce82b777",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "ac5bb5da-977a-48ed-9baa-b91b59d15d9b"
        },
        "item": {
          "id": "765c8c09-b70c-4052-aa56-a21cbd6d3eb2",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "a962ac30-9a0b-471a-9eea-f320f87c31b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20a5db61-3f00-4631-8813-96ffaf3646f1",
        "cursor": {
          "ref": "59da6fda-9ad3-4cff-a202-a3502d55ca4c",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "029a5b3d-ea75-47d0-b5b6-fd7912fb0f64"
        },
        "item": {
          "id": "20a5db61-3f00-4631-8813-96ffaf3646f1",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "9ef4e311-a7d8-4a86-9d7e-ccfd12c04700",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e026722e-e872-4611-8241-20ae442e7059",
        "cursor": {
          "ref": "e81d086c-001a-4e1b-934f-363e58b75a60",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "7eaefccf-4924-40b1-9b84-28ba0ec17cd6"
        },
        "item": {
          "id": "e026722e-e872-4611-8241-20ae442e7059",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "1bdffd13-2688-43fc-8c22-f5f6b4cacef0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14c4d744-63d9-4d35-9bc1-123b59b3e314",
        "cursor": {
          "ref": "af757cea-c8dd-4013-98cf-4bf0fa2b908d",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "458b5f6f-6714-4363-95d5-180f9dcc030a"
        },
        "item": {
          "id": "14c4d744-63d9-4d35-9bc1-123b59b3e314",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "41a801ea-53a6-4f8c-a2f3-d15d8f3a264f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6b692b0-3b7f-45d3-822e-af426ec91927",
        "cursor": {
          "ref": "31b4a86d-4573-4736-ae3f-a4725dd86b17",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "eccfaa78-5760-4aa4-847b-ccc9971dc587"
        },
        "item": {
          "id": "c6b692b0-3b7f-45d3-822e-af426ec91927",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "d12c6359-8405-4ce1-a34b-480aa3c8744f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a28be0f6-e714-40be-902c-978ff11cbd8a",
        "cursor": {
          "ref": "208e3c76-ed69-4a9a-aaa7-03662d050326",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "50718648-f1c3-49fa-a086-747ff020809b"
        },
        "item": {
          "id": "a28be0f6-e714-40be-902c-978ff11cbd8a",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "51b64289-e31f-4d5d-ab07-4d3909ae9dc3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "018c15b2-2fb9-4b1e-bf2e-986906ca30c6",
        "cursor": {
          "ref": "0b11e5ec-bec1-4d39-8cde-2aa40991c1b9",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "8f852a8e-eebb-4e83-9e07-d9c0b0afd4d0"
        },
        "item": {
          "id": "018c15b2-2fb9-4b1e-bf2e-986906ca30c6",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "b606eed2-0e85-4163-9d8f-497e45714b1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac3d3770-33cb-432d-83ed-6381f085dc67",
        "cursor": {
          "ref": "0434db23-4fe5-49f8-bc10-18aace46e504",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "ee795572-a2f5-4315-95f5-057e3396a297"
        },
        "item": {
          "id": "ac3d3770-33cb-432d-83ed-6381f085dc67",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "c1f6c1f3-2da9-4df4-802c-ee2cd362fbd4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b693686-29a3-4fef-b26b-71494e2b2123",
        "cursor": {
          "ref": "614acc4f-53f9-42f7-9393-a76b3e3f1144",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "95ea0278-a5a6-473a-8624-1253d4d6ee70"
        },
        "item": {
          "id": "4b693686-29a3-4fef-b26b-71494e2b2123",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "2c15e461-c3b4-4159-b0d3-fcbd0bb034d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06ba4bb7-e9ea-4bd4-ac9f-18c0bd33a9ae",
        "cursor": {
          "ref": "ae32d566-ab83-4c68-a409-ddc97142c4c8",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "df3ce033-a808-49d2-964b-a757a7fd08d5"
        },
        "item": {
          "id": "06ba4bb7-e9ea-4bd4-ac9f-18c0bd33a9ae",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "c3c4b2d5-67c8-4911-88d1-d91c85a878a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7aeb7df5-950e-4736-ac5f-2b5abd3fb4a9",
        "cursor": {
          "ref": "c30cc843-49fa-4ebe-a561-be866c964041",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "61aaaebf-a492-42ad-a5db-63532f1ce8a0"
        },
        "item": {
          "id": "7aeb7df5-950e-4736-ac5f-2b5abd3fb4a9",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "20613fbb-e3f0-4b3c-8720-eb2da79dfadf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75d88d28-4040-404a-9a6d-65d96f44aa98",
        "cursor": {
          "ref": "9668f2af-100f-4289-ab0b-e283d30be663",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "b992a4a9-6198-4435-be4f-8a94e865f192"
        },
        "item": {
          "id": "75d88d28-4040-404a-9a6d-65d96f44aa98",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "bf485c23-a796-4ac9-aed1-fedf5f1f1817",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f8401f6-3cbc-484f-8f20-db7a14739ccf",
        "cursor": {
          "ref": "a1944e82-ef5c-4c9a-a199-22d6b68e5275",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "6c2a9be1-cc11-4b4a-b28b-c3c375618664"
        },
        "item": {
          "id": "6f8401f6-3cbc-484f-8f20-db7a14739ccf",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "47203d8d-5ca5-47c3-aad5-bd061fbe234e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3e289b6-9a24-43b5-ba53-e3a730eef495",
        "cursor": {
          "ref": "c5ffdf01-8b2c-42ef-b801-5ed62a46fd9a",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "3856edd5-cb41-4dda-9f84-fb7ec97792e5"
        },
        "item": {
          "id": "c3e289b6-9a24-43b5-ba53-e3a730eef495",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "0607a13f-71ed-451c-9174-fa7ac5268812",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9449f1c4-802b-4cec-be20-6efde186e222",
        "cursor": {
          "ref": "f2f51f02-4965-484f-a05f-41e501399069",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "c409a2b9-a34b-4b67-ad6f-adf368d817b8"
        },
        "item": {
          "id": "9449f1c4-802b-4cec-be20-6efde186e222",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "1ad59d10-1bd7-46cc-8549-5590d178e102",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7558db96-a9ef-4fba-82a8-a993cdc7a5c5",
        "cursor": {
          "ref": "474561b4-28e8-4383-9e3d-0e9000bc8b56",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "bd6bb3a4-4645-4a1d-8c3a-b41c15664303"
        },
        "item": {
          "id": "7558db96-a9ef-4fba-82a8-a993cdc7a5c5",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "6f9b1de9-63d5-4b56-9074-e8d5d51c6e50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88331cda-bec5-4ea4-8818-542fc69976ff",
        "cursor": {
          "ref": "b4f3db69-1d8d-490d-9a5b-adb0105a35de",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "a7027660-7172-46a9-ab97-1fdcd02a339a"
        },
        "item": {
          "id": "88331cda-bec5-4ea4-8818-542fc69976ff",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "031ceb3f-3d7d-49f4-b047-ea4237535a13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99f482b0-17d7-45bc-bbd0-ff15aefaa4e5",
        "cursor": {
          "ref": "24789f55-b447-44d6-bc3a-7d6ae7628e9f",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "9e35c0c5-f47f-481f-a998-22126d4375f4"
        },
        "item": {
          "id": "99f482b0-17d7-45bc-bbd0-ff15aefaa4e5",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "572f2152-a075-4453-b1a9-005fa76bb1f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78cf6907-6de0-45f8-b24d-01d0f2748a75",
        "cursor": {
          "ref": "92573605-f363-42c5-89f3-b90ddbc395e0",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "c9afb46c-c4e8-4156-ba20-9b3167ec9d69"
        },
        "item": {
          "id": "78cf6907-6de0-45f8-b24d-01d0f2748a75",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "06255aa8-26de-4276-abfa-89271120f615",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d31c0bb-db61-4914-a8eb-9174775dbc34",
        "cursor": {
          "ref": "787be5b9-be2a-4062-9eb8-e276a5159aa9",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "fae3f1d8-f51f-4dba-bab9-f0f6f1a41683"
        },
        "item": {
          "id": "8d31c0bb-db61-4914-a8eb-9174775dbc34",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "cce38e2e-7d91-46a9-8a44-c00e7046797d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e71b5adf-e022-4a02-8dcd-260a5bdf9de7",
        "cursor": {
          "ref": "f0fc336a-4802-4dea-b7a5-e490c2018a65",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "8c49fa94-2ff3-4d4f-a974-7a184d01b378"
        },
        "item": {
          "id": "e71b5adf-e022-4a02-8dcd-260a5bdf9de7",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "ae698913-0660-44c8-b124-3fdedd2452ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2a5535e-8f91-42a4-8e59-585c927dee38",
        "cursor": {
          "ref": "574f65c2-effc-41f8-ac7d-14bed657435d",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "697e8968-8a81-4b8a-b8e2-5f945de4b122"
        },
        "item": {
          "id": "b2a5535e-8f91-42a4-8e59-585c927dee38",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "3c0e1c93-4cb2-48d0-8b28-8f2a12fa2aeb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c52a260-29b0-4b04-97fb-d20fd8b80bf1",
        "cursor": {
          "ref": "1d1fbcf5-6684-425f-a097-35cdb8c95da9",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "1a260d13-fdf1-4d06-86cf-be485e8247e7"
        },
        "item": {
          "id": "4c52a260-29b0-4b04-97fb-d20fd8b80bf1",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "30435d13-1b37-4b09-967e-033614d6c4d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "101f5e66-187e-453f-8557-687cafa60a49",
        "cursor": {
          "ref": "c162156a-1a11-4b00-90a0-726d62e8cf0c",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "c79c3ec7-154c-48db-b79e-b2db2d4ae4aa"
        },
        "item": {
          "id": "101f5e66-187e-453f-8557-687cafa60a49",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "338aa485-f2d7-4216-93de-9c7742d485e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd05e91d-543b-4d4b-a4be-1328c2943f89",
        "cursor": {
          "ref": "4bbe8b9c-f6f6-4457-a95c-4022e7566283",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "77852931-38d6-4dad-86b3-57075fafd625"
        },
        "item": {
          "id": "dd05e91d-543b-4d4b-a4be-1328c2943f89",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "a5ca103b-0f71-48aa-bab3-0d1435e5d79a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c282a434-ec4d-45ef-b955-aab28851ecd1",
        "cursor": {
          "ref": "3ee36580-1066-436f-b5b7-6819b5c6a2d3",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "0d62ff53-9f5c-46bb-889e-395a2a8e2b30"
        },
        "item": {
          "id": "c282a434-ec4d-45ef-b955-aab28851ecd1",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "51089888-9e3b-4794-aac2-b3c3e2ede0ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52d78f9d-a594-4ca8-b8db-982830ff32c5",
        "cursor": {
          "ref": "e6c10ade-911e-4373-a514-8dc47b0d5557",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "1a39c708-875a-4ca2-9e71-4f339c5e05ac"
        },
        "item": {
          "id": "52d78f9d-a594-4ca8-b8db-982830ff32c5",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "1082f895-7ed4-4627-b76d-8c708ed99a57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:101)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f34d07c-37db-40cd-a4a4-e5911887b142",
        "cursor": {
          "ref": "5b0bf9c0-c2f4-4414-aef4-f4b5a2353aeb",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "0fab742a-1e92-46c2-8fd0-8e17ee6987f8"
        },
        "item": {
          "id": "9f34d07c-37db-40cd-a4a4-e5911887b142",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "4c7ed91a-abd4-4c73-910b-e0e7ccb1c7a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 136
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "6af8e4c6-9d1c-4689-92c1-4cde2b21472c",
        "cursor": {
          "ref": "fac96201-ffe8-4106-bbeb-322de4132ac1",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "dae0655c-47e5-4a50-aca5-2e6c6aacaaa5"
        },
        "item": {
          "id": "6af8e4c6-9d1c-4689-92c1-4cde2b21472c",
          "name": "credentials_issue"
        },
        "response": {
          "id": "6fb9da06-8026-4e33-8f46-635fd238a198",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "d056374e-c980-4187-9395-68802a369fe1",
        "cursor": {
          "ref": "f874beae-a150-4042-b1fd-5d1d2409eec3",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "3c4b65c2-cfec-44e3-819f-aee5a2593638"
        },
        "item": {
          "id": "d056374e-c980-4187-9395-68802a369fe1",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "3907ce70-e28c-4a0d-ad4a-8d9c44a3f627",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "6bd420c1-596f-49db-befe-634ae0a72fc9",
        "cursor": {
          "ref": "19119034-22fc-415e-82bf-5fd90318d7e6",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "0a409b16-6256-47ad-8abf-f03b730abdce"
        },
        "item": {
          "id": "6bd420c1-596f-49db-befe-634ae0a72fc9",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "d70a243a-836c-4c40-9f91-3a361bf0f583",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "eadb1e27-8c49-4fba-90bd-6ef0f41f4bb9",
        "cursor": {
          "ref": "6722c775-68d3-470e-bf0e-58681a65eab5",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "196eacc8-3c83-4a81-83fb-a51062dee5a5"
        },
        "item": {
          "id": "eadb1e27-8c49-4fba-90bd-6ef0f41f4bb9",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "c4b2036d-624b-42dd-940d-37ef2cf108c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:106)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response credentialSubject.id matches request credential.credentialSubject.id",
              "message": "Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:106)"
            }
          }
        ]
      },
      {
        "id": "7f265ef0-b639-474c-8f44-61647b2414f0",
        "cursor": {
          "ref": "38f74a29-9233-491e-bbdf-6643b0e2bafc",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "234caac3-e69f-40d5-859e-66d792d29957"
        },
        "item": {
          "id": "7f265ef0-b639-474c-8f44-61647b2414f0",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "0bfaf5a0-9f14-4dd7-bdbe-dd3a3a583766",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "33fa0ed0-afaf-4cee-a818-f2fbcec0ce97",
        "cursor": {
          "ref": "8c0edbd8-7e6e-4be0-b96a-b31232b8cea0",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "50290fba-a602-4838-8cc4-ef654b660eab"
        },
        "item": {
          "id": "33fa0ed0-afaf-4cee-a818-f2fbcec0ce97",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "5fb2262b-2286-4f82-bb0b-52aa59e2ed11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "53d053c7-ea1a-47ac-ac14-23012bc02a0e",
        "cursor": {
          "ref": "97d4b347-0761-4940-9ad9-553f86531c82",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "e719e95b-91de-460f-a517-46ba49b0a2f7"
        },
        "item": {
          "id": "53d053c7-ea1a-47ac-ac14-23012bc02a0e",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "a767ce8f-1f04-44ea-a40a-eb7d29bb05cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "069d7277-9b76-416a-aaf3-cdbd18f09e20",
        "cursor": {
          "ref": "d46bae40-bf5f-45dd-8a4e-1781d2cf063b",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "bffce3a6-962b-45cc-a503-c34b5d601839"
        },
        "item": {
          "id": "069d7277-9b76-416a-aaf3-cdbd18f09e20",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "ec5c1610-eca9-4f0a-9955-1208450c8c7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84afb30d-ce89-4d61-a517-8986105539a7",
        "cursor": {
          "ref": "8303af3c-4293-4339-8ab7-4fddcd285862",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "e501fb35-7547-4eba-86e6-e5683e5e6cea"
        },
        "item": {
          "id": "84afb30d-ce89-4d61-a517-8986105539a7",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "f20009ed-acee-4c04-8a11-8c02df21323d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec0d69f8-c7a3-4d63-9aa6-7f846f19ef38",
        "cursor": {
          "ref": "ba62d101-2ea4-4947-bf9f-8f8072e600a7",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "a6e3f183-4775-4266-a17f-9aaa2ff491dc"
        },
        "item": {
          "id": "ec0d69f8-c7a3-4d63-9aa6-7f846f19ef38",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "fc1190b0-c427-46f4-b006-6cd3772d1f6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f7e370c-4677-4d3e-a85f-ea29dfa58bed",
        "cursor": {
          "ref": "8ff7c8c3-e207-427d-931a-21a08b5f6053",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "c9efccc9-8d7f-412f-8322-eec70501441d"
        },
        "item": {
          "id": "6f7e370c-4677-4d3e-a85f-ea29dfa58bed",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "d6da6aec-ec08-4ac8-9ef6-65bfc8c8e9f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23cba207-d0a9-4077-b4ac-3728f8df49da",
        "cursor": {
          "ref": "5a7dbcd3-2778-4cae-bc16-263ea893b0e7",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "5d1c3b77-59d3-424e-b42a-9894bb306021"
        },
        "item": {
          "id": "23cba207-d0a9-4077-b4ac-3728f8df49da",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "645fa018-0f46-415f-9d54-5991b47ee65c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc215a1a-7053-4959-9457-14d86eea234c",
        "cursor": {
          "ref": "1fffc8a1-30ec-4a83-8ce0-fea0a21853a5",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "9da7a6dd-1c0c-478e-947e-5a6058557d02"
        },
        "item": {
          "id": "bc215a1a-7053-4959-9457-14d86eea234c",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "543cff42-e12f-4153-8cf1-158bd22ee0cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbdad856-b369-4736-b7fd-e95474f2a42e",
        "cursor": {
          "ref": "d57036f5-78c2-4492-98ce-3573f25a3874",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "22d48c70-f780-4025-b5d6-29cbe74b587c"
        },
        "item": {
          "id": "cbdad856-b369-4736-b7fd-e95474f2a42e",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "26b1def0-8f95-4bb1-b875-0510e19f5d7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84ded17d-1644-4335-9d61-167482bfba3e",
        "cursor": {
          "ref": "d2c57526-334b-407e-8f45-c642e47a423b",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "18675f0a-bf63-4e21-8c37-148a90eb2b54"
        },
        "item": {
          "id": "84ded17d-1644-4335-9d61-167482bfba3e",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "2b104d90-1665-471d-9c8d-3744678e2899",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7ab61c8-54ce-4f08-9280-f7fa738a83c3",
        "cursor": {
          "ref": "4ef76207-192c-43b4-bd2f-7c57aeaf3907",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "c45a836d-54e1-4bdd-843f-f59e06ee9e4e"
        },
        "item": {
          "id": "f7ab61c8-54ce-4f08-9280-f7fa738a83c3",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "b71cd5d1-ab7e-4b10-a4f2-7af50e6ce466",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66eb720d-3f55-440f-9660-fe70606741e5",
        "cursor": {
          "ref": "64524e82-1291-4f34-8f79-8da43638130e",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "d7422789-3164-49db-940f-be7ec431dcf0"
        },
        "item": {
          "id": "66eb720d-3f55-440f-9660-fe70606741e5",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "75790bde-46b0-42a3-97df-793cb5c8c2b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae5d2648-e9e9-4857-b738-0306807afee7",
        "cursor": {
          "ref": "728b27b4-8299-4cbb-a546-d1fd2ba8780b",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "fa500838-e25a-4b29-8764-b824fa7f3e08"
        },
        "item": {
          "id": "ae5d2648-e9e9-4857-b738-0306807afee7",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "2fc71cfb-8f55-401d-9108-82715f0a4d02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "208a2c10-9099-4fc5-99df-a63e45c76e09",
        "cursor": {
          "ref": "cc352082-4d4a-4afc-ba04-a476e553020a",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "2db54087-1e2d-4914-8c16-9bc33b840d54"
        },
        "item": {
          "id": "208a2c10-9099-4fc5-99df-a63e45c76e09",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "d46b84ca-1ccb-4f2c-91cc-f1415e055936",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6557075e-6760-41b7-85c0-a5840b6ff528",
        "cursor": {
          "ref": "8327cc6a-6d0a-48fa-88e9-4ca11a93b2b5",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "5247f764-1ccd-4d06-9900-8e53fa78fb43"
        },
        "item": {
          "id": "6557075e-6760-41b7-85c0-a5840b6ff528",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "10c6b10c-f5c6-4ebf-81ba-d59f017df8f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92ceafbe-a193-4c39-bae8-90138a5c487b",
        "cursor": {
          "ref": "74a09d07-3cb5-4e89-909a-771a4e980923",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "e3217613-71f7-4113-a931-d8c0695bf9d1"
        },
        "item": {
          "id": "92ceafbe-a193-4c39-bae8-90138a5c487b",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "18e44c8a-fa26-4ee7-84e9-913c06bdbd0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "116b13ee-907a-48f4-8885-8936b3a5e815",
        "cursor": {
          "ref": "11cf47bf-4d63-4127-9e90-e02e71d384e1",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "bf2badce-590d-45ea-851c-eaff9d1297fd"
        },
        "item": {
          "id": "116b13ee-907a-48f4-8885-8936b3a5e815",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "94c28b07-9c07-4a0e-9500-e3f98a7757f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "965c3fe4-c0e7-41ca-bb0d-2dc936d6d232",
        "cursor": {
          "ref": "66def321-2707-4b85-b704-ae437ae4ea26",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "371d9d8b-ab6a-4f10-a75a-f2adf686d418"
        },
        "item": {
          "id": "965c3fe4-c0e7-41ca-bb0d-2dc936d6d232",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "59bfe439-737c-4255-929d-c397c498d747",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6592335-c1be-407c-ac55-19ddf153dcbe",
        "cursor": {
          "ref": "b8413bb5-6702-4537-a580-227f56d66c69",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "c7c01487-3eeb-41a1-b392-af4a4e2e5882"
        },
        "item": {
          "id": "d6592335-c1be-407c-ac55-19ddf153dcbe",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "14a7bfb1-f58e-4a1f-8c05-b8bfc2d533ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfcdceb6-0cf9-4261-895f-2e5ee66d7ecd",
        "cursor": {
          "ref": "04118e80-f11c-4bb7-9cfe-a03b3d4fecd2",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "aa126fe5-91fd-4bd4-a901-8d668b0f9682"
        },
        "item": {
          "id": "dfcdceb6-0cf9-4261-895f-2e5ee66d7ecd",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "f175ad01-d7d3-4ad7-b296-71303b48066b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03027c8e-ee13-4247-9575-639305715926",
        "cursor": {
          "ref": "f5cb0d5b-3b40-471d-a4fc-f8656abca304",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "df75b399-d3fe-4678-93c6-f8d4f463ca7b"
        },
        "item": {
          "id": "03027c8e-ee13-4247-9575-639305715926",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "b1277755-549b-4ca5-953f-41367d0e6001",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "447c667d-e08c-4db3-8062-96f6f7b0faf8",
        "cursor": {
          "ref": "0e626541-8155-4507-9bbb-b2571c235060",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "ecae2c26-5f3f-43ec-815d-cb5d8c471d04"
        },
        "item": {
          "id": "447c667d-e08c-4db3-8062-96f6f7b0faf8",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "f337ca5b-c785-4b10-b1a4-f95522135341",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20d475ba-0491-4d6d-9763-e42164461a53",
        "cursor": {
          "ref": "9b32adb7-957f-4a85-876d-81b23234d7d1",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "cbbd4688-86c4-4791-8ac4-aa36b02c45d0"
        },
        "item": {
          "id": "20d475ba-0491-4d6d-9763-e42164461a53",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "a7393d3b-682a-476f-b4dd-1e419632024c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3905f170-e913-4587-9781-1f6e16987097",
        "cursor": {
          "ref": "99f3c401-0bbe-4f95-98f0-bab059ecb0db",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "ca3bd854-4cb2-4494-b94d-b21b0c9908d9"
        },
        "item": {
          "id": "3905f170-e913-4587-9781-1f6e16987097",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "15a3765b-f1c9-4695-b16f-7167d6913713",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4bc3c497-47bf-4849-b838-24e3e1f270c7",
        "cursor": {
          "ref": "1084bd68-47ca-425e-94f9-4716893e252d",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "6e57f3a3-aaab-44ff-a75a-daf6424d9488"
        },
        "item": {
          "id": "4bc3c497-47bf-4849-b838-24e3e1f270c7",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "3c29687a-fadb-44fd-b051-5bb37c0305aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb750725-a60d-4295-856b-554103d00b46",
        "cursor": {
          "ref": "b93e9e72-caae-4dd3-9533-8c83a31f7cd8",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "b867e676-be99-4c1c-9e05-60fa1ce34850"
        },
        "item": {
          "id": "bb750725-a60d-4295-856b-554103d00b46",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "6233aec9-0238-4ec8-ad09-debad943ae01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25c0b50d-0541-4306-9d69-e560fcccaf93",
        "cursor": {
          "ref": "3c67f77d-96c6-4a9e-b815-b487a47a497c",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "fb8af7d8-afdc-4f9e-9934-be37c40e9576"
        },
        "item": {
          "id": "25c0b50d-0541-4306-9d69-e560fcccaf93",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "11fda349-1336-44b7-9d5c-0ec8956d3291",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 362
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b23e3c31-6b18-4f62-93e5-5dee2e672c59",
        "cursor": {
          "ref": "366b1d49-776c-4f3e-b0e9-8d0902295bff",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "db7df387-1ecd-4ba3-be26-e758d18f145f"
        },
        "item": {
          "id": "b23e3c31-6b18-4f62-93e5-5dee2e672c59",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "9b01573d-7ffe-4377-a05b-1342967de75f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3805470a-2dce-4b68-b7ef-25a435c33e9a",
        "cursor": {
          "ref": "85bd63f0-60be-438e-af95-a8887debfc91",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "31efda1f-bde1-4df0-bf42-1550df82e011"
        },
        "item": {
          "id": "3805470a-2dce-4b68-b7ef-25a435c33e9a",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "5e5f9430-d92f-4333-afb2-fe6e38298fba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cb3fe7c-3c0d-4953-85d9-3ef23505becd",
        "cursor": {
          "ref": "68948f26-7d22-4cbb-9534-5219c1aeac48",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "cff7de79-952f-4193-9923-863235f4b977"
        },
        "item": {
          "id": "9cb3fe7c-3c0d-4953-85d9-3ef23505becd",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "8ab27a79-f495-4d8a-b23b-58d4f03cd3d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cb085fa-1cad-4f58-8fd9-730c41fa8aff",
        "cursor": {
          "ref": "233bf047-5b5b-4821-8d94-36eeac1bff38",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "66e67fcb-ed96-40f4-83b7-0b23f586bdb1"
        },
        "item": {
          "id": "4cb085fa-1cad-4f58-8fd9-730c41fa8aff",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "f2b291a3-09ca-4239-aeb6-c480a817cbff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 362
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1409f19e-9d7b-4ec5-9ed6-6b69e87a1313",
        "cursor": {
          "ref": "e58fb90d-a84c-44d6-8538-55b511a2e34a",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "05feaa89-01a9-4b65-b143-d66413399ffb"
        },
        "item": {
          "id": "1409f19e-9d7b-4ec5-9ed6-6b69e87a1313",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "02bdf3c2-2fc3-4b6b-86f9-207982f928af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a910586c-6701-415d-bb16-e60635fa124f",
        "cursor": {
          "ref": "29ff6da3-1aa2-46fd-8a9f-8c1622162b7f",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "7546cb00-6823-4830-9acb-ef993020a1fe"
        },
        "item": {
          "id": "a910586c-6701-415d-bb16-e60635fa124f",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "eb855768-e5d4-4a20-9a74-4cc03f354166",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca711eed-8ec4-4422-8d58-8307d51f2946",
        "cursor": {
          "ref": "6287f0e4-4963-455e-9dde-3ba078e67d41",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "f4e46e87-2a01-47c8-9495-f227c57a75a4"
        },
        "item": {
          "id": "ca711eed-8ec4-4422-8d58-8307d51f2946",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "5fd99050-3db9-4de1-945d-54c36148f505",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e48448c-1ef3-4930-a076-76e27ee3c0a4",
        "cursor": {
          "ref": "c7d5955e-13ac-4a74-95ac-4864e64c8911",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "513bdd64-1bb0-45c7-8ade-7f39880b1344"
        },
        "item": {
          "id": "2e48448c-1ef3-4930-a076-76e27ee3c0a4",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "faaa2226-16d4-4019-ae72-be1fb4d5ca91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "978c5d84-8eb1-43cb-9374-566cb6f1e830",
        "cursor": {
          "ref": "323a3df0-683b-4209-9c64-346a7cc2e861",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "1a6129dc-2903-421c-900e-42d05cd3049e"
        },
        "item": {
          "id": "978c5d84-8eb1-43cb-9374-566cb6f1e830",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "33ef58c1-2b1c-44b3-b7a4-a1d211c19d8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d79dd885-be60-481a-b329-cfb2d9d624f5",
        "cursor": {
          "ref": "9e6873e7-f97a-4d4a-8fb1-717e9a62165b",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "1a265c0a-cd0c-4ec9-b1c9-12b15dc165c7"
        },
        "item": {
          "id": "d79dd885-be60-481a-b329-cfb2d9d624f5",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "767d6514-130d-4b4c-8f32-361718849753",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba6b9a87-5a98-47fb-ba62-0743b66166ee",
        "cursor": {
          "ref": "ae4ce241-20d1-4295-a566-dfdaf14adbee",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "34d37488-a192-400b-9195-d92ec12d7167"
        },
        "item": {
          "id": "ba6b9a87-5a98-47fb-ba62-0743b66166ee",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "78e011b1-1f52-4c94-8806-df0980517da4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa5b7af5-fb7c-4e4f-9fbb-1834b13da936",
        "cursor": {
          "ref": "d70dc203-55a3-4d44-ab7f-39f7980b3017",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "a6845e59-c01e-4cd5-b58c-315176caf950"
        },
        "item": {
          "id": "aa5b7af5-fb7c-4e4f-9fbb-1834b13da936",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "2debbd65-7f92-4a6b-a568-ffc67a95a034",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 67,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6ecd79b-2523-4616-a39f-82762c35fa4a",
        "cursor": {
          "ref": "f58d8764-145d-42cf-a808-f80d528cd6ed",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "6bf0eb5c-f8b6-4728-a8b7-af7ae5d6d63a"
        },
        "item": {
          "id": "d6ecd79b-2523-4616-a39f-82762c35fa4a",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "5e3f2f50-fec8-42c2-a09b-4c9dae07f2b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "310905fb-fb0b-44e6-9e85-afa4c52de534",
        "cursor": {
          "ref": "efa7ff89-3fa6-462f-a904-8e0e5e014c6e",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "a48446fe-b41d-4b3c-8ef4-8605a8b3f123"
        },
        "item": {
          "id": "310905fb-fb0b-44e6-9e85-afa4c52de534",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "5d851214-9c5f-43ff-b285-164248ceb400",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6da452ac-eef3-4b60-ab12-e588772cda48",
        "cursor": {
          "ref": "522a66aa-bed6-432b-ae77-7aec01079832",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "9a69fb7e-9c91-4792-8345-439edb4a3d63"
        },
        "item": {
          "id": "6da452ac-eef3-4b60-ab12-e588772cda48",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "04c018cd-524c-4834-9986-e1723c6b16b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0d2b1fc-0955-4085-a09b-6360fd716cc7",
        "cursor": {
          "ref": "58d0070c-c211-4f9d-a88d-42e587e81c4a",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "dfae3c8f-6e62-473c-998d-e5c47c9864f6"
        },
        "item": {
          "id": "e0d2b1fc-0955-4085-a09b-6360fd716cc7",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "a19c6a0d-4a03-46d1-8cac-c71f7ca38e3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b6a1fbf-2bde-4559-8727-ed2191505baa",
        "cursor": {
          "ref": "70025f16-04a9-425e-8f44-e0780577bb14",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "658d9acd-9718-4591-bec1-9eb00ab99136"
        },
        "item": {
          "id": "3b6a1fbf-2bde-4559-8727-ed2191505baa",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "b2a7402c-3a94-4d7c-b948-59e48935170b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e4b233a-4b3b-401e-a731-ff014ada123a",
        "cursor": {
          "ref": "a0c255a4-aef2-4e0e-9160-4ebd5ee444ab",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "0e20ac1e-ddbd-4382-b1f8-926de7942726"
        },
        "item": {
          "id": "0e4b233a-4b3b-401e-a731-ff014ada123a",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "8bafc84f-15de-4308-b1a3-182db5ed31f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1633b0f8-53ba-4857-94be-0998fe276d5e",
        "cursor": {
          "ref": "fb993ffe-0ad4-43b4-a5ca-0954c239d49e",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "7ff9e1b1-cd0e-4a94-a7c3-c21d60e5de97"
        },
        "item": {
          "id": "1633b0f8-53ba-4857-94be-0998fe276d5e",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "ea5f33fc-4ae5-4365-9822-ebe9e3d35f45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7325748-0626-4158-973c-687c4970e540",
        "cursor": {
          "ref": "fa2c74e4-8477-47ca-ade5-9a82b18cf2d5",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "fd5173b3-5067-44e2-a32e-6953d857ecbf"
        },
        "item": {
          "id": "b7325748-0626-4158-973c-687c4970e540",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "52b1c5ed-a759-4d5d-b037-caf27f83acd3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "678a96ef-89bf-4d01-b93f-887c8045d71f",
        "cursor": {
          "ref": "b5ff0a75-22bf-4fd7-ad0a-3934e6dd2300",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "9c5ef662-e9e3-4127-85c9-9d39b0286777"
        },
        "item": {
          "id": "678a96ef-89bf-4d01-b93f-887c8045d71f",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "459dfac1-aa3a-4d7f-9b82-b1b9acfe07f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32f3ae9d-5bc4-4338-be57-05aec3e73bad",
        "cursor": {
          "ref": "1ede7b2b-55ac-4386-af90-0a2c62eb6132",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "6299c27e-35ad-4a57-8c4c-1494185be1e2"
        },
        "item": {
          "id": "32f3ae9d-5bc4-4338-be57-05aec3e73bad",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "df603b1b-04a0-45bb-b6dd-ac0e7c838574",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9846d38-d6e6-4dbd-bc4e-2f7c0d04077c",
        "cursor": {
          "ref": "2dc14314-1ab7-4088-a8fc-ffdcfcf713bb",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "ba638209-117f-4bc3-a898-724ff5382f9f"
        },
        "item": {
          "id": "c9846d38-d6e6-4dbd-bc4e-2f7c0d04077c",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "30ebf7d5-cc28-409d-a568-02b58636e544",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8ba5824-eef7-4d32-a416-86404e9f7fa4",
        "cursor": {
          "ref": "c45bcb96-7dc6-4643-90c3-20bb0681e796",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "6918188f-0f37-481a-9182-92dca8cdd56f"
        },
        "item": {
          "id": "e8ba5824-eef7-4d32-a416-86404e9f7fa4",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "82432b46-7782-4b83-bffd-9e63c4707dd3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a52f1c7-bf79-4159-978d-34f41c46d72d",
        "cursor": {
          "ref": "c5571115-03dc-4675-990e-8820edcbfc1a",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "bdca0ee5-111e-41aa-8fe7-f2558bd8449a"
        },
        "item": {
          "id": "6a52f1c7-bf79-4159-978d-34f41c46d72d",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "640ba274-56e0-4d4b-8b58-8bf5e7c049e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93f20d76-9dcb-4609-8567-35f117db50d2",
        "cursor": {
          "ref": "43bd9797-840d-4c63-afb3-9523e8ec94e0",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "19d1bc8b-7b13-4e90-8b7d-c387db5ea659"
        },
        "item": {
          "id": "93f20d76-9dcb-4609-8567-35f117db50d2",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "b9daad3f-183b-4b7b-9aa9-48db6d0d1c62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "874ba30e-c709-4d22-b392-59df41f6f3cd",
        "cursor": {
          "ref": "11111cee-e6fc-4d55-9f1f-f7cc5e42da09",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "757f48d6-cb3b-4244-8c1f-8d142f3c7486"
        },
        "item": {
          "id": "874ba30e-c709-4d22-b392-59df41f6f3cd",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "673d6240-1b40-4c78-b7ea-838b759ba519",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "775aeca8-beb2-4915-9581-05c96f5b2852",
        "cursor": {
          "ref": "84d696b8-9a95-45ac-9eb8-6341deb9cadc",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "6cf1eb71-e653-45f6-bda1-8e23a63faaaf"
        },
        "item": {
          "id": "775aeca8-beb2-4915-9581-05c96f5b2852",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "f5a51274-1721-40e3-8836-725adbdb4cb1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5dde9fda-2736-444e-bdc6-398f104dd2fb",
        "cursor": {
          "ref": "012d7919-1a3c-4407-86d0-0cc8877a92c9",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "20fa9292-93bc-43fb-b954-b3296d3cd4b1"
        },
        "item": {
          "id": "5dde9fda-2736-444e-bdc6-398f104dd2fb",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "a48de5e9-8567-45ad-9961-73fd65732450",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1563b2ce-a524-44b9-82bd-4b58ad8064f4",
        "cursor": {
          "ref": "d6458f19-1714-4fe5-8faf-f30d4a0bc4d8",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "578c22ee-bf38-4364-af8a-170bf320f03a"
        },
        "item": {
          "id": "1563b2ce-a524-44b9-82bd-4b58ad8064f4",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "581516d5-3aeb-4fdf-bd1f-67d888370b36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b362bf0-ddf0-4558-8fdd-6ec193d1c266",
        "cursor": {
          "ref": "bfa59a28-bdfc-41d4-b49f-854a8815c481",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "f32af342-d6b9-4210-8224-3fba1d791169"
        },
        "item": {
          "id": "6b362bf0-ddf0-4558-8fdd-6ec193d1c266",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "781bba17-0397-4d2c-b87f-3ab0f3e55e22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ec5d3c6-9921-4c46-88c5-0f5b9ef80558",
        "cursor": {
          "ref": "778d7034-a0aa-4987-907a-57fa935d7426",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "a10fed74-0b25-4beb-9ac0-d4b53038c2a2"
        },
        "item": {
          "id": "0ec5d3c6-9921-4c46-88c5-0f5b9ef80558",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "8ae542ef-0d62-4649-80de-a3f34a7b048f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eeff4019-0add-49d9-b3f7-806eace0f0e8",
        "cursor": {
          "ref": "bdd9dde7-89f9-4411-87bd-2af356373191",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "a9dd5df1-4fc2-49da-9a8c-e012dcbee7aa"
        },
        "item": {
          "id": "eeff4019-0add-49d9-b3f7-806eace0f0e8",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "0041c9f3-e9ff-414a-b704-cfe518f07d37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b46f49d-9d39-4429-a80c-eb409a6bb825",
        "cursor": {
          "ref": "ddb87bfe-d793-42d9-bf77-ee2e16597428",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "9d07250e-c764-4bc6-8bfc-7d201e4472b7"
        },
        "item": {
          "id": "3b46f49d-9d39-4429-a80c-eb409a6bb825",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "938c2ff3-f018-4cce-9338-d978f1b986ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c44e23bc-724c-4757-ae21-bf36530cec29",
        "cursor": {
          "ref": "881f40b6-f6dc-4bce-b4d9-e56102f72d63",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "dabd6067-8c08-46bd-803b-385a10390a9b"
        },
        "item": {
          "id": "c44e23bc-724c-4757-ae21-bf36530cec29",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "324526d4-9e28-4fb2-82d9-6cf327364428",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1a31be5-6fb3-4f89-839e-cab5672527c2",
        "cursor": {
          "ref": "964a2ca6-5e85-4e68-9226-a250352cc079",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "af596a9c-b36e-4040-9e30-932790033f58"
        },
        "item": {
          "id": "f1a31be5-6fb3-4f89-839e-cab5672527c2",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "60090bdd-c2d2-4c08-a5b7-0c493e24da19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed1cb411-2ecc-4f5c-b533-c627380a2548",
        "cursor": {
          "ref": "c6272083-a2b6-460d-b3c3-0018397ce033",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "11846ece-75b4-49e2-840c-5ffb5c0b07bb"
        },
        "item": {
          "id": "ed1cb411-2ecc-4f5c-b533-c627380a2548",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "be5c1f0d-d6ad-4edb-9564-a26d2d76213b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c0673bd-e515-46af-b51c-3a85dc82f5f5",
        "cursor": {
          "ref": "c3d3f77e-c1ba-40b7-ae4e-7c3d78538bb4",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "b276ac74-45f0-4742-a2db-c27931187169"
        },
        "item": {
          "id": "8c0673bd-e515-46af-b51c-3a85dc82f5f5",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "ee090228-61a7-4a87-a8bb-0fb8b16f99f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eef267f2-67fc-44d3-8f0f-d9baa2fc3e7a",
        "cursor": {
          "ref": "9539d2b2-0bc2-48e5-b278-1762eb88da5a",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "8df2d33f-7876-49be-a9c3-d6a24eef5dde"
        },
        "item": {
          "id": "eef267f2-67fc-44d3-8f0f-d9baa2fc3e7a",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "32fe3335-e3bc-4cce-800e-c35848c340b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "603c50c4-0a92-4652-82fd-c5f1a30de3c9",
        "cursor": {
          "ref": "65e121b6-7363-4eba-8fbf-b2c4e900980f",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "053fdef3-345b-4734-9367-57e160f75470"
        },
        "item": {
          "id": "603c50c4-0a92-4652-82fd-c5f1a30de3c9",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "4dc45221-d79f-493d-9985-05edf89f2244",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "753d6d69-cde2-4859-8b8b-410e9780fb33",
        "cursor": {
          "ref": "6f11b371-8d18-4cf1-8ad5-2a433f9902b9",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "ad452719-1f38-4a98-aa1a-5cce5eee86dc"
        },
        "item": {
          "id": "753d6d69-cde2-4859-8b8b-410e9780fb33",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "053582da-be95-48d1-8431-1bb9a426050e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd070958-d0fa-4c71-a3e7-20181e141616",
        "cursor": {
          "ref": "7b748aa5-0030-4b6f-967f-94283019af94",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "edee7667-885e-4b1e-8ae0-9013bbf45aa1"
        },
        "item": {
          "id": "fd070958-d0fa-4c71-a3e7-20181e141616",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "94daf128-d0d5-45df-8d00-0dddffd70ba9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26e9754f-7ce6-4965-aa36-33f7ddb4043a",
        "cursor": {
          "ref": "6e57a470-d15d-4165-9c7e-2ee1cb90da63",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "f8a521fd-38ff-4fd0-b20a-a1235ee585b0"
        },
        "item": {
          "id": "26e9754f-7ce6-4965-aa36-33f7ddb4043a",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "d09a418f-9f3a-441e-96da-6605e6b9081f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24b8f056-ae5a-4212-b193-3628ae0b6677",
        "cursor": {
          "ref": "fb9e461e-c164-4513-ac6c-88751d39d034",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "5f57773f-19ab-46dd-8bfa-cd78cab6ea7f"
        },
        "item": {
          "id": "24b8f056-ae5a-4212-b193-3628ae0b6677",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "f84bfef6-4cd0-43c4-9f04-ad505dba27d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7b13021-618d-4b20-ab8f-a2d0e2fa0ae8",
        "cursor": {
          "ref": "8f301e93-9a26-432d-8666-78fc2508143f",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "3bf8973c-2ec8-425f-b576-ba595f07314f"
        },
        "item": {
          "id": "c7b13021-618d-4b20-ab8f-a2d0e2fa0ae8",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "e71d305f-125b-49aa-9fec-700d610a6d4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36edc49b-5103-47bc-b028-75c5b79940c2",
        "cursor": {
          "ref": "34a58fc2-8796-47a6-ae2b-dc13d411689d",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "0c58ac3f-0de0-4caa-bf25-6e0216371246"
        },
        "item": {
          "id": "36edc49b-5103-47bc-b028-75c5b79940c2",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "cf9539b9-21ce-48a0-b2fe-e7e3a808cbac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db142a76-c1d4-43c0-9494-0c83e81f6323",
        "cursor": {
          "ref": "2c3dc43c-367f-4b11-973b-8614e9c4cf7d",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "93c2c20d-ac44-4977-8f3d-2c6431ebc86c"
        },
        "item": {
          "id": "db142a76-c1d4-43c0-9494-0c83e81f6323",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "c6beb5c8-ce3b-4e16-bf5d-751a082fc8bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18cc7035-bc5c-4044-ac72-abb5bb2f3eaf",
        "cursor": {
          "ref": "e57a56b1-89a7-4208-ba50-385ac744a59e",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "af1b33ef-4caa-4256-9c7e-6486810da71c"
        },
        "item": {
          "id": "18cc7035-bc5c-4044-ac72-abb5bb2f3eaf",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "f85b5b2c-d5d8-4e6f-b7cd-b5b15f79fdcc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e068fc6b-ae1f-4f92-947b-859a492bf265",
        "cursor": {
          "ref": "c4ff3299-4365-47fa-949c-4c285acadafa",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "b1792256-cb11-4c95-a2c0-ef715bb927c9"
        },
        "item": {
          "id": "e068fc6b-ae1f-4f92-947b-859a492bf265",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "d4489c5d-f22e-4def-b6f5-e22406b54d26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78db11b0-15c9-44b0-8ffd-d6710104b0b1",
        "cursor": {
          "ref": "fec4084a-bfe8-485d-87ac-b3f05a19bed0",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "43373923-8333-4edf-97cf-4d3f928be6b6"
        },
        "item": {
          "id": "78db11b0-15c9-44b0-8ffd-d6710104b0b1",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "227ffbc0-db5b-4b1d-81cf-903b4afc61de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50878cc2-15b1-44dc-825b-bd66d14eda89",
        "cursor": {
          "ref": "dc0785a4-8d6c-481a-a19e-81357ce0f1ab",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "591fa290-a2de-41bd-933c-ac3f7906ef1f"
        },
        "item": {
          "id": "50878cc2-15b1-44dc-825b-bd66d14eda89",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "1049057f-2bb5-4f62-840c-cb8d0414b2d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "735f4784-81ab-49bc-a2de-cf0e2c6ac6ee",
        "cursor": {
          "ref": "e062f448-ef2a-48dc-b3c7-2a92eab09891",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "ccf6162f-04fa-44db-aae5-3ef62ec28dad"
        },
        "item": {
          "id": "735f4784-81ab-49bc-a2de-cf0e2c6ac6ee",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "14b02d29-4f79-4f99-a56d-d64592836752",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b629e07-dfb3-4282-9863-31c48b77521f",
        "cursor": {
          "ref": "bb26a194-371e-440d-9d84-a16f33af71d1",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "2e148d2a-c3c7-4a00-be4c-90522ec486ad"
        },
        "item": {
          "id": "1b629e07-dfb3-4282-9863-31c48b77521f",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "ed7d25a2-7f68-411e-a4b9-101d2dab5cd0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fb6a4e9-47b1-446c-8c3c-fea088e81ff7",
        "cursor": {
          "ref": "c9b5a7ba-9e7d-4ff0-9a21-2dec072fd809",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "6159d933-b5b1-4c59-8195-e7e6e5f4230f"
        },
        "item": {
          "id": "6fb6a4e9-47b1-446c-8c3c-fea088e81ff7",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "eabeaa83-c3ea-4f16-ab8f-eac028b7bb91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d14ac64-20cd-44ea-8227-658ff4220e01",
        "cursor": {
          "ref": "8e43ac60-f658-4487-b7cb-d96fcc490f55",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "4159b5ee-5c3f-449f-98d4-c737aaea6728"
        },
        "item": {
          "id": "1d14ac64-20cd-44ea-8227-658ff4220e01",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "8c14dabc-0176-4de8-9a3c-6e70c85d6e6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3451530-0ee2-4088-8d42-83f1aacb1283",
        "cursor": {
          "ref": "554db32d-8011-447a-873e-f3a1e5592213",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "822f8ba3-ee7f-40b7-a723-c13769fccfeb"
        },
        "item": {
          "id": "c3451530-0ee2-4088-8d42-83f1aacb1283",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "f7ce8969-3687-4b01-a53d-8c3440548db0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5defb28-73c1-4820-97a0-b192791d0fec",
        "cursor": {
          "ref": "e206fb45-908e-4c06-a485-92a4cd9cb243",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "3b4639ca-5ab6-4a75-af61-9e8df5e58a4c"
        },
        "item": {
          "id": "c5defb28-73c1-4820-97a0-b192791d0fec",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "d1a76745-75a0-46c8-8e0c-3f9b422b2413",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "976cded0-2120-4bcf-8362-9bdd3ecdea37",
        "cursor": {
          "ref": "68e00065-4059-4571-9196-ca588210682c",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "933d8d80-0c36-4af3-be72-178ecf4838a8"
        },
        "item": {
          "id": "976cded0-2120-4bcf-8362-9bdd3ecdea37",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "a8483739-0823-4c1c-89ce-47a7e46b11f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c80b911d-49be-4825-8083-5b3ebd5c8fc7",
        "cursor": {
          "ref": "1a0717f4-63df-4ce2-b6f1-63a63b77bb76",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "cdd0ce5f-c884-4c9c-a975-eb0f64ef26ed"
        },
        "item": {
          "id": "c80b911d-49be-4825-8083-5b3ebd5c8fc7",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "3a3b2280-429e-4d79-8471-a5d11c9c72b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b66132d6-c37c-48bb-b77a-39daf3fdbcf1",
        "cursor": {
          "ref": "f9d9c4bf-f771-49a9-ade2-07fa5aee1537",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "8e3d1334-a070-47a1-b1d2-cd36850c46b0"
        },
        "item": {
          "id": "b66132d6-c37c-48bb-b77a-39daf3fdbcf1",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "11a89e76-71f7-4472-8723-b8d5459ecdba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5edf77f8-9935-40c2-9532-6e9b3702e337",
        "cursor": {
          "ref": "b8de26f4-f69f-4c1f-873b-90847d7cc39b",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "ae776a9a-3a01-46ce-8fce-5618ad82278f"
        },
        "item": {
          "id": "5edf77f8-9935-40c2-9532-6e9b3702e337",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "5dcb52d7-1618-43d3-9cdb-1f4b04bf40e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fec78336-7432-4d73-90b5-a0297e204369",
        "cursor": {
          "ref": "0d4a7581-e142-4130-ab70-1c844feecfb7",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "a635c085-0ec0-41c3-b0e7-8f61ddfe4860"
        },
        "item": {
          "id": "fec78336-7432-4d73-90b5-a0297e204369",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "e63de0ef-08c0-411a-b09f-6c256c0d9ad9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04f4eadc-25e2-430a-8d74-de29d3e8f9cc",
        "cursor": {
          "ref": "100194dc-df75-4c61-b534-282316c9cfdd",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "eb0d0a86-b600-4f7b-9f54-c019f5950508"
        },
        "item": {
          "id": "04f4eadc-25e2-430a-8d74-de29d3e8f9cc",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "315d0442-e816-46dd-8f9d-33f737bc5d80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ae997b3-57c4-465d-815d-adb46cb891c4",
        "cursor": {
          "ref": "021e8728-82f6-4e64-93ad-d514dba7e79b",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "0a290910-c162-4f6f-b153-0d15293fdda2"
        },
        "item": {
          "id": "2ae997b3-57c4-465d-815d-adb46cb891c4",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "c9bc8075-85e1-457e-a1b3-086fe9f3dbb1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd49a6b7-d604-4a0b-828c-199e83a78a7f",
        "cursor": {
          "ref": "c8839b20-3654-4d39-9396-a114bfb85e5d",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "078ffc79-a437-499c-9584-347ebeb3eefc"
        },
        "item": {
          "id": "fd49a6b7-d604-4a0b-828c-199e83a78a7f",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "80386e84-8122-44a2-b944-5373382888ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7778d1a5-c38a-4888-b54a-9c9126054211",
        "cursor": {
          "ref": "533171e7-57c5-45d7-ad5c-0f7fa35de520",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "8b2746be-24be-4b3b-8763-2912c7d79326"
        },
        "item": {
          "id": "7778d1a5-c38a-4888-b54a-9c9126054211",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "4a6dedff-9f97-4912-9392-dfbb84546308",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c99b8250-a7e6-46ef-8004-e6eb0e16689e",
        "cursor": {
          "ref": "91a5013f-42d9-4af7-b48e-dd68b9b9e8f3",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "07ee735a-1be3-4415-bc03-de0510e33eb6"
        },
        "item": {
          "id": "c99b8250-a7e6-46ef-8004-e6eb0e16689e",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "2ffb1bb4-0fff-49ef-a82e-6970e8b76f49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41cef8be-3c4b-4cc9-b9ad-f0f5b34e92e0",
        "cursor": {
          "ref": "d99ec168-0e48-4225-8d63-dd9020687cc6",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "e3ef4144-8c50-4122-a428-ae297d093882"
        },
        "item": {
          "id": "41cef8be-3c4b-4cc9-b9ad-f0f5b34e92e0",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "251ae92c-e20b-44d3-a878-0b256a4c1633",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4db601e-0068-4275-860b-d6202919feb3",
        "cursor": {
          "ref": "5f6b0385-27af-48ef-bb3f-5a9fe10740a3",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "fdfd99eb-c68b-4924-873e-e918a364c405"
        },
        "item": {
          "id": "f4db601e-0068-4275-860b-d6202919feb3",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "d33f4240-5819-4795-8cdc-812b9b02fec6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8984253e-a018-4142-8862-db6b8cdc1a14",
        "cursor": {
          "ref": "583de780-d81d-408c-9a70-f61bd1bf8d33",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "37611c65-baaf-4b46-9b2b-f4466b2e92d0"
        },
        "item": {
          "id": "8984253e-a018-4142-8862-db6b8cdc1a14",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "8fb245f3-fcfb-4ed8-a3ad-7feb463729d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b75e449-543c-4e1a-9626-c5f7cc1e2544",
        "cursor": {
          "ref": "ea197407-dc10-4bf1-9c74-6ddc7749949a",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "f3bf5b94-f430-47c7-9096-810b51f3028f"
        },
        "item": {
          "id": "1b75e449-543c-4e1a-9626-c5f7cc1e2544",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "784d1026-9639-442f-8eef-7f6c057c81dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9143c79-60d3-41c8-a6e6-6320c2539534",
        "cursor": {
          "ref": "be56fa51-53b0-433f-99ff-529563cfbc9e",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "9ef71d25-543f-45e9-b2c1-bc1c3e3e98d0"
        },
        "item": {
          "id": "d9143c79-60d3-41c8-a6e6-6320c2539534",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "5280d45c-adf1-4f93-806e-b3d232988e70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7501d76-bb2b-4379-b099-9d7ac967d488",
        "cursor": {
          "ref": "ff941bea-5159-4b56-a715-dd37054ed72a",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "177a8dd9-3be6-4995-8e51-0fe206db8228"
        },
        "item": {
          "id": "a7501d76-bb2b-4379-b099-9d7ac967d488",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "a5c6f3b3-93ab-460d-b8cc-9492f0e18b5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85bdc736-2b9f-4fef-b703-c936aefe8d6c",
        "cursor": {
          "ref": "a7b91b93-6480-4802-8f7d-cb2964f3c0d6",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "1b20a6ed-5221-4ced-8428-29a1fbf80782"
        },
        "item": {
          "id": "85bdc736-2b9f-4fef-b703-c936aefe8d6c",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "b42a6140-7abb-4df5-890c-905fe23a7658",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e17e3ca7-ced7-42a1-9489-5d730a4ca27b",
        "cursor": {
          "ref": "dead069c-4c28-4461-87f1-66c5cd2586e8",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "5b129588-6cf2-4f42-80aa-e40912e0dc9f"
        },
        "item": {
          "id": "e17e3ca7-ced7-42a1-9489-5d730a4ca27b",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "9f4ae287-af29-4ed2-8f18-dde4ab2b9f36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf01c8f4-950b-4872-b35c-161748d2729a",
        "cursor": {
          "ref": "4ca0be58-8a7f-4f27-a813-a4b74fd3d34d",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "590758ff-0f28-44a9-9f1b-82ede4beb788"
        },
        "item": {
          "id": "bf01c8f4-950b-4872-b35c-161748d2729a",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "843a9dc9-b85e-4418-a74d-3a0a7e77caca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ee8512c-2da7-4aa7-8441-0da3841c8c27",
        "cursor": {
          "ref": "136eac57-1365-4066-9278-bc6584610b46",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "bf7a847e-da4d-4435-abdc-85a5ec6c2204"
        },
        "item": {
          "id": "7ee8512c-2da7-4aa7-8441-0da3841c8c27",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "ff5ef9bd-4861-4c0a-b065-fb08e1f3b993",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf4d816c-4492-4bcc-ac97-8006f266e723",
        "cursor": {
          "ref": "d2b358ad-36a8-408b-a197-2da5355d691c",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "4b3b9a56-e906-4431-ac9e-0a3c9da9a9db"
        },
        "item": {
          "id": "bf4d816c-4492-4bcc-ac97-8006f266e723",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "fc6d9898-822e-4bd9-853c-dffebb3e8305",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed35b376-ae38-4248-aa80-aba9d3fd5d0a",
        "cursor": {
          "ref": "cc3e663e-9399-459f-9458-3b1534b4fe68",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "c4935476-c3ac-443a-873e-2122cd1ee54a"
        },
        "item": {
          "id": "ed35b376-ae38-4248-aa80-aba9d3fd5d0a",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "1c3f0e7f-e6e8-4dd5-b080-d291598595fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3cc009e-f068-49e6-9f17-f203fecbf2bc",
        "cursor": {
          "ref": "7a55b882-00a4-4b03-8587-537aaf474092",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "a56211be-4e5e-429d-87b2-e38a6b36b328"
        },
        "item": {
          "id": "c3cc009e-f068-49e6-9f17-f203fecbf2bc",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "8656c285-fc61-409f-aade-2a7d18b3f829",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55d9fdf2-4cd7-4d26-92e4-d80a368b1198",
        "cursor": {
          "ref": "fc8c2a0c-6085-4fd3-b708-f46615c7e472",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "9f7123ea-360d-41f2-84c6-1f3eb09ac0a7"
        },
        "item": {
          "id": "55d9fdf2-4cd7-4d26-92e4-d80a368b1198",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "3120e14c-5c09-4c3d-884d-e046d9292d92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23881faa-99a6-4b53-ae10-57e0e6a0d0fa",
        "cursor": {
          "ref": "48ccead8-a73b-4a2c-9f91-6c6e44538651",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "5c97bbfc-c4c0-425a-aaae-4379176d2555"
        },
        "item": {
          "id": "23881faa-99a6-4b53-ae10-57e0e6a0d0fa",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "6e757886-4845-4878-a128-822f96840514",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6f13b8c-d8f6-49a5-b96a-4fe4f464b6ad",
        "cursor": {
          "ref": "ef858ea2-9b6a-495e-a8c9-069a9ce4f421",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "3750a259-c56b-4cb2-90a2-93695c4f5a38"
        },
        "item": {
          "id": "e6f13b8c-d8f6-49a5-b96a-4fe4f464b6ad",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "868cbaee-ab08-4e09-8615-4248d74a9034",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da4e6eab-0c57-41f6-bc0f-d1a332795baa",
        "cursor": {
          "ref": "92c15908-b259-4a5b-97d3-bf1a347b7e07",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "fc7def51-399d-48d3-bd10-63de21a18e23"
        },
        "item": {
          "id": "da4e6eab-0c57-41f6-bc0f-d1a332795baa",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "76743499-303b-48f0-90fd-171d7588fc4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b90dba2-a318-419e-af13-81d84ecf9edf",
        "cursor": {
          "ref": "886bf526-b8db-4546-a8cc-1d7f545769fb",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "d4563513-6333-4c66-95cb-884717fda982"
        },
        "item": {
          "id": "8b90dba2-a318-419e-af13-81d84ecf9edf",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "5943b81a-d0f1-4480-a4f6-8a4dc27bfef0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2637dc54-feb2-4402-9897-3377d67caa9c",
        "cursor": {
          "ref": "0bf063c7-5d04-4f93-8cc1-0bfa96971ad2",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "c67d9411-1dca-4d1b-9da4-5c048fc159f7"
        },
        "item": {
          "id": "2637dc54-feb2-4402-9897-3377d67caa9c",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "ce6707c2-15c9-440c-93d4-78051ddad118",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9750d8b9-f7fb-4792-ad4d-1efdf93bcc65",
        "cursor": {
          "ref": "e05f2fc4-86ff-4666-815c-1e899bb20c8e",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "0cc2a981-0a5c-4893-9bea-b7f04e737330"
        },
        "item": {
          "id": "9750d8b9-f7fb-4792-ad4d-1efdf93bcc65",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "31bee21c-1a65-4f53-8df5-d5fb6b0c713e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b63a20d1-4826-4d73-b0e8-8d2a8a1ba47a",
        "cursor": {
          "ref": "cd16ea3c-d431-4b22-a28c-dda3bc674ac3",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "88b0cb32-e304-4661-8bf2-289d725b5a88"
        },
        "item": {
          "id": "b63a20d1-4826-4d73-b0e8-8d2a8a1ba47a",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "69956fb5-b838-4389-b210-668e15bcd211",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78df979a-4d20-43c2-adcd-71d130e49ece",
        "cursor": {
          "ref": "493698ed-02e1-4f1e-8e0e-134e8d44a801",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "3267edd9-f9d8-46e3-8069-c82ee8c2719b"
        },
        "item": {
          "id": "78df979a-4d20-43c2-adcd-71d130e49ece",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "d911ee5b-ceca-4d04-b1da-b78fe376f743",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b6609c2-c697-4e52-89dc-44552cde37d2",
        "cursor": {
          "ref": "1af0c535-9141-4c0d-8c4a-cd089f8dcc11",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "1596b0b8-217a-443a-8f86-67359c64847c"
        },
        "item": {
          "id": "6b6609c2-c697-4e52-89dc-44552cde37d2",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "df578dec-6f4b-4eb3-bfce-6d36807f39fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f586618-f325-465f-84cb-36869a545a7c",
        "cursor": {
          "ref": "3a4d9ed8-bc95-4f12-9811-6365b8f99ce1",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "ce864999-3ae9-4f3d-8f05-dc31e0c349f5"
        },
        "item": {
          "id": "7f586618-f325-465f-84cb-36869a545a7c",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "00333e6e-ad28-4975-94f0-8ff811398e86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a050ee46-b3d3-4565-a500-6d3f2dcc59a6",
        "cursor": {
          "ref": "0c14cef0-ad17-4e6f-84f1-944e6e403fa0",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "1008410a-e5ee-46bc-b0b5-3502e2bb95d7"
        },
        "item": {
          "id": "a050ee46-b3d3-4565-a500-6d3f2dcc59a6",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "6d130ad5-fd70-48a6-97a0-3a2ad65b04e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69221d30-a32b-44c0-87a4-08ae4c0b5d73",
        "cursor": {
          "ref": "9a4584ef-c4c6-4f85-96a0-0abfe3e79d11",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "7054d17e-8221-45bb-90d7-f62d7f94b50d"
        },
        "item": {
          "id": "69221d30-a32b-44c0-87a4-08ae4c0b5d73",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "d62e0880-3190-444f-836a-c3af24977653",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12f5e4e5-a2bd-4ca7-ac8d-f35ab500b553",
        "cursor": {
          "ref": "c83db0bf-56ff-4415-9943-3e1b01dd682e",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "5fb5513a-9bb8-460f-b4c4-b16e94b1d32a"
        },
        "item": {
          "id": "12f5e4e5-a2bd-4ca7-ac8d-f35ab500b553",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "4bf05ca7-3c37-41c1-856c-74c6999a0a9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "977d49d4-74a1-4dc1-a7d3-1e5d08ba6079",
        "cursor": {
          "ref": "b672da1e-848a-45d6-a2df-8af115652f5c",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "302f2439-ae06-4754-82e7-f2ac313aa501"
        },
        "item": {
          "id": "977d49d4-74a1-4dc1-a7d3-1e5d08ba6079",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "4c5cd2d7-1126-4e39-be5b-b3d7d8e38619",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "273bc98d-b754-4c68-945a-555f3f05ec4f",
        "cursor": {
          "ref": "b86d9554-0cff-41d0-b31e-673a070d6fe2",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "282ad73f-dc50-4f26-8cda-9fb2ddab68ab"
        },
        "item": {
          "id": "273bc98d-b754-4c68-945a-555f3f05ec4f",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "ce93c2fb-6ce6-4827-97d6-2af2190aa253",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8817f58-7208-4f40-8a9f-938e46eb56d4",
        "cursor": {
          "ref": "e79b9a24-2b94-4a7d-b035-f346a32b05c8",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "c5bf1b55-3c31-4586-a58c-07a5fa32bce5"
        },
        "item": {
          "id": "e8817f58-7208-4f40-8a9f-938e46eb56d4",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "001c292e-044d-4c2a-811f-eb3c6bc9f867",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d84d5e69-2b0b-4bbf-affb-bf60b9c9ef87",
        "cursor": {
          "ref": "07f412a2-1056-4e3a-92dc-1c48a13accf9",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "15ea52e4-d9ce-465d-9a7b-76e0ac30cea9"
        },
        "item": {
          "id": "d84d5e69-2b0b-4bbf-affb-bf60b9c9ef87",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "6b486860-34c2-4d05-b15d-41e02848f199",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b8b8749-e7af-4311-9601-0046094c3499",
        "cursor": {
          "ref": "e247bde9-e139-4bf0-98bc-f9e4a3189f69",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "09476419-8fd9-4ed0-900a-a517b7169269"
        },
        "item": {
          "id": "8b8b8749-e7af-4311-9601-0046094c3499",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "a4c59a57-efb3-4cbf-a215-3771010b7341",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbcb56ad-0a66-44d1-8991-299ac17cb8b9",
        "cursor": {
          "ref": "b7ce58fb-ff6e-4a50-89aa-09dc710b0ce7",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "5ed6dba9-e0a2-4e9e-9eaa-d4e4aaa18206"
        },
        "item": {
          "id": "dbcb56ad-0a66-44d1-8991-299ac17cb8b9",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "197785c4-a804-450f-9f74-1d0ba3fe4c69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc7ac8fc-d90c-436b-acaf-f06666068df4",
        "cursor": {
          "ref": "66b018a4-d554-400c-9329-70d6a9f03c19",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "ba253ce6-7575-403a-a59d-f33109712f08"
        },
        "item": {
          "id": "cc7ac8fc-d90c-436b-acaf-f06666068df4",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "96a73cc2-03b5-4b4d-9d73-7555b10a09d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d9f945a-f15d-49f9-b84d-3db20e4903ee",
        "cursor": {
          "ref": "cf41ec90-33e1-4778-8fca-183377f2c724",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "fe682034-31db-4e87-a7c8-3a20206aa1c2"
        },
        "item": {
          "id": "0d9f945a-f15d-49f9-b84d-3db20e4903ee",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "9aa3e071-e1e1-4fee-8eac-a93d4b9980ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6573e574-447c-4fdc-9a43-6884fef417d4",
        "cursor": {
          "ref": "0e95326f-35f3-4c00-a4f5-a727095b2d57",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "0ef08b55-802e-4747-bed9-92e70461bc8a"
        },
        "item": {
          "id": "6573e574-447c-4fdc-9a43-6884fef417d4",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "16055265-9c73-4dec-8381-d14a0c27211f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0e85a08-4c7a-4c9f-b8d3-9e2fddf813d1",
        "cursor": {
          "ref": "9d4d16d4-fea9-43c0-9f96-29d2cfc3e509",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "872373f2-3ae6-4b1d-a7a8-25de9640b6a7"
        },
        "item": {
          "id": "f0e85a08-4c7a-4c9f-b8d3-9e2fddf813d1",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "b821de44-b963-496f-8b99-11ead3430d9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7cc6d593-a182-46f2-8fdc-2400f7907968",
        "cursor": {
          "ref": "b2544275-a4ad-4efd-9b60-4e29c239a1b0",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "cd0daf82-91f5-466a-9288-4b9493a31f1c"
        },
        "item": {
          "id": "7cc6d593-a182-46f2-8fdc-2400f7907968",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "bf43ef56-bbc9-47ec-a6f9-128cdafc6493",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f2358b5-33fb-4197-8085-f591707aa052",
        "cursor": {
          "ref": "b579d5e7-e481-4ec1-a564-2893f825c358",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "59ec8754-39be-4555-b60e-17ec73f47624"
        },
        "item": {
          "id": "7f2358b5-33fb-4197-8085-f591707aa052",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "61265e8b-aa5b-44fd-a744-4af08db69ef9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc6e4c24-8459-4a6f-9a1e-dd14a4272184",
        "cursor": {
          "ref": "8559297f-81fe-4e49-a7d1-722ff91bb260",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "0b3cb775-d87a-4786-8c3b-1f34690a8e30"
        },
        "item": {
          "id": "fc6e4c24-8459-4a6f-9a1e-dd14a4272184",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "bbb0b6e1-5911-44dd-8a00-c6e8df77b862",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f085411a-db97-477a-801b-2775711a05df",
        "cursor": {
          "ref": "4a3253fd-c983-4221-81fa-232589af7091",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "af08c0df-2a16-4bc4-b994-05284d36cea6"
        },
        "item": {
          "id": "f085411a-db97-477a-801b-2775711a05df",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "4ad91d74-5fba-473e-bf97-b2abd2bb37fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ddabb8e-ceb9-4ef6-bb30-55aa1b263cd0",
        "cursor": {
          "ref": "3a861ae6-bb5d-4884-a8b3-3ac77d9e6ada",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "e6dbf34e-82ad-499b-bdcc-2f1b308fd9f1"
        },
        "item": {
          "id": "0ddabb8e-ceb9-4ef6-bb30-55aa1b263cd0",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "bc2a5394-a7a8-4b3d-aabb-94e66576b30a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80dd14b1-a2b5-4cc0-9917-87d5dcf73038",
        "cursor": {
          "ref": "fb0a9867-e041-4c8f-839e-469677b5123a",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "d3d629d0-5b16-4d63-a3ca-681e841242fc"
        },
        "item": {
          "id": "80dd14b1-a2b5-4cc0-9917-87d5dcf73038",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "fced5e13-0e4e-479c-96ff-3fc98db847ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:244)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6defef6a-7cd2-44da-8d20-47f4d0491ba5",
        "cursor": {
          "ref": "ca78761d-6f8c-452d-badc-949c14b71183",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "252a5e51-edfd-44f5-a208-e1ac97d7ff6b"
        },
        "item": {
          "id": "6defef6a-7cd2-44da-8d20-47f4d0491ba5",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "74286241-3824-4ed1-9792-d0d28a6b4de5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 200",
              "message": "expected response to have status code 200 but got 400",
              "stack": "AssertionError: expected response to have status code 200 but got 400\n   at Object.eval sandbox-script.js:1:245)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verified'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verified'\n   at Object.eval sandbox-script.js:2:245)"
            }
          },
          {
            "assertion": "response verified is false",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response verified is false",
              "message": "expected undefined to be false",
              "stack": "AssertionError: expected undefined to be false\n   at Object.eval sandbox-script.js:3:245)"
            }
          }
        ]
      },
      {
        "id": "18ea999a-8505-4aeb-86ec-71eedb3f9386",
        "cursor": {
          "ref": "653bdabc-77c6-48a9-bb31-686207a79134",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "3c291295-255f-4e15-956f-509065d0e299"
        },
        "item": {
          "id": "18ea999a-8505-4aeb-86ec-71eedb3f9386",
          "name": "credentials_verify"
        },
        "response": {
          "id": "304b7353-41b9-4373-aa5b-d2ff334018d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 200",
              "message": "expected response to have status code 200 but got 400",
              "stack": "AssertionError: expected response to have status code 200 but got 400\n   at Object.eval sandbox-script.js:1:246)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verified'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verified'\n   at Object.eval sandbox-script.js:2:246)"
            }
          },
          {
            "assertion": "response verified is true",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response verified is true",
              "message": "expected undefined to be true",
              "stack": "AssertionError: expected undefined to be true\n   at Object.eval sandbox-script.js:3:246)"
            }
          }
        ]
      },
      {
        "id": "8ce2e133-2e79-4956-9aa2-280b7c17708e",
        "cursor": {
          "ref": "f9056571-99e0-4c69-bb16-dcd1dcc25d2e",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "61cc35c5-4ce3-46b8-9d65-adf6c703f587"
        },
        "item": {
          "id": "8ce2e133-2e79-4956-9aa2-280b7c17708e",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "87fe8599-98ba-4de9-9126-713f2ab4699e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 200",
              "message": "expected response to have status code 200 but got 400",
              "stack": "AssertionError: expected response to have status code 200 but got 400\n   at Object.eval sandbox-script.js:1:247)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verified'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verified'\n   at Object.eval sandbox-script.js:2:247)"
            }
          },
          {
            "assertion": "response verified is true",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response verified is true",
              "message": "expected undefined to be true",
              "stack": "AssertionError: expected undefined to be true\n   at Object.eval sandbox-script.js:3:247)"
            }
          }
        ]
      },
      {
        "id": "fed3458c-da0e-4e8a-95f4-5955efccf4eb",
        "cursor": {
          "ref": "4bbb6b6e-f4d9-401e-a4e5-215c2818de96",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "2017b379-716c-44e0-a8da-e674b4907262"
        },
        "item": {
          "id": "fed3458c-da0e-4e8a-95f4-5955efccf4eb",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "bec21a89-b285-4e97-8059-a948f8979b13",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 66,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fed3458c-da0e-4e8a-95f4-5955efccf4eb",
        "cursor": {
          "ref": "4bbb6b6e-f4d9-401e-a4e5-215c2818de96",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "2017b379-716c-44e0-a8da-e674b4907262"
        },
        "item": {
          "id": "fed3458c-da0e-4e8a-95f4-5955efccf4eb",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "bec21a89-b285-4e97-8059-a948f8979b13",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 66,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "705d4fe2-75d1-4fac-bdfc-75938dbb16ab",
        "cursor": {
          "ref": "bae9b091-b255-4d5f-851a-8cba69ad4f93",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "d9148e23-fd69-4abd-b0c3-4641378b815c"
        },
        "item": {
          "id": "705d4fe2-75d1-4fac-bdfc-75938dbb16ab",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "f8be7e04-e088-443a-b49a-84a0f5cba181",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:249)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "505bdc95-fb82-41fb-a0d5-14365feaa0fa",
        "cursor": {
          "ref": "07db1bc9-3af9-4a01-85f5-dfbbfdd258bc",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "7e21795a-654d-4589-a7da-ab5c961c5ab2"
        },
        "item": {
          "id": "505bdc95-fb82-41fb-a0d5-14365feaa0fa",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "204e5cdd-91d7-4c2a-a06d-e8ee1484a2c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:250)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}