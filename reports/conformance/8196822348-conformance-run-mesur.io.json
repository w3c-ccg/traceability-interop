{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "a3578b65-9816-490f-a36e-7294392114be",
        "name": "Clear Cache",
        "item": [
          {
            "id": "02435407-296b-4c56-89dc-cb9cb08adc4d",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "f7e666bf-fb78-42a3-b271-111f61203ae9",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "cc20e891-8582-4d2e-a4f1-371a963a1c60"
                }
              }
            ]
          },
          {
            "id": "a8c02466-2a44-4084-871a-341d930dc3a8",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "e7bb2961-8c34-42a1-be11-84a23e5c2520",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "ed7eb761-6497-4d77-8e95-d2725aa588d7"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "df9de963-70c2-4d42-8b53-f2ca8864c557",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "931c069c-d005-41bd-818a-8ff7108ac309",
            "name": "Positive Testing",
            "item": [
              {
                "id": "c7e2c291-6608-4980-95d5-80679f0789ce",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6f6d359d-9f8c-4c57-b9eb-0bdfbc45512e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "36d97542-befc-4465-9859-f09db7dc37b7"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "ce0688cd-b006-43ca-934a-47f0b0ae23e8",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "67de2cde-6b10-45f0-a668-ea6e66e616f5"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "7556aaf4-1318-4641-893b-befd216cad42",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "ba482bd8-6844-4656-af7e-7d393ffd0a9a"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "22ce350e-65a8-41b5-8fbe-0d7bb5894383",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "317c1a06-2c71-4277-9236-f5a5be403b1f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8c434ff9-fc4b-48d8-a773-75e64bfc44cd",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "390d3953-e616-41c5-85c4-d54dc7631e67"
            }
          }
        ]
      },
      {
        "id": "86605c83-3825-49e8-8ade-a4727269dc1c",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "c68213b9-edb6-480c-bc27-f5634feb65d6",
            "name": "Negative Testing",
            "item": [
              {
                "id": "56c8eecc-ff97-4b48-a02e-1416fb356066",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "c59503ad-d056-4540-bd04-1867a89a6992",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc4f8b80-3f35-4b54-a39c-83f3fe5f9114",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "df2ee982-21b0-4b35-bfa6-572fece8b4e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "daf3e954-3678-4baf-b8e3-efe891865067",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbc476e2-fe68-41cf-a352-4950b39cb842",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d7dd1642-47eb-47ae-9038-e4cc70dd003d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bae89630-8c5f-420e-a71c-29bfd3da5438",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aae38570-d118-4f0a-ae2a-4d9da6c8d8f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9305905b-f313-41c1-8e89-ad5d0325befa"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "54b4640d-c650-4134-b4b2-9f494c385a9b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d45cb41f-51d6-4e4d-8534-ff82f556ecec",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6198397d-bdd0-43c4-bcb2-42f90c92b9fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7615c601-ac85-4991-9114-ff27d0211c56"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4680341b-b728-4613-b576-cb3206dc2209",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "130e8270-9688-4d51-9b2f-c22df2dc368d"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "2eebe3bc-41de-499f-9851-879a5ec0cc56",
            "name": "Positive Testing",
            "item": [
              {
                "id": "c27be4a5-bac5-4628-99e8-7ec7451452f7",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e93ecd7e-8bf0-4bd1-a57e-3aa7b0d43aa3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "f5f6226d-a1d9-4ec9-b4e1-59224c256b80"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "80e30f2e-c695-4802-a24f-5d7111a7d3c4",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "d2751160-31c8-4e35-a33f-4a1d1356b9d3"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7e637c46-f590-40e7-8b23-3ef78510e25b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "5bc7e513-2ab0-4db6-84f1-7c5d2588ebb6"
            }
          }
        ]
      },
      {
        "id": "f277f17d-ddfa-4ce9-80d7-8ce02999953d",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "2195ac56-48b3-45a7-ba1f-2407e78fd660",
            "name": "Negative Testing",
            "item": [
              {
                "id": "24c490ef-8318-45a1-a3c5-472adf402ed2",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "ba680bbc-551d-4ee9-bfae-f01467cec3f3",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd697334-8282-4d4e-94e8-f96be90ad481",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "519040af-edfa-42eb-aa35-c5b0828d224f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ded4c493-1d2e-45c5-a1b8-ae7cde00d08c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4fa57929-f867-474d-8bae-2d1513fedfb7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3dba1ed-ae0a-4f21-b201-3dbd46c2793d",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d75e7e10-8fdf-47b6-b727-a52cc0c3d594",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "97cbc523-be3c-4511-9aaf-069fe452d40d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4fc4003-c74d-41b3-82ba-387aecbc30e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1fd2885f-ca90-4cd8-a8d2-5b26d6da76a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ff478cc-4b74-425a-b110-dee2f04da663",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "373398be-9dac-4646-84a6-66bd13dd52cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55af973c-3410-432e-9bc3-5be76acddc2a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e06e8960-4cdd-4e09-b943-f16c9c809f33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b5891262-e022-4f99-acd9-a247cabb28a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d39d6189-f525-449c-ae73-861bf186b632",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e1cde99-60f5-4127-a47a-0ac6004c0598",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "310a9ed4-3254-4d26-9cb2-847e9a287c2b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ae8d2e8-02a1-43ea-98a7-f374b33455a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "797c571c-757c-4aab-b8a6-83bbf0a6afa9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47c0b540-c922-4974-84f7-4b13a26b960e",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c04d7143-1745-40b5-899f-bc304f089cb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36674ef1-eccc-41d5-b68e-158cb6c1973e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "178a5f8c-b0b3-4569-9a7b-270eb86b1207",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1469b1f9-5141-4cf1-bc4a-ffb102e91c1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6e810dc-7eaa-4a6b-b2fa-9f9ba14c1162",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7271737b-990f-4695-805f-59d5d9387cef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48d1c11c-9ac6-4f12-986a-a01e814ac16c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e51ef280-fb6a-47d7-b414-db364f67ea82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ed1bf6cf-d140-418c-ba71-5b239e1e2f4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6e4549d-5256-460a-9676-fb0e2e88debb",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca4e0351-5225-4cae-b453-cab67f995acc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60cb19cf-9f26-4a92-8222-5ac24346baf5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53b6daf8-22d2-4de2-a42f-a47036f7e9ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3afc89d4-fadb-4fc5-b11b-61cec07b083f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35926b2b-3526-467b-b823-100660cac437",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "758a60b8-f412-422d-b6c8-b0e3230de549",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6196868-ad93-4b30-a874-201d261d804a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc4d1512-ac42-4ef6-ba69-c98746a6a13e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ab367bde-a403-4a63-8073-c059354f0d06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21739279-a1e8-4edf-b10c-6ed2fa3d163c",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd82635c-3709-42bf-bc6c-e605125a0fdf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d71e0e1-4916-42b3-97df-a9a2d9be23d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fbb758f-8c4d-4bc3-b47b-8ab8c93cfba7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6d89ed26-c541-4e3a-aefe-a35d548857df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "150ac9e4-1376-4145-be90-e7f1945b2220",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a46437ba-cefc-4d3f-8e6e-eba305de720b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0724fe6-5c34-4260-93bf-f3e0623bc233"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62cc2b8d-5c92-4523-b4c0-97a505982f1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fc8c5cba-0706-4fd8-8d12-97dc1223959a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16e72a4d-0c92-418b-818d-5f2ba77b273b",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9c0e163-b6df-4bf5-8650-da13dacf85f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55ac3c2d-a3d8-4bde-9a20-4f620dd10988"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "039345f2-8644-4144-be51-7a24a311292d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a6f91d64-5307-4c7f-b001-4753b39e2797"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b12242d3-d197-491c-9af1-c1e05084cf21",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f54a0418-0471-483a-b4c0-78e4d9131eb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ed0b7c5-4815-49ee-8206-c38a2950c24e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "630e1136-5d5f-4b1d-a957-d2354aeb59a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "60f99dd7-3d24-4280-ab8f-cfac6a0d2ec8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fcb016ae-389f-4c49-832b-d6aab79687ee",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea8bea29-a657-4cd2-a702-405af224f015",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1868d3f6-08eb-4d49-a07b-3c67e31a0dd3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4600526f-d148-4cd6-91a7-1293333c7ebe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b3f7e160-2cf0-4f8b-aaff-56a83b20f5df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21c37dd1-f577-440b-b788-9f684ef3ae56",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4079c44e-1ef9-4a95-9e17-82e22f7135a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "babd8130-f3b2-4ca9-8485-aa24bfc15bde"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1659dfed-4312-48d9-9893-6c92af5caa1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d536f030-8e51-473a-934c-a7e2df3d74cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b1a89b9-1b88-44df-821f-85c9ecd1e791",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e94d87e-96fb-4cc2-b769-5aea97e34208",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0025b6a3-d8d0-400d-a3b1-3c1f4b629852"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac95281a-444c-426e-afd7-8853228034ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7461ecf5-83c8-4781-9de0-00d80dc19a61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e2c3af8-f61c-4089-b8ca-2f799c0edf24",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11dc915d-6001-46ec-b597-d0cb4cf95e15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a14ac591-ddad-4d9f-8a82-c4993578ccf5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43b47342-5725-4c4a-8074-332bf6a6b0d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "996feb92-7dce-481a-be86-078a039010bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8908f67d-cd57-407a-9e2f-9d2ec5035d10",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cea80ffc-c61b-4741-a4c7-44791ef879f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "386a569c-259f-4ac4-a619-d202c383835b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27100dd1-6975-4643-bd33-f25205ad2d20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "39a5c376-5a8c-4a94-9c29-e92b188af7a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc5605ee-0f45-4dd2-a62b-44e7eef0e15c",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11ddc634-550d-44fa-9454-d42af485559e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ebbdec7b-bf4f-4188-aa9a-eca6a7d78dea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "466b615b-16bd-451d-ade0-acf155ef8beb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "f8ba4c7e-3b21-4534-9c23-79103242c7d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3cdb4575-7434-4d09-8195-5fdce897b6a6",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b290ed14-1d66-40a5-8c25-421e11f12bd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ac885ea-2e50-494d-b7e0-bd1b2f3b6dad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0919589e-89c7-42f3-85f7-e510fe958dec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2b54991b-0943-48a8-b461-20b1ce58238a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3113daf-ff28-4a13-aa3d-8a9d3a8e8b83",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9fa2064-79f3-4249-b4e8-3dc7a49a5125",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad9c3f01-bfd2-4f7f-b84e-9d05daa95b0c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "834a173b-c70f-463e-9ec6-1d54c696f324",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e10cb90c-fe58-4100-b552-8884550b3b2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72dc4f6c-81ed-4de6-a411-10087b51e46b",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18ac55dd-508e-49e8-b102-58f90a1113c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06decd53-5fc0-4ace-ad6b-588adf7774c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2864d08-9037-404c-a9d7-ca6bd49f51d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a5a99ae4-c9f2-4d07-84f0-62132d82e4b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6762d6b-041d-490d-8f85-aedb89ab5fdd",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5de2db87-ed68-4701-b602-570a51958696",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f020088-36c7-4d70-a94a-c6ad0c9760b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e1165d4-d890-4e15-b053-c727cf50255e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d6cc5ba4-c877-4108-a25e-889ee71385f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03bd5b56-8796-4e41-a440-7d790ba5165d",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25548f5f-803b-4a91-92ef-0564e6de898e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18a3f18c-0028-4299-ad80-991b06d5945b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24e9474e-102e-44f8-b1ca-1748469af820",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b9ff8e18-fa78-4e6a-8b3d-e84eec3f6b91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e855b4ac-512b-43a9-8ec4-e29e72e51ab2",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1636d65f-2e15-416f-b5ad-9b9b15328187",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1dd1e98b-e848-42cb-8221-bb11340d6889"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f9e3b4c-884f-4292-9cc8-a9f79434a02e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "f3a74340-14da-432d-b6d1-6dab4a8d3327"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c7650ad-72b1-434f-9a49-5f55d51b2ed3",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9de72c83-fa93-45f9-a1ea-47ebf492e978",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "018aecaf-67e6-477b-a532-dd9b4051fdff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a197efe0-e7f9-49ec-83b8-3b5d8adc398b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "92fe2bfa-b328-4d64-b261-327bfe575cf2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09356dec-b179-4a25-b46a-c826a93068ef",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2606963a-8704-4040-abd3-3d9f2d397274",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f466161a-64a7-432c-b41c-0b9c137fd0d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8f58cb5-480f-4ccd-b7ff-56f36f237420",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "24afaa54-a163-4347-9da1-d0a1d66a86f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c28ffcd4-fe88-4a37-baed-a0b40d4fad74",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de8a626d-8c82-476d-b9ee-5367ff682d56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27702e71-dcf5-4fe8-8869-5e14ce8d8728"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9338809a-a29d-4b60-8c60-284ab1d546fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c554a22d-74a2-4a14-9076-a08873b6051b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45142c35-696f-4e15-b581-3e3ebd2499f1",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "021958a4-60bc-402a-92f4-1aed79fb6d3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b0a1852-2578-46b8-be7e-571acdb19cb7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a8e9419-dba1-49a1-aff7-78aed130ac51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "007eacdc-4502-4f0f-8a86-ade12cdf2151"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e9e2015-09fa-460b-a044-760725251661",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b306a8e5-b0eb-4e90-a440-81db190d1cc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de801f0c-b894-4486-9fee-bb7a1cd1b9ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "394ea780-4b87-45c0-8afb-3e6ae14416f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "feee7967-188a-42ab-b15f-03bc08a5d03e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afd17668-0905-4efd-a00d-56857bdf56a5",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec3b3394-67a7-4da8-92b8-94f9cefd40a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0382597a-961c-47a9-b3c9-96aac4f32f3d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b2ceda1-1c10-4287-95a4-dc503f570c51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "ccf8f446-19b6-4f04-8d95-c731f0e9a699"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d58c11c-c8a8-444f-ad72-794917d9a2f1",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56dc34f3-6840-4d15-9ecc-3353eb505029",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "adfb2204-9a3b-48bd-9e86-91d1380d3b30"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8174d1cc-a73e-4323-8706-5e8705b140b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "d225b4b7-ca1d-45b5-b38f-bbd3abd92d7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07b434c2-a34e-4ae3-82c5-77c4c4f9b15a",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34a04925-39f0-4f6e-85a1-dd15d75465ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b44034e-420e-4bc8-8728-ac1d1b83d4bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f47cd03-e63f-4e91-bfcf-453f215316bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6c7e4fb8-6013-4495-aac9-070b3b7f6eff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0ff8728-5beb-4bbf-81ea-aef4f58af7d5",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77d11483-ff4c-4421-a4cc-6629b1af256f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32a5ec22-898d-473b-8ac5-63320da4db16"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8cd6115-67a3-41b2-91a6-bec03cdb2341",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ec98fd1c-b172-4be7-bcc5-f84d834b78f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "489fcc10-dbe0-4071-9e39-3b2841dd6734",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6791b9c-ad24-4de2-bee7-c14be969f30f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a0d10bc-f832-46d4-a281-96d087fb5008"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8e966b6-e54f-482d-96ca-96c13ab041b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9e24d296-9221-4689-8502-5375b47b80c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6aef3f17-f84d-4d35-80f6-50a9aea8da67",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a918766a-35db-44cb-a7f8-d5014dcff050",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4c2f82e-51c5-4073-b064-6337005af5b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96135802-7096-45c2-8b80-644db599f82e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "f426c8d4-733e-4dd6-aa7f-40a223258270"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fcec16d6-0857-440f-880a-8671d5b8c556",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1684250-21bf-43bd-ad26-9a87a0ff7e57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "540c063a-23bb-4628-8850-5b5285d4432d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31d15e2c-d8e6-41c1-947d-36f472b39dae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "efc7eb74-635d-4934-bbb8-80a8925f1dce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc6d58a6-396b-44a4-b461-9d5a61dec296",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6374498f-0539-4099-988c-4b0ec4f093eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e6ae7f3-e145-46de-aff2-33257fa494f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6ccd7c9-fcbe-47c5-8182-3a49c85f6dc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "914962d9-ac9b-4cb6-8e30-a1006cde6757"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e3e87c9-e885-4bfb-a983-db1b7449f3dd",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e58052d1-72fa-4bae-a6ed-4acdc491f665",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7eb1c520-ebbf-4315-8bd4-4df007d578c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f434721a-1ec2-4a51-ad6b-646f00383370",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "7ac405cb-1811-4919-b05a-4332c1b75079"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8ab9803-ad71-4a73-adfb-2e9e3764df78",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7753fbbc-a3ec-4bc1-b547-df5b1d304e1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e716363-cc21-44ed-9c29-052fa7c45c5e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "154bb78b-977c-42b0-9d52-dc7c0f02f0a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "0dfd92f3-dbf0-4dea-9d9a-3a0125bb50cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff2cce0d-b2e3-4913-beb9-8d312d565600",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a629c9f-8335-4e9b-96f2-6e33d60c9c08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52050f7a-ceec-42e3-8a55-8958a0725414"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3af7f89f-fd7f-4d8f-843e-7c1cf0a441e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "828b33c8-6c66-4aa8-a6dc-fbf88607567d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7222bb13-0443-4565-9ce6-a34def1a03ac",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffc53f5d-6132-45ad-845d-bf505ea0a4d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "120a5f5f-b41c-46e2-a28f-ecf6a5238c3b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddc47ecf-8da5-40b2-b5b0-b4995ca45e0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "4c56fe0f-5ab7-4d50-813b-29d81b75b147"
                        }
                      }
                    ]
                  },
                  {
                    "id": "858cb343-dd82-4313-90b5-ac74a957d3c7",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee7fbc3f-fb2f-46c7-89c3-22d76fe918a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "85c5a3f6-c03a-48a8-a7d4-936203b28f97"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50d80189-c559-4f1a-ac5e-72fd72cece6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "fb8446fd-daf4-437a-abce-7f8602e60f35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75fe72fa-f62a-48f0-a979-16be225ab966",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "efd33d3c-62be-41c0-a069-8a02c48d0a4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b16579e2-31ae-49ae-9ad3-bc63cd74508a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a7f6845-823c-49e4-8315-6df66e83562b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "cc6f477c-3635-44cd-9e0b-19f23ff7ae82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc24d9f4-1d5f-4abb-8e40-5f7e43a86ca2",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ddbab0e-bb66-41c7-ac09-5b665883f7a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b8e69f5-b317-45e1-907f-38e277408948"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2034f0e0-4554-48b7-891d-5cdc7f36fad8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "16bcf964-4195-47c9-be4e-b4363a3bf66c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d19c64b-b392-4e22-9892-cd93551df096",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91cc9f5c-a6b5-4432-b0b3-cf72dc8783b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4fd4a920-3354-4628-af48-b93028f4e518"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f0b9e94-a6e5-406f-9db4-b9b449b67ddc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "bacf808c-b1ff-4e47-baf1-e690abc214c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2ee842c-cd5b-44a5-b3cb-201482553826",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52a8e14c-5cca-4ef3-9668-77f5f693f850",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "217ccf88-a1f2-4e3e-a465-9b7be37bff42"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a760f4a5-44ef-46ce-bdb2-946d82e72298",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "294838da-4bd1-4699-ac12-fcb171c07d80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf691148-de4c-496f-82a3-e1ec5baaddd6",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1f6ec7f-dc65-4b52-b2df-4b2b80c71b82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3fa8fdb-9ba0-43e7-94d6-e9f11a9c1fe7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0f673fe-8c22-4f71-95a8-7e26a17190c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "304321e4-0c04-4992-a0d6-c7ad3698fe25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19ba9833-c404-41c2-a63b-ec9e3faa449f",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d22241e3-5aa1-42cd-a12e-b711438ae3f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7136b584-e789-4c53-a3d5-3fb657f1fdd0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c5b6d87-08ca-4ce4-9b89-115a49dba094",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "35af66bc-f1e3-4191-8f10-e0d975a3eb34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b6054d5-39c8-4155-83fb-7aea1c32bae5",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf4e6fcb-c133-4941-ac4d-5951c4d198a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c51cb32f-8d6a-4012-8479-8cf2bc823a8f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46ff8816-73f1-437b-b007-f50045bfc80c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "64a6559f-ea1d-45bf-8d9a-77c4c3a5cf98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "baee8a3b-89db-4eb7-a69f-ced69960e697",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8761bc36-7a1f-44ad-940d-809d95869440",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c218a0b4-aed0-49a1-921e-45f3ed6e59a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1649f7f6-4387-4535-b9f9-877736030596",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "84846f88-8d00-4e35-bde9-77763aa5d078"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e212c418-f920-41f8-a136-9dff1a158f24",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a369c94-7fe3-4241-9373-a0b00d1fc968",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd8b28c2-9cdc-4261-9147-03ca6937fa51"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a35e4a09-303c-4936-9bec-c28c5d6bdfb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "ec12654b-eef1-491b-ab87-11766cc6e59f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd187238-600e-4733-b150-9e8877ec31b1",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aea600c2-2023-440c-a25d-1d80f94b004e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "812e16ce-e73c-4562-8226-00e36325f0c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e2a0ee8-6dd0-4df8-aa9a-eac9f3045be6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "8b0e0f91-4dfb-4c79-9438-816e28333683"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27a515ab-1eae-462b-8623-f3094f626518",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "debe46f2-e37d-4e5d-9942-b30f42772a94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90f8bd43-7855-4d16-9628-d7d42722cfb1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e05de93-6d8b-4210-8e2d-9bd0b4c51e20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e4ca1ba6-d012-4178-b477-f0e905d0a81c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6159ec28-ae18-4d34-8be7-25a2ee82f83c",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88ebc0cd-86d5-4d8a-b0c1-822109c947b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75df235e-42be-44da-8d6f-d4688513e3c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7291ff1-2323-4b06-b286-60565e529bb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4e352ef0-32a9-47b2-a1ba-89e279559b62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e86c1e0-b812-4645-ab45-65a8ffbf194a",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e07ab11-9070-4147-badf-94e98acd70cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08014aee-8483-429e-943a-68c261586ec5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc594a49-a7ff-4463-935c-69ba815173e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7b12fd0e-8ec5-435c-9e38-4862b91a209f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6223dd41-a2f4-4f01-955d-8690d398c411",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a8f3565-9825-4e19-9d55-13534e2dd308",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be3f00c5-3ce0-401a-9782-9977efcc3c7c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34863115-32e0-4870-93ff-1d84b497c23e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "8ba3cb79-3ab7-45d3-95ca-6e1dcc054374"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bef5bd52-3e86-4d4b-a7a2-119d4086028c",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfc72e15-3770-43b5-b176-2defc4c8a417",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e09725be-811d-4d9f-844b-2766d363d90b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "677e140a-d1d4-4353-8eed-7dd8aa637c33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "ad26d0b2-4acf-4845-b6a1-c21d35824ad5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e2179db-119e-4427-bac3-55b073de1bac",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdfed908-39d1-4bb8-bdfb-966190a87cd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d24be6de-47e2-455f-85bd-453fdb2dd6f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2642ecb8-667b-4c8a-b625-5813017a42b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "1d0a1226-9b88-407f-865e-ba503e5fecc0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a989f3c-59c1-4595-99ed-536f32086963",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e57bd257-7059-4710-8541-24966f2841c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "668a631a-20e0-4061-8017-d61df06903b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d22c09f-9d7a-44c3-9182-06ab4e90d295",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "b7d0a810-650a-47e7-b28c-a35aff6b8be6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88fb278b-78c1-4a4b-82a0-ac0006c4006e",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77e7c28b-9842-4330-a173-e5cc0c965163",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b780ab3-6b33-46f2-81a5-fbcd0dc7a905"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e60b4b6d-0f3d-45d9-b098-4b8d48d88b64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "7d7f9377-c5b8-4664-857b-ca6992b15124"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6fb64e89-8b08-44dd-b8a9-8598f957fb73",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a4b859b-8f26-40f8-b480-bfee04b947d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78817847-e42d-4877-90d1-ed79146e9342"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ee763de-1cc1-45bf-870f-b5cc6cfe484d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "35e87a45-80dd-45ae-a6a1-b7c367eaa27b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55e6de7e-10c7-42a7-bb5a-8cbd454e0698",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1153e78c-aa3c-4e02-bff6-4d80347fece8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ded6a99-e94a-4f1e-86b5-4b659e3dfedf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9cfdf7a0-613e-495e-9fae-92d6cd3a966b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "d166cb86-eb75-4e87-8213-62eca679b732"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58de9abb-dcb9-4fbe-8ecd-cf1c77dc100e",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "475b5759-65fc-42c2-9ec0-82fbd2c81375",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27b63d44-6710-4ce0-960e-bfbe00f367dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8636c572-2da2-4315-bbc7-b75374175c38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "1988036a-be38-4568-96a6-f2abe2b4af34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99c7380b-24cc-48d2-8b95-eb9f8d89be2c",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7658be5c-5c03-4d65-b794-2e90c9fb018c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bcbfbf92-9ba8-47e1-ae3e-6c9c6eb5e39a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea978fd2-181a-43bc-b338-21ece11db3c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "dbbdc841-c068-4861-b4f7-3be5332f7762"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52ab8b0e-11b2-46ae-81d5-4934dcfec23a",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c105e892-e343-4805-b8fd-935cdf3cc157",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "640e1af1-11ca-4716-8a5a-ff96135f0648"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "022615fc-c90a-4de7-b681-a742d8c8d6fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1653180c-bbda-4524-ae39-f8dba57f1593"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50c629a8-abd4-4960-a465-804fc715a5f0",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cce72f40-5096-43be-96e3-13affc0a0bed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab396371-d7dd-493c-b691-5fb7268b936a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "154454a1-a049-414b-a434-9edcd9379393",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9b7e0b3f-c3ea-4179-a764-7af01c4d32cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d08bd2c-471c-4557-9864-bcdff0109d3e",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99e0efcb-c348-49be-b1a4-88c1be36c827",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6cdd3b9-d16d-4dad-bacd-83ae987b0d0f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d838e65-29cc-4c12-896e-36e0ede10793",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f8986497-bbce-4029-91fd-d05ad526769a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "933e658b-2c47-44cc-9870-b876cc74fbe7",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4777550-7e4f-44f9-85bc-a389554280aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4bf2c32e-bc5e-4b08-b41e-701ea2bf0044"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "027c1269-bb16-4334-974d-d3848f9f061e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "4e006c75-bdea-44ca-82e2-ba545130659b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c78ed84-a65e-4a0f-a7f7-a569a96e349a",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15f2d75c-5bb7-4791-a1fd-a33cafbf372e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2d1f9f6-cccf-4bd7-bfb8-c7b258168fbd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "600c2d17-fb81-4032-83d0-d3e83df73ef7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "25ea6cbb-3482-47f0-80fb-52d82d0cf61b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5336f08e-79df-44ce-952a-56f83574fd4c",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57075a29-df1f-4228-98fb-bd0b6a6abb87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "afa8a690-c863-4bdb-9282-9016620020be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c529f1f3-f62b-4deb-94b1-aa23be5645af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "cbe3ec0d-92ad-49c0-8928-86ba1aeadc8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b96712f-5899-433c-bbe9-de6816ffca24",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8f932a0-0d31-47d4-9805-98ae5134fef5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ef00f06-07ed-4287-9c81-7d491075181a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89d2ee75-7b3c-48c8-9c31-45ff70dcf069",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "397ebdff-f533-4163-8c74-cb9c0c3a9d31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f24d282-5a30-4dc5-a04d-3f8644c226ec",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "209d18a0-f64b-4253-8c60-022336e75729",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "101333fa-b314-43ee-88c2-043217cf88ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cce9ff06-a402-4685-9296-962359dd3396",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c6d0ba33-35ed-461e-a911-f2e88746fdf7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63404923-823b-41f9-a841-826d1e0d6818",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "155207bd-7174-46eb-bef7-c804020cd636",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0f9a83e-d46b-4ea3-add1-a5b2ec258808"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d57b76f2-1610-42c9-98f5-ce96da6f6b64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "8d176824-0357-4a33-8751-e44862349900"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60fdac20-3815-4972-ba4f-6c49b5a2f1c7",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29bc83b8-70ac-4ccd-ad1f-fa43e4412dde",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b7b721c3-84e8-4096-b724-a6fc1f0be9b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc0d2da7-49f2-4c1d-8b1f-6eb0e352811b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f86dfea4-fc77-4088-8749-9f73bac6681c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "176ac1ae-61aa-4641-b700-6a826b5aa195",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "591d5430-4a56-4d2c-b413-f82ca218ee9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ae1a905-9a7d-4ed0-8996-ad57d73dae7f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92519c2a-cb71-4d0b-aa2a-621616103ce8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "7b33aee5-7741-4956-a8e6-6a958cbe9c6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7923a964-6ea2-413b-8c24-fed63700a5f3",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3dfba514-a2b2-4cfc-8cef-c34a2b488409",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86900df1-9c9d-4ef5-ae6a-5148ac0af07d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30502e48-b2bc-4a72-bf65-aa6319bcd968",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7e6e13f0-285e-4df3-9644-649ce17da781"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9be9c57d-0c46-4c29-aeda-b821ae43829f",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7615130-2d29-4480-8c8b-8092c8e1bfa2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4ea35ae-5905-4afe-9244-288954cf3a36"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d750ebea-6979-40b1-872c-74d06260b575",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9d3e4cc0-5f07-48e3-b029-2500e22639ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c26d5f60-8e60-4b2b-ae7b-27d234fd3d3b",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c69d4796-610a-4b46-9967-e4c456630e7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d326003-a9b6-487f-ab8f-a71e805c0995"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "629e84c5-c177-49ca-a3a8-577f1190ac86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "47e1ee33-d61b-48a1-b7a2-6a8433715c4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07d0c00f-0ec1-4a01-8c3f-c8448bd77069",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e12339fe-19fb-4d7c-8ed6-29a5aaac9f2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30a8e089-c936-45d8-a00f-8aee5a561526"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3d14a99-a451-4c65-93c8-6dd42801f23c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "7a24d271-8c28-424a-a0ae-dbf5868dd106"
                        }
                      }
                    ]
                  },
                  {
                    "id": "488d6108-9787-4266-9ace-8d8d46bb31ab",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18400d07-e389-4145-9b5e-687d2e236997",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3f6125e-a33c-47cd-ba08-72da13ca0fb3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7dae073a-272a-4f1a-8d12-e247cb041216",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "bac1b166-d17d-4a80-ae9c-096c0c4d8e76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b4ddd10-3d42-464b-98ae-12c27fbab373",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e35bfd56-f61e-4459-bd93-da6ddb1f8cc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f31b8925-6ff1-47c5-9956-bb389d72e5dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8facc47-766d-48ad-9677-04c39d8f8a57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "e6f41bd5-b9b7-4806-beba-c251f3e6a90b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c99f156-e23a-4114-bf34-cc2f47cf774c",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06f781e1-c860-410c-ab2e-ec001b2456c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f7bdb15-a6c7-476e-b259-1329f93f9744"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a7accac-8c70-405f-9562-bb444617a3ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "29ccef9e-8847-4864-8591-8fb0a825f086"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ff25beb-3a92-4a4b-99a5-2d448fbe29b4",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70730db8-4f82-4378-90f4-67953dbb672e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8234273-6f06-4016-9e75-1406e0cc92dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fc4ca7f-17ac-40a1-90db-7f73af4e4656",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e1c60867-7ab1-403b-ac03-ff8dbe84c683"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07d6c06e-2cdc-445b-b74a-10d946002c09",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a21e396-5eb2-497e-b3df-8187a50a428d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4117f12f-06d9-4bdb-b819-28e58b92cea6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f793d0d-4550-4c18-9e19-cdb18a0fe6ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "927bed0a-16bf-4265-b3d8-41b5542cae66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a0d1a83-1066-499c-ad6a-ac4c28653b8b",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d341302-c914-4268-8687-a8f987f2cb85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b42f83e8-efa0-4172-856c-54eae58fc566"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9055d87a-339b-42df-8619-0eab4fd91443",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "aa2d5ddf-e4e7-45ea-8e89-bb019be733e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ad7366b-c98b-4b20-9ec5-f731405fe34d",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3d46a45-0786-473b-9a7d-25b7b66db847",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d32a525b-f353-4ee0-bb8c-22cfbec256b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a221084-79cf-4491-9b48-53a2cf04d25a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f134c841-65ff-41cc-be2c-d28722b8c29f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "215f93ad-ae58-4a9a-a1fb-b176ea212347",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4e1b74d-9531-4884-bf25-43880b20b154",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33eff95e-b789-43d9-bb64-50caad5a5991"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81fa54f8-f580-4514-a036-03fd2fc2b123",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "5a602040-c5f5-4cf6-b64f-cd9c7ffa3fd5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1c17aa5-ef89-4c5b-9e30-d150b7e54a1e",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a89a3187-193f-4e5f-9ab8-6376c1cf3b17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f2863c5-744e-4af0-b445-aaf12e1b4e1f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4bce5f2-8eb2-4e4e-b40e-f4a6a356e3d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "e3c4d7a8-0c0b-449b-8fe7-e22bfda0880a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "091d0c9c-1ce6-4789-90f8-ca81e8b513b4",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79712170-494e-47e9-8d62-123d311bf0a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5eefe4b5-976d-4e33-8fb7-01ffd5f5c16e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f0c5d6a-e94a-4c00-b40d-a66e6d8d6a8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "8d6cf8f0-4c2c-4bcc-aea2-27593d31c630"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0e12b67-39f9-4da2-a9e3-6e1c3fabb288",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f4c596b-27a1-46ad-9f2b-0dbd1a8fb1f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8560f769-e137-4ad5-9538-dbf7f1d69314"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d061c631-ec67-4651-bf03-b64d6608d344",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "726ec1be-3c6e-4a62-8ab0-a7a24e7bd24c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74af8768-53ed-4f23-a274-33899f8f9080",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a347e93f-f2fd-466d-a1b4-ed218ae96cc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6efd1c62-c5a1-4fd3-a71f-4345c3af76cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eaef2f3a-b81c-4ab0-882d-1f8663bbecaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "a368ff5b-b924-4272-8ce9-48986d578b71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cabaa918-edfd-4c1b-824a-acac53fc10c4",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81b3b5ed-04c7-41f1-bf57-7a22badd6cc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "721422ed-a18a-49d3-9cfe-1aa6cc037ce0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77da527f-1511-4138-aefc-d2c8c5237db0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "b95206d0-263f-4353-b738-0025d36d7b92"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "4a867887-68ab-4035-9a24-ebcde31ee29b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "04f53567-4b66-4273-803a-a0822c4f8343",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca609541-d336-44e2-98ba-cbca28f9c989",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3180a2de-e7ba-4483-bcfd-07fec3bfcfdf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "530957a1-9142-44b7-9092-7d4dd84bc7b3",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1c30dbed-8359-49d1-8458-4ce099e5cff9"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "613c671d-475d-4b17-bf2d-c7704eefc7fd",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "499a0f5d-b621-4f37-ab01-40885ad30904"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "dd48ab53-b2b3-4070-abbd-f4338b9828a7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "40455f88-dd3d-461b-9288-ec426a9a5267"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "5a4fd2cf-cc3d-4a8f-b3f7-0ae6bbdd1835",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "1eddbf0f-5338-498a-ab18-1cd30991774a"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "64f22259-0183-44f8-9d2c-5a5bee04c1a7",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "cc538c65-df88-455c-804b-b5a2cd014532"
                }
              }
            ]
          },
          {
            "id": "45bd5a09-732a-420c-a632-b7116d6185e3",
            "name": "Positive Testing",
            "item": [
              {
                "id": "d191d0ea-88b1-46c0-9fca-8568db7a15ac",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "0261687c-3c4f-45d6-ab51-c3e2e14da62a",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "abf9bba6-86c0-4712-9247-daafe33a305a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "a79cb733-9338-41b6-91b8-3c4b9b906e36"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8401f02f-1b57-464a-b8a6-5ccbac93d775",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b58e9283-3b2e-4478-a8f1-0a63377958e3"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "a3a888a5-3025-4a16-a545-b22b39d9428a",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "fa347907-664b-4059-abb8-a2501a558822",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "093d3ad6-0b77-41c5-a8d5-90244f9fcf1e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6ce741e3-fd9c-4c6a-8c1e-1b9de0e2ca73",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "31fc419f-ca75-44b9-836c-1d60695dcbf3"
                    }
                  }
                ]
              },
              {
                "id": "95240834-36a5-4a62-951a-a5b226602630",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "744af97d-8a7f-4faf-80eb-7c09e243c3e7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "7c63718f-3de9-43d3-92f4-e00b99f3d3a1"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "26bbdc27-ef70-48ae-b75b-52cece44cdad",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "d16ff28b-37cf-460d-b8b2-01c8b1fd6b37"
                    }
                  }
                ]
              },
              {
                "id": "024aa528-7182-439c-a091-0bf283e5dbe2",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "abad6875-a553-450e-ad86-99ca5e0e6835",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "301c9b07-3137-4982-9f8f-a6641707ca26"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d2e33a69-1b59-4636-81f1-97e5fa57506f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "bcf6b454-180a-4f69-b752-23c03afe8b0d"
                    }
                  }
                ]
              },
              {
                "id": "a202912c-f63b-457c-8633-c74eed3ee9e6",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "fb5accfd-b8f5-4a80-a19a-f35ab7089a49",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "267fb5af-7215-49c7-91cd-ae9693a53ccb"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c7ed374a-e8a5-4ac4-befc-3c876bc189a2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "038f17ac-18c2-4d7a-becc-1bf0fa7e6982"
                    }
                  }
                ]
              },
              {
                "id": "0319a3ed-394f-4bdb-b318-02c773d0404d",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2a90f535-3740-4794-b871-a1aa2003bcf2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "bc2d8c18-8921-4c45-859d-596d8e4c5818"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5dc9bc93-2d36-473a-b295-b8964c83eb86",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "1ae829c5-c9c6-4ef1-a765-0ced098c238d"
                    }
                  }
                ]
              },
              {
                "id": "92e50665-009c-4a43-81ce-93d0531616ba",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "94bf8c5d-b207-4c3e-94f7-4a9116fe720e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "5582c317-7c1f-4348-b89d-893b51d52c82"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e229cc9f-29f8-4b09-8ba1-79ad82061990",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "ad32fa5f-bd63-4b76-a512-8cc04b68a6bd"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "708e0dde-237a-433e-9c49-037ce29da591",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "97e9ed93-8ae1-4a00-8157-5d3dedbd9fb2"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "1af3ac6f-1855-4e1f-887b-d419098cde3c",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "80d169b0-da75-425e-81d0-c088b497ab03"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d9e91e1f-5c1c-4650-ab82-f5c384be19a4",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "02523282-bb09-41f0-a2b9-c7a44258b286"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6555feb0-aba4-40ca-9b7d-a0ad3e252f57",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "4486b148-cd61-4b46-b8ab-df54fb85c349"
            }
          }
        ]
      },
      {
        "id": "f1f9fd4f-e67d-4ce9-a9cc-1541eb5fe9b1",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "029923c0-6887-4e49-96e4-84b958e505ad",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e85dcb14-2233-4a36-bdf9-e249375d0642",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "4cacf225-da89-4660-8cc5-2812ed994285",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7bbc673-48bf-4326-b808-5da5b3d85f17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cce4f961-d40f-408c-ba71-613c99a2322c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0efcb88-9e71-48cd-a4fd-815800db0935",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "1ab02849-7592-4b03-b805-2907f56e22ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5cc95e6a-6ab1-4101-a9c8-263ac1432911",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0d28e54-21a8-4382-a971-534d6320129a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7fc9d0ef-539f-461e-9d5b-f1e213b7d4b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df57f89c-5608-4fb2-9029-b9392b2d6619",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "c48ac24d-f089-48c5-9e8b-62975e6004d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29a2fc7c-8038-4b39-9411-14cb6c804c7d",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9812f05-17f3-4d89-add2-915b0b67d9a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7199f45a-3544-41b3-9496-2230e134e9b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f677873-2b32-4d36-b02e-c5f6024c7851",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "662bc3e7-b8e0-464a-b08f-0b2b37ad88fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9e59963-a2a6-4505-9284-ac20b385df44",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10265c29-e731-429a-b3cb-755d91f4e91d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9883002b-f769-452b-a527-96f65deba953"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44e72e36-8a20-41d8-aec0-574657e07e71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "93b97ef0-2840-4846-b7b8-8485ac5350c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e25fc9b9-41fe-42bb-b6ec-f999bb01c509",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5debde7-2527-4476-9e7b-d5fb038cc343",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e4f854b-8297-4c15-acad-733a0ee4a297"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74136915-1d05-486e-976f-4f4071faa415",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "03497cc5-f30a-42d5-9e9b-cc5d69e38716"
                        }
                      }
                    ]
                  },
                  {
                    "id": "529363f0-15d5-4d17-978a-769c2aa7f856",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfcb99c0-a559-45ac-b0bd-664e1ae64709",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4276f91a-44a1-4370-93d6-324945f07886"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa7a2fa0-fbbb-4da4-b1d6-7e7e032c6e71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "77b1eb0b-86e8-45fb-8eb1-cf7418310a65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f64825ed-0253-401d-8024-591aa4ce4936",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66a78331-17af-4280-86f2-88ae08df22f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02306d30-b72d-4182-882b-95978191859c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ce4aaa9-e9ec-407e-8ec1-b270087787db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "dae18cca-aa8d-405f-9316-f291705aa6ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3be0094-736a-49d6-95cc-9df4e2f7ad42",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3da159f3-a56d-418e-88e3-35bf6a258c0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ffee2c6c-6bee-43db-8f93-768bd8323683"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e077c71-7325-4ea2-9b41-422f8c46fbf6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d9ab7dfa-12e7-4d69-8b0f-ace7a9f5e1fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0a0ecd9-a87f-4374-bbac-629744178a99",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce572d24-87b5-460a-b036-6e5e5bf71d1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76359351-3ce4-4553-8eb7-7d9bd5d4a9db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a50b076a-06ac-4c12-814d-071c9fe040c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "509c326e-955e-47be-b067-9a6e93f5c5cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef14af0f-890c-47e7-adcb-3ab5ed577921",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae7cce40-dd5c-4e5c-980d-4d7f51dbde53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ca91b0c-590e-44b2-abec-c1b7318b0524"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97a13c4b-4df2-4d3d-b774-cba76d034423",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f25803fe-5b84-49e8-ace1-eee7f67cc737"
                        }
                      }
                    ]
                  },
                  {
                    "id": "314ea60d-2e09-4c6e-8f45-eaee06be74fd",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0de3e902-22e1-4bb2-ab0a-fdf6aa5f3931",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04192cd2-08b2-49b2-a9e4-6c8e61700bae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbeaaa3d-8e85-4092-81d4-1fe4cf0e8082",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "ee075eef-6b2e-4cb3-9a4d-8cb79e31395f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "300599aa-0eb8-46a7-b60e-b771f2e864ad",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "325fa53a-fbd5-4d28-a2a1-e2b1f843260e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df250288-1203-4741-8549-6057f4123043"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b54c217-bd80-4a67-9db2-2f8ba0ac93b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c67a4873-962c-4ef7-a0fc-36a98e3c80c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "039de707-384c-4f4f-965c-40911e975371",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c2488e9-aa5c-4873-98b7-5f53c54b09d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0418fec9-af6c-49a4-a503-1fc0a8d0a300"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2218b72-f056-4fc2-bf7c-96bf7f0bc310",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "f3894f32-dc88-4237-9807-d134ae3f2e29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d54851e2-5885-4d03-81bb-271d06af33f3",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6d3dd0e-c2e7-4016-95f3-a43ade7c3ae4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29a36eaa-fc9b-4c89-969f-3a13ab773f6d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "433897d2-5a21-4ee8-b882-a77746b3a515",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "95688dce-9331-424d-b1c2-d78231fcb3d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02892b5a-8511-49bd-9f3f-61df506d2f3b",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae534600-c0ce-4d55-9fac-a64e68edda2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9814e9e3-f8fb-456a-ac2a-0b9a074dbde0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4db32c64-eb96-4de6-a0e0-6bcf2d8dc890",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "ca1cee15-34f6-49af-aae4-337514d7e31f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78886d8e-3bf4-4c32-96bb-4bf5b5e0122c",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99d27271-7d85-48a6-b0d2-45d14b625d74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e51f519-91c7-479f-9a0f-1885bc54d9f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6138c91d-e990-4b51-9a5d-0b4fe579fd39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "ea7919cb-7b9e-436d-ba4b-e87f283a4eba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9d383f4-04db-4f74-9ae2-2f9e5fe0eb24",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5053b16-278e-4875-ace6-7da5dbbc68dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bcac978e-f36f-4927-86ef-d11a881813d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e4130aa-f237-4989-bf6d-a903dd4a1092",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "9d7b03d8-95d1-4f90-9c70-20f00d7aa6b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "008fed96-9c7d-41bd-922a-2b037128bca7",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8554bf8-0cfa-4dca-95b6-43954581b238",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f09b8890-1185-4ff6-ad43-19947eab5b8a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "884182e0-140b-4566-9cca-6b7f7fab5dea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "44116bec-1974-4223-8b5d-7faa457699a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb06349f-5245-4938-8ed5-4fc063852258",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1faa6c6a-77bd-4eec-a2ba-31313841e242",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68a27cb7-773f-42cc-980f-336376eceb1c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be73b07f-ad9e-42b8-99f9-fd20efafb5bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a75a3a99-39a7-4c6f-b717-ca9132f5f2ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b121b831-c68b-4a92-8bab-4f0fc08bb649",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90d0534d-897f-4817-87fd-9f5620489890",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7f55474-56c7-4411-9ab1-925c573a286f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f50d32b2-7f48-4c5c-82d9-eb8cf9ea0e5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "be35f230-c3aa-4979-8984-a5182fd21ac5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bed4cf8-f24f-43e5-a602-6c82333599e5",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de5f78ce-d128-4aca-9188-ba74ae27e1c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0a4c2b3-bb85-4610-8e4a-191a9f08ea36"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1c6fb66-6ed4-4ed9-8f00-8fc47e6ec260",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6ca2ce14-d9ad-44e1-bd7e-8859004db19e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4d5b3c5-125f-4ce7-92c0-2549ffdcd000",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad8d94d4-038b-4446-befc-4139f2c5656e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f3130be-affc-453a-a4bc-df67c59dfdce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed1d3cfb-0b55-4485-aeba-5ca50f175de5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2e297d2f-1883-472f-8189-de0639327bae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d13815f2-27b6-4b42-9f96-a24e756a56e1",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6f648e9-9c2e-43e3-8832-f8630669aac2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce6cb445-0243-4406-b46e-293a9376a93a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa50e7b6-3c6b-449c-9f4e-472a3ab2389e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9f80d396-592b-4505-ae61-8991c09d5d0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc17b40d-2918-459d-8627-5b1c2e7dad5d",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e99239a-ac35-45e2-bc51-12b5148c13d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "807b9865-a305-4346-880d-8f907c65a6c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "437c5b5b-9751-4602-bfbe-0e3a2af2f4f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "158d9faf-d7c9-48bf-bc36-cdf969f8c0a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c155c60-fb52-4ae6-ae38-773f27d54187",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b26d6411-0399-4a7c-9e46-dbc37f18d74e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ac8bc1c-ac05-4258-afff-5717fc95ead3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f87dbc4a-8341-4535-9b79-e5c0be456055",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9249d43d-daab-4a2a-a275-5bb577e0f04f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c89c7d53-f8f3-4984-9331-7a98597f0ea5",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ea63eee-bfc2-4fb6-b808-16b921b9065d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1a548af-c44a-49ab-84b5-07487bada388"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a093a957-745f-46c6-a2eb-300204531145",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "71afec47-7741-41a2-a6ce-8dd5b26db06e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13200378-6a0f-4e43-a104-ef1170602a47",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4591323d-806e-4831-930c-657a92eccf96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01a46488-36f3-4aec-8f42-d1e3cb5f586d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d7e1098-9d14-403c-85b5-162a74f9e7c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6bc79f46-bf90-4b8e-99ec-afe891aba37e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3cb3133c-fcd4-4888-b4d8-3adec3a8082b",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "012d2237-43b0-4f1d-9c61-ad9aa7c8a372",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86179955-5b6a-4f7e-b771-61dd1f5c7c2e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f55c7ec2-2965-4aed-8a34-753acf24fb39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "832d85a2-03dc-4e2f-abec-108807ec9ead"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee9057db-1681-4d1e-aa07-c17b61cdb97d",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52ab3420-05d8-4001-a4b2-920d8d190d25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3beb891-42a7-4e39-87d6-7ee8d0f21cf4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1da3f209-ba60-4d97-afa7-2148b76021d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "59d4b807-a411-4b68-af03-ef3527edf37f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "817c704b-0a75-49c5-bdd3-76646928de90",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e21109c-bc0f-41af-9f58-4dabb32be566",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14306a1e-4cf9-480c-93ac-ff38d3e970d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7648a2c2-ad04-48eb-912d-8ac5c004af6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f6ddf418-1f14-45d9-b423-6a27ec0ee68e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c6abc93-1567-4f83-acf1-e4a9bc632d3d",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72dcd0da-62ec-448e-aff4-0be52426bbbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d56e4cfc-9e45-4053-97bf-77ffc80b3d99"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdefcd7c-db57-4423-9473-927a2bf4b581",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fc08efcf-7eb7-4c0c-b6d1-df63827c3121"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3e82168-5349-4a48-84fb-91e06f74d92d",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a04d07f-8259-4a8a-a062-9738e6de154e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54443035-12b3-4644-813b-2cb3e653c1f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "341062c0-92ff-4050-bedd-3707cf5bac2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6c67d22b-069a-424a-b8dc-1bd28b7e2216"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "eeee1e4a-f93d-4d09-9dd4-379557fed12e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b2a99c1b-aba3-4a8b-8cbb-ca2d048709ee",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b93d0b36-39d7-4a46-a2cb-025bb6c5d3b1",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "184f2d7e-dce1-4eaf-87ac-6f3e31a698a2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6416ba1e-2121-4b23-be80-c8f2ffb6ab94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "bb6a6ca3-95d3-49e2-bf10-daeae508ceb8"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0f4c1d41-d22c-40bd-a27d-bee804f8a237",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2b25f916-2e0b-4001-b2fb-b2b270eac467"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "0488c6ac-be76-4b53-b7d8-a9521867ae1c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f68132b7-884f-4a3f-aee5-a4d455cd7ebb"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3316713a-e102-423f-bf53-4504b50183eb",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "d1db42ca-1cd2-4d7f-9054-9b8291864c02"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "56c2b075-bb04-46c6-b4c7-f4755cbdc88a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "95e2bceb-4b1e-437f-b013-38f89186fcba"
            }
          }
        ]
      },
      {
        "id": "f7204318-e292-41f4-a624-468c2ec56ebf",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "8792f133-93f7-49bf-bd49-1fc17957c0f8",
            "name": "Negative Testing",
            "item": [
              {
                "id": "8b9a4834-c817-4f04-b263-d4fe508ba1b3",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "1a57a9bb-67dd-445c-973d-5e02e73c060e",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aedea95e-3c42-4ab7-b8ba-6c2cdd6cd08b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d677493-0185-48d7-90f0-c9e66ba30f32"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdf098e0-5393-42eb-8307-06f470f33457",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "06d75325-9940-47f9-950a-4f1e1bb2c5bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81bc1eb8-1901-4e9a-be34-4172d68c1616",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e3877e0-b585-4f96-83ae-0a9e3a21b16f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "389c07f7-a369-48b8-8017-c896a30be3d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6adc5e09-e361-4a8b-942a-24abf5d8336a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "27a91276-09b6-4914-9a34-4c31a4b77b38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9bc4612-00eb-49e5-85d4-988eadd670b6",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5c15091-9f6b-4076-a785-ffc5b3bde74f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c2ff8de-1d3d-4df7-b75c-d8eb7b6c5b33"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a0b9574-8ac2-416a-b9ff-11674b85a147",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a6f1b91c-6b8c-4456-b6c9-cdc57e633eb8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b5ff9de-d075-4182-8904-060b4d914b92",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d025c7e-a7c6-4144-9221-8d6d47590d31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98025224-dea2-4c30-a9d6-b496773c563e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85afe162-4b91-41ea-8e87-d3052a752763",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3bd8829f-52f5-4fdd-af4a-4cb87728c457"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40060d0c-7509-4821-962e-279036e5d3ba",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a295012e-1043-483f-ab05-d80ceeec4550",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40597365-e0f9-4fb4-95ed-1ef42d4bac48"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47e64bd0-29cd-4f92-a9ea-2c982d703342",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "397fa930-2de0-42c2-8cfa-6d5ac1ba5c39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76388ece-d9a3-452e-8914-2390379ce265",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8170dcfe-1eb2-4453-a651-66dc60fcd17e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "423bae42-1570-4467-b390-cc95e57d995b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a68c42ba-de9b-4504-9aa4-8a1f350c378a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "8d464c25-34cd-4550-8486-5376c288cf9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "460feaf7-912f-4ac7-8b12-3167c31fe0ee",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bbc6762-d0a8-4086-9b0d-00f6f6b12260",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8fd48ad-f3a9-4984-991a-53715cece9ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d393a646-45e2-4271-ba6e-d976b6b9cec4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "143e5c75-b188-4e61-8bed-8f44a8c85583"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32793215-541a-4f58-b96a-c4216f1e3448",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d973431-3ecc-41f6-9cf6-715f642ecd82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9aa5fdd5-ecfb-4895-af64-e45fa0e7bc82"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "787dc1b3-519c-4c82-aa07-096823d3284c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0fb4c12d-b77c-4c58-a205-998f8da0eb8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0dbf4b16-ffc1-4e51-a328-145727bc750a",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "257489ae-0b94-4112-b764-2d0e325846d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ead15feb-a8dd-4f19-8c67-0d93e048730c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c43413f2-28fc-44f3-bd97-eaa0ec736c88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "05be8b2a-eb03-46fb-b143-39e168ec272d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6141d733-2d26-4d96-a3b5-664323d566bd",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21e82fd4-f32d-4e2f-b9eb-140ed4776509",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a37c8b6b-1884-4973-84cf-df33df692b17"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0bed0b90-fd01-4242-ad25-b97661e75a69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "028c3f65-f0a4-4f81-a9ee-5834b31d5d9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb52f385-50a3-4b43-984b-e4400aef4cb7",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1ca1d4c-098b-4e45-a994-5e78febda7e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0eaedf38-7263-4510-a27a-e10530be3469"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b423163-93f5-4c31-a551-94ac831c8719",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "3226753e-2b84-49ea-b91a-1a467b762d79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9438ee1-7f48-401b-8a23-dee3bf151b21",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec012220-bed7-4bc9-b768-8c802cb457c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d54cfb6-57a0-4a07-ac29-d9bcb4132292"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d4b18aa-7ef2-4ad1-8e44-75e3c4e90f0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "be4bdd63-52a1-49bb-8b91-7b7ac95439f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c76e05a8-69ac-478b-a359-4daf963f76cc",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e0aed81-04f4-4d68-a31b-77010bd4804a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "580e094b-bb32-4185-a968-d0e15696cdfa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd5372aa-eec6-4c42-8508-913ce2543875",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "ef89693a-e84b-498a-882f-bea64fa0b08d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "442fc685-aa26-4257-805f-2a31946886b0",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4bcc375b-4fa6-47eb-a476-a9bb4860e841",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89599708-33f3-42e8-892c-720dcf49fe29"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "107afb70-367f-4826-af17-374130da76aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "98c755c4-cc18-4b16-8d87-83b65b74673f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c87361f-a582-4a14-8bee-22a14aa64194",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40d1d6b5-ef94-473e-a6de-e82fae0743b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d1509433-4418-4dc0-b1e1-77f1561b0d65"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78dee6c7-56c7-4ad6-bfb5-95b07084d7c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "fe1696de-20bb-4a9d-8ddf-eb7716d2f5e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d19302c3-c600-453a-bfb9-3c5aec90c0e9",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9f8e614-54bf-4a91-b042-98cabd96423d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0deb0077-6e49-4f3c-8e08-f74e76d67bf5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "304a9168-0226-4287-9989-73b5bfe5b5d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "05bea146-a4b8-4e61-a3cb-6e67c20932a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b7a2a5c-d58c-4619-a0d1-0b02cb59897d",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "550d2a85-6c71-4448-b9f4-1cfe07ca6450",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce059c74-8acb-4fec-9c01-d9a587c91b6b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06e216cf-6663-4d61-ae84-0b0f92c6a238",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "ad472b56-186f-4009-94b5-91af9d214799"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c31fc0fc-09ce-4319-9ef6-a545738902a0",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe3d3281-15c5-475c-a781-9569d7f84317",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71ba5aac-dcb6-4b05-a394-6c04f0768fa7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "164f8bfd-fe2a-4de9-8b69-da32312e3143",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "1294c54c-a942-47ed-88cc-b0fc5f20e626"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b566b36-b49b-471d-97be-4f260cd04bf5",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83e026f6-eb49-46d3-9c58-21591055b078",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cda8e683-45b4-49f3-a2ba-39156cb3b9fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e6c0fa9-543a-4d93-909f-087c5ab22553",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1808a58c-874b-4e3d-a942-7de6755bf473"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a4cd259-4369-4bd3-bc86-c17e3c314bcb",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "054bd994-e037-427e-af4b-f1702f12867b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "77b6201b-2cdc-48af-8a45-823c33bd3d3e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2410dceb-0713-40e8-83aa-fb009492222c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "868d1daf-b632-4e27-ab7b-095327e5ebcb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "254a2f06-4e15-429e-901f-e12c5520d45e",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29cb5307-0321-4c5b-81d3-dab205a79e67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c229f42-03d0-4f8e-bf0c-7ce37a0b77bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e1ec59f-f7e7-441d-86a8-8227d2f6e6e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8d63e692-9628-414f-b1cf-8ddd3d1092f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "392ef488-81d0-40a5-9b53-e8982d90b6fb",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fac1014-7dcf-4fa3-a455-e46d9aefeb9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e04c6207-acbb-4426-993e-f635bffce340"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1768b4d5-2088-4672-ae92-16747b388afa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "418cee7a-8f34-4823-a03b-5ee255881bf9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "345fc6d6-7bd6-4211-9eee-9052c9332473",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d28e33a-33fd-4bf6-bb6c-cf66c5abe7ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "163f4339-e0cd-441a-8a21-113749b7d0c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d073a618-cc48-4829-968a-e15e68a2c460",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "809da135-1292-44f8-9e7d-d0614274fe46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15d96370-91c6-4726-8835-282faf6c9c45",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c89c8b34-925f-456d-8fb9-3173872cacd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40bb4cab-007e-4cb2-b0fa-78572c8a5948"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9491259-b192-439f-8e45-e5b9b3a78e63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ab75afd0-28c0-4e18-9cdc-a3166d7c48b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "060b8cab-6155-47bc-adc9-258ffa1bc330",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1b4eaf2-40f3-414c-ae90-1faa10745ecc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29a77a30-f824-455b-8d9f-5f48f1320d7c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "882968db-9722-4258-a431-6bbde19ff3d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "28d74480-ce1a-401b-a2c1-00ced2964c2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0bb8cec9-ff56-40d5-9065-0d44d6d860de",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d3e19ae-f298-4f89-8c2e-8ad749598e48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e0821fd-c68d-42f6-9f3d-3cddd1525190"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b826381-0c29-402a-98c0-98bb26f63df2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "91601e7b-8731-4824-94ca-fc85c07e918c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63c0db8f-44bf-443c-8c28-a9ebb6b2e849",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c584c54-63dd-44a6-9ca0-72372257132f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe0120c3-bd6d-4067-8d2e-bfbc6a4a64a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76b3a38e-fc28-4d0d-a2bd-6a826d6bff59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0a441b37-8cae-4b4c-aa5b-41ce87bd3e6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6af27586-1c02-4e2f-8438-c04d9b932373",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf4e2995-2083-418e-845a-9a96d2056c18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf1144ec-6090-4bec-b31d-3c9778e84802"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47b0f023-cc5c-41c3-8425-1ec24615f75a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dcf856bb-3a09-4255-ab5e-a3f27cf96a33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e1e8070-0cda-45a1-9fa0-4b9b53b11fe7",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee6b5de1-e831-4298-978e-34408d5046a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb299ca7-8366-435e-9469-fcc24fa522f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5522de1-8fd6-468a-9071-fc856a4f121e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "932a0d51-8d47-4a0b-b6c6-0340cb497c55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9113d4a6-c624-433d-ba72-115a4db18836",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16da559b-b030-4aa2-92c7-425e4219ebc0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb001665-a441-4c6b-8ec5-c3ce65e7d695"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64ba696d-372a-47dd-8f24-0ded15a9c575",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c881d59f-1252-4507-bdcc-54bfa1097cc8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbae0b8b-ffaf-48b3-a0c3-3d34ec3ab636",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "425f88f8-a075-4462-805b-0aa9c4a27621",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "15880747-0b8d-4a05-9c57-67bdf99a9921"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5dae23f-2857-46c5-83de-d52f54a18ea9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dd467b97-7b85-43e0-b26c-597a50d78c6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "635f41b0-8af1-45e6-8ded-9a4967771480",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "056db1a6-edd0-41a3-8dca-9c2ccdf61b37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0ab6450-1c29-4cc4-8a55-0f85bed668f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10364662-c2f1-4bd0-b9c5-c48602b5f3ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "104840ae-e5a5-42ad-8d8b-75a365cd3686"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af3003f4-c691-4d4e-ba47-624d8311f870",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a49e8c0-5763-4964-b3a7-e022e06b4715",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6dcc38ef-c357-4c41-a2a0-3b0e9d7a0c34"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a21e90e-a992-47ca-ad30-5f42c351e429",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4bf6d372-3703-428e-a541-46992476b712"
                        }
                      }
                    ]
                  },
                  {
                    "id": "560ab2c9-8828-45e3-8f79-5ccb09b4df73",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bed1725-3a00-4f2e-a109-017c8d6f8ba6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c08deed5-5374-4fe8-bbc7-d79b056354be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a22e960b-5ab7-4081-bbfc-2eb00e2c0238",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e5f91956-b048-435f-ae30-c224a3eccddd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04ab0a69-59ab-4125-974c-ffcf74b2efc5",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10877e3a-da72-4607-a10a-5e588b4d3ffd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "590f07d7-93e3-476d-8acc-9ea5db8b1431"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0323558-dcfc-4455-9edc-71aaacd6d75e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e7791e5f-ab15-438d-a6de-608eb4f30c13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de001fac-639f-43bd-b346-2aa5e760691b",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79720f4e-6042-4fe5-be4b-2d64ac5b7ba1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92d760c2-a116-4a40-a5af-d1658a0af135"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7cf4085b-b0bf-4957-b138-d0bfe43251a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b6f752f3-b467-43ab-be5d-5fbadc859a07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0213df5e-f82d-4cb2-8f8e-01ef5b8918e4",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc273ac1-5b52-4641-bc5f-9e0f7ac83079",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02212fcc-91a3-4985-8b25-85aa8bcd0186"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33e275c4-5700-440b-baaf-a3a0079ce314",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f527667e-00ad-47ad-a620-fecf168ec25b"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "0b46f069-7434-4143-b419-f7c3ac22db76",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "3c7f7f2e-cdc9-4ef8-98c2-4025bec29628",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "185ff013-c306-432b-8764-928ab205ea00",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "edc80643-9ee1-4bd0-9835-e79d73c91d41"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "072e5f89-a2ae-4827-ba5f-97efbfc132a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "dfdba817-92ed-4c56-b14d-6cb2a5913a38"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "cb5a563d-56ba-4ec2-9cd2-69426abb4215",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "12d0b0bc-0fe8-4f9a-83e4-82ec22bcbc65"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a0bee9f8-8772-4066-85dc-c6dafbed0f32",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d4b7c361-19e5-4c56-8a4b-bc114bcd6a5e"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "143c4c2a-b092-481c-ba2e-6833fc5f04a8",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "99f255cb-e40c-4b97-abec-eb96dc270384"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d09dad98-35ad-4a59-9972-922bd486dc6c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "175bdcbd-f102-48ca-a11c-44713877f783"
            }
          }
        ]
      },
      {
        "id": "4f08d94e-2ff6-478f-93a1-78c2127b1bc3",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "ad0b5193-55b8-474d-8e45-1693526b001f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ef298e67-9bd1-4ccc-a3f0-21ecf7bed45a",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "0c4e3a45-6245-4b81-a1d8-d82c038198af",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b27580c0-2b62-4dce-92fd-50e750e66ec2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c482347-e1e0-411a-8453-48453ceab2be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03f4126f-0d18-484f-a3b4-1303b1a46dc4",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6067d1a3-da6a-4a42-9872-231f49f4a421",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6c64c02-6e12-4489-bb4b-710c44efa692"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e91309a8-eb31-4375-8660-b8ec09559335",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da0ced8a-3872-4801-b942-58ed6ca8dc8b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82b1f1c5-6145-41bf-9dd0-70b9ee28f2d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e92fba25-6780-485a-8526-d6865888cdab",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5087e520-94e5-4848-beb4-83f7293f06ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a953c0c9-7a1f-41a4-99ee-df5c3bd5990b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e54466fe-8bef-4f91-997d-be65f858358a",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2f6b2e9-c71a-4a2a-b9dd-01fc3ddb3446",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c5308ad4-d56b-45e8-9fac-55bd8c3df288"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e11766e-cc3f-4e49-bbb2-77b7e47e0256",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38f6a409-160a-47b5-b3fd-49da93c2955c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6969860-1433-498c-939b-f19cf5aff927"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11eba2f9-8920-49b6-aa3c-f52b0347e9f9",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "839fe916-b36b-4f65-bfad-59edb3a6da93",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "111b53d2-47a5-410e-a4fe-ca47c35fd790"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "976008ac-e708-4118-8d00-ebd6b392b185",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83cc4946-7c84-4599-a694-bfc76e0c4147"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d71a2361-2195-4ffd-b941-2df6cadcb68a",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9aa54bcb-4ea0-4f82-a735-9a34ef587892",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "51d26187-db9a-48ba-9470-154cfd9ebb8c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8191e9ec-3dec-4596-a22d-c06391b48629",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff2489fa-c522-48a5-839d-03015d224a1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2a355ca-f213-4052-bf24-9cc2d46bc46b",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74680300-fafa-4bfd-845e-b38adee9832b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0e2db116-b6fb-4ffb-bd82-d92d085baf04"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "28ee67e2-bf3e-4d50-a536-90d243416593",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf9f354e-afff-43a5-9215-7eb10104ab0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ddd1bfa-7a59-47e1-9aa2-5ad460e1993c",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e68f3333-d2df-42dc-98fa-dd7429bea537",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "71e5a77d-7465-4897-a218-bda276b39d64"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "022f29ab-96bd-4a1e-aa58-1fb4a38d7161",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6b26ee7-e98b-4da5-a29b-baae5a76ea29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2ac894b-07c3-4cdf-8e31-27aae4b38b17",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe373776-d2b7-4785-bcbc-12b878a37bde",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb0d080d-670e-46e6-a2c6-258403b10d6f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf393d91-3093-4ad5-8cfc-7fc97b6d8e28",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0cac8ea7-0d6c-417c-9e07-d48be0ad3c59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2c8107b-f628-48fa-a755-e1e3186c4e8e",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d5cc09a-edb4-418e-b1d1-b113863768d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "551642e6-9ddb-43e7-a29e-ca84468b07ae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5736731-3e9c-4080-abf7-e62e8495fea0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51ff6b78-7d4f-48a8-b721-8d60ff801f1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "766887bd-450b-4360-8762-08183305fe35",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "957018a0-13f2-4b18-ae43-a125a85222a5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7d81c09f-8c52-40ec-9e50-b6625fa05bbe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "44598a15-a3f9-417b-8d22-3e1b5a0d1d33",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c920a9a7-5669-4e36-b356-01b6cc1d4993"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3fa1e277-8e3a-4bc5-af8f-8fd97f14db7f",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17957e85-5778-452c-ae7a-79525a2cb712",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ff4c3584-0e0f-4b04-8c7c-45ab51ce42e8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c494db7a-acbe-4f88-941d-99969b6ee3b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cadeb394-06f0-458b-992e-71b344da04f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d24b0369-ea7d-42a7-952d-6a2261847895",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bda55ca6-668c-48c9-9b36-960d56a3a155",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2cf2e63a-7aee-4d39-bc68-dc9ed761f398"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d4e5d9b-22d8-4aa1-b227-c3ddd2b46b7f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "824589c5-7765-4d8d-b572-10109be4b1c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "724bacfb-3a75-40b6-95a9-7048941c0b76",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40ac5189-46b9-446c-8e64-4dcbe35c0a2f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d242672c-9373-4b29-9e1e-68f769b04738"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "63be7d9a-9f27-41d1-9342-14b217d9f3a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cab49f96-d699-4c7c-81dc-a440cdf8b488"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51430be0-f82d-4561-a6c1-e0459fafa483",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e12e737-84a2-4b9c-bc8d-fa4c2e11320e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "205fa532-4c92-47e0-b860-7780aa3bdfa3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec6f2396-905c-4508-b19e-d2fb81a179a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aaf3d99f-5c1c-40a0-8e63-ee1b06098bd5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7d38f0d-a4c6-4a88-ac00-34e4cfbb6060",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa8ae889-42ae-45f1-8e81-04c14a8ff27b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa43e314-31f8-4b5c-a82c-5623cd00b169"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ae7e632-b211-4293-923d-0bd0ed3c9dca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44e2f498-5d6d-461e-ad3b-5419a7fd8bb3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19f79652-79a8-4c2f-ad45-f1e13406c7ea",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e53a1fd1-846d-41a4-8ba0-1ac2af368b4f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3076f6d4-9a0f-40c9-a75d-78635759580b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1aaa35f5-96cb-4000-a1ec-08f9c85737c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c195733-e15a-42c8-bd8f-8f0ccfd1f45f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a139ab56-ac13-4c0c-8693-03eefcb2d9b5",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae8e34bf-e266-4838-a878-7827d93526ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d4b1ed3c-6b7e-4123-81c5-b32c51ba02fb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "74cfea89-2cf4-4fd0-837d-c2c4289841e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62add5e5-bedf-4ac8-a6c0-f29a9b69d4d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fca6607-d4da-49aa-8812-1f4f5282ed67",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49e1e53b-4190-4a2c-b175-4b59397eb19a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26b948a5-6f28-4282-84a9-4b291df1f3d5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f043cce5-5b6b-4dd0-b26d-f624cec944b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3a55d27-e593-482d-aaa3-3b5c7bb7b5ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1093dac1-34cf-4cbd-a2e7-94d5bdcaeab0",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6edda347-e303-4c23-9c3f-324283dcc1ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a7202dd-aff2-439b-a041-112d19bf3680"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8f176fc-4798-4824-97f9-7e61161a41e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c5c52d77-19fc-47dd-bdce-9fd853dff7d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "195bd5ba-ca05-4d5f-8983-d86e96ee8983",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28c2b52c-f9c4-41d0-ae24-73de950ab8ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d091298-cb6b-4c45-8d8e-26af71219dee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "29cd68d9-2f0a-425f-bd7f-da3b0312c25c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f8fd12d-a279-4b55-b263-f7e04e998596"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d35123a-bf35-45fc-87b5-a8849bfcb539",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d058864-b6db-4da7-9916-bbe832ecc098",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "36b851a5-a66e-4ca2-9cb4-5e7d9dd68089"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "be324bb1-8804-4e6c-8fda-3d233db6ae17",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9175c85-0182-48cd-b9a2-a281b3bf67b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc5c78d2-4b9e-48d2-8635-f14dc2e9d5af",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a8ab270-f730-4f02-a99b-e44495f986c6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b4f61228-e861-46bd-be0f-85223a7c6d7e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b55dd59c-a4e1-4c17-ba5e-d4d0d1d4a5a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3608bba-b324-4af9-bd7c-7baed4a058f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "511755bc-0724-4438-bafd-4afe06904113",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aeedf608-bdda-427c-988a-3bd306fca4ef",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9fb0e627-0340-4c94-8385-0ced9e3a6e65"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f7b8db3-3e5c-4ccf-bbe7-d325b39c5907",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ab054c5-5e36-4982-870f-9b2f87a56314"
                        }
                      }
                    ]
                  },
                  {
                    "id": "feedf996-af79-4575-8da7-fc36db2c1ee8",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2994b09b-bf6c-4ddc-949a-08f93eb23e19",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6420c2fc-2849-4ec3-9505-0f953c797067"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "91d4d30f-292a-43b4-b0c9-700e061f33dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f5d6e9c-2159-4542-b67b-113b4e7c9fcd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4578ac58-4cbf-4bee-8fce-0cde8b587cfa",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23bfbecc-9acb-4d7a-8fb5-65fee6bba1a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8fa2e65f-1964-4f2e-8c35-0c26301af087"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a115267-0888-479b-9c16-bce19bf31bc7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9244b000-17c5-4836-bbd8-2234e696233c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1c9a1ba-acc9-4530-b571-6fd321d1d64a",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd6ebdf5-ad58-47cc-95ea-12cc2e75013b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "05a16d98-755c-4fdc-a22c-6e77b2eb8ef3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c6bc4b5-4fd0-477c-81dd-5c0298e0dbc4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e83421a1-8d8a-4e8b-b22f-cdb20753730a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79734cac-d8d9-41c5-aaad-70a6b35352b3",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45d401bc-0eea-4b03-b6d1-9b12f9cbc5a5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "690c1257-a606-4339-aa17-5210c37f193d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "11d818a5-4be4-4cdd-9017-6bee35deeda3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aac4ff68-73ba-4391-aaee-cce74beac726"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3364a9de-4981-4bc6-a572-251056627eea",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "387b45cb-52cb-4498-88cc-3307c3dd2d4e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a5c4ed6f-a334-4d7c-8fda-5a4d3652c014"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9df1604-3099-40bf-b0da-eb0cc38ee5d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d4def04-15d8-43fe-9a73-6979384be8ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f417d011-56cc-411f-abba-ba1478521cd3",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e22254a6-ab6d-4bec-891b-7f6ed64b8107",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "35800c69-1287-428d-a13b-0e11f9ce7fd5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef7fad34-36e7-4822-9633-0e391ff40d7c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ac666d5-5996-420d-b5a5-3f68d92c4a4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "142289ea-44bc-44f7-818d-fe68f3d1c59d",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0bfea30-a1a6-4394-a536-9bf8605cb0f6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e21fae98-da8a-4d84-ba80-7412d0f34522"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a4bfd95-2623-4801-a1a2-d9b1f6b078b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd7f7883-28ed-46f4-906d-65217dcc1efa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38689667-a59c-4206-a78c-a2949fea4dc5",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1ad22ab-2a55-45d8-abe1-85693543d0f5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3b1e3e99-b4da-4509-8d2e-024b9878191a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d24d5456-3878-43dd-be14-f752b8b59263",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da3dbaac-56bd-4551-ab5a-0d18a06ab1a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b9ed925-c104-4b27-b600-a1e4a097e90e",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1070b3ef-656e-4f0c-97a5-a252824d3634",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c03851f8-1cc8-4144-8063-1fc000e321c7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "98d25cba-6b64-49e3-9b6d-d629cf4ac797",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78d3275d-87ea-48d7-9360-ff836471850d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d7a45ca-73c1-4124-b68b-5ea8788b78a0",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e41acf1-36ec-440b-aeeb-0fa55e1a0770",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14975e24-d52c-4041-84bb-c49a69fa14fd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3debd244-48cb-4f59-b4d9-66c8605ed21c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "16c4f43b-b5d5-40a0-b89c-a1f9e8528a30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae24c7b2-8a52-449a-96ee-c897d0a6036c",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f465259-e91e-4712-880b-797dcfa1eb8c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db3cbb95-a1dc-4caf-922f-91403092a4f6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "56c44a64-4e03-4428-9952-eb235337022d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff2724f8-ccb9-4ccd-8d43-b5685898d5ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e69fe278-4489-4233-9472-b78fcb4b2b0d",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3e26437-2882-43be-9542-56743d05d084",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "909c2cd4-94c5-4228-b18e-94273acb3c56"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ccd455d5-c31f-4c70-ad3e-1d8fe19f196b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37546dbc-e540-44e9-97b8-dab6cc67a94b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44bb1b94-34ac-4f7c-b860-7082542a0f07",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5970505-6f45-4c60-a71a-b0d313c2a8f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e53fd1a0-e476-4673-8324-be46eb862b9e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f271d33e-5513-4b5a-9e16-7c44de9cbc10",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "464800e8-54b6-4f1a-bfab-1782acf5f02e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a15f3a5d-71f5-498f-b848-673a932006ac",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce9ada6d-a13b-45cc-8e54-dd58c32afe1f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "521ad26a-9649-4512-8acc-0eaca19f3d79"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "63d1c00d-f632-4c0b-897b-c3a7fa9c05f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c5e402d6-8d28-4c1e-acd5-76f5cf5ead59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc9436ef-e928-4013-9358-63f82337c897",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b39948a3-883e-4a0c-85ca-d5a90cc8c521",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8620884-f70a-4399-a1a1-3c79baaef9d4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a04b193-17eb-49aa-9fb2-52b36a098825",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d14b66f9-560c-4256-99f5-2176c4232f68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0c98dd1-5afe-41b3-8ccc-4cb2c18595e7",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21615749-1faf-4692-9c20-eecc690afd23",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "750b115a-d5d1-4950-9561-82555caffe85"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "50c7db59-e5cf-4e4b-aab7-7861aec54fb0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e1f8f39-7559-4d9c-a0df-234c9cb8d280"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f004138d-1c35-4152-8bed-2a8496bfee1f",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbef6755-7829-46e8-abdf-f907c1c1b5f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "165172a3-1103-4791-a50c-978d22f26fdf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f32a012-376f-4a23-a114-b375988db708",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2da750f-8fbf-4c68-8da8-59d419abac1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae7c9b3c-d1ae-4efe-9d64-a3d7604806de",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea05f7ad-5942-4bb6-9971-4c2eb7b6faac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7af315a2-d966-4f1f-ad4a-115a6cad8525"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b5d70fd-1f58-4588-8adc-521f17a8c82d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d1b3676-4535-45ea-8a91-0f904e80332a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae560da2-144f-4ae1-bfa4-8b320da41b2d",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68eb6be3-1c68-4a32-b351-7d79d1a7065c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3cf34ebf-f1e3-471a-9bd3-de86911c1da2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "102770b1-6b3c-4425-82c5-8f84fb017a10",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97016ec8-dfe7-4196-a68f-2754cb9d37c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14b653f1-0032-4bc3-be90-17cf4374467d",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3773b92-e64c-40c1-9545-60d0e9f900b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92acfd76-8377-4de3-9e66-14cff9355af9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e7e7ebf-b246-4e24-8529-e3a8c592466e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44919cc1-e2ba-4759-8cc2-ddd3950323f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74ab1e14-041c-42b0-b6b8-c3e3d04e9716",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "832db182-53d2-47ad-9326-952afa92e8f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b74db896-23c3-4ddf-9c96-cbbf0f3ad1ed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa6bd8f1-4c17-4ae6-8cdb-43bef23d2515",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e597b16-3445-4d5a-9007-6f245e54330e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46f4c733-de3a-4f07-9c4c-f0182c69b130",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9626b0c5-c64c-4ca9-b6fa-ff2686335f09",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "179beb19-6617-45df-b028-ddd94acdc6c7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "20cbfbc2-69ea-4b8d-b921-427a91ae9dc7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab72c8ca-032b-4315-8a7a-e062e8425738"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab84b5a2-03fd-4b98-b30f-bd81fc301717",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc5374cf-feab-4f9f-b272-e29a3b970f8d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03b51bda-bd03-4a71-871b-e5a9fdccd39f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f50f54df-267c-4995-9497-2d11013aa3e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92f2d5f0-cd43-4058-b841-001ea8dcf5f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b31aad09-fd8d-4fb6-a03c-dd5cb35c158c",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56e9ba91-bad8-4c18-96b0-8cfb1c68079c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d829c3e1-83c3-4987-ba87-52aa2738b7e6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "93cb5aa1-a643-418d-bd9f-d240456705d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "197fdc20-539e-48e4-af25-48c8d0bbd1da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "309a6e2b-45da-4391-95c4-b5e8bc0f9688",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "519d21c5-6cf7-43e6-b7b4-1769230d9fad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f72e7311-e1e4-43ff-9698-03b92c763404"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7173b2dd-6fde-4650-a450-7c821a52f789",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "caaa15fb-81f9-446a-ba27-233e55a4d32b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44f27181-b0ea-407f-b19d-a0c0561682f8",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8562748a-6eb4-4740-a5bf-95e2eca5bf44",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37368712-2864-4fb3-a22a-5ea83a24ee7c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e6cc72b-bf4f-4204-ab3a-fee0ca4df86e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "674664f1-cc42-43ce-a9d2-26a7ba210300"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9047ba9-93ca-4d4c-997d-6797fc396a97",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b1fa745-6d42-4882-8fc3-66f9ff5e1713",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d903a024-6934-495c-8e39-3cb0fc85bf20"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d73ac96d-9538-4ed3-bd2e-f20f9777fec9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6936e5c8-5adc-4ad7-a497-133a1a097d5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb55e4fe-bb3f-46c0-ad4e-d85081fe5f63",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc8a4977-e66a-49b7-991c-7743f148515d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5368439b-8415-4720-8d08-1adfdcf31ea0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "22167919-40e9-47b2-9cd3-850b4457094c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a464f07-e172-4000-8604-26d19d3c3838"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b27134c5-0adc-4400-9f71-6a2fe5a64ac7",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b5159e5-c528-408a-a039-d5aef276effa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9bd76b04-2b78-49b1-b25a-4acc05fdb70b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a974376-393c-49d8-9d7e-b9787831c4b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35551e2c-8d5d-4930-aa4d-d68ff08ef7f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c9ef1a7-5b63-4296-b405-18e561233c9c",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c16e3c96-4bff-4ace-bf53-b9ecfd950a44",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c717878-ab6d-4571-a8c7-181d79d89e39"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b40e9a5-cf1a-4ef7-8fa1-1ae60462a733",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14fc5fa1-ea70-497b-82af-75f6a274ea49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd274015-a42e-48fa-9a95-3c454f0c154f",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19d2df93-25c9-4142-8f8f-e9b1a880e3f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "48bb3e40-5e23-44cb-b201-85b9a52042f1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4bb667c6-c20a-4833-b610-fd6b9382cfc3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea3dfad7-6912-49fb-b81e-4ef500ae251b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1223bb77-a334-4053-b9a6-49d9f3ca3416",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0bbfaa6d-25d6-439c-b0a5-b5e2c5d21007",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a81140e-6444-4c32-a666-04b8632cb385"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0f19e48-06cc-4944-9575-200b8f4a92a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a00d06a-ba7e-44a0-b077-16fb2fd4f66a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96479657-8021-4ab2-ad39-ebb91105cbe0",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4921380-8e89-42c9-aa48-97430e85d71e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "49478c35-d660-45e2-845b-f43c71387da4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "787b5d42-fd51-4720-8886-7f9fcca18653",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f188381d-85a1-486c-a3c0-e8cfc1eadc18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "729a0069-84a9-46ec-8695-02a2526602ac",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "288ab1e5-3648-406b-a0ed-f1f0499edfbb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b0b92c1-3bdf-474a-92a2-a590a7c6a8db"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e85d75bd-37ab-4e5a-831f-4ff385083347",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4be56429-29de-4c9e-81a3-2d33b1a54970"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4eaac71-4360-491d-91e6-ef2eaca0dd7e",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e5f3da7-610b-41f0-b905-d0ebce853ab6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44ade784-fe8c-4768-a955-92d648ad8d30"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4af72310-46f0-49c3-9c50-0068005eaae2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4c42df1-d564-4ec4-b7f2-30003dcb8611"
                        }
                      }
                    ]
                  },
                  {
                    "id": "974fff20-b0b3-4dae-a452-a683d3a201aa",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dab0cfb7-459f-45b3-801b-6d9dda5d2276",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ab1329e-d28e-4280-aea3-92d9fe67598c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "de244746-3402-4fd4-90e0-b1fc0ce4bed7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e40e1dbc-9860-445d-bfbb-807c1708b715"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e7ea8ca-3f23-49f3-a393-4d69841dec25",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb89a761-a43e-4a4d-a785-273d5c964763",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07b2a2b0-e811-47d2-af20-13559d9d1c6e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0222a4c9-baf7-41d8-93ed-5f9ea6aedfe3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f6e105d-c4f3-4464-81a7-07cea5dbc096"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0326c5df-6147-4504-a5c0-a24cd66bbe48",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "791929e0-e86f-4f7f-ba24-9d71911b4502",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a4ee2456-04c7-486c-aad2-01112fa34650"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f617c663-d924-452f-be55-80603429ed72",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "98287833-69e9-4634-9387-7c4438275363"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52e23ccd-a43f-4c67-808c-1f2160ff0fa8",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8db6424d-3f53-40cc-9115-8f58aa88da14",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d5a2be06-c531-4175-bb3c-aa6167e977bd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c709888-64e6-4399-b22d-8e33b1c65710",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8557fad5-52e2-449c-b8b9-043b91737de5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be235396-79b9-48fa-9249-077daa52ed4f",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4e9fde4-03d7-4efa-8bee-a1e10e40099c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7d6feed5-f644-4e78-a755-4c0a2f600dec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "97f6e2b7-7b9d-4105-b457-f4b258e96e74",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fee5e049-c7e2-472b-9c9b-ecff1c532b40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6cc32524-5ba1-4bc5-817a-09cb70ed32b4",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c2a473f-55a5-40de-bd4e-efb0aa5aff4e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "518cc04a-82bf-4c6f-a830-131d6e65fe95"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "966a8fef-f9c7-437a-a1f8-f3c5007c0260",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0aa887ea-763d-4740-bc7c-c7069f84a0aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b01849cd-618e-4611-845f-415daeb3ad28",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b679179-f40d-4113-a335-a3cf48c74bd7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a0a67a2d-4839-4a28-a993-3706bda8d26a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bdc631a5-946c-4bae-a72c-1aa874073f7a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea71b1c9-6885-469f-b748-b2bba5d15918"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88bfc7ba-1a29-492c-a708-10263ad747db",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69dd1275-631e-45cd-8060-6b4d8cffdf4f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4bd7ab7e-d6bd-46ed-9b85-a4dccc5c8e64"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "80bfb3cb-c228-46b2-8941-89d1f136ecec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "374292c7-bf2b-4eb0-a53b-c4dd1ff7dab5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8ebcb96-cb17-43b2-ab1b-170090888683",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9891b522-dd89-40a3-87fd-edd98acebc51",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "085d8dd1-3f82-431c-b0c4-aeb5c1064207"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9c68571-1ae5-4877-b9f3-9b04235704b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f85887a-753a-4d1c-9a53-3ad2513e0d9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "775bbc60-620c-4c8d-9846-ba5346466534",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed6aea36-543d-4cd8-8120-896857a32e6f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c75ddac7-9e69-4cf9-8c66-1feb7b5d1799"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad583932-eeba-4e77-bc1b-fc3e9b7a45dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7636a345-edd4-4bf1-92ce-56c592dbd4d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35d387dd-2bfb-40db-9afe-7cb406a1b123",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae311408-9916-4b44-8f86-110cca76e024",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "777ad5fa-7ddb-4e58-903a-d52c8c962e67"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b890edb-f957-429d-8f12-6309c4020ad8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd304bce-514b-4d7c-88a6-8fcd622762e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "441c6914-35ab-434e-b988-e9a990f0c5ad",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9ac235e-8637-4bcf-8a53-1f35190416d9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7ff58cfa-45ba-443f-9bc9-78dc8164df7b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "66da2bbf-2574-43e2-8f8a-b18b881de2c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53f741bb-36f7-444b-b037-5d432997d2c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1df8bcec-1154-47d6-87c0-e67a917d4543",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "352edf44-c920-4224-a97a-1c8243872305",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "27b0fd21-285f-421c-8c9e-29c01d716839"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9effb1c-cf41-4fbb-8a6c-f6cbd7f481e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9d9c74c-b04d-48dc-98e6-e570ca5e28b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee6437ae-167e-4a45-8b63-17759d1052fe",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "463a5d9a-c598-4e73-bba6-7f8a68d97d18",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "778f782f-ba2c-4a4e-8360-f995ee63a703"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "39f2ef5b-1e57-4d9d-9862-87facaa70006",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0905a848-e86b-4113-9a93-656c19db814c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "765b3eed-eeda-447a-9027-3ee68047c3fe",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2ef3c0a-fd51-4d69-8eb3-cc05cd0c3651",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7548a497-6864-4c7c-b2b6-5fa23d2c2ef9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2736ff3-6ab6-4f4e-ab36-119cb12f2bff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77787b25-24e3-44bc-8579-f7c05cdb2f3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4aa6a5e-79f5-4a58-8538-d52b18f3d7a2",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c5da3d0-6fd7-4a74-9b50-aaacb4af9fa7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "be23724f-690b-4933-800e-5a03ece4f740"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "402acbfa-6057-415b-a472-e69ddb9b3277",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29aa5eb7-f16d-4dfa-9512-2140b059d284"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1c3f972-2dff-4bee-9ee5-e90f84b5f6be",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddfe7f26-79e0-49b0-b8fd-0f989d8abffa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "247e9b74-22fb-46f1-a7a4-f00e5480a61d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "be6316f9-95cf-413d-9e8f-b0bd96b7b8b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d93b484e-7b7e-4281-aeb9-a56605aa61a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f67bd73-c262-42ee-8532-ec51464f3c7f",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8478c32c-1872-40f7-851b-254e1c4ce630",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "804d7f1b-5e57-4caf-8734-f632d1294921"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d49b890-8e38-4718-a13d-25e96fdd72d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53ddc70b-4889-47c0-86ea-983d089b10e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0933b21-4739-4c36-a97f-b738937553d5",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "458b9290-257a-42ff-ae25-7baba441e99b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "956a83d5-8cc0-415b-a68d-25d7ba07c016"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "883f83eb-19c0-42d5-90bd-f1d11cdd525c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "abb86270-d775-4af1-9b63-66576662c260"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b724dcc2-cc0f-489b-857c-06174968a2d6",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c05e023f-e4db-432f-a3b3-df9935638fc2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "922108b7-1413-416f-9587-e13d1fbeccd8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "30c70cd6-e0de-4738-93c4-e56c35c6ce7f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27a57b05-551b-4f72-a348-c04ca5ad514f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e09d232c-9ba8-42ad-9e15-8d86231591e7",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2712d2ae-6273-43b4-a05b-befd5eee223b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "464f2ea6-8cd8-45b8-bf1d-1fba041e918b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "09682f79-3611-45fa-97b5-aea195553c52",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2fdf7da7-6f64-444d-9eed-2110b71bada4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abb7b91b-c3e7-4f63-9cfb-c01cfd598b7c",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fdc56b8f-8383-4acf-8768-ef89aa36afff",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a1bf1ece-7468-4f7d-9729-73b7c7c477f6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ce13554-8852-4e74-bdfa-fd7451085dd2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77aa2645-001d-4dee-8b5b-be56d7e51841"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73e176e1-7d4d-475d-a38c-c86e5331e5a6",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "376792e3-41d5-4739-b704-34b185426fc2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0fc1f804-baf6-4b93-a184-7b141d01e274"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7acb6362-a0a4-4b7b-a3c1-2ed9310202a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb9e606f-838a-471f-970d-7d68b16e608a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de2c867a-09e5-406e-91ea-85abab79b6e2",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f356d9ee-7e0b-45fe-832e-41c694d75865",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f197079b-25ca-4bd9-9a92-9d670f1babe4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "657eec74-149e-4c7b-8bf8-0acb293943a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bdb2d4b2-f408-422e-b36d-d5683b220e68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae676f42-9231-4478-8598-9fa425944ae9",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9759a0d-ecd5-495a-aa76-2d47cb325ca5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "22f301fc-986d-4cc7-9f51-59a235a50ef1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd6d8847-a6f4-40f6-b9b2-764e0a130ed8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee40775c-9ecd-4274-a630-a6c8f80d99ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df6d23ef-dbb4-4e07-834d-a7a54aa023d6",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d02e98a-e5c4-4d04-a55f-a4c8a851efd3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2c43ab0c-aa40-44f6-b651-feec853b74b5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1c3eef6-b7ab-4f50-a043-967120235417",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c7d2d708-3b5a-48ea-83b4-519642876494"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c1a3d62-357f-443c-bb35-63d460a6d4fb",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91f2059d-51db-4dc7-937f-4cf20147a767",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "92b620b1-c701-4b4a-aa24-6e75f973ae00"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1044e03d-2057-4d90-8a43-e31ca3586a21",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ede1354-1fc3-4a39-a6e8-2157c3ee55c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc365717-7d16-4024-a555-9095b816690b",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd6ec2a8-f911-4e6f-ad44-3d75fcbc80f2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "efbc49cf-9381-4ff6-afca-54842310f75c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b660ccd4-f14c-4e4c-8a80-dec2e67666f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9f34bc3-3d42-423e-96dd-72d18a8a0dfe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "acec76ee-e87a-4058-9cd9-56e86d81aef2",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a65e5b8-5ec5-4ff2-bd8f-6f9687e87b3f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f2370bd1-2409-4406-97b8-13a4e1a55254"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae8caf04-899b-4590-a845-a6024d86dcd0",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd3ce330-6e15-4985-8a64-a14cc0b4db60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb173367-ab13-4664-8e55-8d0384e1bb93",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff911b58-8bf0-4d4e-80c0-35e040e1e40d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "26bca734-f9bc-4099-b50e-8762fb94fecf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb0ce912-b2de-435a-bef3-979a3443230d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "843fd5a2-4d13-40ce-9ea4-7f43721bb7be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "783bc7d8-2cd8-4b52-9fe3-6e9b1ea62e0f",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "829c1986-20f8-4b48-8d2c-ff4bc1d933b2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cf87069a-f981-4dd8-861f-f08c983e6ead"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "82d23709-c129-490d-90ed-9c52373fb7ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0837c84-d63b-4532-9b83-0c12e5d30ba7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63de3977-1e1f-44c5-b160-f6005d4bd280",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54666f51-1b8d-457c-bbca-dc696e320df5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ada7d054-97d4-44bd-8a45-ed51fbe1133d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0b807b6-59a9-46a2-a297-cf617242998d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2160bb75-a49e-4e30-94e8-4e412728b35d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ada51498-6de3-40d0-a978-caa73b56b8b8",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "350d5710-3614-412e-85b0-c1ac8485bfd3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bac41aa7-d7c1-4b35-8d4a-83462a886a7d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0624394e-25b2-4358-80f8-8162169a23e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dcffcd63-a90f-4430-b721-e4286a9382cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b5c0b10-ca80-4b59-8d15-77ad0ca2b7f5",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43c3ea66-d4fd-49eb-853f-9d4f02ba0668",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d221158b-b68d-48f6-85eb-56cd6155d5b9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b2ac1e5-625c-4f79-a056-5b84d8609c03",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "34a4ed21-9fb1-49f7-b883-617535ea46f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83e8a4aa-30bc-4279-b119-42d302480be3",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32ce5469-c76d-4c21-9733-500b0b860294",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6aa26e93-ec15-4fa9-8382-ce024ca09d07"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8e103ac-ddd6-4204-9571-e1e7534eb667",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb6f3030-f921-4e3b-80fc-2b1041f48f79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9f24bae-6e14-43a2-ab47-76afc26bbf01",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3231acb-8823-4cce-8cbe-6b5439fa6d79",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fdb20e0f-c896-4bce-8f53-34f0076159a6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8414357d-2d00-4154-91f6-b9a1aeda7fcd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8430c26d-595a-44ab-99d7-5beebae87d84"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3e0ee69a-3d5c-406e-9f59-e26be66c8eef",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "da8f45aa-5798-4e33-aaa5-884752b19d8f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "853bd189-5c66-4af3-bb98-9e457a79a9ea",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "daaf747d-7dac-42d2-85be-07c5a74b48b5"
                    }
                  }
                ]
              },
              {
                "id": "74c9258c-4553-4cfc-b6eb-17f20a8280d7",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ce131602-9e15-41e0-a054-cd90179a96c1",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "934c0e92-dc39-4a4f-88b4-4f721e88c550",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "1eb4df25-f9ca-4672-b50f-0794539e3cd9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ce639db-6bc8-40ad-8e42-06ecabbd2ddc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0290ff61-71f8-4dac-aa38-f419425ed827"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4b264e0f-2b5b-43de-9cb3-cda0d5bcf39e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6960831a-d555-4afa-87c6-efbacbe5fa11"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "0662b82b-c9a8-422c-8088-d58b62000ca1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bf141731-a312-4884-93b4-6b33ff0d14e1"
                    }
                  }
                ]
              },
              {
                "id": "3f04ab5a-8cd8-4e63-940f-6ea426b4c0c3",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "2ea10c77-b8f9-470b-96d8-29755ac2f2e0",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1eb6da60-37de-404a-b6a2-06c94966cc82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "97cdf3fa-7c64-482d-97eb-a6ee3d928a6a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "234351b1-ecee-45f5-bf10-8248941eda04",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a60899da-1e43-463a-9e63-2ec91cdb4f42"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "6bedf7a3-0324-4c7e-9b6c-aa9bb3c7193d",
            "name": "Positive Testing",
            "item": [
              {
                "id": "c8d620c4-46a3-425d-95bf-83f7103f4269",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "03087f82-9497-4f84-8187-2391ea3743c6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "58241c1a-3bb1-4b70-9ba0-d72f1715996c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9cff7612-5034-4a8d-b52c-e1f723c479d9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ec0d976d-65b0-40cc-af17-fb9b81371268"
                    }
                  }
                ]
              },
              {
                "id": "b50e0835-9623-4b42-94bf-cd88e22d773b",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "34963f4c-a552-42db-a0f0-a1e73649d255",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "a0305c05-170b-4700-bbc3-684919b90146"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9923607e-d9c9-4f25-a934-6d20c73574b7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "de03ed6c-8d25-4f2f-98e2-08df6eb7448f"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8921360c-bd25-410c-8bca-570f59dedc03",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "55e1b29e-30c6-4701-bed0-9833b6e473c5"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3b2d13c8-59c5-4a28-bc09-5a71e21c2f1c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e8e4c768-623e-4416-9274-87ab4188dfe3"
            }
          }
        ]
      },
      {
        "id": "2ee8bff1-efbc-44cc-a1dc-e9a0a896994e",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "7d59fa1f-cf11-4169-9647-abfd88aa7142",
            "name": "Negative Testing",
            "item": [
              {
                "id": "08139ec8-3ecc-4eff-a7fe-a43e8067d5bf",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "047db267-a83d-46a3-8695-19194dce38d9",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8181df42-688f-438f-8694-758629092776",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "724898c5-b9d6-4935-91ce-bd20779b2652"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "20c7e6a5-30ba-4d33-bc5a-c4d925398c84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ed3020ff-a26d-42ff-b1d3-58036aa1b306"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5086efbc-e2e4-455d-952d-5f05c1b40988",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fa6f13db-16aa-4792-9781-9d5e7498ef7c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "c8df9b0f-581d-4178-a0bc-2880e07d43fb",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1ba74ef6-096c-4c1b-b834-8c021ca15e19"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5b54a77a-b10f-4b24-b3d9-40b5792b841d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "5764489d-3ec1-40c0-8b97-583409af58b4"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f4a8d3d1-02a9-4e63-9e8e-6604955cf070",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "92771593-1765-4648-a0db-59fcff2b483f"
            }
          }
        ]
      },
      {
        "id": "c63c0ca8-09ef-4106-9b67-7de0ffc62fd6",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "28be903c-d4da-4928-a6d8-33c8aedb122b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "8e0fc759-bf69-4867-9e03-efc18f45dcaf",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "9ee24808-0d43-4717-b95b-85a4b54ad6a9",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5283a2d2-6414-42ae-80dd-d0429a8647fc",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f90e65d3-06a6-469a-aa76-4f5882df6277"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "26bf02b9-59e8-4931-99c3-dd219fbdb031",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a71a0be7-d2b1-4bb4-aa08-af728ec0952e"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fe45ade5-f0b4-43bd-81c2-02cf8d608b6a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6596e192-a26d-4fb7-8900-d58f52b8089a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b3e4fd25-306e-47da-a022-ed6b4fb4e3de",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1c18db03-1c3c-4242-87a3-5079d6949e00"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "fc9bacb8-de5e-4b46-986a-dad72eca5bf4",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "5f46dbaf-9a05-496f-9462-9681d781f3a1"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5ae5bb7e-82d3-4483-a8dd-2352ccf1f5d5",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6f705ae6-6aeb-4581-aa83-1565c936b188"
            }
          }
        ]
      },
      {
        "id": "a9d75e2a-7ab9-4b90-8a05-eb7e8cebf457",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "3c4cb01c-10cd-4557-994f-c9b343d5ad12",
            "name": "Negative Testing",
            "item": [
              {
                "id": "93e8a64c-db84-4bf9-9621-4f3704dcdf0f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "4e2ec6ef-b6a6-4c8d-a311-c4e38d9e0fa2",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "baad14d6-79d6-41ef-ae23-c4b36d4a0fa9",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "48cad97e-5a10-4808-8055-65f6e33dad14"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d40771c6-330d-42fd-8161-e871acd925cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "aebdd2b8-0b77-41e4-9b7a-a4ae05347ae2"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0790682e-f1a3-4596-a2cb-835cdb35fe25",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b967a818-9825-409e-91a7-5bf3f23b3390"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "bef229f7-ea8f-44c8-8eed-d2fc4c3f2c9d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0ea66912-dba9-4a15-bb2b-d522de3653a7"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "45746f39-e517-4a1b-b68c-b2f0af26c3df",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "1861f07e-9531-431b-9365-009daee6466c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "021c7e88-9ab6-4cc2-8f4e-b9ed490ac082",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c1e64f3f-b9c6-4567-9313-ea3e97cf3f16"
            }
          }
        ]
      },
      {
        "id": "68fbb0eb-8619-4aa0-a4a8-e40f487e8e48",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b3539e86-2df8-4c44-b66e-5c0405eb2e8a",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "577fedfc-fa78-4a62-90ea-db3b2bb42ef1",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "d6036794-fe3b-4379-8772-f8a7f9f0cac9",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c24cfddd-11cc-49e9-987e-0e4783e53b5c",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5531d22b-42f9-4024-bae5-872584c0d454",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 2
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 7.785964912280705,
      "responseMin": 2,
      "responseMax": 301,
      "responseSd": 22.855760060181627,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1709858049067,
      "completed": 1709858060394
    },
    "executions": [
      {
        "id": "02435407-296b-4c56-89dc-cb9cb08adc4d",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "95dde9c1-a05d-4b4d-9ca9-314b3337beee",
          "httpRequestId": "ee9871f4-bcde-40cd-95d5-8f3225d5f4d5"
        },
        "item": {
          "id": "02435407-296b-4c56-89dc-cb9cb08adc4d",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "bb07457f-d644-433f-8970-b8e5f2257f15",
          "status": "OK",
          "code": 200,
          "responseTime": 61,
          "responseSize": 0
        }
      },
      {
        "id": "a8c02466-2a44-4084-871a-341d930dc3a8",
        "cursor": {
          "ref": "79a07080-f5db-428e-915b-fb62398d1668",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "02e127f2-0bde-48d7-a92c-cc98bef0bdcd"
        },
        "item": {
          "id": "a8c02466-2a44-4084-871a-341d930dc3a8",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "642292c9-01aa-4b23-b3be-4d3bc0dd4412",
          "status": "OK",
          "code": 200,
          "responseTime": 10,
          "responseSize": 0
        }
      },
      {
        "id": "c7e2c291-6608-4980-95d5-80679f0789ce",
        "cursor": {
          "ref": "d2e16df4-a89d-40a9-9aaa-c96742cc4217",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "814628e7-eb1e-4fb1-b051-16644f6dedbb"
        },
        "item": {
          "id": "c7e2c291-6608-4980-95d5-80679f0789ce",
          "name": "did_json"
        },
        "response": {
          "id": "dcaef1d6-1602-46a1-852d-872032856492",
          "status": "OK",
          "code": 200,
          "responseTime": 150,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c59503ad-d056-4540-bd04-1867a89a6992",
        "cursor": {
          "ref": "a72e238a-7009-4dd3-b3fe-b6f480b7f6bf",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "1bb4ce33-d88b-46a3-bc6b-772b00b9bbaa"
        },
        "item": {
          "id": "c59503ad-d056-4540-bd04-1867a89a6992",
          "name": "did:invalid"
        },
        "response": {
          "id": "41e91d3b-1a54-4688-a34b-3c097b95f683",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c59503ad-d056-4540-bd04-1867a89a6992",
        "cursor": {
          "ref": "a72e238a-7009-4dd3-b3fe-b6f480b7f6bf",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "1bb4ce33-d88b-46a3-bc6b-772b00b9bbaa"
        },
        "item": {
          "id": "c59503ad-d056-4540-bd04-1867a89a6992",
          "name": "did:invalid"
        },
        "response": {
          "id": "41e91d3b-1a54-4688-a34b-3c097b95f683",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "daf3e954-3678-4baf-b8e3-efe891865067",
        "cursor": {
          "ref": "55efa1cb-f1d4-45d9-a439-e4c3a75f967c",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "94391235-01fb-4453-b45e-a66527e9ac77"
        },
        "item": {
          "id": "daf3e954-3678-4baf-b8e3-efe891865067",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "bb4276b5-9cd3-43e6-8d21-e968986c6b1c",
          "status": "Not Found",
          "code": 404,
          "responseTime": 94,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bae89630-8c5f-420e-a71c-29bfd3da5438",
        "cursor": {
          "ref": "c03a428d-3eb7-4a04-a429-22a23df60b60",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "c3525462-a619-4533-897c-25c353324c09"
        },
        "item": {
          "id": "bae89630-8c5f-420e-a71c-29bfd3da5438",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "e9bdc001-1f5a-4b14-a1e6-a7d150075ecf",
          "status": "Not Found",
          "code": 404,
          "responseTime": 4,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d45cb41f-51d6-4e4d-8534-ff82f556ecec",
        "cursor": {
          "ref": "91de9ec0-13b8-4be8-9707-7295f631d341",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "6926cf46-f440-4c50-8739-c4ae9becc283"
        },
        "item": {
          "id": "d45cb41f-51d6-4e4d-8534-ff82f556ecec",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "2cb8282b-6ef5-42bf-ad37-2f6a32296dbc",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c27be4a5-bac5-4628-99e8-7ec7451452f7",
        "cursor": {
          "ref": "d62b5faa-e4a0-49dc-9c74-a86305d12caa",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "d7822fdb-5a19-4929-af57-e19fa980fec5"
        },
        "item": {
          "id": "c27be4a5-bac5-4628-99e8-7ec7451452f7",
          "name": "identifiers"
        },
        "response": {
          "id": "259bdf40-8a6c-4bd7-9102-d351d073c29e",
          "status": "OK",
          "code": 200,
          "responseTime": 64,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba680bbc-551d-4ee9-bfae-f01467cec3f3",
        "cursor": {
          "ref": "1c8f4c2c-24ee-48c5-98f4-9e6213200e6f",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "03ee1612-1715-4448-b8a1-49cbf092a995"
        },
        "item": {
          "id": "ba680bbc-551d-4ee9-bfae-f01467cec3f3",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "13af63f9-4ff1-4f5c-98ee-eb9cb31ec20a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3dba1ed-ae0a-4f21-b201-3dbd46c2793d",
        "cursor": {
          "ref": "740a4643-9d39-4b08-926b-92adde29b671",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "ae99f550-f9a7-493c-9192-5ce5cf06b30a"
        },
        "item": {
          "id": "c3dba1ed-ae0a-4f21-b201-3dbd46c2793d",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "4ec96330-4eb2-42c3-be29-a89b9dceb2e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ff478cc-4b74-425a-b110-dee2f04da663",
        "cursor": {
          "ref": "7141119d-c5b7-4c07-8cb9-ea1746ffb071",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "a98e6844-f81f-4c49-b514-2a13ab382e2e"
        },
        "item": {
          "id": "9ff478cc-4b74-425a-b110-dee2f04da663",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "ca3c8f87-d9cb-4947-9638-a77c98c2de25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d39d6189-f525-449c-ae73-861bf186b632",
        "cursor": {
          "ref": "c69b08da-8b38-4fdc-8e3d-458c1e57ab61",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "7c4c16fa-e12d-4ff6-9894-92e2551c4706"
        },
        "item": {
          "id": "d39d6189-f525-449c-ae73-861bf186b632",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "d207528b-692b-4fd0-89c1-2d3b8abd2c09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47c0b540-c922-4974-84f7-4b13a26b960e",
        "cursor": {
          "ref": "88a87ad7-45bf-4e45-8f24-d47ff2193490",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "a5876889-f10e-4094-abbf-875fc4a15041"
        },
        "item": {
          "id": "47c0b540-c922-4974-84f7-4b13a26b960e",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "be89a8ad-518e-40ed-9b84-6ec255a5b3ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6e810dc-7eaa-4a6b-b2fa-9f9ba14c1162",
        "cursor": {
          "ref": "71a25498-6022-4720-9121-8bc5dd65f37c",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "ae227307-0d7a-4f35-85f3-f4d862f0ec4d"
        },
        "item": {
          "id": "d6e810dc-7eaa-4a6b-b2fa-9f9ba14c1162",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "87bbf760-068b-4d9e-90f4-8d2299f19ce6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6e4549d-5256-460a-9676-fb0e2e88debb",
        "cursor": {
          "ref": "15a98016-8982-424a-922e-ef2ba828b391",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "1bbe6d5b-681b-4f68-8577-a25446789f9a"
        },
        "item": {
          "id": "b6e4549d-5256-460a-9676-fb0e2e88debb",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "d10ef2a0-1bb5-400c-82b3-4b39591ca14c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35926b2b-3526-467b-b823-100660cac437",
        "cursor": {
          "ref": "714b37ba-04de-4e3b-bfe8-5d060bd6f392",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "13b32845-21ee-4fc8-ba78-f413d56747e6"
        },
        "item": {
          "id": "35926b2b-3526-467b-b823-100660cac437",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "327645a0-c0ce-4557-9dff-fbbf72b3467d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21739279-a1e8-4edf-b10c-6ed2fa3d163c",
        "cursor": {
          "ref": "5991a7b6-ba73-4a1a-b9d6-99b6b045af8e",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "210166ba-40cb-4474-b511-98399e358be9"
        },
        "item": {
          "id": "21739279-a1e8-4edf-b10c-6ed2fa3d163c",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "c6ffeea1-5c9a-4947-ba16-9b397d75acd2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "150ac9e4-1376-4145-be90-e7f1945b2220",
        "cursor": {
          "ref": "6f466c59-79b4-4d9b-a6d0-cbd34761719f",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "7d041897-e86c-4a27-8560-4ea7f978f9c9"
        },
        "item": {
          "id": "150ac9e4-1376-4145-be90-e7f1945b2220",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "ba6b7be9-5fcb-4fab-9840-39776c4b3c44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16e72a4d-0c92-418b-818d-5f2ba77b273b",
        "cursor": {
          "ref": "7efe5ee0-b22b-451e-80fd-0f637072d01f",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "275cc8d5-01e8-41d4-9348-1613f1f134b6"
        },
        "item": {
          "id": "16e72a4d-0c92-418b-818d-5f2ba77b273b",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "aef53687-0bb2-436e-b61f-249ee7b66de0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b12242d3-d197-491c-9af1-c1e05084cf21",
        "cursor": {
          "ref": "bcf497fc-7391-4cb9-87fd-b7dc92b06801",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "54d11e9d-8fcd-4bbe-902c-94528aadbe86"
        },
        "item": {
          "id": "b12242d3-d197-491c-9af1-c1e05084cf21",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "5cb65f47-8138-434f-a960-3074c559ad1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcb016ae-389f-4c49-832b-d6aab79687ee",
        "cursor": {
          "ref": "94d6c049-ba9e-4e6d-b82d-23cbb53780ad",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "36fe2671-084c-4560-9096-081e83071152"
        },
        "item": {
          "id": "fcb016ae-389f-4c49-832b-d6aab79687ee",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "a7104166-70c5-4b88-8252-fe03a294e656",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21c37dd1-f577-440b-b788-9f684ef3ae56",
        "cursor": {
          "ref": "fce5f8c4-8b09-429a-8312-a78ad5b6622d",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "0480dafe-592d-440c-8649-8ee3b9df31b5"
        },
        "item": {
          "id": "21c37dd1-f577-440b-b788-9f684ef3ae56",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "752b41d6-51e8-41b6-a019-b6626385a061",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b1a89b9-1b88-44df-821f-85c9ecd1e791",
        "cursor": {
          "ref": "c78e897b-4006-4ee9-a6bc-6e79574f2086",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "1edea5e6-7794-4243-8c37-53718c3f9935"
        },
        "item": {
          "id": "5b1a89b9-1b88-44df-821f-85c9ecd1e791",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "7e960a92-2454-421a-8782-f7223771d738",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e2c3af8-f61c-4089-b8ca-2f799c0edf24",
        "cursor": {
          "ref": "a0e6cbd6-c123-4240-afe7-eb20dfed2321",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "b3723b2c-bb3e-4a55-8e6d-f77d7f3cbf7d"
        },
        "item": {
          "id": "8e2c3af8-f61c-4089-b8ca-2f799c0edf24",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "522f7e76-a7d7-478d-9e65-3d6906d9215c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8908f67d-cd57-407a-9e2f-9d2ec5035d10",
        "cursor": {
          "ref": "66a539a4-c620-4955-a804-3622d8ff7b49",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "012755a8-e57f-438e-904c-9739c2a55095"
        },
        "item": {
          "id": "8908f67d-cd57-407a-9e2f-9d2ec5035d10",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "16dd4c59-87b5-45e6-8360-609c9e12b1b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc5605ee-0f45-4dd2-a62b-44e7eef0e15c",
        "cursor": {
          "ref": "f89e2626-b54a-4876-b732-38441f2b69ea",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "118d8414-f3a4-463e-8f53-fb52b83506e2"
        },
        "item": {
          "id": "cc5605ee-0f45-4dd2-a62b-44e7eef0e15c",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "3bdb40d1-e523-4ac4-8977-0ec989983ba7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3cdb4575-7434-4d09-8195-5fdce897b6a6",
        "cursor": {
          "ref": "d5b6026b-1a2d-47cb-9967-b805875ca8b1",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "2e840339-2022-4c7a-8a38-6ddc1ff561f0"
        },
        "item": {
          "id": "3cdb4575-7434-4d09-8195-5fdce897b6a6",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "c48d2bd3-1911-48c9-a7df-6da3dfd11568",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3113daf-ff28-4a13-aa3d-8a9d3a8e8b83",
        "cursor": {
          "ref": "d648c708-ac51-43a9-99de-9960b74777d6",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "8556a8f0-90ad-4029-b6fc-b1fe8aae61ec"
        },
        "item": {
          "id": "e3113daf-ff28-4a13-aa3d-8a9d3a8e8b83",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "b3bdf795-ee5c-4843-9339-31aff8956e9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72dc4f6c-81ed-4de6-a411-10087b51e46b",
        "cursor": {
          "ref": "2caaaeb0-56f8-48f5-bfbf-d428a9d0a2e0",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "011d01d2-6d33-4519-aaff-d87bd08b3644"
        },
        "item": {
          "id": "72dc4f6c-81ed-4de6-a411-10087b51e46b",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "a92fa500-4db9-4ddc-a11c-37a3b5711efa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6762d6b-041d-490d-8f85-aedb89ab5fdd",
        "cursor": {
          "ref": "85dcb8e4-c935-40a5-a4af-fc2cd482e918",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "50c8ad96-5c8c-455f-981c-278dcfffdf55"
        },
        "item": {
          "id": "b6762d6b-041d-490d-8f85-aedb89ab5fdd",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "de53b20d-41c4-4898-8345-0ae5998f3ba6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03bd5b56-8796-4e41-a440-7d790ba5165d",
        "cursor": {
          "ref": "42db298a-2475-4054-8019-67691434c9eb",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "1737c1a7-3c7d-46a6-b206-1a49ced404c9"
        },
        "item": {
          "id": "03bd5b56-8796-4e41-a440-7d790ba5165d",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "0d6523e6-7732-4b98-bc24-1bd6f0e54be5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e855b4ac-512b-43a9-8ec4-e29e72e51ab2",
        "cursor": {
          "ref": "e6bb3565-61b5-4026-ac67-1f023e3c9bed",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "10f5cd25-0d42-4093-938d-5794316b5cf4"
        },
        "item": {
          "id": "e855b4ac-512b-43a9-8ec4-e29e72e51ab2",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "972dfc4d-8a6b-429e-b202-4e54c4546790",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c7650ad-72b1-434f-9a49-5f55d51b2ed3",
        "cursor": {
          "ref": "7429d1d2-7725-47ee-816a-55bea4574fea",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "d91631b1-6115-4a4d-8ef0-998a806d7440"
        },
        "item": {
          "id": "9c7650ad-72b1-434f-9a49-5f55d51b2ed3",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "c33adbaa-3faa-47a9-af23-e221b6f64966",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09356dec-b179-4a25-b46a-c826a93068ef",
        "cursor": {
          "ref": "660eb5d1-f844-4b0b-bcb3-29f84ab2ccc4",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "38f13e06-8cae-4e3f-a485-b0d4ded5b34f"
        },
        "item": {
          "id": "09356dec-b179-4a25-b46a-c826a93068ef",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "6c646be7-27ac-4a69-a23f-0859b6c75d16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c28ffcd4-fe88-4a37-baed-a0b40d4fad74",
        "cursor": {
          "ref": "9862b44c-4247-4bbe-b808-5d7cc1751f93",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "0cd3352d-0e39-44a0-8498-6f33e233225d"
        },
        "item": {
          "id": "c28ffcd4-fe88-4a37-baed-a0b40d4fad74",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "df74fca8-a01b-45aa-9250-17b79c76871c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45142c35-696f-4e15-b581-3e3ebd2499f1",
        "cursor": {
          "ref": "87b403d9-04cd-411a-9061-bfbcad2aab0b",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "36e659e3-d5d7-4617-a930-7e18d31ac0e9"
        },
        "item": {
          "id": "45142c35-696f-4e15-b581-3e3ebd2499f1",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "d8c5b2f7-8a45-4fd7-9c24-690c2250e014",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e9e2015-09fa-460b-a044-760725251661",
        "cursor": {
          "ref": "a7555615-ea7b-4f97-b59b-7ae2f2ea5397",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "4fb1a1ba-5982-46e7-9f54-37d92bc579cc"
        },
        "item": {
          "id": "4e9e2015-09fa-460b-a044-760725251661",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "4d9ace17-08c3-4bae-bed1-d12a92fe2f9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afd17668-0905-4efd-a00d-56857bdf56a5",
        "cursor": {
          "ref": "37aa5a4d-be31-462d-aad4-77337b135398",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "2bef89b7-cc8f-4a2b-9ad9-eb08544c242b"
        },
        "item": {
          "id": "afd17668-0905-4efd-a00d-56857bdf56a5",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "e7665f42-b152-47b1-8f7b-6fbdb1b1e6ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d58c11c-c8a8-444f-ad72-794917d9a2f1",
        "cursor": {
          "ref": "932f6f07-6dae-49ef-8fac-471dd711c2c6",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "27e2a1b6-c0ba-4bab-a1ec-6f4d084f9c2b"
        },
        "item": {
          "id": "6d58c11c-c8a8-444f-ad72-794917d9a2f1",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "960b0c8c-b9de-4b7c-8ea3-350b8efc10a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07b434c2-a34e-4ae3-82c5-77c4c4f9b15a",
        "cursor": {
          "ref": "8092ff96-3f91-4a4f-a8c2-5d12ffc6ca6c",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "12bb265e-e43b-46fe-81cb-9c20f11ee68d"
        },
        "item": {
          "id": "07b434c2-a34e-4ae3-82c5-77c4c4f9b15a",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "854a015c-7610-4e2b-ac5d-131bca84ba28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0ff8728-5beb-4bbf-81ea-aef4f58af7d5",
        "cursor": {
          "ref": "a698ec47-1298-47c4-b982-0131f9498f46",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "47aa8194-f8ca-4ace-835f-c94abd435d97"
        },
        "item": {
          "id": "c0ff8728-5beb-4bbf-81ea-aef4f58af7d5",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "fdfc0639-b9a0-4e32-919e-dd401957a9f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "489fcc10-dbe0-4071-9e39-3b2841dd6734",
        "cursor": {
          "ref": "d2dbe65a-9aa8-4e18-8abb-8411d9a893ce",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "a1cc7094-ee31-4524-b119-a2d0f5b78d87"
        },
        "item": {
          "id": "489fcc10-dbe0-4071-9e39-3b2841dd6734",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "b5d83f62-f67c-4a35-8f20-9560fab4d82d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6aef3f17-f84d-4d35-80f6-50a9aea8da67",
        "cursor": {
          "ref": "e9e18ab5-a557-48f8-8970-097c01b6b292",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "481a472f-9e73-4d50-95e9-6978c220a61d"
        },
        "item": {
          "id": "6aef3f17-f84d-4d35-80f6-50a9aea8da67",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "1a9eca52-4e94-4548-a4f3-010b01de9147",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcec16d6-0857-440f-880a-8671d5b8c556",
        "cursor": {
          "ref": "1d3d465d-5552-41b4-9a26-c1d0a53059ec",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "a60b2cc5-b707-4d45-b201-28fccd5290b4"
        },
        "item": {
          "id": "fcec16d6-0857-440f-880a-8671d5b8c556",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "62fd4808-a9d2-465e-a6f9-9cdbd74d5406",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 29,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc6d58a6-396b-44a4-b461-9d5a61dec296",
        "cursor": {
          "ref": "45a65f0f-af94-4864-be5f-d1470cb35d26",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "4ba6d7da-a8b0-46d9-bb5b-4575157fc73f"
        },
        "item": {
          "id": "dc6d58a6-396b-44a4-b461-9d5a61dec296",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "7fecb6c3-f357-4b08-a9c0-e03e0a5840b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e3e87c9-e885-4bfb-a983-db1b7449f3dd",
        "cursor": {
          "ref": "bd3713b5-ae78-41ec-b165-967a0846c9ea",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "432fed3a-b3a2-48d2-9cd9-e2ecde4443e8"
        },
        "item": {
          "id": "9e3e87c9-e885-4bfb-a983-db1b7449f3dd",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "3b2e0aa6-4c30-4a7d-aa8a-ae8210fd51f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8ab9803-ad71-4a73-adfb-2e9e3764df78",
        "cursor": {
          "ref": "8c5bd017-61fe-46ad-be75-1067e0ff692e",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "fe671318-1348-4f72-8166-6e8461972c21"
        },
        "item": {
          "id": "f8ab9803-ad71-4a73-adfb-2e9e3764df78",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "64b81346-676a-4396-9844-1da9f565a918",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff2cce0d-b2e3-4913-beb9-8d312d565600",
        "cursor": {
          "ref": "27e3540a-ffb5-424f-a89a-19226607ccf9",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "30b69a11-8cc7-4e51-8b38-ed870a689382"
        },
        "item": {
          "id": "ff2cce0d-b2e3-4913-beb9-8d312d565600",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "15a69bb9-5ae8-4f09-a49c-18f8233a823a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7222bb13-0443-4565-9ce6-a34def1a03ac",
        "cursor": {
          "ref": "6d97c9a9-3206-41b5-ae5d-9f584166fa83",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "ce559d26-aca4-43c2-a12b-734faa0af983"
        },
        "item": {
          "id": "7222bb13-0443-4565-9ce6-a34def1a03ac",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "6dce56e8-d0ca-42fc-ae61-0b69973c0f03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "858cb343-dd82-4313-90b5-ac74a957d3c7",
        "cursor": {
          "ref": "2c8e1e46-185c-4150-a0e5-1dfd58b61719",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "292b72f3-7b8d-4aab-85f8-7d73afffc00a"
        },
        "item": {
          "id": "858cb343-dd82-4313-90b5-ac74a957d3c7",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "c93f68a1-a9d8-4293-a8b7-69bd73658a44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75fe72fa-f62a-48f0-a979-16be225ab966",
        "cursor": {
          "ref": "496f930b-c4d7-43c2-8eab-33551ef700cc",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "590df540-3e2e-4839-9ac5-fcd8f4d7762b"
        },
        "item": {
          "id": "75fe72fa-f62a-48f0-a979-16be225ab966",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "3e538b65-cb53-4cfb-88e9-8435cc757636",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 18,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc24d9f4-1d5f-4abb-8e40-5f7e43a86ca2",
        "cursor": {
          "ref": "ef042d33-f592-42a6-aa51-d64583131171",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "ba198064-4dc1-491b-8cff-e55fac073a3d"
        },
        "item": {
          "id": "dc24d9f4-1d5f-4abb-8e40-5f7e43a86ca2",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "3b55105d-5e28-4984-97b9-feda4e23c2ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d19c64b-b392-4e22-9892-cd93551df096",
        "cursor": {
          "ref": "276a105d-a6a2-424a-9daa-46c2be7b72e5",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "a2e457cf-8db6-48d8-bb25-0aa92c1f8ff5"
        },
        "item": {
          "id": "6d19c64b-b392-4e22-9892-cd93551df096",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "26fdb644-310a-4e10-8768-0a57fbf8436f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2ee842c-cd5b-44a5-b3cb-201482553826",
        "cursor": {
          "ref": "5c340fd7-5c5e-4434-b99a-5f84149d6d64",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "9e7a88b8-5654-4bf7-b28e-de92244d85e6"
        },
        "item": {
          "id": "e2ee842c-cd5b-44a5-b3cb-201482553826",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "dedf1b42-8c2f-4936-8501-6b77f91eb161",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf691148-de4c-496f-82a3-e1ec5baaddd6",
        "cursor": {
          "ref": "70cd809a-60c6-42f4-a352-5b928892b9bc",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "d4c6fc59-2149-4fb4-a1dc-0bc052898902"
        },
        "item": {
          "id": "bf691148-de4c-496f-82a3-e1ec5baaddd6",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "8a3e2b25-95c6-450f-a81b-bfb62c12af4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19ba9833-c404-41c2-a63b-ec9e3faa449f",
        "cursor": {
          "ref": "44007cde-77f7-45d8-b458-fcb61dcb7784",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "e1a4a2d9-9963-4bc8-a830-1979c583cf1c"
        },
        "item": {
          "id": "19ba9833-c404-41c2-a63b-ec9e3faa449f",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "f7f4e21f-9547-4912-a990-b6d250e91e84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b6054d5-39c8-4155-83fb-7aea1c32bae5",
        "cursor": {
          "ref": "6f34599b-5653-4793-a056-a75184c71877",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "a75ec016-ae7b-460e-bd25-500988723c7d"
        },
        "item": {
          "id": "7b6054d5-39c8-4155-83fb-7aea1c32bae5",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "3d158254-3775-40d5-93bc-940b7f7c8ea1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "baee8a3b-89db-4eb7-a69f-ced69960e697",
        "cursor": {
          "ref": "073c6028-d117-49dc-990e-6d7edf7afa03",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "963887f3-b1bf-4649-9eae-b6d822119b44"
        },
        "item": {
          "id": "baee8a3b-89db-4eb7-a69f-ced69960e697",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "fc04a5ba-7dad-421b-b5bb-e595d41acef1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e212c418-f920-41f8-a136-9dff1a158f24",
        "cursor": {
          "ref": "ef4ec9bb-4b02-4404-be92-96769ff27169",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "44f3f5b3-a58e-40e4-b76c-7cb5bfd525bf"
        },
        "item": {
          "id": "e212c418-f920-41f8-a136-9dff1a158f24",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "66cfa688-8818-4b79-862a-8245630a6728",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd187238-600e-4733-b150-9e8877ec31b1",
        "cursor": {
          "ref": "c9f4a00e-a9b5-4420-9402-df006a122c1b",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "92c5d293-bbd3-4f83-9543-14f92ffd218d"
        },
        "item": {
          "id": "bd187238-600e-4733-b150-9e8877ec31b1",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "28ab7a74-6671-4053-bced-088fefc282a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27a515ab-1eae-462b-8623-f3094f626518",
        "cursor": {
          "ref": "cefc99dc-e21f-4cf4-b774-a859beff0de1",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "df2f692f-5d83-41f1-b310-8687a7b790bc"
        },
        "item": {
          "id": "27a515ab-1eae-462b-8623-f3094f626518",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "1136f5c2-f93b-41e1-b88d-6137e7aaaec3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6159ec28-ae18-4d34-8be7-25a2ee82f83c",
        "cursor": {
          "ref": "56a115a1-9ee2-43e4-ab3a-c224a41206a8",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "f2a81caf-b638-4941-aee1-f095e664afbf"
        },
        "item": {
          "id": "6159ec28-ae18-4d34-8be7-25a2ee82f83c",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "1013e323-0510-45d6-8b2c-49265ad67889",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e86c1e0-b812-4645-ab45-65a8ffbf194a",
        "cursor": {
          "ref": "984fda89-dbe9-4553-93b3-e8b2d999f2e4",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "36cb9cde-d0ec-471b-a214-c4123f3d3846"
        },
        "item": {
          "id": "2e86c1e0-b812-4645-ab45-65a8ffbf194a",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "8e3e501e-9e24-4ed1-906a-8171ead2c4f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6223dd41-a2f4-4f01-955d-8690d398c411",
        "cursor": {
          "ref": "c0fa6e79-84ec-4b3b-a7a0-15c2e00a7903",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "f9a71f2a-9819-422c-a340-4f4aca81972a"
        },
        "item": {
          "id": "6223dd41-a2f4-4f01-955d-8690d398c411",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "562173fd-668d-4fda-b467-d79236610909",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bef5bd52-3e86-4d4b-a7a2-119d4086028c",
        "cursor": {
          "ref": "a54955bd-00c6-4de7-9334-6237d9f1cf45",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "fbd86833-b635-4002-8eb6-e4cc4b72b71a"
        },
        "item": {
          "id": "bef5bd52-3e86-4d4b-a7a2-119d4086028c",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "72f14416-9db0-4fb9-8d7f-4f85d4d5dcb1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e2179db-119e-4427-bac3-55b073de1bac",
        "cursor": {
          "ref": "977b6979-30dd-4502-b591-fa290fd34c65",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "169c75b7-fbc8-43b4-84f9-d5f5e0d558cf"
        },
        "item": {
          "id": "7e2179db-119e-4427-bac3-55b073de1bac",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "79eb4167-0f7f-4103-b7df-3716e15dc3d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a989f3c-59c1-4595-99ed-536f32086963",
        "cursor": {
          "ref": "f86ca029-6b2c-40e2-9edb-f153de571c55",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "f5236edb-bc86-4d80-9bc3-e8da72d14e09"
        },
        "item": {
          "id": "4a989f3c-59c1-4595-99ed-536f32086963",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "ad3edd9e-ca3d-450b-ad5d-cb23bbc9b56c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88fb278b-78c1-4a4b-82a0-ac0006c4006e",
        "cursor": {
          "ref": "331cf755-1e38-4862-94bd-1f38d6c5de17",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "542c70aa-31e6-4174-8ad6-fc88d6054d14"
        },
        "item": {
          "id": "88fb278b-78c1-4a4b-82a0-ac0006c4006e",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "d7f71053-fe81-4ebd-9462-a375824842b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fb64e89-8b08-44dd-b8a9-8598f957fb73",
        "cursor": {
          "ref": "ac2b2a42-1917-4fca-9917-3b65273850e7",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "ab28350d-7a84-4f6e-b412-1aadb06bf5ec"
        },
        "item": {
          "id": "6fb64e89-8b08-44dd-b8a9-8598f957fb73",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "13869e0b-1bfb-4f40-94ee-21030dc4b101",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55e6de7e-10c7-42a7-bb5a-8cbd454e0698",
        "cursor": {
          "ref": "962e92c3-e18d-4002-a18c-2e70a9b4b13f",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "9cb77579-9b04-4de6-a344-efd60f252606"
        },
        "item": {
          "id": "55e6de7e-10c7-42a7-bb5a-8cbd454e0698",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "218305ea-0e22-41a4-805d-8873e24a594b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58de9abb-dcb9-4fbe-8ecd-cf1c77dc100e",
        "cursor": {
          "ref": "c898ba35-5ba1-4811-b254-4ddbde3d60b8",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "cb36635d-a900-48c1-862c-b71054d0d910"
        },
        "item": {
          "id": "58de9abb-dcb9-4fbe-8ecd-cf1c77dc100e",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "07cc07ce-fff7-48bf-a024-9545cfc9fefa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 596
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99c7380b-24cc-48d2-8b95-eb9f8d89be2c",
        "cursor": {
          "ref": "710e8565-c7fe-4047-878d-e30f453b4ca7",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "1b60e0b9-e2da-44c2-9d26-0977d4934bea"
        },
        "item": {
          "id": "99c7380b-24cc-48d2-8b95-eb9f8d89be2c",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "fddea724-935d-4efc-a08c-2899b6bc87f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 595
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52ab8b0e-11b2-46ae-81d5-4934dcfec23a",
        "cursor": {
          "ref": "e51bbaa8-722c-4e9b-b71d-9ed5d46a8b44",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "1f77e854-f676-40e4-808f-152556c197df"
        },
        "item": {
          "id": "52ab8b0e-11b2-46ae-81d5-4934dcfec23a",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "863fdd37-fa3d-407a-9505-772f2bbc40b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50c629a8-abd4-4960-a465-804fc715a5f0",
        "cursor": {
          "ref": "64aa43fa-4b93-45f7-857e-541bc39075e2",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "c6e32f62-6065-4a9f-846d-bfb77a747aaa"
        },
        "item": {
          "id": "50c629a8-abd4-4960-a465-804fc715a5f0",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "ebfe10ee-51f6-4c7d-af2a-82a60a247d9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d08bd2c-471c-4557-9864-bcdff0109d3e",
        "cursor": {
          "ref": "71af881b-3e58-4db0-adc1-f929c43a423e",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "346f16bc-a037-4408-81e3-939c46d11aca"
        },
        "item": {
          "id": "3d08bd2c-471c-4557-9864-bcdff0109d3e",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "c22bae7c-faca-4df0-a150-2efc8ddeacf8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "933e658b-2c47-44cc-9870-b876cc74fbe7",
        "cursor": {
          "ref": "43d5e07a-54dd-47ab-b52f-9461a5491064",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "863e3051-209c-4921-903a-c5f60ab517ac"
        },
        "item": {
          "id": "933e658b-2c47-44cc-9870-b876cc74fbe7",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "5fc641a4-0918-4278-b4c5-33d65d9bee20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c78ed84-a65e-4a0f-a7f7-a569a96e349a",
        "cursor": {
          "ref": "2985107d-1cbc-4efa-ab0c-d0e361e08cd3",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "536197ce-354f-4c01-9f2c-c959594faa64"
        },
        "item": {
          "id": "0c78ed84-a65e-4a0f-a7f7-a569a96e349a",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "51752857-cfe9-4721-b75a-6123f229b5fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5336f08e-79df-44ce-952a-56f83574fd4c",
        "cursor": {
          "ref": "61db0e88-d351-4a40-baaa-c38591646fa2",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "c348e19a-a91a-47a3-985c-7df9ddd888fb"
        },
        "item": {
          "id": "5336f08e-79df-44ce-952a-56f83574fd4c",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "7ac44daa-7241-4e68-b208-bbaf93e344ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b96712f-5899-433c-bbe9-de6816ffca24",
        "cursor": {
          "ref": "cc2524b9-6ac7-45ab-bd88-634a581f1ca1",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "1d3d59ce-e02c-49ae-b2d6-b975ef52a97b"
        },
        "item": {
          "id": "4b96712f-5899-433c-bbe9-de6816ffca24",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "f2c0ce55-e70a-4172-b9d4-4fa1489adb42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f24d282-5a30-4dc5-a04d-3f8644c226ec",
        "cursor": {
          "ref": "d1e9f23e-59ba-4417-8a79-87e053727fb3",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "88d3772d-8075-4013-b86d-5ec5dda4a977"
        },
        "item": {
          "id": "9f24d282-5a30-4dc5-a04d-3f8644c226ec",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "44488736-ab4f-4196-9363-723b904bae96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63404923-823b-41f9-a841-826d1e0d6818",
        "cursor": {
          "ref": "4d538ddb-c7c6-49d6-9c9a-d719d5372429",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "58cc435c-c6d5-41b3-ae9a-a1013267ef07"
        },
        "item": {
          "id": "63404923-823b-41f9-a841-826d1e0d6818",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "241a6003-1e40-4d76-9cbb-86a97b1c1414",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60fdac20-3815-4972-ba4f-6c49b5a2f1c7",
        "cursor": {
          "ref": "e9c42cd3-5970-4e81-93c2-365463ace9a1",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "d593ca25-c41c-4470-9110-53c17461371c"
        },
        "item": {
          "id": "60fdac20-3815-4972-ba4f-6c49b5a2f1c7",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "1875f35e-f285-4d2d-8248-7bfca8997b94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 169
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "176ac1ae-61aa-4641-b700-6a826b5aa195",
        "cursor": {
          "ref": "80fb4b1b-d975-48b6-b824-ad9bea2b9525",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "fa125259-93ba-46a2-935a-289f04d8be9b"
        },
        "item": {
          "id": "176ac1ae-61aa-4641-b700-6a826b5aa195",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "50021e01-569d-48b5-9d41-435d44ebf23f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7923a964-6ea2-413b-8c24-fed63700a5f3",
        "cursor": {
          "ref": "8329d938-c0c0-4218-b099-d0f945c0ca6a",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "575f06f1-341f-4965-a8c3-08e5c3e8af57"
        },
        "item": {
          "id": "7923a964-6ea2-413b-8c24-fed63700a5f3",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "b1ba0b68-219a-4fad-a5a0-fd92c6482401",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9be9c57d-0c46-4c29-aeda-b821ae43829f",
        "cursor": {
          "ref": "7b2a00cd-a74e-4d1f-810f-692f55bd040e",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "cace64d1-b7b1-4f92-9d07-dabc52a04182"
        },
        "item": {
          "id": "9be9c57d-0c46-4c29-aeda-b821ae43829f",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "23bf5caa-168c-491c-a1f7-c676422091ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c26d5f60-8e60-4b2b-ae7b-27d234fd3d3b",
        "cursor": {
          "ref": "19497702-9951-40b2-ae2b-02f6e6b4437c",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "9310f94f-b8aa-40d6-a342-dd349fc8eea5"
        },
        "item": {
          "id": "c26d5f60-8e60-4b2b-ae7b-27d234fd3d3b",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "b22727ac-1712-48b6-af8b-8cc776443257",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07d0c00f-0ec1-4a01-8c3f-c8448bd77069",
        "cursor": {
          "ref": "09f113ab-071b-4d2d-b455-cf9335edead0",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "d6c94e40-6fa0-4b24-866a-93aab3806783"
        },
        "item": {
          "id": "07d0c00f-0ec1-4a01-8c3f-c8448bd77069",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "7b1d500c-00e4-4ace-b9ca-cc9b55a7c283",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "488d6108-9787-4266-9ace-8d8d46bb31ab",
        "cursor": {
          "ref": "75d83383-06d7-49a1-a104-2b4385bb712e",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "73f12258-da55-4e8b-91c8-46b6d54f67d6"
        },
        "item": {
          "id": "488d6108-9787-4266-9ace-8d8d46bb31ab",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "b4dcc863-dea0-406b-86fe-a16f904b2744",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b4ddd10-3d42-464b-98ae-12c27fbab373",
        "cursor": {
          "ref": "cee2d96b-2a7e-4ae5-8236-bfdc78c5efbb",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "4e84569e-2c84-4b5f-981f-1d25d1d6a51e"
        },
        "item": {
          "id": "2b4ddd10-3d42-464b-98ae-12c27fbab373",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "646f5bff-3e3d-4715-8c35-af6f115c6656",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c99f156-e23a-4114-bf34-cc2f47cf774c",
        "cursor": {
          "ref": "3d0db5b2-54ef-4d35-bb27-656c1f1c10d1",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "a0ffe92b-e18f-498e-822d-b6c3a8e647ca"
        },
        "item": {
          "id": "2c99f156-e23a-4114-bf34-cc2f47cf774c",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "7f84d7bc-e9d1-4a59-9c4a-5750d3f57fb4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ff25beb-3a92-4a4b-99a5-2d448fbe29b4",
        "cursor": {
          "ref": "e2a0d62a-659d-4919-be4b-8a75e4d25536",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "5ec8ba6e-a61a-4390-b59c-17f5e1f5a328"
        },
        "item": {
          "id": "0ff25beb-3a92-4a4b-99a5-2d448fbe29b4",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "5dc02cc8-a986-4c3b-9ee3-c6b24f2304e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07d6c06e-2cdc-445b-b74a-10d946002c09",
        "cursor": {
          "ref": "5dc45d0c-81cd-4333-b6c8-8180c530236c",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "bd3b8aed-2689-4d22-badc-ffdaa3fa2186"
        },
        "item": {
          "id": "07d6c06e-2cdc-445b-b74a-10d946002c09",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "a115d9a4-0d3d-4df8-8899-41c974436473",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a0d1a83-1066-499c-ad6a-ac4c28653b8b",
        "cursor": {
          "ref": "967c098b-de11-454c-9a78-7edb58adb301",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "f7284259-ac32-4395-bfdf-1eb71587d841"
        },
        "item": {
          "id": "0a0d1a83-1066-499c-ad6a-ac4c28653b8b",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "526c58cf-554c-4feb-8ab1-247803b6df0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ad7366b-c98b-4b20-9ec5-f731405fe34d",
        "cursor": {
          "ref": "727b14c1-33c8-47e4-ac0e-c89db5ec0a0e",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "935d1f5d-bdbf-4de6-a181-f86a49ebd96d"
        },
        "item": {
          "id": "4ad7366b-c98b-4b20-9ec5-f731405fe34d",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "e3a9fc4d-24f9-4904-bb5f-a4b3234f5d10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "215f93ad-ae58-4a9a-a1fb-b176ea212347",
        "cursor": {
          "ref": "02a882d4-6dff-484b-ae8f-27c4e53bcd3f",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "633fa1b2-6c2e-4749-830e-7e0aca779f04"
        },
        "item": {
          "id": "215f93ad-ae58-4a9a-a1fb-b176ea212347",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "ce488092-56a9-4cf2-9177-f780d8d31a2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1c17aa5-ef89-4c5b-9e30-d150b7e54a1e",
        "cursor": {
          "ref": "ad9a818a-ce72-4cca-8157-d1e24358deb4",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "2a681b41-d795-43b2-bcc6-6ae00e720d3c"
        },
        "item": {
          "id": "c1c17aa5-ef89-4c5b-9e30-d150b7e54a1e",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "f0820c8c-b8cf-4d74-9e55-a82e19fecc74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "091d0c9c-1ce6-4789-90f8-ca81e8b513b4",
        "cursor": {
          "ref": "84992b21-c364-4c19-a8b2-815f3c719cf9",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "6e398922-cb16-46cc-8e0f-7c84ae1f8129"
        },
        "item": {
          "id": "091d0c9c-1ce6-4789-90f8-ca81e8b513b4",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "44d57e06-44fd-4666-9070-4b85e6d2ba40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0e12b67-39f9-4da2-a9e3-6e1c3fabb288",
        "cursor": {
          "ref": "01eb487d-19b6-440c-a799-1448e94e9713",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "e2665b52-9e83-44ab-b446-9226793529a8"
        },
        "item": {
          "id": "f0e12b67-39f9-4da2-a9e3-6e1c3fabb288",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "0a56cfaf-e927-42a2-a515-9945bc3f0140",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74af8768-53ed-4f23-a274-33899f8f9080",
        "cursor": {
          "ref": "c4ee4540-fb88-40b5-ad01-76fa0de247d4",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "9235c23b-f5e8-4fe0-9793-e9c10dc55974"
        },
        "item": {
          "id": "74af8768-53ed-4f23-a274-33899f8f9080",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "33c27922-1084-48d0-bf4c-278ab1318f0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cabaa918-edfd-4c1b-824a-acac53fc10c4",
        "cursor": {
          "ref": "d6b42c62-65fc-47b3-9020-97ba8f514487",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "cb68724c-21ee-4590-b4e5-a62fa6799869"
        },
        "item": {
          "id": "cabaa918-edfd-4c1b-824a-acac53fc10c4",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "233e885c-28dc-46c8-94fb-d247208af611",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04f53567-4b66-4273-803a-a0822c4f8343",
        "cursor": {
          "ref": "3df3f2ad-d2c5-4abc-9fdf-0f7f2043892a",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "a1393292-5445-4742-9141-0ea6f473b3ab"
        },
        "item": {
          "id": "04f53567-4b66-4273-803a-a0822c4f8343",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "0dbcbf78-49da-453c-99a3-a1fe3c3c39b9",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0261687c-3c4f-45d6-ab51-c3e2e14da62a",
        "cursor": {
          "ref": "b83b233f-39e8-4f55-acf8-bc88a765663a",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "11fcb7c7-8fc7-43e7-ac00-d112bdf6ca4b"
        },
        "item": {
          "id": "0261687c-3c4f-45d6-ab51-c3e2e14da62a",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "65911be1-bff0-4aea-bfe7-5e1b04a7036f",
          "status": "Created",
          "code": 201,
          "responseTime": 46,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3a888a5-3025-4a16-a545-b22b39d9428a",
        "cursor": {
          "ref": "fc7d0ff7-1550-4a4c-a793-1b24c371a0ce",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "a13cf062-2c36-4b79-afa3-26fb6e205e4c"
        },
        "item": {
          "id": "a3a888a5-3025-4a16-a545-b22b39d9428a",
          "name": "credentials_issue"
        },
        "response": {
          "id": "380368e8-4b69-4293-b6ba-eef8ad876987",
          "status": "Created",
          "code": 201,
          "responseTime": 143,
          "responseSize": 918
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "95240834-36a5-4a62-951a-a5b226602630",
        "cursor": {
          "ref": "5783b365-0eea-491d-8caf-3ce79c083dcb",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "1626fc11-3412-45a4-854e-265431952790"
        },
        "item": {
          "id": "95240834-36a5-4a62-951a-a5b226602630",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "5ecfc81a-8611-489d-a527-37f4c8f0b858",
          "status": "Created",
          "code": 201,
          "responseTime": 32,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "024aa528-7182-439c-a091-0bf283e5dbe2",
        "cursor": {
          "ref": "d4956250-5b7d-4e73-8038-81bf3440ed6e",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "d0ef3cb9-7c18-4c7c-ab74-cc75184f6758"
        },
        "item": {
          "id": "024aa528-7182-439c-a091-0bf283e5dbe2",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "53432d12-9a18-4591-9554-cf022b073fa4",
          "status": "Created",
          "code": 201,
          "responseTime": 37,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "a202912c-f63b-457c-8633-c74eed3ee9e6",
        "cursor": {
          "ref": "2f836d16-fbe2-4aa3-8f2a-01bbb0cd85ee",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "c1e5de1d-5913-4d84-8d9b-ca0c514b2ab5"
        },
        "item": {
          "id": "a202912c-f63b-457c-8633-c74eed3ee9e6",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "66532723-8dc3-4b4e-829b-94f21f9b5e46",
          "status": "Created",
          "code": 201,
          "responseTime": 27,
          "responseSize": 930
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "0319a3ed-394f-4bdb-b318-02c773d0404d",
        "cursor": {
          "ref": "e7c582e6-3aa2-4537-b386-4f52f215f895",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "a4335be0-0fbd-4794-928b-50f04521d91c"
        },
        "item": {
          "id": "0319a3ed-394f-4bdb-b318-02c773d0404d",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "c32b2c5e-b6e7-47da-994d-93a200a6bf3e",
          "status": "Created",
          "code": 201,
          "responseTime": 31,
          "responseSize": 909
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "92e50665-009c-4a43-81ce-93d0531616ba",
        "cursor": {
          "ref": "e6867aec-727f-4a0a-82cc-36fd31782944",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "0dd21286-a554-46b1-bfa0-eadc42fbd124"
        },
        "item": {
          "id": "92e50665-009c-4a43-81ce-93d0531616ba",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "2dd8232d-c4cf-4b91-be51-91a4cedfc79d",
          "status": "Created",
          "code": 201,
          "responseTime": 28,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cacf225-da89-4660-8cc5-2812ed994285",
        "cursor": {
          "ref": "bbb5204c-ec9a-4365-affa-8017ce7e7872",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "cf2fd0aa-1339-4ae3-a2df-909c96e0bd4a"
        },
        "item": {
          "id": "4cacf225-da89-4660-8cc5-2812ed994285",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "04574956-92e3-4918-9179-93794acfaf1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5cc95e6a-6ab1-4101-a9c8-263ac1432911",
        "cursor": {
          "ref": "5f649fd0-4441-4269-bcfc-6f65ba087f31",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "8133c0f3-f79b-4f89-8ee0-c64201662fdf"
        },
        "item": {
          "id": "5cc95e6a-6ab1-4101-a9c8-263ac1432911",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "5c29ca4a-5d75-4911-84a9-475f92fdfdda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29a2fc7c-8038-4b39-9411-14cb6c804c7d",
        "cursor": {
          "ref": "b9ae6707-5bfc-4ac1-aff4-fcf07313a7f9",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "59d67076-4d0a-48f6-b529-862eefba950c"
        },
        "item": {
          "id": "29a2fc7c-8038-4b39-9411-14cb6c804c7d",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "7fb83195-d871-4eaf-9de5-89d07a3d29d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9e59963-a2a6-4505-9284-ac20b385df44",
        "cursor": {
          "ref": "de9ba3b2-df14-4633-839b-b36b693f8c2d",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "ed6174bf-fe1a-414a-94ba-206f574bfb60"
        },
        "item": {
          "id": "e9e59963-a2a6-4505-9284-ac20b385df44",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "327aaea5-88c0-47fc-9091-2a1d71f2cdfa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e25fc9b9-41fe-42bb-b6ec-f999bb01c509",
        "cursor": {
          "ref": "d70acf70-ad7e-4994-8163-c5bb5cced951",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "e4f32957-0e18-49e3-91ed-b9214f8672a5"
        },
        "item": {
          "id": "e25fc9b9-41fe-42bb-b6ec-f999bb01c509",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "e944314b-825c-4f9b-aa70-42fccb8dd5de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "529363f0-15d5-4d17-978a-769c2aa7f856",
        "cursor": {
          "ref": "f6712b42-6a93-4f65-b0ae-1556cb57d371",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "26fe176f-68ce-4d55-96b5-4356e23f3dc7"
        },
        "item": {
          "id": "529363f0-15d5-4d17-978a-769c2aa7f856",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "e2353fa8-bb81-4409-ad27-5e119a7f5f63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f64825ed-0253-401d-8024-591aa4ce4936",
        "cursor": {
          "ref": "660316b5-4f0d-4dbf-9f70-3951089fa791",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "05a68f17-f53b-432e-b25b-c518de5892eb"
        },
        "item": {
          "id": "f64825ed-0253-401d-8024-591aa4ce4936",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "77ee6680-01da-4eb9-b28e-2e2876eb4bd2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3be0094-736a-49d6-95cc-9df4e2f7ad42",
        "cursor": {
          "ref": "91a85969-d176-403e-915e-526b283bbe7d",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "bb66d30b-7dfc-4fda-b1dd-cac580a213ea"
        },
        "item": {
          "id": "a3be0094-736a-49d6-95cc-9df4e2f7ad42",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "5d738f1f-9122-409d-9450-eadb57c2592e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0a0ecd9-a87f-4374-bbac-629744178a99",
        "cursor": {
          "ref": "ae1ba5a4-b4fb-481c-95bf-1efbff6aa518",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "47cafe9a-b8b1-448a-8573-f41a35180e86"
        },
        "item": {
          "id": "c0a0ecd9-a87f-4374-bbac-629744178a99",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "aec8e7b7-e48f-4999-b51c-e2099d049a72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef14af0f-890c-47e7-adcb-3ab5ed577921",
        "cursor": {
          "ref": "e5c457b4-bf2f-46ed-b284-87b9de2a4904",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "58bd3bc0-d3ee-4953-bacb-ac9a6804a8d9"
        },
        "item": {
          "id": "ef14af0f-890c-47e7-adcb-3ab5ed577921",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "794d4db4-5096-46aa-9f59-962d0dc70470",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "314ea60d-2e09-4c6e-8f45-eaee06be74fd",
        "cursor": {
          "ref": "252a5e8b-c9d6-473f-9064-654b46ba5c9f",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "51f83c36-795e-4381-a24d-a0f30c440a11"
        },
        "item": {
          "id": "314ea60d-2e09-4c6e-8f45-eaee06be74fd",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "e97285de-6576-4799-9957-fa879b8dec55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "300599aa-0eb8-46a7-b60e-b771f2e864ad",
        "cursor": {
          "ref": "85736512-6062-4c33-ac38-1317dea031f7",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "985674b1-3ce8-46b1-bfdb-aad6e2ea247a"
        },
        "item": {
          "id": "300599aa-0eb8-46a7-b60e-b771f2e864ad",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "1c2a4b5e-e9ad-464d-9281-a5724a4d3656",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "039de707-384c-4f4f-965c-40911e975371",
        "cursor": {
          "ref": "8c0ce493-c51f-45c6-9fb1-3bab66d76066",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "075ccc1e-f07e-4b4d-a20c-500a5a2cf332"
        },
        "item": {
          "id": "039de707-384c-4f4f-965c-40911e975371",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "e53d8b51-0f87-4985-baa2-589fddc7bfa0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d54851e2-5885-4d03-81bb-271d06af33f3",
        "cursor": {
          "ref": "141425e3-a67d-4ee1-ac21-0a9511f8a3e6",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "98c0c256-b0cd-4701-aeef-55b6564a9d8a"
        },
        "item": {
          "id": "d54851e2-5885-4d03-81bb-271d06af33f3",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "40de1951-e02a-4b13-8bc0-d3df80fff507",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02892b5a-8511-49bd-9f3f-61df506d2f3b",
        "cursor": {
          "ref": "8729cf66-784c-4a89-9829-2f9eaf9e8bb6",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "86109b7e-236e-47f1-93cb-a697e8a68038"
        },
        "item": {
          "id": "02892b5a-8511-49bd-9f3f-61df506d2f3b",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "2276b44a-dd18-4404-9f64-a45c301454ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78886d8e-3bf4-4c32-96bb-4bf5b5e0122c",
        "cursor": {
          "ref": "a1f0f6d3-5892-44a2-9e32-c44949b7cb8c",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "edd6f499-420e-4875-85a5-87827b03536f"
        },
        "item": {
          "id": "78886d8e-3bf4-4c32-96bb-4bf5b5e0122c",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "adfa1bb4-37c6-419a-9b9c-e839ad7dcd58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9d383f4-04db-4f74-9ae2-2f9e5fe0eb24",
        "cursor": {
          "ref": "b487b84f-75da-46ca-9d07-0a702517543c",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "0770b05a-6546-4548-a56d-7258958519ed"
        },
        "item": {
          "id": "d9d383f4-04db-4f74-9ae2-2f9e5fe0eb24",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "8aecede2-d37d-4174-9dd4-616a2784add2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "008fed96-9c7d-41bd-922a-2b037128bca7",
        "cursor": {
          "ref": "948082a2-5a0a-43bb-bb2c-ac7550d93bdd",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "77538e73-f0df-4714-8c91-de64c93b4b43"
        },
        "item": {
          "id": "008fed96-9c7d-41bd-922a-2b037128bca7",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "22188314-4809-4543-872c-80daccde2279",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb06349f-5245-4938-8ed5-4fc063852258",
        "cursor": {
          "ref": "7e826951-d186-4214-98ec-5286baef3bbe",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "ebc81fb8-5640-4812-9d11-4ecd6129e7a9"
        },
        "item": {
          "id": "fb06349f-5245-4938-8ed5-4fc063852258",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "7fb10b1d-4496-4cb5-a3d6-0191c07e6ca6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b121b831-c68b-4a92-8bab-4f0fc08bb649",
        "cursor": {
          "ref": "33d62e6d-d7c4-4039-8468-37ddd311ea06",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "ec0b2f19-57bf-4c48-8e4e-1401cfd578ee"
        },
        "item": {
          "id": "b121b831-c68b-4a92-8bab-4f0fc08bb649",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "b54e91bc-88c3-47eb-b1b3-d50935722034",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bed4cf8-f24f-43e5-a602-6c82333599e5",
        "cursor": {
          "ref": "4f17e304-dd06-44bd-bfa6-4a87c35edc1f",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "24c252f9-574d-471c-af3f-9075f57ecf2a"
        },
        "item": {
          "id": "7bed4cf8-f24f-43e5-a602-6c82333599e5",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "2d35b1c3-0ffa-4d0d-8954-42037b8293b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4d5b3c5-125f-4ce7-92c0-2549ffdcd000",
        "cursor": {
          "ref": "8ea636ea-7735-4356-89bb-7905186fe3df",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "3d13da41-3bd6-460f-b398-cd194ba76ec9"
        },
        "item": {
          "id": "c4d5b3c5-125f-4ce7-92c0-2549ffdcd000",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "b0e9aead-5379-4682-90d6-9be53acc2724",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d13815f2-27b6-4b42-9f96-a24e756a56e1",
        "cursor": {
          "ref": "c05aaed8-f5e3-45b1-82bc-5a217cf01787",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "289b49c3-5876-46a9-9e40-cd4e61cd2fe8"
        },
        "item": {
          "id": "d13815f2-27b6-4b42-9f96-a24e756a56e1",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "df4338cf-3d5c-44df-8f01-ab501d4f2dac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc17b40d-2918-459d-8627-5b1c2e7dad5d",
        "cursor": {
          "ref": "422a895c-aa56-4999-9a80-2233e9c24854",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "c2b25063-7ac9-4979-a42b-8b9860253c48"
        },
        "item": {
          "id": "cc17b40d-2918-459d-8627-5b1c2e7dad5d",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "66d5208c-a877-45e5-9ebe-cfe324edecf3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c155c60-fb52-4ae6-ae38-773f27d54187",
        "cursor": {
          "ref": "622760b9-672d-4998-9af2-f9997c1b3571",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "bdd20665-d271-4fde-b999-1e43dacabf48"
        },
        "item": {
          "id": "7c155c60-fb52-4ae6-ae38-773f27d54187",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "1252a798-6c55-4144-a176-5ac3f8c337f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c89c7d53-f8f3-4984-9331-7a98597f0ea5",
        "cursor": {
          "ref": "307c6363-3442-45e9-b3fa-617761ba09b6",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "4e122a3f-51b5-4512-8c25-436f61108e04"
        },
        "item": {
          "id": "c89c7d53-f8f3-4984-9331-7a98597f0ea5",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "384de753-b75d-4a63-b618-beb2dc3f3caa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13200378-6a0f-4e43-a104-ef1170602a47",
        "cursor": {
          "ref": "fa879763-0a7d-4983-bd26-cfe1123d4704",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "52800876-5f55-43a2-b9dc-a5434bad5d46"
        },
        "item": {
          "id": "13200378-6a0f-4e43-a104-ef1170602a47",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "b9d3b32f-eee7-4060-b009-f9705c2c6b69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3cb3133c-fcd4-4888-b4d8-3adec3a8082b",
        "cursor": {
          "ref": "1ae49d23-f974-4862-8c8e-3d3be3e9be4f",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "942628df-fa7c-43a8-9a17-e933462a809f"
        },
        "item": {
          "id": "3cb3133c-fcd4-4888-b4d8-3adec3a8082b",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "8f568add-cd1d-43a3-9256-8e34e4638818",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee9057db-1681-4d1e-aa07-c17b61cdb97d",
        "cursor": {
          "ref": "54bd434c-ebfd-4fc9-bf36-09dbd826a10b",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "98ca5d1b-1225-41a2-b59b-e05fe5cbe033"
        },
        "item": {
          "id": "ee9057db-1681-4d1e-aa07-c17b61cdb97d",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "57e60fef-6377-46fa-a584-648dca3955d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "817c704b-0a75-49c5-bdd3-76646928de90",
        "cursor": {
          "ref": "8952bf62-8ecb-48d1-b0a6-c0cc90f69d1c",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "f9705be6-8ec8-4bca-9a12-9edfb90739b4"
        },
        "item": {
          "id": "817c704b-0a75-49c5-bdd3-76646928de90",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "00b417a9-ff37-49d7-b3bf-0ca77a433e30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c6abc93-1567-4f83-acf1-e4a9bc632d3d",
        "cursor": {
          "ref": "6ec34b47-bdc8-47d2-a09a-329cb09d3d83",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "0b312bfd-5cdb-4f9f-b86a-57e65ef86fc2"
        },
        "item": {
          "id": "8c6abc93-1567-4f83-acf1-e4a9bc632d3d",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "bd3221c8-e01a-4325-a8d6-4ddce297d6e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3e82168-5349-4a48-84fb-91e06f74d92d",
        "cursor": {
          "ref": "c2e44e82-df5b-4b2c-a38b-4bf9ab241c3d",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "27b61aa7-25cd-4b61-80ac-40c1532aac44"
        },
        "item": {
          "id": "e3e82168-5349-4a48-84fb-91e06f74d92d",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "79b3defc-87b6-4c66-8d0e-1eb9fe71a5b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2a99c1b-aba3-4a8b-8cbb-ca2d048709ee",
        "cursor": {
          "ref": "beced25b-5eac-4889-a208-b619e2ab600e",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "d213ea96-1ba8-46e2-851d-f785b3d3a45f"
        },
        "item": {
          "id": "b2a99c1b-aba3-4a8b-8cbb-ca2d048709ee",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "11e383db-e90f-442e-b60c-d3b0ef1fcacd",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a57a9bb-67dd-445c-973d-5e02e73c060e",
        "cursor": {
          "ref": "335ce153-3353-41f0-8138-042f21723008",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "50742b37-fc9d-4c1d-a29a-340c685e3e8c"
        },
        "item": {
          "id": "1a57a9bb-67dd-445c-973d-5e02e73c060e",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "49125ceb-a881-47b1-b1b7-80cbeb1efcc9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81bc1eb8-1901-4e9a-be34-4172d68c1616",
        "cursor": {
          "ref": "14cf82d0-edf8-4a9d-9761-6fdcdb2f4c27",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "06da4bd2-f093-4173-a080-1b3c55e0cf81"
        },
        "item": {
          "id": "81bc1eb8-1901-4e9a-be34-4172d68c1616",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "6eca30d2-d572-4291-840d-0025fe5cca38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9bc4612-00eb-49e5-85d4-988eadd670b6",
        "cursor": {
          "ref": "c4403566-ef58-49b7-ae51-fbb8cc08f057",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "02c6cf4b-1ec6-4ab8-8a6a-84ba8648229b"
        },
        "item": {
          "id": "a9bc4612-00eb-49e5-85d4-988eadd670b6",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "9393091e-505b-448c-ad84-85980957cd90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b5ff9de-d075-4182-8904-060b4d914b92",
        "cursor": {
          "ref": "8b436838-b480-4947-95da-3c76b5a5a982",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "0f83f25e-1ac0-4445-9094-d2b11d6e6428"
        },
        "item": {
          "id": "7b5ff9de-d075-4182-8904-060b4d914b92",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "fcf7fab0-55d5-4b8e-a1b1-dce98dd9801d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40060d0c-7509-4821-962e-279036e5d3ba",
        "cursor": {
          "ref": "7b274d5f-35f0-46aa-bd59-c5d3c964e182",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "019e2612-14bc-4519-9cd0-c37a4c39d909"
        },
        "item": {
          "id": "40060d0c-7509-4821-962e-279036e5d3ba",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "8014464b-c6ea-4d26-8d1a-00e73508f15c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76388ece-d9a3-452e-8914-2390379ce265",
        "cursor": {
          "ref": "261fe8c4-7fbb-4daa-bae7-6eaf451b57d1",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "c985e9fe-38a0-4193-8c07-854383ba019e"
        },
        "item": {
          "id": "76388ece-d9a3-452e-8914-2390379ce265",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "27ab9533-dd17-4d86-833d-979f8f92d4cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "460feaf7-912f-4ac7-8b12-3167c31fe0ee",
        "cursor": {
          "ref": "bf264bbd-ca51-46a9-adf4-bfd48f1265d9",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "88a370e1-54d3-47eb-a3cf-d4adf39a21a3"
        },
        "item": {
          "id": "460feaf7-912f-4ac7-8b12-3167c31fe0ee",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "df62d9ac-6d50-45c2-9093-4405acb7de03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32793215-541a-4f58-b96a-c4216f1e3448",
        "cursor": {
          "ref": "b14bca3d-5cfc-4db1-b0b2-872b90d30ed0",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "14ebe7d5-90a4-4baf-9864-29414fbba803"
        },
        "item": {
          "id": "32793215-541a-4f58-b96a-c4216f1e3448",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "3f272089-3c0b-4389-8bf7-eb0ac6b1ffe2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0dbf4b16-ffc1-4e51-a328-145727bc750a",
        "cursor": {
          "ref": "9681d4c9-d625-4738-8fc3-cc390e7d371f",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "d22b8ce8-70b9-44f5-b451-fa4ecf6246f3"
        },
        "item": {
          "id": "0dbf4b16-ffc1-4e51-a328-145727bc750a",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "4036f997-4dee-4441-9c00-35ca1624b980",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6141d733-2d26-4d96-a3b5-664323d566bd",
        "cursor": {
          "ref": "6c6eeb69-ab0b-4dec-aeca-b1f56cff70a1",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "0682f3d5-c324-4aee-8830-08bf81c7372a"
        },
        "item": {
          "id": "6141d733-2d26-4d96-a3b5-664323d566bd",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "2955812b-d53c-4be4-957a-2181d5b755c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb52f385-50a3-4b43-984b-e4400aef4cb7",
        "cursor": {
          "ref": "3da1c402-34f2-46a5-b9bb-1cb4ab9d03e3",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "da5e4d4f-8bf4-4c13-bad5-92b2ac91f859"
        },
        "item": {
          "id": "cb52f385-50a3-4b43-984b-e4400aef4cb7",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "d32abb69-e2b1-4a93-8e69-cc0cc709a666",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9438ee1-7f48-401b-8a23-dee3bf151b21",
        "cursor": {
          "ref": "6d7419a7-3347-49c6-8dfa-1f062faef541",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "8a947974-150e-4812-90c2-31bb12282359"
        },
        "item": {
          "id": "c9438ee1-7f48-401b-8a23-dee3bf151b21",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "858eedee-da23-433a-bf70-0b24167022da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c76e05a8-69ac-478b-a359-4daf963f76cc",
        "cursor": {
          "ref": "ae713cdb-8c44-4cca-8ba9-b1190491dc69",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "c08bcd84-2e18-4270-a6e8-2ce6be70288c"
        },
        "item": {
          "id": "c76e05a8-69ac-478b-a359-4daf963f76cc",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "b7e39fde-163d-490c-b849-e2ca9da6880c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "442fc685-aa26-4257-805f-2a31946886b0",
        "cursor": {
          "ref": "362201fb-86af-4d3d-ae88-d453f475a2a9",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "ca1b0030-8005-44cb-b9a8-a758eff3a676"
        },
        "item": {
          "id": "442fc685-aa26-4257-805f-2a31946886b0",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "1a755f51-9aa0-4680-a986-8b1a13b5a97e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c87361f-a582-4a14-8bee-22a14aa64194",
        "cursor": {
          "ref": "3aacc62d-a81f-459d-9ac9-ae8f333a43d7",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "8628ee33-d1dd-43dd-b0de-550d0c23c5ed"
        },
        "item": {
          "id": "4c87361f-a582-4a14-8bee-22a14aa64194",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "d3d46784-abb2-4b95-914d-f264f697188c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d19302c3-c600-453a-bfb9-3c5aec90c0e9",
        "cursor": {
          "ref": "fc7ad9bc-a118-472f-8102-348ae069ec82",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "ffc1556f-03d7-4390-9565-2503caa459d1"
        },
        "item": {
          "id": "d19302c3-c600-453a-bfb9-3c5aec90c0e9",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "86de3161-53a2-4e1a-9d3a-ea6c88c923ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b7a2a5c-d58c-4619-a0d1-0b02cb59897d",
        "cursor": {
          "ref": "ec9ef054-ada6-4fd2-9789-c248e35564d6",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "2efbd3a1-3f21-4524-9bb9-d0019b260794"
        },
        "item": {
          "id": "4b7a2a5c-d58c-4619-a0d1-0b02cb59897d",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "ca7f5d6c-44d7-4255-af7d-5be5dcb45d57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c31fc0fc-09ce-4319-9ef6-a545738902a0",
        "cursor": {
          "ref": "c5689fc9-e283-4eaf-a229-adbfb8675c93",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "070062cb-456e-4876-83ff-0c72e6602022"
        },
        "item": {
          "id": "c31fc0fc-09ce-4319-9ef6-a545738902a0",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "dec97fd8-12da-4874-b514-8da9fc61935e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b566b36-b49b-471d-97be-4f260cd04bf5",
        "cursor": {
          "ref": "2a73ac65-7112-44e6-9a25-a5e403e378b5",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "03870c05-e552-4ec8-891c-8d0346754f97"
        },
        "item": {
          "id": "0b566b36-b49b-471d-97be-4f260cd04bf5",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "fc2324d8-881f-4d98-b91e-7bf170225884",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a4cd259-4369-4bd3-bc86-c17e3c314bcb",
        "cursor": {
          "ref": "dfebf684-8af7-4681-960b-f6b0fdc0b079",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "4a4399f4-f968-4c50-91b7-f8d3c812d6f8"
        },
        "item": {
          "id": "8a4cd259-4369-4bd3-bc86-c17e3c314bcb",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "cc822de4-48b9-4b2a-8531-b4782f6a14f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "254a2f06-4e15-429e-901f-e12c5520d45e",
        "cursor": {
          "ref": "3d0ebad5-87ee-46cb-bb9a-dbbeb3e9b2be",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "0f8edbd8-6a21-443d-9c26-218e2fff1ed1"
        },
        "item": {
          "id": "254a2f06-4e15-429e-901f-e12c5520d45e",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "4ad0fb0c-7f8c-4d46-9be7-b687a4308581",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "392ef488-81d0-40a5-9b53-e8982d90b6fb",
        "cursor": {
          "ref": "5c11f71f-b319-45ff-a86b-c68ce8c6338c",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "cc052500-884b-4ea3-8160-a53784319dd8"
        },
        "item": {
          "id": "392ef488-81d0-40a5-9b53-e8982d90b6fb",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "6cab8698-ee84-4986-816e-894722d84336",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "345fc6d6-7bd6-4211-9eee-9052c9332473",
        "cursor": {
          "ref": "ba2fcd87-4ea8-436e-a88d-ded5362b286f",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "ae36b0df-6e2f-49db-928a-1bad22f02934"
        },
        "item": {
          "id": "345fc6d6-7bd6-4211-9eee-9052c9332473",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "166b384e-cd7f-4bcb-b4d0-5ce87747e9ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15d96370-91c6-4726-8835-282faf6c9c45",
        "cursor": {
          "ref": "d971bcef-3d09-421a-afa0-be7121c3c133",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "32830773-a2ee-439d-83a6-80775f29428e"
        },
        "item": {
          "id": "15d96370-91c6-4726-8835-282faf6c9c45",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "3086e60d-ac65-43fc-9c89-6e57170c8db3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "060b8cab-6155-47bc-adc9-258ffa1bc330",
        "cursor": {
          "ref": "e037805d-9a88-44a5-aeef-d20cdc7f677f",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "6449c503-81dd-4792-876f-403bc11036c1"
        },
        "item": {
          "id": "060b8cab-6155-47bc-adc9-258ffa1bc330",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "d0ca8c8f-698d-4e49-b33c-2a90c4c45441",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0bb8cec9-ff56-40d5-9065-0d44d6d860de",
        "cursor": {
          "ref": "0a3c7737-0ee8-436a-99fa-bc6a35fe7d8b",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "420c5965-fed2-4fd3-a9dc-e5b1b27b2023"
        },
        "item": {
          "id": "0bb8cec9-ff56-40d5-9065-0d44d6d860de",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "ee449f38-c992-4927-b92b-3dc2428a5a00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 362
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63c0db8f-44bf-443c-8c28-a9ebb6b2e849",
        "cursor": {
          "ref": "ce907d57-b5d6-4e67-884f-ba3a0b59246a",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "b5bdfe7d-6817-41bb-910a-b2522d5edf6d"
        },
        "item": {
          "id": "63c0db8f-44bf-443c-8c28-a9ebb6b2e849",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "c1cb0a5f-af79-44ff-9f88-19cf11ce0463",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6af27586-1c02-4e2f-8438-c04d9b932373",
        "cursor": {
          "ref": "af918ae7-225d-40c8-9035-75f22386c79d",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "817cf65c-e294-4e5f-a185-81933145148c"
        },
        "item": {
          "id": "6af27586-1c02-4e2f-8438-c04d9b932373",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "a0d059d2-fed0-4533-8184-233be140b1f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e1e8070-0cda-45a1-9fa0-4b9b53b11fe7",
        "cursor": {
          "ref": "0da619c7-2880-47eb-a47d-441474b3c68a",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "fa539454-f1b1-472e-85cf-3e30cbb67b05"
        },
        "item": {
          "id": "6e1e8070-0cda-45a1-9fa0-4b9b53b11fe7",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "6bdb7e8c-115c-4e6f-9cb4-7561cc15baf7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9113d4a6-c624-433d-ba72-115a4db18836",
        "cursor": {
          "ref": "0ac7e844-7e21-4dbe-ba95-756bab542707",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "bcc85b94-1328-4763-814b-26fa12ebc97f"
        },
        "item": {
          "id": "9113d4a6-c624-433d-ba72-115a4db18836",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "0e0a034e-ab0d-4560-ae71-d407ad910ffc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 362
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbae0b8b-ffaf-48b3-a0c3-3d34ec3ab636",
        "cursor": {
          "ref": "00432b08-1261-474f-92e5-195d3e759ef9",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "bfcf0389-25b0-46e7-b828-9e5b6777512c"
        },
        "item": {
          "id": "dbae0b8b-ffaf-48b3-a0c3-3d34ec3ab636",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "87b9afe4-b1a9-4269-a777-58ccfc01a3be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "635f41b0-8af1-45e6-8ded-9a4967771480",
        "cursor": {
          "ref": "522c4ea8-d5b7-4f3e-afd3-25db7791064f",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "e195bd94-e348-443e-aa7f-b38edc8e9d1e"
        },
        "item": {
          "id": "635f41b0-8af1-45e6-8ded-9a4967771480",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "cf033db0-7d37-4d6a-8311-8cdd9d142e46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af3003f4-c691-4d4e-ba47-624d8311f870",
        "cursor": {
          "ref": "643ee538-494f-4c0e-b0ac-a69f78ca90ee",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "0e15a53c-c542-476c-a607-985fc1fe624e"
        },
        "item": {
          "id": "af3003f4-c691-4d4e-ba47-624d8311f870",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "6fd2168e-550f-4cb4-9f4a-7ab52cd47291",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "560ab2c9-8828-45e3-8f79-5ccb09b4df73",
        "cursor": {
          "ref": "7d8143e9-e0c4-4fc2-8f0d-f74de40bd035",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "d871410e-296c-4ca0-8f88-8881b2317b89"
        },
        "item": {
          "id": "560ab2c9-8828-45e3-8f79-5ccb09b4df73",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "c7510835-b93a-4d14-a79f-a0d437e6a97c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04ab0a69-59ab-4125-974c-ffcf74b2efc5",
        "cursor": {
          "ref": "344da6aa-f2c5-4ca2-bcb9-a986b9839d38",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "54c67b42-4273-4381-890c-57e6c3eb9a31"
        },
        "item": {
          "id": "04ab0a69-59ab-4125-974c-ffcf74b2efc5",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "11251c36-c403-4e0e-b46b-2ab9269dc51d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de001fac-639f-43bd-b346-2aa5e760691b",
        "cursor": {
          "ref": "5d3e1866-6461-457a-9696-b31bb0fccb0d",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "62ac546c-ba74-4c8f-80d1-2405e985d08b"
        },
        "item": {
          "id": "de001fac-639f-43bd-b346-2aa5e760691b",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "7efe61ab-8212-417b-84a9-cbc36301c51f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0213df5e-f82d-4cb2-8f8e-01ef5b8918e4",
        "cursor": {
          "ref": "17840fe9-9154-4a3b-9356-5ae20082e3bc",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "00dca47c-318a-4fd7-a885-296efae59917"
        },
        "item": {
          "id": "0213df5e-f82d-4cb2-8f8e-01ef5b8918e4",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "f475e086-c097-4c21-9939-d856dddacad6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c7f7f2e-cdc9-4ef8-98c2-4025bec29628",
        "cursor": {
          "ref": "1dd1dbd1-fcc8-4a82-b0c6-813a567a1b90",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "b2cf2502-9801-4490-85fa-2c87e079ac81"
        },
        "item": {
          "id": "3c7f7f2e-cdc9-4ef8-98c2-4025bec29628",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "71690bcd-3c90-4127-81a8-1f5a5b2c5b51",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c4e3a45-6245-4b81-a1d8-d82c038198af",
        "cursor": {
          "ref": "477391de-72b8-4c1c-92e2-e91823cadcf3",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "6382345c-0356-4619-8b20-bb97b0e82d64"
        },
        "item": {
          "id": "0c4e3a45-6245-4b81-a1d8-d82c038198af",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "5ae0e474-a713-4fa3-9234-530ac3a0fc2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03f4126f-0d18-484f-a3b4-1303b1a46dc4",
        "cursor": {
          "ref": "5f4531a7-989c-4927-85b2-9fc4bb698025",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "4f914565-1b01-40a9-bbba-5a62f098a0b9"
        },
        "item": {
          "id": "03f4126f-0d18-484f-a3b4-1303b1a46dc4",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "a51b0842-aaa2-44f1-9871-2b857b13af1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e91309a8-eb31-4375-8660-b8ec09559335",
        "cursor": {
          "ref": "cf9b7b21-f236-4897-9c9a-7f36f56dd026",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "1a1b94e6-ba37-4f12-a17c-6ff41fd1758f"
        },
        "item": {
          "id": "e91309a8-eb31-4375-8660-b8ec09559335",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "3e8e21a2-eaea-42f8-978f-5449ff117ec2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e92fba25-6780-485a-8526-d6865888cdab",
        "cursor": {
          "ref": "5aa1e39b-7444-464c-b037-72f704e3dfe4",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "d04d0178-bc61-449f-a067-1a6673437115"
        },
        "item": {
          "id": "e92fba25-6780-485a-8526-d6865888cdab",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "0beec7e0-731c-42cb-baf4-5c5ec03cedcb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e54466fe-8bef-4f91-997d-be65f858358a",
        "cursor": {
          "ref": "72e6b21d-5a99-4db8-8575-a5fb2f2a1555",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "1b8f1101-f602-4980-bfe2-1781bdc4c008"
        },
        "item": {
          "id": "e54466fe-8bef-4f91-997d-be65f858358a",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "064589ab-16c6-420b-a2cf-f120355cf557",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e11766e-cc3f-4e49-bbb2-77b7e47e0256",
        "cursor": {
          "ref": "a19717ef-c2ab-4aa1-9d03-7b210c0629bd",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "950376d9-a48c-4f6c-be9b-cb1fdc5d2e03"
        },
        "item": {
          "id": "7e11766e-cc3f-4e49-bbb2-77b7e47e0256",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "317e7030-b083-40e4-bf91-ea75a53e7d82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11eba2f9-8920-49b6-aa3c-f52b0347e9f9",
        "cursor": {
          "ref": "03d11fa9-53ea-4ea6-8164-0534d06f6cad",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "0be7eb85-3b94-4578-adcf-dd9b679e67dd"
        },
        "item": {
          "id": "11eba2f9-8920-49b6-aa3c-f52b0347e9f9",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "8098b2ef-8fb7-4fa4-9ba9-222749dfebe1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d71a2361-2195-4ffd-b941-2df6cadcb68a",
        "cursor": {
          "ref": "5d54228f-50a7-484d-a4b2-58ec8327a184",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "93426e8c-49cc-4079-9f4b-6e8bd7fc31b4"
        },
        "item": {
          "id": "d71a2361-2195-4ffd-b941-2df6cadcb68a",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "a30d5547-6b7d-4700-b68b-dc8b8069cabf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2a355ca-f213-4052-bf24-9cc2d46bc46b",
        "cursor": {
          "ref": "2dbf9d99-9525-4f7d-aa21-762741d2d60a",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "8a3e2515-10f2-4ff2-9d18-cdcb6fad2090"
        },
        "item": {
          "id": "e2a355ca-f213-4052-bf24-9cc2d46bc46b",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "f9ebbdaa-b53f-45c1-aaeb-ef5d0ccf3a52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ddd1bfa-7a59-47e1-9aa2-5ad460e1993c",
        "cursor": {
          "ref": "a755d29a-53f9-4848-a8f8-65c23396cbd4",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "98e247be-759a-43eb-a4d3-3ae73f7a13fa"
        },
        "item": {
          "id": "9ddd1bfa-7a59-47e1-9aa2-5ad460e1993c",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "005839e7-7bdf-4f3a-8a90-af56ae48ab9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2ac894b-07c3-4cdf-8e31-27aae4b38b17",
        "cursor": {
          "ref": "336f0f80-aace-456c-a86f-7750f8a62e5d",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "c70298c2-8666-44e4-a718-93321a6ec0bd"
        },
        "item": {
          "id": "d2ac894b-07c3-4cdf-8e31-27aae4b38b17",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "5187f8f8-d217-40c8-a734-9c5357ea0f03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2c8107b-f628-48fa-a755-e1e3186c4e8e",
        "cursor": {
          "ref": "a350ac07-a033-457f-850e-e0fcb89fa4cb",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "455d6c99-0f4f-4a83-9183-56273671837d"
        },
        "item": {
          "id": "e2c8107b-f628-48fa-a755-e1e3186c4e8e",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "7df73cb6-5bb6-45ce-8752-35eaa5008369",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "766887bd-450b-4360-8762-08183305fe35",
        "cursor": {
          "ref": "14e7331c-358c-4e87-bca0-2b39758eb8d5",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "e0cc2d0c-a85b-4cbf-946f-b97b0f4312d5"
        },
        "item": {
          "id": "766887bd-450b-4360-8762-08183305fe35",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "b35c7d27-815d-4279-9f8f-6178cd6c9a27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3fa1e277-8e3a-4bc5-af8f-8fd97f14db7f",
        "cursor": {
          "ref": "6f18e75b-56f3-44c1-a2ad-e194b1ab0f76",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "83fa96f4-d77e-4990-a984-cb617f7451fb"
        },
        "item": {
          "id": "3fa1e277-8e3a-4bc5-af8f-8fd97f14db7f",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "0cfa6f95-773f-4cfe-a02e-4ea9d352691c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d24b0369-ea7d-42a7-952d-6a2261847895",
        "cursor": {
          "ref": "6ddfc7df-ba9a-483a-8656-971b2632513f",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "5b177bf5-b98e-4bc1-a02e-067422ae6c43"
        },
        "item": {
          "id": "d24b0369-ea7d-42a7-952d-6a2261847895",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "474c8744-4db4-4498-af61-757c02a9fddf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "724bacfb-3a75-40b6-95a9-7048941c0b76",
        "cursor": {
          "ref": "a12556aa-944f-46b4-b552-875b0b5b9585",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "bd8d46bd-9764-4789-b7dc-21ccd8bdf7b3"
        },
        "item": {
          "id": "724bacfb-3a75-40b6-95a9-7048941c0b76",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "262dffa0-e406-4149-87ad-7722fcc40765",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51430be0-f82d-4561-a6c1-e0459fafa483",
        "cursor": {
          "ref": "c64d183d-5c34-46ab-bb1d-7ed14ab7bd10",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "916d868b-9c4a-4045-9818-c5d40953e769"
        },
        "item": {
          "id": "51430be0-f82d-4561-a6c1-e0459fafa483",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "62e775d1-efbe-4234-a4d4-2c36beee04f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7d38f0d-a4c6-4a88-ac00-34e4cfbb6060",
        "cursor": {
          "ref": "8eb4e207-1a64-433f-bb01-92750b291d16",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "f2cf1659-a48c-44eb-89c2-db44ef64b43c"
        },
        "item": {
          "id": "d7d38f0d-a4c6-4a88-ac00-34e4cfbb6060",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "c4af8b10-8089-40e3-8b09-cfef778079a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19f79652-79a8-4c2f-ad45-f1e13406c7ea",
        "cursor": {
          "ref": "37c2bf4c-5cfb-4032-bbd6-917e0ab4c687",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "301ec1fd-d634-45ba-a625-157b7ff34fa2"
        },
        "item": {
          "id": "19f79652-79a8-4c2f-ad45-f1e13406c7ea",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "f2a80d86-161e-46ab-acd5-d723bd2559c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a139ab56-ac13-4c0c-8693-03eefcb2d9b5",
        "cursor": {
          "ref": "edbed42d-5183-4300-b8c3-40b862a23d45",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "18202333-7cc0-4bbc-8729-76a07631db2c"
        },
        "item": {
          "id": "a139ab56-ac13-4c0c-8693-03eefcb2d9b5",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "1e0fb01c-cd28-4e3d-a797-a86f16dbe27a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fca6607-d4da-49aa-8812-1f4f5282ed67",
        "cursor": {
          "ref": "50cbdcc3-f24c-44ff-8885-592e95b0665e",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "f2f8fabe-1985-4e27-8f68-3057b77e4825"
        },
        "item": {
          "id": "4fca6607-d4da-49aa-8812-1f4f5282ed67",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "a62dc07f-b748-43bb-adc3-df89c9eace50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1093dac1-34cf-4cbd-a2e7-94d5bdcaeab0",
        "cursor": {
          "ref": "f64741d3-82a5-4a74-a992-c8c7feb4643f",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "4be71c4b-6375-4924-96f3-0e95fc5bd214"
        },
        "item": {
          "id": "1093dac1-34cf-4cbd-a2e7-94d5bdcaeab0",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "38e9aade-2b66-42ae-a18f-b01ec4dab1d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "195bd5ba-ca05-4d5f-8983-d86e96ee8983",
        "cursor": {
          "ref": "94409a90-3000-4074-bf36-ba14ac5ea26e",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "5261079a-c8ef-4593-8b87-76a8c2161f24"
        },
        "item": {
          "id": "195bd5ba-ca05-4d5f-8983-d86e96ee8983",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "5374b93d-7d9e-4f93-8cef-4a09227d171a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d35123a-bf35-45fc-87b5-a8849bfcb539",
        "cursor": {
          "ref": "6e62c5ba-e5cd-4117-ac9b-84a6e423eb11",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "ba8549da-362b-42a8-a18c-8c9b8db40b70"
        },
        "item": {
          "id": "2d35123a-bf35-45fc-87b5-a8849bfcb539",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "64ec89fc-7851-4798-8fca-0606e3c380ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc5c78d2-4b9e-48d2-8635-f14dc2e9d5af",
        "cursor": {
          "ref": "4a2b9b43-9489-4f86-a07d-deee2e76a708",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "7b512096-d19b-446a-909b-111b99685588"
        },
        "item": {
          "id": "bc5c78d2-4b9e-48d2-8635-f14dc2e9d5af",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "9feaa99c-3108-43f6-85f4-0b321992736f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "511755bc-0724-4438-bafd-4afe06904113",
        "cursor": {
          "ref": "bc3a096d-7db9-410c-8e3a-24570e69eed1",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "ea702447-995b-4d5d-a92a-35de896fbff5"
        },
        "item": {
          "id": "511755bc-0724-4438-bafd-4afe06904113",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "ef2cd9ac-ffd3-4416-a7bb-01035f01ae71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "feedf996-af79-4575-8da7-fc36db2c1ee8",
        "cursor": {
          "ref": "5c0d45cb-d559-498d-901d-0d0667ecf326",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "8a03e4e3-1a60-4ed7-9e65-6a5464c7b273"
        },
        "item": {
          "id": "feedf996-af79-4575-8da7-fc36db2c1ee8",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "ca3d68ac-ca74-4c40-818d-11578cd88d69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4578ac58-4cbf-4bee-8fce-0cde8b587cfa",
        "cursor": {
          "ref": "f6a95bca-e847-446d-9dd8-0b00f74cc91f",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "ed75cf14-3752-495f-8366-c8de2b93eeb3"
        },
        "item": {
          "id": "4578ac58-4cbf-4bee-8fce-0cde8b587cfa",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "c7b788f5-ec25-4dd2-889a-b279a6ebc843",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1c9a1ba-acc9-4530-b571-6fd321d1d64a",
        "cursor": {
          "ref": "98b744e2-03a6-4e8f-b04a-41493b24d2d5",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "c8095048-d2dd-4664-868a-60185bca4442"
        },
        "item": {
          "id": "e1c9a1ba-acc9-4530-b571-6fd321d1d64a",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "da9e5127-fe41-4c5e-a2c8-57c4d6079e2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 182
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79734cac-d8d9-41c5-aaad-70a6b35352b3",
        "cursor": {
          "ref": "a5d78cba-cfb7-4249-811c-169459cb2e62",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "9b81386c-7e97-4bdf-af52-4f628f141ce6"
        },
        "item": {
          "id": "79734cac-d8d9-41c5-aaad-70a6b35352b3",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "6d266d79-d598-467f-a632-4dcbeb496aff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3364a9de-4981-4bc6-a572-251056627eea",
        "cursor": {
          "ref": "3313448b-ae9e-4741-b7ee-2f325ac7d736",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "71853734-abf9-4880-b4f3-6d15dbba003a"
        },
        "item": {
          "id": "3364a9de-4981-4bc6-a572-251056627eea",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "fdc1cc33-ebd3-42ce-9ce0-196555361dc3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f417d011-56cc-411f-abba-ba1478521cd3",
        "cursor": {
          "ref": "8ee4cd0d-c097-4ce5-9476-6440cf04bc3f",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "02e8869e-73ce-427f-b26e-5c99600af467"
        },
        "item": {
          "id": "f417d011-56cc-411f-abba-ba1478521cd3",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "1fbbfb79-0072-47a6-8223-91eb4c1b3807",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "142289ea-44bc-44f7-818d-fe68f3d1c59d",
        "cursor": {
          "ref": "06d0dad3-4d77-478d-bc8c-db989ad68544",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "3798b815-3dc6-46c5-ab08-c7dbd463ce98"
        },
        "item": {
          "id": "142289ea-44bc-44f7-818d-fe68f3d1c59d",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "baf00408-1fea-4090-8023-597409371eea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38689667-a59c-4206-a78c-a2949fea4dc5",
        "cursor": {
          "ref": "66c57240-18ea-4ff0-ae32-f794aa0b8966",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "5046232a-2b38-47b7-ac11-20561e4a4635"
        },
        "item": {
          "id": "38689667-a59c-4206-a78c-a2949fea4dc5",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "1ad8c749-2880-476b-9c40-95c1abaed576",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b9ed925-c104-4b27-b600-a1e4a097e90e",
        "cursor": {
          "ref": "a03e7a05-7387-40ee-93cf-017816f2218e",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "a9b7d401-8539-4858-83fb-74ccbd18c026"
        },
        "item": {
          "id": "3b9ed925-c104-4b27-b600-a1e4a097e90e",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "f57d26c4-5286-42a1-a58f-d18d9b4c215b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d7a45ca-73c1-4124-b68b-5ea8788b78a0",
        "cursor": {
          "ref": "d6ec9ef5-c3ad-41bf-8d17-5b7b03e32869",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "4357854e-813f-4d67-8f4e-bbea86a2f4e1"
        },
        "item": {
          "id": "9d7a45ca-73c1-4124-b68b-5ea8788b78a0",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "a2437783-c008-4431-877f-041ad41a8ffb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae24c7b2-8a52-449a-96ee-c897d0a6036c",
        "cursor": {
          "ref": "af598925-fbc2-4cfd-8560-f022f55447d7",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "f761d3a9-5f54-49ff-b0d3-a79025f22064"
        },
        "item": {
          "id": "ae24c7b2-8a52-449a-96ee-c897d0a6036c",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "ae013684-f890-4f6a-93ad-7e4cc59eb057",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e69fe278-4489-4233-9472-b78fcb4b2b0d",
        "cursor": {
          "ref": "94bb42d9-b049-40ed-9646-0881672ae502",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "aa3e7409-ed3d-4dd2-baf6-58da968f0801"
        },
        "item": {
          "id": "e69fe278-4489-4233-9472-b78fcb4b2b0d",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "66d025d1-1e5e-4c49-88dc-0c3d7fcb7f67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44bb1b94-34ac-4f7c-b860-7082542a0f07",
        "cursor": {
          "ref": "a402a6bd-3445-4247-9a00-b73e722ad07a",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "08990695-5dbf-4f20-8f54-965678673fdf"
        },
        "item": {
          "id": "44bb1b94-34ac-4f7c-b860-7082542a0f07",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "a84489b4-e04c-4a47-be39-2d58eff9b07e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a15f3a5d-71f5-498f-b848-673a932006ac",
        "cursor": {
          "ref": "f2d5be30-7975-45d7-b549-c465e2f38692",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "ea711be2-5457-47ec-bbdb-da990cd96e0b"
        },
        "item": {
          "id": "a15f3a5d-71f5-498f-b848-673a932006ac",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "ba1ce397-361a-4207-9f40-ab7cfe30c002",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc9436ef-e928-4013-9358-63f82337c897",
        "cursor": {
          "ref": "0b67b174-50f4-4f89-ba07-ad7835244d0f",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "dd889bec-e294-4770-a83c-cb00b9665002"
        },
        "item": {
          "id": "bc9436ef-e928-4013-9358-63f82337c897",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "4b13597a-0a04-486e-a1c9-9c427d6b1ec2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0c98dd1-5afe-41b3-8ccc-4cb2c18595e7",
        "cursor": {
          "ref": "962322f9-1694-497c-97f5-67464190819e",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "1501990e-0335-4b88-b86d-57e3b28bd207"
        },
        "item": {
          "id": "b0c98dd1-5afe-41b3-8ccc-4cb2c18595e7",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "4d3de9d2-39bd-4a2a-b897-d5e267a3b267",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f004138d-1c35-4152-8bed-2a8496bfee1f",
        "cursor": {
          "ref": "f5d0ea38-606d-4c83-b79e-374b166543d5",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "ccbc7afd-4c56-4b18-80b1-9be83b955fe8"
        },
        "item": {
          "id": "f004138d-1c35-4152-8bed-2a8496bfee1f",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "abd48882-8e30-437c-829b-b96bd65887d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae7c9b3c-d1ae-4efe-9d64-a3d7604806de",
        "cursor": {
          "ref": "b1f9de5f-c218-42a0-a612-c14fcf3cc269",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "af406f80-b72d-43b6-9cd9-37601f34ea8a"
        },
        "item": {
          "id": "ae7c9b3c-d1ae-4efe-9d64-a3d7604806de",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "f93d5b92-8313-416c-a201-884af16ed210",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae560da2-144f-4ae1-bfa4-8b320da41b2d",
        "cursor": {
          "ref": "ad3de3c5-5ef1-4cfc-9a4e-f645b75aa7fc",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "10cd540f-f44c-4af2-8dc4-f3fe01fec3d2"
        },
        "item": {
          "id": "ae560da2-144f-4ae1-bfa4-8b320da41b2d",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "7c864e70-f5df-4a02-916f-fc6584a02926",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14b653f1-0032-4bc3-be90-17cf4374467d",
        "cursor": {
          "ref": "5c55ba7b-80eb-456f-abc3-08223310419b",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "0ed10cc4-7338-4d38-aec3-f14454922508"
        },
        "item": {
          "id": "14b653f1-0032-4bc3-be90-17cf4374467d",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "f28a7250-616b-43f5-992d-d6b6b866cb55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74ab1e14-041c-42b0-b6b8-c3e3d04e9716",
        "cursor": {
          "ref": "0529b325-5f74-4683-9f2a-9381f5747c20",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "fefb5c8b-8e52-4634-8835-fd6a0ea75bac"
        },
        "item": {
          "id": "74ab1e14-041c-42b0-b6b8-c3e3d04e9716",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "7cea91e4-0499-4882-b175-5a26db03e702",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46f4c733-de3a-4f07-9c4c-f0182c69b130",
        "cursor": {
          "ref": "459cee38-a9f6-48d2-8636-9f999f298020",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "b42d9ba8-0b05-4565-8349-691f860258f5"
        },
        "item": {
          "id": "46f4c733-de3a-4f07-9c4c-f0182c69b130",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "f45e4d93-e5dd-4253-9a39-c7d8f8c9da86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab84b5a2-03fd-4b98-b30f-bd81fc301717",
        "cursor": {
          "ref": "6a250b50-6256-4a5b-b13a-35695c3c7123",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "a99adf2f-d7f2-4b8a-9e51-0b0cd0aa9611"
        },
        "item": {
          "id": "ab84b5a2-03fd-4b98-b30f-bd81fc301717",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "e621c6da-9595-48b1-b3dc-f6ba7e3040fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b31aad09-fd8d-4fb6-a03c-dd5cb35c158c",
        "cursor": {
          "ref": "4bd8f1c0-b389-4620-86aa-4f3219c3366b",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "26d36bbb-3442-4429-8a9f-8485664500a9"
        },
        "item": {
          "id": "b31aad09-fd8d-4fb6-a03c-dd5cb35c158c",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "cd8180e8-eab4-4b6e-b388-bb1df6e10042",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "309a6e2b-45da-4391-95c4-b5e8bc0f9688",
        "cursor": {
          "ref": "1df728f4-2e4f-4b88-b7de-57fdb3406660",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "b49adc1c-3465-45b5-8268-399215f895dd"
        },
        "item": {
          "id": "309a6e2b-45da-4391-95c4-b5e8bc0f9688",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "a0546939-98fb-480a-ba0b-d896bd9aa678",
          "status": "OK",
          "code": 200,
          "responseTime": 8,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:230)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:230)"
            }
          }
        ]
      },
      {
        "id": "44f27181-b0ea-407f-b19d-a0c0561682f8",
        "cursor": {
          "ref": "e8e08f71-7236-4ff5-829c-6ba07d53c8e4",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "cc9edabf-4215-4282-a96d-bf33642ac9e7"
        },
        "item": {
          "id": "44f27181-b0ea-407f-b19d-a0c0561682f8",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "4e4febd1-fb19-498f-ac4c-a37380ad379a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9047ba9-93ca-4d4c-997d-6797fc396a97",
        "cursor": {
          "ref": "ebba2d80-71ff-4f99-afab-f047edab008e",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "127a2922-f46f-4328-b705-7cff476d992c"
        },
        "item": {
          "id": "e9047ba9-93ca-4d4c-997d-6797fc396a97",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "4edb6d90-3364-4bf1-add6-59572e449938",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb55e4fe-bb3f-46c0-ad4e-d85081fe5f63",
        "cursor": {
          "ref": "882ca1d1-8fe8-497f-b22d-4aa1aa922757",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "49e24bef-e5e4-4f96-a90c-6a85a92e5ed1"
        },
        "item": {
          "id": "fb55e4fe-bb3f-46c0-ad4e-d85081fe5f63",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "7fa6ed89-fcfc-4386-9ff3-69b8ae17aa93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b27134c5-0adc-4400-9f71-6a2fe5a64ac7",
        "cursor": {
          "ref": "8334e23b-9ffb-4633-8d66-dbc888f93ce5",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "34a57697-7c74-4b5f-89ac-b83f78a0d432"
        },
        "item": {
          "id": "b27134c5-0adc-4400-9f71-6a2fe5a64ac7",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "68e9ad3e-c263-49d9-84eb-de53a2db6cfe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c9ef1a7-5b63-4296-b405-18e561233c9c",
        "cursor": {
          "ref": "940db705-3819-41cb-afaf-8302fad4c52f",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "1e3dd4ae-191e-48b1-b437-1cf2caebd660"
        },
        "item": {
          "id": "9c9ef1a7-5b63-4296-b405-18e561233c9c",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "96425c47-db49-4c28-a959-0532c8f62df6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd274015-a42e-48fa-9a95-3c454f0c154f",
        "cursor": {
          "ref": "5f1c5bdd-d0c7-4800-a359-2c8385984060",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "f37df439-e86c-45d1-92a1-4680226a1ef6"
        },
        "item": {
          "id": "dd274015-a42e-48fa-9a95-3c454f0c154f",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "a83feb0d-badd-409f-91be-f836d2453dcb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1223bb77-a334-4053-b9a6-49d9f3ca3416",
        "cursor": {
          "ref": "bd3a6916-5d54-44f8-a1c1-7f339610225d",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "4d17355f-d122-4d73-9cdd-5e5dbb904780"
        },
        "item": {
          "id": "1223bb77-a334-4053-b9a6-49d9f3ca3416",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "4907a908-90f1-46b9-b949-25aa201bdca7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96479657-8021-4ab2-ad39-ebb91105cbe0",
        "cursor": {
          "ref": "67788c5d-8c48-4a6c-aabc-5bbc69b01fa9",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "af9b3efd-874f-4086-92d0-bf046326678c"
        },
        "item": {
          "id": "96479657-8021-4ab2-ad39-ebb91105cbe0",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "a5a18332-aa9f-4ba6-9ea6-205588b51f81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "729a0069-84a9-46ec-8695-02a2526602ac",
        "cursor": {
          "ref": "bc22b606-1e7d-42dd-a00b-84936d4f2f09",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "e4996aaa-f568-434d-af56-9f8d949a4132"
        },
        "item": {
          "id": "729a0069-84a9-46ec-8695-02a2526602ac",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "98e54ec5-39a3-4c14-90b3-a1816a081438",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4eaac71-4360-491d-91e6-ef2eaca0dd7e",
        "cursor": {
          "ref": "5dae6ba7-e076-4148-a647-81f87ced16eb",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "c9871493-f587-41f1-bd92-535a36c8ea9b"
        },
        "item": {
          "id": "b4eaac71-4360-491d-91e6-ef2eaca0dd7e",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "1390d10a-4603-450e-ae9a-0d59169e0f24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "974fff20-b0b3-4dae-a452-a683d3a201aa",
        "cursor": {
          "ref": "7bf2aba2-3f11-47fc-ac3d-6f744a8b5dca",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "3a2c45d8-9e14-4695-a721-00dd86304cd4"
        },
        "item": {
          "id": "974fff20-b0b3-4dae-a452-a683d3a201aa",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "6b3af741-9b7a-4ff2-826b-e766bf5b6002",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e7ea8ca-3f23-49f3-a393-4d69841dec25",
        "cursor": {
          "ref": "c9bd8fa4-971c-4ee5-8eab-bc26e3d4a49a",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "595733eb-d88d-4490-9e9e-b5993ad5974c"
        },
        "item": {
          "id": "5e7ea8ca-3f23-49f3-a393-4d69841dec25",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "8c34a611-d4c8-4ab4-ac57-e619e6f6975f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0326c5df-6147-4504-a5c0-a24cd66bbe48",
        "cursor": {
          "ref": "719e4f7a-aab8-4aa9-98d5-f081a66e0a63",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "fc95a7b7-2f6e-491d-8bc1-b69ed594cc0b"
        },
        "item": {
          "id": "0326c5df-6147-4504-a5c0-a24cd66bbe48",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "bd16c63a-0341-4eb4-8f12-14baaf95c659",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52e23ccd-a43f-4c67-808c-1f2160ff0fa8",
        "cursor": {
          "ref": "1084e571-f444-4072-84fb-932c2ab7a699",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "8b82df0a-99a1-44bb-b5c1-4060feb93c30"
        },
        "item": {
          "id": "52e23ccd-a43f-4c67-808c-1f2160ff0fa8",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "1c9f0e9a-8b61-4ede-aaa6-fd266a31c15c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be235396-79b9-48fa-9249-077daa52ed4f",
        "cursor": {
          "ref": "8c8fb1d4-ddd2-4707-96de-5e227f2e87e9",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "f039df8f-e9ea-4fe0-997e-a49b42626803"
        },
        "item": {
          "id": "be235396-79b9-48fa-9249-077daa52ed4f",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "8d66abab-9138-4de1-b2aa-2395a4c7a50e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cc32524-5ba1-4bc5-817a-09cb70ed32b4",
        "cursor": {
          "ref": "9fa103b5-b6e5-4fd5-9fb9-e9515e2c8b96",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "4054faf8-fab6-44cf-bf22-f2ec6e5fcee0"
        },
        "item": {
          "id": "6cc32524-5ba1-4bc5-817a-09cb70ed32b4",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "4781e9cb-45f7-4562-9bc3-2dec852594ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b01849cd-618e-4611-845f-415daeb3ad28",
        "cursor": {
          "ref": "76c313a7-d702-4e30-bf09-091dd5974f70",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "ea2f6e51-af86-434c-ac7d-2739e1341e03"
        },
        "item": {
          "id": "b01849cd-618e-4611-845f-415daeb3ad28",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "1e7fe3ac-29ed-4c64-ac92-36a6140e1873",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88bfc7ba-1a29-492c-a708-10263ad747db",
        "cursor": {
          "ref": "e0893c92-39a0-4e76-8873-c16993a88d8e",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "3d029091-439b-494c-838c-9149602b7b97"
        },
        "item": {
          "id": "88bfc7ba-1a29-492c-a708-10263ad747db",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "a12ef182-726d-4b9b-96aa-76bed9ba6b3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8ebcb96-cb17-43b2-ab1b-170090888683",
        "cursor": {
          "ref": "9b1de558-7777-44bd-8fb3-c06cbdf3b7a6",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "e24339ab-9745-4700-8b8b-5f0d75c67c47"
        },
        "item": {
          "id": "d8ebcb96-cb17-43b2-ab1b-170090888683",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "3367eb16-80d6-4fc9-994e-e119c9f695e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "775bbc60-620c-4c8d-9846-ba5346466534",
        "cursor": {
          "ref": "762b3d90-3ddd-4b7c-9731-20fcb0fc3cac",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "dbd7392f-0212-48b0-97e9-60e26e2516a4"
        },
        "item": {
          "id": "775bbc60-620c-4c8d-9846-ba5346466534",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "51e20aab-95f5-4c07-bec2-0e4e7f1d479b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35d387dd-2bfb-40db-9afe-7cb406a1b123",
        "cursor": {
          "ref": "1979c20d-3e4e-4449-8192-cd5059dfbdda",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "f2d9a4fa-f6c1-4840-bf66-3af79a4b8b0b"
        },
        "item": {
          "id": "35d387dd-2bfb-40db-9afe-7cb406a1b123",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "7f5a6b49-cc0a-4abd-8250-4e64c2b27dd5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "441c6914-35ab-434e-b988-e9a990f0c5ad",
        "cursor": {
          "ref": "6e310151-818a-4822-87c5-e921fa3c94f0",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "e6417089-9a61-42fe-8939-a11e5fe1e84a"
        },
        "item": {
          "id": "441c6914-35ab-434e-b988-e9a990f0c5ad",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "282c3e0f-eb52-40c7-b4ea-a078b10ce6b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1df8bcec-1154-47d6-87c0-e67a917d4543",
        "cursor": {
          "ref": "1082e6c9-e658-4cd6-9a08-da14bf1afb62",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "38248819-b8a8-4a54-a109-5e321cf58cf0"
        },
        "item": {
          "id": "1df8bcec-1154-47d6-87c0-e67a917d4543",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "02ed6f9b-79d9-4e17-8d10-9e78dac3136d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee6437ae-167e-4a45-8b63-17759d1052fe",
        "cursor": {
          "ref": "5625aade-7cfa-42ac-98d3-9bb5c8f5aa04",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "3976178c-3be0-4cc0-92bc-9fd557fafdb4"
        },
        "item": {
          "id": "ee6437ae-167e-4a45-8b63-17759d1052fe",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "dffe5f7c-b5aa-42ae-8178-4774242ca9d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "765b3eed-eeda-447a-9027-3ee68047c3fe",
        "cursor": {
          "ref": "b19e952b-2cec-435c-9d88-fc86b90d39fe",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "0faace13-6db9-4f04-a9f4-d37a10466e57"
        },
        "item": {
          "id": "765b3eed-eeda-447a-9027-3ee68047c3fe",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "c0bc75b5-fe76-43aa-a0ab-90cb451ca4c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4aa6a5e-79f5-4a58-8538-d52b18f3d7a2",
        "cursor": {
          "ref": "7a285949-8137-4dd0-afdb-629c8bc9b070",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "abd18dcf-27f5-4bbb-a060-493b821d405a"
        },
        "item": {
          "id": "c4aa6a5e-79f5-4a58-8538-d52b18f3d7a2",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "0e3f6f40-d069-4a77-8a55-1438d95f26e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1c3f972-2dff-4bee-9ee5-e90f84b5f6be",
        "cursor": {
          "ref": "61a5f158-d5b9-4a9c-9b5d-2244b2389c18",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "6f2018d8-2f25-47c1-8d0c-4db7513a3d05"
        },
        "item": {
          "id": "e1c3f972-2dff-4bee-9ee5-e90f84b5f6be",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "e69f9239-c21f-40c1-bbb2-6819fedb762e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f67bd73-c262-42ee-8532-ec51464f3c7f",
        "cursor": {
          "ref": "a86c3d9d-fe09-48a3-8d3b-775a6fcb607b",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "e3df584c-80a5-4b08-bd42-99cca931c7c1"
        },
        "item": {
          "id": "5f67bd73-c262-42ee-8532-ec51464f3c7f",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "cadb9855-fa8e-48f2-ae70-ca39846b78e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0933b21-4739-4c36-a97f-b738937553d5",
        "cursor": {
          "ref": "ef718601-52d7-4085-82e7-6c70e4100599",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "0ae5458d-aad7-46fe-abfe-0ac925329d8f"
        },
        "item": {
          "id": "f0933b21-4739-4c36-a97f-b738937553d5",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "150588a4-8c6b-4cf2-95ca-c3bb7b3a9a6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b724dcc2-cc0f-489b-857c-06174968a2d6",
        "cursor": {
          "ref": "84509b3a-705e-432f-97fe-4472f30ea051",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "60aed95c-64b5-4ff1-a697-b009e40a5979"
        },
        "item": {
          "id": "b724dcc2-cc0f-489b-857c-06174968a2d6",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "150593ae-b0e8-4cf3-a95e-a19ddee4aed7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e09d232c-9ba8-42ad-9e15-8d86231591e7",
        "cursor": {
          "ref": "7323bb94-13a8-414b-84a8-4e152318091a",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "2b311d3a-367c-4ff2-9464-e855e1b40352"
        },
        "item": {
          "id": "e09d232c-9ba8-42ad-9e15-8d86231591e7",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "9e1b2454-10c1-46c0-8b54-beed22572a32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abb7b91b-c3e7-4f63-9cfb-c01cfd598b7c",
        "cursor": {
          "ref": "3f3be737-660e-4b1d-b07d-62f107db74a7",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "c6e03276-9abf-462e-9358-62ac7157e626"
        },
        "item": {
          "id": "abb7b91b-c3e7-4f63-9cfb-c01cfd598b7c",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "00908d6b-9be8-4bda-be7a-3ec807473ee9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73e176e1-7d4d-475d-a38c-c86e5331e5a6",
        "cursor": {
          "ref": "8a33ae41-1a7e-42cf-ac5a-34f5122e7d90",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "f8b8b957-f503-4fa3-b25c-8f9a8fecab8f"
        },
        "item": {
          "id": "73e176e1-7d4d-475d-a38c-c86e5331e5a6",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "5c5cbe02-14c5-481a-9cf9-5bc6baaf7f22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de2c867a-09e5-406e-91ea-85abab79b6e2",
        "cursor": {
          "ref": "44fb4d83-170c-48dd-b53f-6aec62a2fc1a",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "ec4eb2c8-84de-43fd-9714-0de559c4c83e"
        },
        "item": {
          "id": "de2c867a-09e5-406e-91ea-85abab79b6e2",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "97feda35-ee7a-402f-b1e5-c7b85d78fdd1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae676f42-9231-4478-8598-9fa425944ae9",
        "cursor": {
          "ref": "57ac8f0f-481c-45ba-9e8d-4ddf66acf718",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "798185e0-d9c7-415e-b8c4-ec468833acac"
        },
        "item": {
          "id": "ae676f42-9231-4478-8598-9fa425944ae9",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "34d3cb63-f334-4808-a60a-6837090c135c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df6d23ef-dbb4-4e07-834d-a7a54aa023d6",
        "cursor": {
          "ref": "0ece2c44-2c27-4eca-8845-a90ced984993",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "42a56915-6bc5-40d9-b8fd-0e7580728f2e"
        },
        "item": {
          "id": "df6d23ef-dbb4-4e07-834d-a7a54aa023d6",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "59198092-ee91-47af-ab5e-ef08a9d6433f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c1a3d62-357f-443c-bb35-63d460a6d4fb",
        "cursor": {
          "ref": "8b0334e1-7174-4009-8a1b-0c280dcc91db",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "dacda659-00a8-4773-8e88-f06550f37108"
        },
        "item": {
          "id": "7c1a3d62-357f-443c-bb35-63d460a6d4fb",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "445870c9-152e-4a58-9b35-220a19334a50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc365717-7d16-4024-a555-9095b816690b",
        "cursor": {
          "ref": "09821759-a2bc-4fce-95cb-94146b81ecb4",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "bb334fa9-dc04-4452-a5db-c97406107f2d"
        },
        "item": {
          "id": "dc365717-7d16-4024-a555-9095b816690b",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "85504a28-326e-4d2a-b0bf-ccfedbdad661",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acec76ee-e87a-4058-9cd9-56e86d81aef2",
        "cursor": {
          "ref": "47b7304e-ae03-4f15-a857-5ee71ce82a64",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "5be60fc0-27e0-41e0-b371-a09ffd0b709c"
        },
        "item": {
          "id": "acec76ee-e87a-4058-9cd9-56e86d81aef2",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "d51bd93d-34ae-4934-8b99-c187f0f4d72f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb173367-ab13-4664-8e55-8d0384e1bb93",
        "cursor": {
          "ref": "0af34e2c-39a9-4d5f-bf1d-9202b95fdb75",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "1d63e790-32cc-4e25-bf1a-dec0e8753806"
        },
        "item": {
          "id": "fb173367-ab13-4664-8e55-8d0384e1bb93",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "53f79db5-b2a0-41d1-9005-42c659a9796a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "783bc7d8-2cd8-4b52-9fe3-6e9b1ea62e0f",
        "cursor": {
          "ref": "07b51873-338f-4382-ad78-255113da50eb",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "6cbe2690-99c6-4a32-a7e9-a8bb946d9a8b"
        },
        "item": {
          "id": "783bc7d8-2cd8-4b52-9fe3-6e9b1ea62e0f",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "fe2849cc-a639-4d12-a1f9-33b04ce2cabf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63de3977-1e1f-44c5-b160-f6005d4bd280",
        "cursor": {
          "ref": "01b635b0-dc5f-4e85-b617-4b841ef5ee85",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "0fcbeedc-ccba-462c-9232-dc5855b9f6d6"
        },
        "item": {
          "id": "63de3977-1e1f-44c5-b160-f6005d4bd280",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "1d403ba3-1dd3-4ef7-83a7-3fe6d696cf03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ada51498-6de3-40d0-a978-caa73b56b8b8",
        "cursor": {
          "ref": "a222dc36-3ab2-4c0e-b17e-259672905b8d",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "9f540ebc-ed6c-49aa-9e09-c64070b7d638"
        },
        "item": {
          "id": "ada51498-6de3-40d0-a978-caa73b56b8b8",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "f99b4f6d-13b7-4fdc-8266-b81490160d65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b5c0b10-ca80-4b59-8d15-77ad0ca2b7f5",
        "cursor": {
          "ref": "179ce6e4-d808-451e-822f-8e6949c3ae50",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "df7c732a-dda4-4cde-ac17-18cb8f7efb2f"
        },
        "item": {
          "id": "3b5c0b10-ca80-4b59-8d15-77ad0ca2b7f5",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "edaa5a50-5295-4ebb-807a-9243a398f32b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83e8a4aa-30bc-4279-b119-42d302480be3",
        "cursor": {
          "ref": "6509ed77-d3f3-4c11-8e77-75c4cb6baf35",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "de8c0206-faec-4b74-8302-3e3340afb16d"
        },
        "item": {
          "id": "83e8a4aa-30bc-4279-b119-42d302480be3",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "3fe6e353-f096-4a1f-8bd2-5ace8a1f57c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9f24bae-6e14-43a2-ab47-76afc26bbf01",
        "cursor": {
          "ref": "05da05fa-fafe-464f-92b7-5b367a031b64",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "fb890dca-b08c-4d8b-9e00-7be91af9a754"
        },
        "item": {
          "id": "a9f24bae-6e14-43a2-ab47-76afc26bbf01",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "8b3f847b-6ad1-4b43-acb0-a07c650af320",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce131602-9e15-41e0-a054-cd90179a96c1",
        "cursor": {
          "ref": "cdf9bc80-f674-4bb2-b124-1ca45c5952a9",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "62691b8b-8802-494b-9a8c-960fb782b0f5"
        },
        "item": {
          "id": "ce131602-9e15-41e0-a054-cd90179a96c1",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "0d7237c6-1267-464c-81d5-5dfe0a5bdd9e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ea10c77-b8f9-470b-96d8-29755ac2f2e0",
        "cursor": {
          "ref": "0f4fb7cc-15ca-471c-986d-5f362312fa1e",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "997e7ddb-5eed-4092-b7e2-911115493ba2"
        },
        "item": {
          "id": "2ea10c77-b8f9-470b-96d8-29755ac2f2e0",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "9f7af5c8-ab31-4595-aa5c-4e49ab936101",
          "status": "OK",
          "code": 200,
          "responseTime": 6,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8d620c4-46a3-425d-95bf-83f7103f4269",
        "cursor": {
          "ref": "57f0c99e-efe0-430f-aed7-1c39d4dde8b0",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "e6646e40-0773-4e5e-a3e4-f5d82e75dd3b"
        },
        "item": {
          "id": "c8d620c4-46a3-425d-95bf-83f7103f4269",
          "name": "credentials_verify"
        },
        "response": {
          "id": "aa30e201-176b-4bdd-b3f5-796db4f86a81",
          "status": "OK",
          "code": 200,
          "responseTime": 18,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "b50e0835-9623-4b42-94bf-cd88e22d773b",
        "cursor": {
          "ref": "256a636c-6566-4edf-8827-0b552c56ef8d",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "a9e5b51b-ca36-453b-aac7-e281835c892e"
        },
        "item": {
          "id": "b50e0835-9623-4b42-94bf-cd88e22d773b",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "8c93eb36-cfb2-4ca3-9bc0-2971331123b8",
          "status": "OK",
          "code": 200,
          "responseTime": 17,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "047db267-a83d-46a3-8695-19194dce38d9",
        "cursor": {
          "ref": "4c7da945-dca4-425d-9b53-583f8310e0e9",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "a79ac959-9bb9-43f2-8646-9b3ce4da2fc4"
        },
        "item": {
          "id": "047db267-a83d-46a3-8695-19194dce38d9",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "eab728d1-d37a-4c32-a150-72d0e6201e83",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "047db267-a83d-46a3-8695-19194dce38d9",
        "cursor": {
          "ref": "4c7da945-dca4-425d-9b53-583f8310e0e9",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "a79ac959-9bb9-43f2-8646-9b3ce4da2fc4"
        },
        "item": {
          "id": "047db267-a83d-46a3-8695-19194dce38d9",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "eab728d1-d37a-4c32-a150-72d0e6201e83",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ee24808-0d43-4717-b95b-85a4b54ad6a9",
        "cursor": {
          "ref": "d96285a8-acbd-499a-b48b-1cd98ada852f",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "4c74fb8b-6aee-4677-80f2-f6758b5a5e7a"
        },
        "item": {
          "id": "9ee24808-0d43-4717-b95b-85a4b54ad6a9",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "26e6131c-3edf-4172-815e-a23050a48f6e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e2ec6ef-b6a6-4c8d-a311-c4e38d9e0fa2",
        "cursor": {
          "ref": "5e249b6f-abb4-49ce-843b-ecb33c400a7e",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "d6cde092-2dbc-4ac8-a668-38e5965d15f4"
        },
        "item": {
          "id": "4e2ec6ef-b6a6-4c8d-a311-c4e38d9e0fa2",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "6bdfb163-e299-4243-a318-8700ebfafc61",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}