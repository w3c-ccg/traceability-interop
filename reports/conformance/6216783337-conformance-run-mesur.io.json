{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "ab82e8be-1b73-4836-979f-3360d1c7deb2",
        "name": "Clear Cache",
        "item": [
          {
            "id": "ff8f5627-eb74-4783-8573-cf50e25209f6",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "9af67812-cc87-4bf3-a4b3-db1505dc5bd8",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "d89b3a27-b31f-4ce8-8aee-946996a729b2"
                }
              }
            ]
          },
          {
            "id": "541a2c38-70b9-4d50-bf9e-52667d6a25f9",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "1a24b6da-e109-4a20-95c1-9bd8b61d1f08",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "12cff700-0c8d-4642-84d6-bc8169527a62"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "6e895861-6da4-4734-8b7c-1a54373e87bb",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "3ab22ff7-9f22-41c8-a3ac-b98453fa6045",
            "name": "Positive Testing",
            "item": [
              {
                "id": "4f0b55ac-8de3-4f26-9126-e253e1a230f5",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1b083cf5-bdfd-4b48-b674-39b20b685cf3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a4168f39-09b4-49f1-b649-ee76b25db866"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "2746cdd0-d13f-4cd8-8bcd-e14d5ba31f09",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "ecd9697f-8bdb-466b-ad53-d521e36f4f25"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "7876b7dc-950d-47b2-8a95-65cf1b51248d",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "19fa8612-f5bc-46bf-b96e-9c02e55e5ead"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "07c51e39-a16d-4ab3-a3ad-9812960e8d90",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "ad209f50-0106-47b7-a495-d350ebe76310"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "92c29fd9-27b8-423a-a118-df804d70905f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "fb7e0017-488e-462b-a4ea-949707d91db7"
            }
          }
        ]
      },
      {
        "id": "df1da379-0e88-4a87-886b-2909941f7eda",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "50d6a7dd-8c6f-4ffe-9225-ddbb6846989e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "0dd3ed33-2d8d-4c74-afec-955d20312ced",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "9a3c03ab-b6c8-416f-b8fb-5ff2ea2ffc3c",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c3f2498-688d-446b-8a1a-badbf33a85fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "618b4a76-4a43-4a59-8fa7-32a7111d6428"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ceb3800d-57c0-4790-a302-bae4d142ee7a",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ead60d3-70e6-4710-b591-e6af5a5263db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "fc809cec-68de-475c-b46e-6a96da6f9641"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd8f8662-b341-40c1-bf1b-2c452ea02bf7",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08bc4923-164b-439a-a3c4-8fbf58afa84b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a7f3f275-5470-4883-b48f-9caaac8daa7d"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "36301103-8be4-4269-93d7-36db860f26f9",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "59f148bc-7f2c-4722-814c-8fd78e063d17",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6f39999-7bd5-48ea-b6b7-6364fa8aeb3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5365431e-54e7-4c03-8a2f-235d6160b4fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f52948cb-773a-4876-b183-ff0e4917f5b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c57b7c0-8185-4b1a-8e5a-3f22b8669e0d"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "e1795e5d-27fe-41d2-80aa-ea77b63a5086",
            "name": "Positive Testing",
            "item": [
              {
                "id": "c704cf78-c584-4599-b94f-bc0ac54aa848",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "bed49421-c4dc-4339-ac31-6ad5b3770be9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "379c0923-6d81-4f79-b501-e39b6aadd60f"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7054a3ab-622c-418c-a1bf-0912917d0fe2",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "68d039cf-278e-409a-86f2-2e81a2e53507"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "24d1a2c3-4392-4986-abc4-f3277511e337",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "bf0f656f-6d04-45c9-b714-8d208c751dde"
            }
          }
        ]
      },
      {
        "id": "59b8cd22-4fb7-485b-94f7-6044d5ad323c",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "893818e2-6595-4788-bc75-ac6ef8eeaf94",
            "name": "Negative Testing",
            "item": [
              {
                "id": "27bca883-8255-4932-8817-2b41733c451e",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "410760b0-7ee6-4e39-a8b8-4e524a0f0917",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "116927ad-9c47-4791-bc11-851e287ce1b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "97731a09-8147-4db6-b1da-f4492e716a80"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f53d5814-f134-4af6-9c01-713f559001da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c6ddd6fa-cd00-4cd3-bf00-3d00e2d5bf63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d71ec029-0bbf-4cca-81d0-4693c5d148c0",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "144c05cd-266e-4856-9d92-b645effa12ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "958897f9-7e9e-4086-a1b6-7bf1f1f47fdf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75241b47-97e8-412b-9d61-8270ba76daae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9d09d712-1a27-435d-b22c-621939bae102"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ce0ca5b-dc31-45ab-9847-55fd703555c2",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdcee1d3-b979-41f4-8941-b1ec5c72d064",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a3ff8ff-f9b9-4247-b987-40c446508b58"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd990b4d-3a5e-4ecf-af3f-c8db49df519d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4f335774-e9e7-4505-a188-6001fd83278c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3012d3b-feb2-431f-915f-a94e5c3aa2bc",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88fd78a5-4420-4dfa-8595-ffc542188ba2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb76041f-6ca1-495b-b28d-943fd6462fcf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d82444a9-14f3-4151-ad2e-cb7878562e11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "87f7cbd9-073a-41d9-b81f-6cdf6b7fac0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3782d39d-3ec0-4fe0-9adb-602935d80b12",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "617e9065-eed5-4c73-af9d-f8c3f10e2a36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b033274-db13-4c0c-b251-570e9b6c5b75"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d983fb6e-d3f0-4c82-9cc7-47e76f88f1f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "785c4580-b5c5-4af4-8b12-a9d186cedaa4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1bda9985-07fb-4553-807c-a28b4f78bb35",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2af34c6a-ff5c-4cca-91c3-3a005ebc576b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5bf6d96d-5c05-4693-99e6-b81e16190279"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4a3aff4-67f2-4541-858c-dbae60d8354e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "947bff13-b932-427b-83a7-4a72e85d6544"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01af5a4f-b52f-4a93-86dc-2dc8785ee536",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74031e45-23dd-4134-a275-431c8104e5f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "248c70b3-2817-4cbc-91c9-aab18171ce2d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ad04f74-14d6-4ecb-9710-bb9372606f89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "521872ab-ca23-47b3-9bef-1545699d0bb3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61d64640-1600-415b-a863-ab9b11fab3b9",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71702152-3d00-4000-9fa8-40bc7a884c79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5173c23-c6c5-42c6-8782-18d7c1ed26cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b086caf3-e817-4e36-83b2-fb25742307cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d5fdc582-3cb8-4c35-a5d4-326a1f2deb87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ae0c064-e160-4c5c-bab9-07bae9206181",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6476268-52a7-4d14-a059-60802bb747ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f711e61a-e677-4fec-bbbb-a435b5664aa8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6721f14b-d00a-4670-9c11-3f96bb9369aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "90697cb3-c680-4840-8fc8-6f8d3b0da1b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "788410ce-7e9c-4270-afa4-bc1ef3dada1b",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b868fe9a-5541-4851-a7e0-895b12eed510",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ccd7c6c7-3e32-4a10-9a6d-3586b4eaa53a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2de83991-c41d-41e9-be1d-116099a39658",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4a42c06f-8fa7-4205-b63f-9a63314dc32b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "404aa681-c844-40ae-b046-07e8a65fc063",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ad2cbb1-05e6-47ac-9053-ad721ddbdbc0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef0757aa-e57b-4ed3-9277-c4a6a9d77437"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07a7cd46-cc74-4eae-943d-62e7558703c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "895638e9-bbdc-4728-91d1-ab5b672ff471"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b6821e0-2774-4501-8bbf-930967b2824c",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a1f51ff-7e3e-4caf-8dcf-a950b368c50b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66f70a93-1f39-4d1b-88dd-85e5515f27a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "660074dd-5ebe-4caf-b01c-598c1c87ace7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bd4076a3-63ee-41cd-b166-05eccac19806"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b38fc74-1f83-4db1-894c-7b482942aae7",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80c1388a-0463-4c51-b05b-09292e46161a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0be95ae9-e6c5-4de9-bc5c-dd29eb55b7ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f19c99f-bb4c-476b-b5e1-22fbc9ef1382",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "44b38709-5f02-47fc-8782-4874e5ef7c9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e12763e-ab03-4b95-8b64-c8b0ddefedc6",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80f155d0-2e10-4d0a-990f-52cc8cd02c1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d1fb76ee-b25e-4297-bfb2-61678c62f9e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b683e16c-cbcc-4988-a1d3-20736e99f2bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "824fd18f-0aa6-4d9c-ab51-dc19c64b2c65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98d9d094-04a4-4f22-9a99-cd3e6438d373",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08033f67-1fce-4b01-b6c9-39e84652d158",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f166beb-64d3-4cb0-a3d5-434eb9ff4248"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ff1ee55-8611-4262-af74-b7e211ad81a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "37e6cdbf-46af-4878-94ea-ef8ceffafd74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9af272ff-aad2-42c4-971c-c370e41087db",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b540e47e-b79a-4664-8c66-7f05e6b21337",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d03b45bd-5408-4b75-b0c8-661412036500"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c663a36b-8567-4f55-97a0-8337c496ecf1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9cf64cb6-1438-4d7e-bf51-308ffb32f6ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f40cd8d-c1f4-4418-86af-99d74d3d2e38",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e1f40d6-29d8-4577-bda3-cfe0148b7b27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "43ca34ca-fb6b-431a-9f46-c6bead09c30b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2d830d1-ad75-4772-ad60-c9ca7673865a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d6201882-78b1-4575-9ced-c395add0a612"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbf2c82e-73ee-4616-b6c2-c0e166e41306",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1027b6cc-97fc-4cc4-9c98-cb9fe0753712",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e583a65-c24a-4e44-a304-111b55754a07"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca6de9d6-51b0-4f74-8c1f-4855e7d1142f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "011367b6-717a-4704-aab2-a06e185687a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c2b0840-241d-4737-a716-5a092c3979bc",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0477bffb-1b77-4b71-af90-1db65510c2a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07d04710-6309-4113-ae7c-44d3ca74788b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ff404df-14c1-4ee4-a196-2b09c88e8527",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5ff446d1-92bf-4434-a5c7-e0056dd4417f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8833aee-1f16-4d09-84be-abb6ea5f28aa",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fb7bfec-baa2-49bc-a908-1d6db686c312",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01a0aa19-ed6b-4951-be11-f6464f0f270b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd64f93e-9af0-4a8e-9669-f1394c90ba7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "275799b5-ef9d-4f8e-a3e9-7319fe5f47ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35c5e011-0d9b-428f-a472-9a1467a4315c",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5b4ff94-8e0d-4855-9359-5eb7ea1a3ec7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22dc664c-fa73-47eb-856b-54a3d67301f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9702444b-3322-4c68-9483-9a8f8443f8de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "97d8ca95-3536-4628-b1a9-b46e523016b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "683568d5-168d-48cf-81e9-580e6437ae72",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d2334f8-60ee-41db-8ace-b8819f245f06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8ffdf6c-57b3-431c-9661-99f928b57cfe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "432c8793-0fd8-4827-89f2-8d88b508853c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "0a54feb9-493f-4c37-a28c-af8de5a02817"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c503505-c4f5-4b6a-b307-e5e961c0d64d",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc49262f-8aaa-40d0-8ff5-0373cb69676b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14a30190-3f2e-4a54-a6ea-d84f6d1e6a91"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43b093ab-9872-4b0b-9ffe-f413d18711fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "33d62ae2-8d72-4ee2-9c50-5e5955b73e29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a66b229-e62e-488f-883c-00dc37241a63",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9a207bf-253f-4360-ba28-f6540c594f76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba05b560-d6b2-45fd-93ff-432e7b6d342f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7681a8d6-d1e6-4d14-8624-5d552b37b076",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "0ec5029f-7b19-41ad-aeeb-8a12dd56dd13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26d95d09-735d-4d48-99f5-6191fc98ac8e",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7338c2c-3c1f-4a46-8418-533a577258e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9cf6c5dd-74c7-4491-8d2e-1edb00063aa1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06693b6e-24a0-4410-b70e-5ac3212ef6f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "99d04dc4-034f-4891-ac6b-a02516c65eaf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc57b791-efc7-4783-85a2-7920dd3d4f73",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "357aa159-c51d-4d1b-867e-dcadc3b013bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6af0e53b-c145-4830-b4c8-2264e901f07a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7488dda8-c685-4870-9003-d9e2129f56ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "4e55a4b5-1c44-4002-830f-e98aa3542e58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "faf45a04-d549-4c06-95b3-b9e7ae7808b8",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dad08c99-b59c-4607-837c-aee5cf1bb1d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f2f45e4-a563-4157-aa6c-85c5f063de56"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "466f01a3-98d1-4d6b-8845-4996b13c67f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "a80d9fad-bcfd-4a5c-b8d2-4480a2f6134b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1a72f2d-4509-480d-a269-3caf6eb33a49",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a5cc20f-1718-4881-9da3-f51ffee2b660",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5891123b-0f3f-484e-8326-d773edaeb969"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7b4d8f7-c1ff-4386-ad88-69addc0bd834",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "4277d7be-9e74-4323-a453-43ac10843435"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5aba80c-dbd9-4446-b828-4ab435646dc2",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4949379-cec7-4622-a717-8bb8a6d15945",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c0146cc-8ec4-4ddc-a55a-99f47969d5f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2cf3e3f2-855c-4548-ae0f-af7ca2ae8ff6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "1be3cc5e-f654-40e0-8e18-4d904ba51934"
                        }
                      }
                    ]
                  },
                  {
                    "id": "111523c1-ba06-48b2-a769-d850704e1c95",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "049df857-434f-4cb9-8837-976ebf754ae4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2cdaa1a-c996-4a4d-8d34-bb5cdca101b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3444a78d-c38d-4d1e-a8fc-04c5a48613ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "5de500de-1b72-4636-927c-659f13ec2654"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98d4c34c-2326-4ba4-88f4-42d0a74bba3b",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "944f0f86-7d3c-4aa6-b7d5-9757ec068c02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16b23bfd-d613-46a1-90e2-e257d21778e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "100d9333-f82e-4837-b303-0bcafa0eb028",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "dcf47a73-04af-4ef2-8900-364e3bac72c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c3968b1-7057-46ca-abee-62f267d29644",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8795255b-7588-40c2-b583-22f7ae04480c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b66ad843-190d-4473-8d34-36733f50819a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02bf443a-50a8-42fb-8375-4b356593e682",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "79cb6188-c4d2-4583-8042-4f8dfb5066b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "233b5878-8a34-443f-aae2-e9941036bcb7",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "173f550a-7089-436e-b8a5-bcba657ddedc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68e4e6af-d7bd-4fee-bdad-62e39f702aad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9bb84ac4-5228-402a-9038-6a391d15619a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7cc04e92-0570-490f-9530-1e2817411771"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfb49c87-38d4-4220-b83a-dbd20ecdff6c",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df81d48d-c3cb-4a6d-9ec7-dc775cd36b50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5fa1a35-3987-4768-a1bc-385e7332d9ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49397508-9628-4c4a-90f3-b2a8c7c803a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "11acd0ef-c220-42e6-b216-345afbbd110e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a731f7e0-ada3-49bb-b8a5-f3eb33246652",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61a491bf-8350-4384-a342-e05142f3952a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff0e9954-3bdd-4de6-bdf8-f249a6632d9e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bff10197-c391-4d4c-b6e0-827fe965751c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "1277d0b9-8c36-40a5-b2fd-7c4dcc6a49a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e253d313-ae67-4c85-9ca8-c48ebfb7ec2a",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0a1b71b-cb08-4ef3-850a-3426c0f49ee5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "23d46a0f-c663-4ae0-9c33-d95848dd88b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b51f9eb2-c2d5-475b-a175-d37f8d0643e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "442545a9-b222-4910-bb08-54a22a1152c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84445638-b578-4045-aa90-57a47ba60d0e",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48e80ba1-c75b-4904-858a-c831cbb2107a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "567c05fc-79de-4acc-8cc8-7d8e4a990f3d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48837e9b-c37b-4ade-8ff2-5c0435097810",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "1f3b50ce-2660-48f9-9aad-c857a50d47f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65d7a123-7fa4-4722-b61e-32df90baa119",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c76b9bc-da19-4751-9845-3edb1353edb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0cd57eeb-4a06-4d0a-8cf8-9b7fbd5ba815"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfbdd603-c1a1-4c3a-8232-5e3bd060ceef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "bcd30524-3f8c-4f76-ac64-2a12cfe0df87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92858edf-46bd-47de-b684-ea03e602a613",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "222f13c6-3556-44ad-b77b-08eead91e914",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e445190e-293f-4a2b-b2e0-2606fa683940"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9712bb28-3af6-4687-9526-7e25ed6e1cc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "ba936251-2885-4ee4-95b0-cd8f6688ea46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "867048de-4b31-492a-834a-712c0fb6eeeb",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48f1c563-e08d-4960-b1d8-064eebb061a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d318de6f-fc33-4385-9f00-6c66c086efe3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97e54c7a-8dcd-4f50-8c60-24ce5d4c9406",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "17a38ab8-b031-4820-895c-6d1cbaf44235"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0594b485-a347-4562-9e11-d789302360b0",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3429f3e-aa4a-4479-b143-adbb9dbfe8ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1653f495-cb12-480b-8c8c-82549d605879"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc6719b9-351e-4808-811b-3aeff92f2703",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "55c11505-3f2e-4a51-b9fa-68c3a42f492f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b5f248c-a6d1-4360-bd54-7a311c0e1bb2",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb782b87-8d38-4de9-9326-ae585e26d8ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3fd6961a-eb5b-4511-a356-04920fe0d00f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71ec7e07-5c24-479f-a6c4-74e89d94e181",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "96d40cd1-a4eb-461f-95b7-02655d95fef4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c3a925d-ff45-48ba-8dbf-be8bb4e9ec72",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9050becb-95b7-40cc-8473-c499c4f4bcc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ea3e11b-8480-4ce3-b08b-cc9b4babcfd2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae430f0f-ccd1-4fcf-b1ce-54377cdad907",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "057d1e52-1e38-496f-9020-e7410b39757f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3410d5b5-adca-4936-818a-a277d77af815",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "efaf304a-ea72-4a27-adfe-41e7c7aa1b66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd0a20b9-9f94-46b7-8a80-a62956c2c91f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb9413e5-1202-41df-be78-ff3f6d4fb6ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "7ee1a510-e221-4a94-b080-8732fbefbf2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf1b98d1-05b3-450f-811c-55b2ad9c0e89",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b84181f-c2e2-4b1e-83ea-1a320c0803f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0b528e4-1688-4bd6-9114-367b7dc0c2dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4269b86-ac60-427e-b4d5-ba509ffbc234",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "24f4d879-d550-4d80-93f7-4ead89a79d7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "343a7507-20eb-4447-b3ee-e65989395bdf",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f68c22ad-53d4-4323-8029-9895af0f56ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "009694d4-6094-47a9-93e9-38144512e4e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91528757-eea9-4bc0-a994-f787e2a977e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "539293b4-5148-4cd8-ac98-e389027b2354"
                        }
                      }
                    ]
                  },
                  {
                    "id": "918587e2-cc01-46d7-a131-7ae606740701",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b6e0ccf-530a-48b6-a9ff-cf60de30ea56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2f2f3c0-a217-4193-8971-34b80ecaad71"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75ede305-b990-4ba8-bd7c-a9d02f12233f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e1cfe06d-1e24-4582-88c2-76ef85d42b3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15f36300-827e-4c4e-9a3f-cadfc236d15c",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36cde237-4b38-460d-b9cc-ffea7089f0c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc7e5a36-b61a-4682-b8a0-1f4a06ed1e2a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c81469ad-73da-40b0-a386-0851b06fae93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "fde798ad-dd67-43e4-93d6-f25ae2e3f4d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d154991-63d8-4f32-919d-e823a096601d",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04f91ac8-ef68-4762-82a8-d0885ca07ec5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "980c26e6-3be8-4016-9d3e-ff69e3e6e4b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af28f42c-2896-4377-a2a1-d7de9b855223",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b0940ad7-5741-478a-978c-9951fae59731"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7b20dbc-3ea0-4f58-b1e3-f8e7c6eac670",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bdf74c80-9f31-4b94-900c-ae70df57290d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac256760-ec36-4b2d-bb75-d6366bc474ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5cf2732-7493-43cd-a0be-953de3b3262d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e25fa999-596a-4acc-aadb-2638ba9789c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b766ed7-1975-4ae3-bb4f-9cf0531d72b6",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7702933-1433-4739-a71b-b2bfbb29bcf1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e426ea80-93c2-4e9b-959c-6566ef8b86bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e441abb5-ef8b-4032-899b-0f307ba73b63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "dd8b275c-60cf-465d-a2c3-dedd3da2f17d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c975b1f3-f65d-4fd9-b546-5063e33c8b1f",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c1d8686-feb2-497a-946f-afc1d4612dff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6fffb04-4d00-4c50-9bfb-203c366489de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04e3f42c-7503-4711-a48b-9deea0faf9ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "1e97b4c0-7aa3-4455-944c-8d7d923471b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0242b75c-9ea0-4445-ac19-694d43fbf60b",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2698c8e-4e6a-4bb6-b7d9-b2b14c0de951",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59427bb3-846c-4921-91c6-23fad3a783f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75b953fc-ec73-4900-8fad-64e496d18468",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b5610a86-7cd5-4750-8895-ceef4c6f2b4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1ae9616-e25f-4e1e-885b-fa00919d1487",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a634e50-1e6f-4acb-9635-ecc0d5d4c709",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "238b5f58-3cec-4ab0-a36b-772d2b3f279c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acaa34b0-9c53-40c3-8b6c-7e0d3be6cd83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "bbf3aa86-3cf4-417e-af0c-cff885607a0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e168a206-9466-44ed-a785-ab02b7e56c70",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c2b233b-f0b6-4f1e-9312-1e4eee53bfca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "abc709e1-2d67-4e3e-bf00-04f122ce6d85"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4602101-0038-4f3c-82ea-1144df1e2fd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f18c8745-f890-4934-87b6-fc6cdc6c63d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67c43220-c2a1-4f85-926a-50f5eab2d6fa",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d90b1f2-fe79-4951-9360-fa7473f615c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a723be3-3c89-47f2-b679-c32dae8b1353"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3a97644-3348-4df5-a88c-ed64fadd8acf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "36849167-d5a3-4eff-9ee3-194ba0e679b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e82c1687-551b-497c-914c-fe4acdf16a7d",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4082fe1-2b5f-4099-91b3-9fc55ec6eb2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2822bf44-efe3-4bcd-8c05-29084680ac77"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3deac6b-600d-4293-a36c-5e603ea0744c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "d91e9ab1-b692-44a4-a792-e3bad33adf43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de7b9763-fce7-42dc-b5b5-5ef2f23a41c2",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9fe8d8d9-4ca8-43ba-9d21-e3f3d183adbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f380f3ae-8a4e-44be-8863-e338bdb0a5a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7730ba09-fa9f-44b7-a6db-fb4b84a2cfcc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "46445a5f-d09c-4a2a-98b0-a4dd9f451200"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4240f7f3-1945-4e55-8283-cc4b380acb62",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8e63730-c2ab-44ba-96e4-94db930311be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f8064bf-cfa2-4237-ac8d-176126484f7c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6c0ffae-0c96-4346-8646-75017668c2dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "3f75a621-4f2f-42b6-bc36-599f6d4359f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f56cb71-257b-4271-a01e-1274b44dcec8",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94097f24-1da0-4b27-a1e2-bad1196853bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a5150f9-2531-4d55-9bd5-0b438382fd80"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "182ae0d9-fbc9-4302-9168-a500b0b28a87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "d8d28a79-9aa2-4d16-a441-e9d4e3c0d2f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65db8e6f-950f-4e26-9a8b-485fbdf895a7",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de99b9c8-5a51-47e8-8ebd-5f85ddcefa59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d6a4517-6226-40b4-aa4c-f87bae2564c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "065c23e1-aca6-4047-bf7e-2a457b5a05c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "25df665a-0286-4ac4-8db4-50add2baded8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70971069-e9da-4f83-8a33-22fe0b4603bc",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43a0403f-78d6-4145-ab33-933d1e748205",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "909cf522-ef5b-4cdc-b564-ad3cc019ee08"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54f26774-c256-4c80-a609-1fbfe4a886f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "96588cae-bfee-4a38-81d4-456bf592b84e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c2b35a4-3f9f-41ef-8cbf-5d7a0b2cf08e",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "233d9dc8-359b-4be8-b1e7-6621d681f7b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b1f5431-39cc-4471-a44f-2c7e25e421d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39bbdb39-df4a-4a40-9096-b1bf9ff6d002",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "b173edfa-54d9-45d9-b007-9d76e3287c5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f46b4d86-d82c-4412-bd5a-8c06cf3c1a8d",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "300c7998-c3b6-4484-97f6-99a02a74397e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1163536f-2f60-4cf2-a4ae-7f1fa3111989"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26c7d3f9-b225-4202-bc89-aca1351710e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f47c712e-d27c-4686-bd11-6b2dca0dad42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e06453a1-8737-4068-9413-d993ecbe3c27",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57775434-0db9-49f1-91fc-763434c396fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b48e3d07-92ce-412f-baa4-4772d8bf34d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3665e23-59e8-4055-b33a-742d66ab0309",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2cff9353-19e6-4153-bc8c-b49433f0c254"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4bc711be-3d7a-4e4f-90a2-8ad58ff53194",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ab78ef2-0aab-41be-b9f3-3123dd713c2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "15f06d5c-0363-4e3f-81c1-97dea65d1930"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ae6945d-96de-47ff-8a50-c82c78846757",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8fc6bf49-2d90-4e59-a6be-b7a4034741ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ab82ab1-0109-49df-810b-7e406b01c96d",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b384ea3-6bc6-4768-bf6c-98a4501aff1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54a900a1-bf56-4b00-b18e-deb26ca4d709"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e57b807-db79-4634-9654-1982297428be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "62bccd10-138b-469f-92d3-0d05f657946a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6e01f30-aaa7-4520-8aa7-c663be0519dd",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9442a71-a152-45b9-888e-69dab0b378df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "402d1710-b4be-485f-9c03-7a3428412f4e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c505c3eb-45e4-442e-88d0-e43d18f087b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "7ebb72e5-b835-4630-b70d-1e50532e729d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aed086c8-027c-4aa4-9bff-165e3d61a731",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb081197-c0a0-4005-94af-3c3f082f91cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "139705c1-63e9-4af6-932a-0330532b02b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7da44fb0-de33-4d6b-852e-d746e74fad23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "0536acca-8dc5-4146-b98f-a3098d58f1b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9643e29-59e9-4143-95d1-a49095fb6e5c",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "600415aa-68c0-40a8-a3d2-1311162bf1d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b2a7a5c-6dce-45f1-b761-e3fbbfcc87f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6bd1da98-30bb-49e1-940a-1b2885d6bf06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e255684d-86e0-4f82-b323-fe12507bfa01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af41aab8-4c19-478e-bc25-bac6b41faa8a",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cbcc02f-ed94-46e1-9d07-e62597976ccd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d89e0e4-6046-45c1-b9f6-8aea7cef0e10"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94d315db-4217-4f56-b095-148de35c112a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f511caf5-6cbc-4405-9d36-47a215e7b1de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f57add1-18d0-4423-9b00-e93840891af4",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4fa4976-00fd-4232-9c70-bc47b5ac5ea5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fbe94ccf-ce25-4e19-8063-d2f194b5798b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97f8aef9-f909-47d5-92dc-c27799b9c288",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0855a7c4-ee55-423c-aee0-e8f00b7f2f57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b0acd4a-3d1e-4e9c-9dff-6d8d1fba39b8",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60231f2e-ddbe-4eac-8384-302d292f2228",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3334463a-4655-43ce-a738-dc6aeef370a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "887f6fcc-f5dc-4bdd-a44b-b30d025f1900",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "7730342e-86c9-40e0-b636-d442ea1b081f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56a05770-e01a-4f08-9b5e-79ace3045797",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0bfd6fd-0fed-4bf4-acc7-ad89b523bcd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2967860-872a-4391-8482-a3586b651664"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ef4b8ba-6f17-4ce2-abda-a2beb23ea5f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "2aee6776-ef09-4ff3-9211-6a8122f1a123"
                        }
                      }
                    ]
                  },
                  {
                    "id": "260497fe-d1e1-4485-8b39-1d022105e264",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f1733ca-bae8-4228-88c1-8bb256faa42e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8423ec6-6d72-44bf-b1e7-4b0a5b2cf357"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc10cd9d-b500-4352-91b5-849675821cbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "bdea78ec-33b1-425f-b6c1-639625c52a94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc51f4e7-7684-458f-8e8d-b44c5e1131e4",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7db1cd3-a0c3-4bbe-932f-e466acf33c62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79af42ce-dabf-4760-ba02-27f1b83d06a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e124e39f-60a5-4012-b024-4c5589df7af6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8bb1558c-d5be-4c23-a515-05970198ee6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83e45778-83c2-48ff-a3fb-8c0988e6b047",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e4380a3-0595-4bce-beea-d79545edc8ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1990da5d-ecea-4567-81dc-ae65b8a50c83"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ddea8c6-bc7a-4dea-959e-5a1cd9a876f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "fe42fde9-099a-48b3-94d4-43beb00e79f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b92e01d1-ab38-4023-a625-fc87f20a07af",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66b9fdb4-7629-455c-bad9-c85087680ffe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba4c8f8b-1cd2-44ba-9fe7-625be6493662"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f9ba692-cc5b-49df-a7d8-0131cc619a98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f4f3a973-b53c-4cf7-b05d-6f802a854431"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4fa73e6-3e61-4af6-b07b-fdcfc972cdbe",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "caacc505-bf46-4f6e-bc00-0fc64bd325a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6deef535-153d-4128-ade8-b0cee6bef2be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8cf8f374-7eb8-4c90-b4f7-bc0f3fd359a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "60929929-01dc-4435-bd13-6dfaffe30420"
                        }
                      }
                    ]
                  },
                  {
                    "id": "782d7478-3720-48ec-a3bc-457594863712",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f34ddc0d-0d12-4c0f-87af-51873521130e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70570922-1c76-48b7-9d6f-e86fa0387420"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a5a1670-b7f4-4d5b-8830-e4d5ea560173",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "de62de43-179c-4f94-9341-6220d677abe7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef66c081-bac0-4d57-9af7-27705379d8a0",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c76fb50-9ad5-49ee-b56a-e7b9f5617fe1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee30fb39-757b-4ffd-a086-db11391b95b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a09663ff-2886-455a-b647-c6ed72289e7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "4957b8c2-7c64-4ee8-ace7-6d55f51eca55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2aef72d7-49b7-4b59-90e9-f757843e2d40",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61e51f53-9cd8-4039-bf31-14cab4f65a8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c9454960-b510-48cd-b185-bed88d75e347"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f0cf7bf-bfb9-48f1-b2b3-4c5777c9efea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3fd0cf65-09dd-4bd5-9839-871ddc72e264"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e51e806f-305e-43d7-becf-b6d7cc8fb475",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f043ca4-a477-4959-948b-3d8c249c515e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b21af3c9-2691-43aa-9480-ee9c43606a40"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "006fd21f-e43e-42af-9e4d-150e41aa0718",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c6ed9655-0bbf-482a-9dff-78307f93d017"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c26c81eb-80c6-4d3d-9638-99b5d8fd5569",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e8a309a-39c3-48d5-a30c-f0b8c5a1ad8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cdc64e58-68d4-4013-b155-9282460227ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "629d5068-1cb6-44dd-bc84-c872f6341b9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "55a41db0-04c5-42cd-8b3c-b78f2e0f6a11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "444c6560-21b9-4e2b-8d32-1d9b8cea9bdb",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77458255-4d1b-4ed0-92d1-9c2918c50bc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9334e54f-b48c-4dc4-8c50-5b185d849966"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "456c6003-195c-456b-80fe-d0ee172071c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "98c83c70-b830-4f89-b1b0-a53f26a1758c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22c3998c-ba79-4868-9b23-e06f7b901d28",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec8126d4-f246-4192-8bf4-d015eab9f324",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d184b43-544c-4aad-9e0a-a5f4a957c369"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96743f15-5c69-4521-ac48-c16b96cbd2d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "801c9dcb-6ade-4b29-8051-12c6c34de7ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7eafb245-8bea-4278-9102-5fbb9d68cc8f",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c14414d-18fa-44ec-9f39-b15289805ad0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8caccccd-bbdf-4552-a680-f86fde7e38c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6c2d5b0-ec41-4344-862c-a1a2af87f510",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "e367dc3c-5948-4bc3-93a1-a06f6cfc651f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9707dc17-8864-4878-b3ec-91c27b6fa9b5",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a928973f-998d-4eb3-bc0e-bc363c736f0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "395a3c45-f420-4031-bc8f-ba8abb8e0507"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c84c666-41c7-4578-bebb-24653ce20a4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "af261847-c80e-4133-8d53-80d09fc54d61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64ef4400-208f-4f45-8374-efc51d21cd6b",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77543b90-1c9d-405a-a351-6d2631246a7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc3e6f19-02a6-4b8a-b351-39db938c4ac2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a61c16f0-46f6-47d9-8f22-756635bd0f02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "56f33f91-019f-41d9-a7ca-b60b4a4e8304"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1633f129-44c1-4e0c-82fb-faf3e39013eb",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d64202c2-57cb-4990-80e4-1c608701560b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b359acf-81bd-4f10-9471-3e503a27fc95"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "031cf934-258c-4f02-b820-809472e1dcfd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "ee3f4027-b402-49d1-831c-aebd085c7a61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ba3b22f-1d84-492f-a426-82ae880fd49a",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e5b09bd-d110-4d09-a8d1-7bfb5e2b4aa3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "091f72ae-df15-4f6d-8893-f41d7f5e396a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26892a90-5437-4fe8-80bc-85d9cdd5f587",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "2826e13c-b581-45d9-a123-e25c15580315"
                        }
                      }
                    ]
                  },
                  {
                    "id": "065e400a-1054-4309-913e-354c1d9fdfd5",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebe2b93a-d365-4f0e-9a2b-d2b2a8ed3706",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "af2c8435-12da-4bf1-a701-ce91e18e9aa9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83b211ae-fae6-4deb-ae85-8e85735c4686",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "74f1739f-90a0-4720-80a1-c8a9f3872d9e"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "b8a04389-a8e5-4fc9-8b39-9f25fcf95ad7",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "715757b9-a478-4151-a96d-1662a333f17c",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a75bf1e5-99da-47a5-9c53-e1a22922ebe6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "65b9dd4d-efac-4784-8446-d5bc282adcc6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9152eb3e-f25f-447e-93ba-85c98abffdc4",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9269e3d0-61a1-42b2-a0e2-ce4c4eedd7ea"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "dd0f3ad1-c32c-4bb4-a20d-fd5f6f0bde68",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7d28b08e-68a9-46f9-8328-85916b14eeab"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "9889cd35-fb70-4611-842a-f8b69f9547f7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a244f649-d017-4aab-bb96-4a58539a6bfd"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "d79f1af6-d87d-4ec9-aa16-13068f0f7ea1",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "750adf13-9fd2-4ca1-8020-d5dcf836cdab"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "b8745643-817f-4227-9e4b-a0e754d0dd29",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "797443e9-5141-4671-b91f-2814ef9284c7"
                }
              }
            ]
          },
          {
            "id": "7a0d5b7a-fe9e-4bd9-a90d-e51ed18ea577",
            "name": "Positive Testing",
            "item": [
              {
                "id": "a6ae7da8-1e36-40fa-8be3-e0f078215b16",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6b6c4eb5-8bf1-4987-94bb-40d0f6da0318",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "5584118e-a3c1-42ab-995a-893d5a205fd1"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "eae889e0-e694-4b0b-b39b-4d25ac195d15",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "e002f354-2520-4d92-a179-841e46ab0abb"
                    }
                  }
                ]
              },
              {
                "id": "52c34949-a2fa-496c-b43e-38d2a5eadff9",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "74003568-9fdd-4d6e-9955-e856a8524b49",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "fe156cbd-fad4-4c8e-9e83-3c4c6c6dbbea"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "84ea8e39-d4d5-4fe3-9242-9d4de14a0f6d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "a0eb095f-76f0-456e-8e7f-43a2115ea985"
                    }
                  }
                ]
              },
              {
                "id": "d727c867-1110-4547-859c-5a4a64a29650",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3e595f17-1533-42c0-b3e9-384a2745d976",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "23d1b708-9c0a-451b-93d3-b7cfb9386e66"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d673c19d-231b-4b53-8bce-60dd105b7d6d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "9060aac4-7f6b-4bf5-99ad-89f2663cde4a"
                    }
                  }
                ]
              },
              {
                "id": "fcd105f7-49dc-4e4f-a251-4b740f04d40a",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "db02fd45-bbc3-4be9-9333-85c8b24a63fc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "789f466b-4f2f-43d6-bbed-80464f266345"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b2df6b81-1066-4940-afbf-cfee78b2a890",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "6ee6eece-3679-47d4-8663-d9f5e5e8feac"
                    }
                  }
                ]
              },
              {
                "id": "7665b04f-8e97-4d0d-9606-92f055a66df6",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2b9ec630-397f-42e3-a75c-83b1a39fc09d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "963e47c9-e783-4a34-8a15-360d2a75c9c5"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fa644b49-ed40-4ff4-a7df-03e02d5b3953",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "e85e2e59-a849-4a7c-a037-6c85471fed12"
                    }
                  }
                ]
              },
              {
                "id": "3a9a06af-7c4e-43b0-a5ed-eca834a1e60e",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "fda5c9c0-641d-4238-910d-55cd66cc8a88",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f0391abd-6fee-4bde-a2c6-b0e57c64b6a6"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "84c3838a-952c-4860-bbbf-f475db7e91f3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "26304c6a-c3e2-49a7-bf33-767247f4bad9"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "d683c850-1d55-4811-a23a-dbe18c5f768b",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "397fc124-1366-4a57-8c54-fd11d641fad7"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "4cddf968-9dd6-45e7-bd48-2e6a04a99747",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "2b7a0bc5-43e8-470a-b681-83d604336a4a"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "53b443b8-6212-4c5f-975c-da892b0e056b",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "2945ee44-e7b2-443c-97c7-fdb9486bf81e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2ba53ff5-e8ff-4806-8650-168a24d3e453",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d054ec48-0735-439a-a6b2-290dec946449"
            }
          }
        ]
      },
      {
        "id": "c9ea41d8-f6d8-4e80-b5d0-38495bac4ee0",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "5c7425ef-aa2f-4165-af63-8253fa191580",
            "name": "Negative Testing",
            "item": [
              {
                "id": "455d9cb7-2e72-4b55-9510-9a6e6e22992e",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "c58471c6-68d4-42cf-989a-22e662e155a4",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed513bff-cb7a-4296-af3d-cef237945c04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c0cba6f-b19b-4570-9953-2b31e3ae7cef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c097401-c6ea-4fd8-b80b-ff562688bfed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "4f94d88b-0a21-4aed-ace3-5ccb4220427b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "242fef4f-a878-4850-b234-9444c8a4fe7d",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc61d052-167e-4656-8a8f-456c6f79a7e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63e98931-61ac-4599-8ef4-44e723616783"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78d89bf1-6f4b-4d81-91d2-d17080c7fbfe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "ccb98812-e2b2-4473-9d38-8e99ab86f645"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02ed1d4a-dc76-47ee-b905-dca577875b9a",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ee904e4-c55b-49d4-a4ad-4bc9a0c95b0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1be1f747-6e30-42c8-80e4-8fe9bdfd7b3e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d66b5e6d-98cd-4ff5-b0d5-fcf14421dd8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "be0d611e-ddc5-4263-81b1-1b3bd0ee9e24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b29732a-7beb-4e42-8de7-b2297c2a3df7",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a47854d3-ab56-4c7c-903f-034afc2fb0ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca9fd435-14bb-468c-86a2-c2bd2e54849b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f54c5284-7402-4fa5-8208-c39042da6182",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "507c140f-83ea-485d-9a32-3f0c000c442f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "102c7517-0836-4d9a-bcbb-dbe2c5c282e1",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a75697ac-67ba-455e-b045-3cb8da267935",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59c2168c-30d3-4cca-bccd-33df7ef2ae76"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2016250-dcb5-4543-8207-95f0051d31f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0aab4c94-ca72-4984-ae2c-1be3fc28689d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1387922-903e-4851-8a87-dfddf8f63ff2",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a42fe69-546f-4346-b4d4-8ed476d80257",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d418f23-a357-4ca1-8d4e-8a160d703c01"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5af9a394-9e1b-41a2-90b4-a0da58467402",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "eb48e4b1-f575-4511-bc01-f7e3b34f45b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d023e50-9017-4997-8c56-6bcde5fe7397",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ca68cc3-f548-458f-8b02-76dc2782e398",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6abc7c71-6a58-4793-b159-8a30d824bf1b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "adbed5b4-88b0-4d5c-8145-432d32400aa4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "835d880c-9043-4c18-bd61-9adea65385ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3cdb5978-36a8-4ecc-bc46-abfbe0dc58ed",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1db48053-ca5d-4e83-b3c5-eb84cdb18e1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73ba311d-6696-417c-91fa-9c6c4dbc6f6a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45827ff6-e496-49c8-8ab6-2307e4d0f60f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d7143ad9-deff-42b9-8bc1-191095dc0af9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35774aab-1348-44b9-ac1a-8506dbaa4af1",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3e193ca-b735-421c-83d9-c1e481b0ab56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19acf2c2-bec0-4550-992c-80b9b7560cd3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "176f47de-6614-417b-ae22-c4572aa67a69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "912b60d8-dcea-4e30-8495-d274f3a38f44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4fc78e4-e733-4621-8d61-fb82fbbcbd54",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f247352-80c5-4ba5-a598-11155cbf23c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1927afa7-ea38-4daa-92f4-52ef4112f729"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f167c5c-7338-4a6a-bfb5-6db98efa4989",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "822648ad-28b9-45ca-9e9f-974b45867ec6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e40b5d77-c5e6-46cf-9cf0-645be25d939d",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8780e002-a05a-4a10-9296-886928818370",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b07f805f-a296-4d55-b3a8-00d5dfc62ea1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25354951-7d5d-4760-a5e3-f9fcde9b0b74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "dca62d23-d478-42d8-abcb-442a676a8990"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5ffd54d-36d7-4dd4-a2a1-a61acc9afdb9",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad6d3102-cc05-4c71-a1a4-e39de49fd4a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a177b812-f22f-4a70-9a4c-8712124fb616"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a7072c6-43d0-410f-8aa5-7f3aef76eb80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "152bacd5-c86d-4735-a923-81877105a629"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffaa60fe-83fd-4a8c-8aaf-499409ef7198",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3288f7d5-c3ae-4822-8f01-09bb5c125ff1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "410070f0-1816-41f6-8ea0-697c0a5b4127"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "259fd05a-3bc7-4e96-94de-c3988eb8a037",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "6bc22cba-1433-4e71-86c2-47d5767fcabe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87f002f3-fc85-47b0-94f9-c8afa090b6c9",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62c5e8fd-5afd-472d-9f3e-121b2eaac796",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ed013ef-e7b9-4362-b5fc-b1fbe19011b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2334f053-668c-4576-bc9d-09006325be71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "bf1c9a21-27eb-4d10-8085-3b55dbc85e7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fab2ebb8-87ad-47ac-bffd-c72033878ddf",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27577650-967d-48fb-9e86-2524d7d127bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7269f78-2c99-4c41-8365-4e731029c8a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7041bbda-1f18-471f-8d1d-26b4300493f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "85183228-1868-486f-9a81-5f2544b2ac1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d707e45b-932c-42f5-ae59-98510e07be69",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce6f3d0a-d4a0-4e82-bd5c-0ab719e1f56a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8cd181d1-4217-4122-8576-231f37390ef2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25bc7aa5-7430-4c00-b951-5006224c5394",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "d9ec95a2-8763-4893-85da-e3d7ee678f82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8736bed-fe3b-4d29-8582-f04d709495c7",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31a3daf5-af5f-49d8-8358-91100f501a93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b740828b-ea31-47df-a754-e2cf2f4752b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74e55d50-a899-4011-9049-ac746e7227d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "76522a97-40c3-4ace-9c6c-67b5bc11133d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dce0997a-0aa1-4342-afcd-6b0052df37bd",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "adf7da05-3cfb-44c8-bf14-d00ce724576c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bef1c441-5f6b-4e75-bfa3-e6ff61293fd0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "491ccd6e-b491-41e7-b938-2e3d941e960b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "aec7e9fc-4f48-4ed5-9de0-ab8fcc794766"
                        }
                      }
                    ]
                  },
                  {
                    "id": "698f2bc6-4822-4a85-ad63-ca994b947e3d",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c23becd5-7986-472c-a701-11cdd861dea7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e7117c26-a66f-4f69-8af3-99e4354bdb2c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f10f36a-861f-4b1e-a400-8d96e1c8bfac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e5038efe-fede-451a-bd46-13ecb9be70a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56a49187-5d7c-4a27-97e7-4671a92547a9",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8cb67a5-b5d9-4196-aa2c-f78da79f8b53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63047458-6813-4ff6-a0e3-0c03cfd0dba9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad28094b-521a-4796-bf6d-95d7ee1fde6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e43600e8-530b-422d-af1a-bb86b8ebc58e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebcd41fc-7d64-496a-a15c-11e7260ee01a",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb4e80d7-f9fd-4c23-aebe-64f3043cbf27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88f474b7-7810-4ac8-a6b6-80c340987e33"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f3887d7-2fe5-45f6-9c9d-799e51d2b23b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "423a75c5-c63d-4fca-8d14-69e0e3fed548"
                        }
                      }
                    ]
                  },
                  {
                    "id": "137fb079-9297-4445-936f-903474137b8f",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56f9f689-72a0-41bf-a61f-e3ccda1c6e70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c06255ff-7e32-4ad2-8a1c-0b523dccb52a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27daf4cb-b5fa-41f5-8c1f-64e32dea3548",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "26b88fc3-09a9-4403-9631-5e0cb61cdebc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7133879-81f2-4ada-aabd-56d7e97ef313",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4d34a44-5a9f-44a7-aa09-5433fb3c59a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd6c3910-2ce8-498a-bd38-aa841120c7b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75e773e0-da91-4dea-96e0-b2551571d528",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "de4b0e02-a692-491e-a72d-224da3721f9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c2b6c3c-d898-4977-b158-ec7b19fbdfe3",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bc02a32-cea4-4609-88d3-32d372fd072d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eca5fff7-1a93-4e20-891f-41d0f83f146f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "215b73d6-26ef-4196-88a2-c52fa511da95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4430b188-569a-4194-827b-27c85a0fd6c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e69e6047-05bc-4e7f-ba0d-d413edb91480",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49b17901-a6ca-4891-b154-00de051a3429",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bfdd092d-359c-4714-8c0a-94aad4c299df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b511c13-2e27-4ebc-90e2-1d2f077192a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7bc7d5e9-c315-4d99-8ddb-bf73a852f665"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49ff1a4f-6960-47b4-83e9-953293768bd4",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9f21317-2cc8-4f3a-92ff-fddb2c67f8e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7a1a0cb-3220-49ba-b992-420791716bd2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99eedf0a-71c5-4d8a-b992-36fa9eb4b934",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e68dd494-1c79-4952-a2e3-02770108b460"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca73e8cc-afa8-4350-af20-12a7886b7a42",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e00ad0c-539a-4753-9d6c-db4778dc98b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f13319ad-4884-4057-b3a0-afa20ec4fccf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "291cbae1-d2b2-447d-a88e-dbd8909b3980",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5527758a-5a35-43e4-b2d6-fb1adca3d49d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b74db5d9-88f6-4ea2-b6bb-5feaf1af0169",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf5d4d74-5405-4c82-9926-5c43fe5b9af3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "365f28e2-663e-460d-8b45-f94094c76461"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e6544d1-0fa5-4459-8542-63c640a09328",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6ab55add-d3a3-4817-917b-f8d67a62a5ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fafd331a-87f4-4962-9348-dd19d4e4e815",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88f87629-69af-4d80-9b03-5d71fe8f6b4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b7a50b50-7e48-4741-bc45-6bb7dfb6d7c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7af2005c-5c23-479c-9b24-6b070d852ba6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4e4da369-2041-4f16-8748-113210f22a45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "643d853a-625a-4708-8c6a-7a29ff4d864f",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0cd2926e-99dc-4e9f-92f1-ef370c91bcfb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "97abe714-9879-4a2d-9d84-ae542686f895"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eddbd868-084c-4e81-92d2-b01cdebc7809",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "485e8f34-b0eb-44b5-a3c3-df59a0f4851f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a514f3d6-5080-4af5-a7d3-737f0d4edda1",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ae1aa3c-df62-4077-8cc1-e5bfa5d24d6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1690a74b-1204-4e6f-9a16-10ad90c56b2f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa36dd83-57b5-484a-bf29-10e54c68fd4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "92e3c69d-13bc-4504-9cf0-214f0d5e5875"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e46a9ca-7279-4b37-b709-234e9b2e03e4",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6a49f17-9409-4695-aa34-d0d81718f41c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8431bf3-6797-4490-a0a1-1a88895c9a3e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff734a92-9524-4a25-aaed-931213bd435f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a4e05da7-86f4-452d-8084-d4b5a33d93e1"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "026184bd-95dc-4518-a594-1f4e1d79026c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b0ad9034-f231-4df6-89ca-fbdc13d958fc",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b39422e-86dc-4d7e-9e4a-956e4e69b135",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "62531614-7e0f-4fb8-a7a4-7c9ceb99ba0b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2627557-b283-405d-9cbd-ced098957e5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b226b6c8-8ece-4aef-ac41-f7fddb76a94a"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "bc28d986-3c50-4c51-9f36-3ad930d61371",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8b049ff2-f89c-4219-bedf-59186515c074"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b4747ede-236e-43ec-83d1-1418c2621aec",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "708cdc50-3306-46b8-888f-8c89237ce49c"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "225579cb-b965-41df-b42f-d7391a59a959",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "54592f98-97ba-4f2f-8630-48bc8edc193a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "aada9ec6-49fc-4a7f-b317-9917ddbe5a3d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "2cabf0d0-cc32-49fa-92e4-90c8a65ff8e4"
            }
          }
        ]
      },
      {
        "id": "35a305ab-58ae-4fe4-952b-1036fdea1e4f",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "7cb035e5-6b1e-4683-bbe6-05f282eb15fe",
            "name": "Negative Testing",
            "item": [
              {
                "id": "040e1bb8-9e16-4c94-810b-dff3d333ceaa",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "ef48c59f-9fad-4b19-a3bb-80d13436d5f9",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c537e69b-a598-41c0-b081-be714818c7db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f0270d0-79c5-4a96-ade3-6d32a8a3d81e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e15b2ee0-c081-44f1-b502-e2ef0f0b44ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "ab5bf72e-d41f-470f-bfe3-c11c09256e46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "072c439e-59ce-4e00-a8ea-f31fbef20d34",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d7373c0-d62e-418e-b25f-78819f1cfbe6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d9595d2-9aa6-4552-ad99-a4ab94aa30e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9620d508-ce45-4c66-b503-9572c5f03b47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "f0304406-397a-4bb8-ba21-ba408c35af6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8babea00-e0b6-4ed9-b486-a687df2e368c",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "263a7b77-5aff-4540-9785-e5c4e237cd94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a4b09da-a9aa-4c11-a9cb-38fcc6de2ea9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3408789d-ff99-418c-b7bc-2cbcbfc8f245",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ec5df1cf-e14d-4bc6-976d-b1d9d7039819"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2cf2d0e1-c8cd-42db-8152-a41f265efb53",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84cc8037-750f-439b-9f44-cca1f8e9fc5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88d39713-c6d5-4302-91af-391765bfa8be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3cf26f9-7551-4984-a1d5-5f652581a54e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "fadb7751-5e4c-44dd-bc0a-59f402c1e5bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "633beae3-0883-4381-8d4c-269845becb15",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c5ae0a0-75f0-42e2-844b-277b1bea881b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2268c504-5fdd-451c-85e9-4c0a8ab9490f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0dc17620-e4ff-47cb-9a36-eaca6730f09c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "cd0f132a-848f-4115-9c1c-fb88b9e294ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc625545-5874-4cc0-a07a-d501583401e2",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "573e731a-a440-45c4-b89f-5d1882c05514",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6c07348-098d-400e-a233-0768597f63a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6554a101-6dde-4c23-aae3-9f3e09d56d74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a8b170f7-161e-4487-a805-0583e58cd0d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a2e222e-fa7a-4b31-8ff0-50db71c6e09b",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07c67017-620c-4515-bb06-ceeec789c549",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "381f1ce1-cace-4bc7-9761-cdffc3912d33"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfdf16c5-60f7-4708-96b4-a76e15272a8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "f9b85851-1791-45c3-9781-76f6bd4c7424"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6c4c018-4bc4-464a-878c-e885eb52f555",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "442d89d9-1616-4f3d-9c74-008562e79c7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "027cd2ea-dddf-4189-b398-16e55324b7f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09aa6c38-f05e-4219-a318-8efd569ef53a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c507400b-542d-4e2e-a932-980bbc7405cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3163370-23b6-40c7-8dd4-2b5c2875da4e",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3faea9ce-b791-41db-9973-d1f9c6e0dfa3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df7740a2-3e4c-4111-8874-9136e2ac8ec1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53642d29-c022-4cb6-838f-996d324d8880",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8bb37a14-3f0a-4def-bc54-810a8467b31b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d2532c4-f350-4bf8-8280-15f914a7b997",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a84bb944-a6d8-40c5-89d1-b15ed48da5a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "234f306f-1f75-45a4-9fb5-33c20dbf0a3a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3412b10a-e4b8-4e2c-b649-106b7a71a2dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b09034c3-aee3-4c17-aa59-e5d1ad22be16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7873c2d-6640-4aa7-b73c-907f89ba6861",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5de8228-c593-4b5f-985e-53b0201b630b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e85ab5ec-4a9f-484d-ac34-926eb7e31ab3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9cb75b9-939c-480f-9771-04d3530eb38a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "ba320922-8553-43e3-bd4f-2776287db351"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ce54f72-87ad-4f69-b340-8e15030ef60a",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb6da304-e4de-4ac6-834a-517884230ac0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec859c30-acf7-4970-9627-dbf2d700262f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "747700d1-ef64-4d8b-957c-b3b7a0d5f32d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "9e7de373-e0ef-4141-9c2f-9c20ff750fff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94518a41-0684-4891-8f1f-b5579e7296c2",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "640fca09-2ee2-4cfb-854e-be4b3e5509d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26129f16-fc83-4f1f-8181-bd9ba6d081cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "698dd2b9-3ef6-46bf-84f7-2f3546d55ef5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "5dfd091f-0682-4830-b4a2-3ea6690746e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43df56e7-71b3-4ad6-aafe-3dc610571452",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10b570f1-bfef-436d-b67f-349ae58b607a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa4248a2-f0fd-4c69-b50d-5860915e943c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03c80485-a6d4-4bc6-9857-e89aa2444dd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "1524ad3a-12a8-4fcd-94ba-dbbce36f25af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27fb5c7b-8b3b-4d6c-8f89-5efb154063aa",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc7656f4-d8f6-431d-a836-f8d11bd86a36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "271ec621-11dd-4c64-9a16-c578ba3b4a11"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73e9d9d4-0e97-490f-a37d-bb19eea16565",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "e18af42d-a7b0-4979-88f2-5c6210d3d178"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4da3d254-2fca-4376-a6b1-ea6587daf6aa",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1e3e82b-48c1-4459-a025-43c5d787ec8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d70e2e37-1ea2-403e-93fc-61dd337946cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92f24c3f-3a0d-4e37-96ab-b3a2d43252cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "3069bc50-0b82-4826-b471-bd78da25d6fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23f598c5-ae6f-4910-895b-98d8288bba09",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b496cf7-148b-4f6f-bbb6-a70d4ea7b77d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33ce2f80-f8d0-4ec2-9bc2-d05db8edbce7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d3b6d67-a41e-42dd-b0da-17753a5fbc77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "a70aa468-99f6-46b0-9586-4da6d3864500"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16ae19b9-2c61-430d-8a24-4708a7122cab",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6913ce6d-d051-42fc-b97a-7b1f8ab8a864",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90588e96-422e-4e78-ba47-24f6587fb9f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9c32a4a-c2de-4018-a0b4-e3d01f875fad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "4b6bc9a6-8594-4578-85ab-0a6c38412c2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c21136ac-d088-4702-947a-754893c421fd",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75330143-f625-4749-8338-3d6cb523deaf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2658b87-f786-43d8-93cf-f8d1d9f6840d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a856f2df-57c5-4062-b5fd-f9830f0e404b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ea0526d3-12b4-410d-b007-2c0c84316373"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43e767dc-61e9-4e65-8899-deadb29f8dbb",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "032c2401-f8b9-41ab-b244-eba91cbb177e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4faa06f-2270-4a24-b4d7-eb9c1dfec518"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf161dee-3cc4-4e87-90ba-35b8e10ed466",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ad1187b6-9b01-4786-946f-fb077660af24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "192ea381-758b-44a9-beae-a9c2d2e315ae",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db5f5cee-c121-41f4-8d75-00c03fd6a9c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f25522c-9aed-41ec-95a7-aa898dbf0e2d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c11ed52c-24ca-4e5e-b468-c82b456e1d2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3e0b85cf-da40-4603-85a3-93697af9a9f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e05617d-fe82-4870-8e63-8b88bada16a3",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0e23dac-a25e-4096-8485-e8f69c0d628e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6c6d6c9-0319-4ae6-aa11-6d4213ca43e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01f7bd56-9010-4eb8-8e8b-2780655e6d3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1a7a9f08-19b6-4223-ad48-24ec6465297a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8b64f71-cfca-4ad9-bbba-a9fea2759a20",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cef3c0f9-e069-4af8-94df-e4966791d30d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "15649b3f-70f5-4652-9246-fa92c0e239d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed11bc97-eafd-4499-a848-d9362e6c54cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c3740a59-7853-4b80-aeba-7a4cb98ab3c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "864b8755-32a8-4c44-88a2-10d19afc90ca",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d377506-511b-48d0-bc5a-34601052291e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91c7d241-c014-4c16-a0c7-0138c8d20f9e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc015f5d-76ac-42d9-96ed-774e83fdca11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "018ceaee-7137-47d4-953a-c06c723028fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1a82ec4-a7c8-45bc-a604-bbf492e42bc2",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe68248b-1d51-4560-a3b8-66672dfe8324",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7763e94e-d533-473a-8729-d1546ef4167f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1996b723-8c2c-486f-aa58-e4da24e4ebc0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bcc1a75e-b37d-4164-bdca-5d2e96dc86fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3832106b-cede-45f7-acc4-02e1461cc8c8",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86aa07ca-0381-42b6-b6e4-92d936f6c403",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90a7bd33-ccd1-408a-b838-aa766b19d0a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "603b860f-bae6-4dfa-ac55-574233e6c85d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "050dcb2a-e2a1-4ad9-a2bb-006321709298"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61d99607-e0e8-4443-b294-b545ca0b9046",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d572ad1-32a3-44c2-bc85-2e296d4017b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "185dda61-307b-4d17-a882-7cb47300e61a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87425fa2-5a16-48b0-9583-cb206e579e9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "baa9a886-4265-4a5f-ae75-198bcdb53eb4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0130e71-ef4e-49b8-aa81-3e444bcf2a56",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7084fe0d-d320-46b6-8e35-90340d4f0c02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b92d105-8d59-4edd-af54-f566511443d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40bda593-ddca-48c1-bc8a-664095bb6d46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ed2de288-a272-4eec-8872-3a6afad7fd51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5409f91c-a587-4b69-bd12-8e1ce3f5d8e7",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9efd84e1-ed40-4036-81f9-3340a7e2e721",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5151167-9216-4e56-b807-2146909d526e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4773d7c2-4de3-444d-a929-cfaddb9d95bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9708e980-ba56-4134-8b11-975cc21ac077"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77438033-2605-46f3-80f0-bf3ad5f6785f",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4019f593-96d7-478c-b1cf-43c0f927ebfe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "faf846ed-cf1d-43f8-93ca-6e619cc76906"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e07ed58-9528-44b4-b1a7-27978367f75c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ae52680c-4564-48de-896b-8997fb231411"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e64174d-8db5-4b17-9125-efbb6128dbf8",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e194323c-2cb5-4c11-b5a6-b8b5ec5f3883",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24c23036-26bc-4689-92f3-cb5ecc0d885d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "520ce222-ee07-4094-a242-5118591a88d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8af817f4-c584-4f97-b2cf-3c144a42d67e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9750fc1e-744e-43d9-bcbd-7d28f0940581",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e87a04ed-5a91-4bfa-ac9f-b571dacca019",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0496893-1445-493b-bb5b-6333b6e21a93"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6ad7e53-214a-4ebf-a850-be29b80a0757",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d072f3e3-ab44-491e-a39d-a0d260da7c7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b529100-c575-46c2-8b98-a864e96ac4c3",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c343fe61-ea1e-44cc-ae15-a13a7e149f2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89c2ccde-4c84-46cf-9818-7db7062c754b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ed7c427-0efd-4f85-b66f-3fa7628a17d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "70fe5ce8-4ebf-41c7-86f2-be8124da3df1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5bc4e3c0-e980-41c9-a21c-707af4ad225b",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34dd9cd5-fc8d-4912-b5ac-97138606f47a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29e34554-7a44-4cd6-949f-55b8d05d7a56"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13874950-4372-489b-b8d2-49081fcef66c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0d12c022-2222-4885-ac00-011b0a1b79cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f662e93-c6fb-42e6-8677-bc37b54becab",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "167bacbd-2344-4fbd-8db1-7fbda1ddb836",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ec51067-af8e-4284-a418-859cb1bb35ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdd949d5-990f-40b2-baf9-dac03ba08f8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6255a864-a2cc-428b-bf37-63aeaeba68f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68e08977-8563-4d0a-88aa-30cad0b82b27",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d656989-89ca-414c-84f8-364c3738fab6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5aebfda0-162e-4855-8633-2eb4692f673e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35567aab-40f7-43e5-b8c7-05fdf3f206a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "56031ff2-582e-4716-829b-b6eecf46d54b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eed63e11-01c3-4595-8474-f1b78b7e2a47",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "494cf602-1dd9-4a44-b8a6-cb5e671c6ce4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d83f6cf6-784c-4c66-be06-97de14b2c34b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f191eaf-b358-43f7-918d-d0361169a371",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "37bcc54b-21fd-412a-b0f5-3c60dc070c26"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "66a6c2fd-7c3a-487c-8417-042b998cbda4",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "df29e8c7-eb8c-4b05-bb59-e4a4292dbaac",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7bb5f2e-43af-4453-a78a-32cbdf5ba594",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "78fab4f3-4761-4ed7-a14d-c7066352ddb6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "021ba7d0-640f-4478-ab26-1affcf16343d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d1a97d7d-ed01-4437-b6b3-2ee1bb714648"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "64e5acc2-8a0c-4154-8ab6-a3f342771d01",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6eebb8e9-ff22-4fc4-b8ea-358d73c75446"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "4faf46f4-fb34-4034-82c4-a8164e0026d1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "eb391a4f-02bd-47dd-851d-0f07ecdf17a7"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "faae058d-6368-485a-8f62-3d8c7980b0b2",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "492dbb00-0c95-4a11-8d0b-0b43ced994c9"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "cd036e06-5759-4f6e-9a98-90d8d919c21b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e9a8fd3f-8b9c-4307-8adc-fc10935eebf6"
            }
          }
        ]
      },
      {
        "id": "fd3cb872-1325-4d1c-9921-4e38599a9df1",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "ba5d7b22-d22b-45ab-b7a3-1e2c25b6babc",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c6c9f45b-e98a-47f9-be30-2dd3a71d4cd4",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "07a3ecc4-9489-4c04-b2ea-dae0241b3cec",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7379370e-e5b5-4a92-8b6b-d40bcfca38c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8a015b3-8310-4564-a24d-f36f699745a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d8c86e6-7dc7-49b5-8943-659ae228bc76",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d801634-13f9-4703-9b38-10e93d421112",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2645af3a-19bf-4fad-8cd6-904ac254de1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5df70bb9-91e0-40e9-97c1-84ca17268689",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0c5a6dc-a3a8-45a8-bc6a-7008ef3e75d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "906b8fe7-cfd7-48f9-a8c7-c0e125ce8d5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f398224-0bf4-4558-a386-4a61a8c9ea71",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0913b96-dca1-4069-a084-cdd1ccbbcd69",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3483f7fa-bb04-4c56-8a04-7003aba11f88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6ca9f8a-1578-4f73-b5ed-0453ec0ea856",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e05a4f01-1f22-496a-91d5-b5c741361e77",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ebcc30ec-4055-40c3-bc7d-04a50df48351"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd7cfa83-456d-4bc3-b814-fff8d4902f44",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3584c0fd-70fb-4397-9506-97db3a3562e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a17df4a-32b7-4bc4-b043-57013f48f69c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03d1a383-f22a-4fd1-a456-940880a014c1",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee92e4e4-0237-4e4e-a46d-7dd66887434e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70cde442-9fe1-4b6c-aa77-683db1344335"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "01b90ae4-d517-490e-a4e8-a843853c5955",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "044da6c3-ef45-45bb-ade3-cbb87b600e7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64442cd5-aec0-4597-af7b-16b06e48daf3",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77cfda69-4bfc-4ba8-ad02-dd953f4aeb6c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1438e096-9309-4cde-a9bb-15420447f1ac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1f64f03-b3b2-4f3d-bbdb-0f280f435e57",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c4ccafd7-516f-4af0-9ccd-27f01f1fbfba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f361e18d-10af-48c2-a1c1-fbae845eb92b",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5c1b0cd-2ff4-485f-8125-367dd5286529",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2039547f-d3ef-4592-8559-db58390163db"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a843aada-88de-43d0-b263-ad4669b3bf63",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6f87650-5609-4622-b808-3e5d0f077c99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd0f40d7-1264-4037-99dc-81c36248a313",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4bac9e1a-f6af-42a5-aa9a-738043e83ded",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bb478e65-c767-4e25-a59f-4a0d8fbf039b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f42c107-ff0e-4275-ab74-f71a483d65a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55dbea63-4c94-42b3-b6fd-583d69bbfd69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "041b4209-baa7-4301-b2d2-316ef955f215",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bee575ac-bc34-4b97-9a2a-46f7ee4b1d56",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5d18a2a-24f4-4ba7-8fc0-e883915e0808"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "97534bc5-c334-42f2-bbc6-b63ffa24d81e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d404ecf3-b533-46ac-9e26-bad04171f63f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e176f051-6b86-4836-b2c9-2be66cef43e5",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f209a34-25ef-4a0d-934b-834b27adfff4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2e5d436-e52b-4bdf-9f8b-e0a0e2842627"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "469367f3-3a9b-494a-8528-6ac2fb4bbf09",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d94782f9-f589-4177-b23a-8d67f00f9e27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b10c663e-cf5b-4340-ad41-4c805cd96298",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb3d4546-6983-4ad4-9479-eafa4d1dffc9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2b4c1250-508c-4fad-b1c4-31806647ec9a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "82668a17-f3a1-481d-ae3f-9fc50ef22287",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "853641ef-39f3-4cae-aa5c-a1fe3d52688f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42ecba32-5b8d-44ec-b14e-5a98a6bb4520",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "527719a7-5351-4303-b48c-7b657c36c93d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "80806ddf-dc0d-4081-87f2-4a8e32dfa75f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "78b88451-ad52-44bf-b073-6608813e0d94",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e007a12e-0212-43f2-a83b-e8ca8dae1561"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2b5befe-aa01-4e59-b9bf-769ed66d0705",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3515c7e8-2c18-412a-aa69-f232129f5dbb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "26f85675-ea77-4b56-a8ba-5f42b749ea3a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d3d2464-5d0d-4ec9-9e88-089a2919d746",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e2d1af0-53d2-4d76-b332-574d34437f61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b43496d-e9b5-40d1-8d29-767f0ad1d860",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "959e8fce-9174-46d0-8903-fab3dbab8087",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fbc74100-fc99-440c-ba8f-11aa4340cb2e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a49b648-214f-4500-925c-9693ff3c2b0d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "290086cc-5a26-46bf-b689-e7ade25d89c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "364dd404-2956-4429-8151-011531b3c6e6",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba39ff55-6f97-400b-8e8f-41d679ece089",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d71292b9-ddf8-4600-a5bb-2f91af7f1286"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfaaeea4-5f07-46dd-905f-7beac2bcb1e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26583fa4-21d3-4f61-8b3e-4ffbf8b1b251"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4228e3f2-c6da-49f1-a850-aee9d3b16a3f",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2feb4511-041d-43cf-9b37-ca983e59300a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8e0f2b5-99bc-47ed-a1b5-b4a9e5ede9b4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "74ecc0c5-0ab7-4ea3-a8d9-d9020bbd6d92",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "31822cb1-a4e3-4c10-b0b6-61bd7f56026c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90ffef10-4add-46cf-9996-3ec0c25d5bcc",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d37d77d5-5b2d-4042-bcf3-a5a4756a6716",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6150f44d-6ca4-44d9-bcb5-8df7a7f8320f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2b6aaf9-7c27-47e3-b36d-bae73d5a4c80",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c5608028-52ec-4e77-97ad-f30878b72445"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af58f29b-0fec-46d4-ae31-5e47b2ce041a",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b812327-ed14-4c53-99bb-490ca3e508b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3679b6e5-e628-42e7-b50c-48dca0deb1a9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cbc5e7c-bf0d-4e3b-9b6b-2ca61a4ea291",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1f0e342-2f0c-4796-b7de-114bfff72230"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3868f8f0-75fa-4afc-ac8c-3674916f7e51",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6778ac0d-47b2-4c4a-b538-15efcff0e821",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25cad339-80a0-4a5f-b6be-8172a3367ad9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9f08fea-92c3-4d23-ba74-a0f22b62d8bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e551f2ec-a69e-48b8-b850-c90dab06212d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c79c317-b91a-4421-a0bc-527ceef31af0",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82f3dfb1-5064-4b70-b25e-52f614e46bef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3408b23a-9cc1-4cf9-84c4-e4e4cbcda0a9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a03d7ea9-b187-451e-a282-796904e68583",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c4e40c4-ef13-44eb-8013-2048b932c7fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11c386a8-8384-44b5-89b0-8bb1d502e817",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d76f6c0d-e23b-4adb-9c79-60d103069ee5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cde49255-f52f-4613-b6e6-6460fcc3d191"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "80e06e19-17ea-4972-b827-59e08967334d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "30235c7e-7c88-4ac9-ac36-8aa6a535800d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ed62cd3-acf4-443e-9d4d-d689219d0d94",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2841e7d1-a642-41a4-a25f-eae0a62685af",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1f6ce3c0-5d8d-4408-8415-bef8d97e5ab5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0aadf138-70f7-46c1-bf71-3da1cdf92846",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ffef2bcc-31f2-4c4c-ae3b-0bafe7c5a0da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "963bab96-c1fa-4ab3-819b-c79ef7a11474",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa82fa22-4b9e-4ecb-a5d1-85af43a94aad",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e5baac20-72de-4768-b8c5-91c11d52dd64"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "375e4973-fe43-4d5d-b8dc-828ffa1afe1e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b998a62-068d-4c3c-b399-cb8c590497f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7153df10-2426-46fa-bc15-c472ce05074a",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f298b864-1d9e-4273-bcd2-f3dc2efb7fbf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d1529d63-5927-4bff-904c-ba3b3185652b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ca62a57-c86b-4a66-a006-b010aaa45bff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7896a989-37d2-443f-a316-17c006d9f9cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3dbfe98-aee8-4c0b-ab7e-bc1940926f4b",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "237c41ef-77a0-4992-af55-c2f8028e91ae",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "93d4ecbd-2358-4c4f-a158-fec9c8ca8980"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a20c64dd-5a51-49a7-b50a-5a069ecfa05b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a9c061ba-7fd2-4a4a-917e-0055de556d41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "713996d0-c2d6-491b-a71a-db2e4ae50505",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef3145d5-3844-463a-a3ef-275d0b66ff94",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23cd506d-8b3e-4293-9883-ba49f07334dc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "82260cb5-e0f3-438c-8830-b627e21dc85f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3a2853b-e2aa-4854-bbb9-a852a2e5ea7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ed718bd-893a-4da7-8a59-65eaf9f3d4e2",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cdd18ff0-57e3-40c7-99cb-0304cef737d9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1fb664bd-4402-4713-b4ce-8a542d97adf4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb79a79c-a174-46ad-b2c8-73b4b7005a67",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86e0422d-575f-4fb0-ae77-d3f5740ef36c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35c0421e-82bd-45b7-be9b-d0f8c78c1944",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d949f68a-5c6a-4b20-b06e-78bd52f842ea",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "46b2ac84-60d8-448a-9062-2f3e16688a3c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0e2d9f5-b262-4f5d-9497-55567dafdd80",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0bbd3146-3c9b-43d7-9ad8-d8e7b9f0bbb2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5105528b-5649-4cff-8342-5eeac02bc287",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed3fa077-8bb6-4c5e-8860-0f70a8bbb04e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f50e18f0-e749-447f-b165-d9a0ded53dae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0005436-d261-46c4-beda-84f9cb37e73d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ebd5d284-87fe-437c-ac6c-1f28012da0e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e6354e8-e1fd-4734-b2f8-693567404dc7",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "843cad43-cc62-4911-bcb2-10e8fee01ec1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c8448763-9a3a-4827-beca-44338db91b63"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0684f1e3-a348-4cf1-8a5a-8356a45ed4fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb5de66d-fb0b-4ee6-a654-cea95efb4f6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b96bc2e-f309-4e39-a4c6-dffa8a120e21",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40d08de5-cecd-454c-a3ed-67ef2d3d9815",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "99905f3a-2965-4c16-bc45-d13af5640e0d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ddacd54-6c62-4faa-bfcb-c1465f29ae3a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b67e05fb-e688-4871-bc46-9358f6c70b66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "778cba53-7bb5-412e-8eac-58d8ffc99c34",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69f0d0f5-2b8f-4f80-9dfb-cd6bfe95885e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "04713d6b-112b-4377-acac-c9f7903cf792"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8bcb048-5b85-473d-949a-cdab58fccc6c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39bb6198-a50c-46d8-b83e-13a950b39327"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4524862a-66bd-42dc-8444-f5f44dba36d6",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2eecfd82-e574-4538-83d9-ff02325c91f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bfa48b15-fc68-4946-ac49-ca5315442f73"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "414a06f7-00bf-4623-ac75-1a32e0493907",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a87630a3-2bce-4740-9017-f93f1304fe30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8b24f61-0160-4c9c-8273-6420bc1ee342",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d617c369-ec36-4aa2-b37f-70bdc8e27985",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9bc60d2-751c-4745-85a7-cec3b4f04bfd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4e6971a-dd5a-40b6-b705-c95c39a381e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "302838ee-5d64-4c39-a699-4fdceedf5b51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3102ceb9-dd70-45d5-991b-eb459707345b",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b59699b5-4ef6-4eab-92a7-87d2dfc5e630",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "697d3a44-3e99-441c-b85e-46764cc8afde"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b19a4726-8b13-400b-abba-c64c2cadb28c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9e4a046-c5de-4dbc-bb5d-a0771efdf688"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05130e08-88bb-4073-b156-a512779c26ec",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58385452-fe47-4b17-be6c-b270a342a84a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4917b5ed-2a45-4ada-bfb5-90463db744e2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "497ad7ac-26fb-4523-af30-bc3a7443ce72",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9045f8bb-afa2-4a73-91e2-fc50766546c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbff64d5-6f21-48da-9c46-a9b562dd5eeb",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ca8aa29-c57e-48bd-baea-8de12a36abc5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "105f24f9-4749-423c-be45-cda0d7d478b6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6e21656-4152-4432-8260-f9255d124c07",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e914b1d6-7c0f-4cac-8056-81598f9911b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2cd6d38-6440-40d2-b511-cd34e3b03c7a",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5c44b89-dab7-4a10-82ae-67cf038cee67",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d300b0d-78f5-4f78-9248-595d96f34088"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "71b41cd8-1dd7-4db3-a3ad-c85c17fc1148",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4e0ef9b-d7aa-46a8-a340-229eb2ecb32e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "580c5142-7a99-44c7-ba24-b27a5abcbd82",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1a4c51b-8449-4449-9f96-534b04ef7061",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df73e1f6-d835-4da1-84e6-8940e4d04f52"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f7afd8c-52a4-48f4-b090-d7b3fdc53eb0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3fb9afb0-db4c-4c69-a9da-992f3b5e09d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a601cea9-2fbe-4ec2-9ace-75f9392f6798",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a77b35e8-c9ff-4983-9a23-55763ae198aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64225cb5-5b34-4494-9096-3c0d5decb525"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ffccb6b-cb0d-4566-aa12-b0a4a3f615b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8ff8a3f-09b8-4b93-b21d-d3d1d8ed30e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48811f8f-e7d4-4060-b2d2-e5d3b5297515",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40d66fe3-4808-408e-95eb-8a14d3f39d6a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca126460-c923-434b-862f-c16e71bd81be"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7410de92-957d-4fe0-895e-997ecb7759c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23197d10-f34f-4b0d-89af-76ce155cb9c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5011fd9d-e27c-4f51-b095-e2aa4c30c42d",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14e71dfe-cc62-4706-bfde-0860dbe37be4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb0c8d70-f5e9-439f-9bbd-357f94195cae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "35d6ac5b-3fec-4a88-b740-fc84cfedf508",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cca9be1e-3eac-4e45-b514-99566b589710"
                        }
                      }
                    ]
                  },
                  {
                    "id": "451a4d8e-2be4-4c58-917f-4e45d92fca9d",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "018d14d7-dc06-49ac-aee3-17d5e770e33c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3d832ed-1636-4c1e-bc8f-fc9ddd88990a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac42c8cc-ace6-44d8-83cb-156f2654e663",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79d541cc-1ca6-4fbd-853e-ec8087e9ed9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba671089-96b2-4500-bd78-f38c39812406",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ee4a999-867d-44bf-b050-b169eb7e670f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c6ccf6e-071f-4669-ad93-189c5c10c8ec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d62b2f6-2be7-4f96-bb5a-5e56ab092990",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f995c6b6-7be1-45c9-b90d-66cb54d89eb3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56ed1742-4748-4012-b722-60534a08e5a9",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed13b91c-0819-4a92-9b2d-da007e612df4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd032aa6-da4d-42f7-82b1-a411d9ec81d9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b09b753-228b-431a-922c-9f087e526988",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "997698e9-73c3-4f1d-bf1b-6a5bf44a4acb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "acde3f32-25da-4aef-aa63-38a0f44f852a",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ac22020-823a-4ab4-9125-61983747f6d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a86a0ff3-3215-46b6-83ca-d817ec9a6d9c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5529ab8-5300-4f9c-87a1-70a7fd58c199",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "068d675e-cc54-43df-b978-bc8ac0e22aa0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8939a1b1-0ebe-4b5e-8f4e-642922f88a5a",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b452f941-abe2-4764-b9ac-f8d11f7fcb52",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7372c890-03f4-41a9-9ab4-947f353cc183"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b3c3042-9712-4a85-90ba-0cceffc5815b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0435184c-46d3-4e7f-8404-546925771cd7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24f8e3ab-ac3c-424d-a6fe-497df087ff78",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7cf49f8c-a12c-48a9-ad5f-40ca546bbd72",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e00f6cc9-5892-4263-abe7-3d218d426e50"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9947dd0-f3da-4613-b22d-53cd131fd6d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5598a771-7e0e-4bb7-a01e-93c9e6161a86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e769e44-7498-45fc-951b-03e61b7d9d1a",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f08a67d0-0147-46e2-870c-249e067df9c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59606067-bd78-4027-9622-682e4f2d3b8e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2de1ce0a-c672-4692-9d58-9c1364a4e508",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24fd8e59-413f-4212-bc3f-d34169b487a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51e64497-3a47-4cbe-b6a8-9606f7f23062",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "604d0335-cf40-42de-9d58-a34eb39dfa37",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1dd5f25b-badd-4da8-89fc-2ba226c00d42"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "52302b8f-51fa-44e9-ab56-2bb39c266996",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb70c7f8-5446-4281-a521-724c064fb10b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8308cee1-de43-4a2e-9e82-2c56ff8c41c6",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fcb71cd2-37cc-421a-bda9-d6bbe9232598",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c39759bb-71b0-4eb3-aeaa-10f06c292ad0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef541bbd-100e-436c-8b2a-777c2556884e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7997cd8-235a-41cd-97c9-dce400f737c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e037c0c3-f92f-4d54-a8db-8d4a01f85c3b",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b87a62f-7853-44bd-b5fe-178e3040a5e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05e54b02-04fc-4635-aad9-19cf4bbbc218"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "18a5eab8-4e9a-4838-8f43-3cf08121de22",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "34a7a953-5711-4aaa-9ef4-21d8368b5f89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40ccb5ce-b033-407f-8365-cd9ce460ed1c",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38e34aa6-c497-4423-93da-3517b34b94a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05a27681-e8f1-4859-b995-05766378e23d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "07b43158-5e46-4e6c-a3ae-dc794c73513a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6567e4d0-f6de-44f4-9e3f-398f9a2f3458"
                        }
                      }
                    ]
                  },
                  {
                    "id": "038726d5-f1a4-4b6f-826d-9d831c732883",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e50400df-8859-4043-8944-e17e5d046149",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c3d5b88a-d1fc-4c1e-adcd-4c098b7e2dba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "faaf27d9-870d-4b81-ad5a-1e11f303ef24",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7cbcd021-d1d4-4142-8a0a-885a450dcd02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6a142e2-37be-4f40-9e20-2e4720ef0cab",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0231d305-96ee-4628-9b95-2d9d4e3565f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e229e68e-e0a7-47e4-b551-0e6b1c5be5b4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "653f7517-2fd6-4366-8919-04e7e15e5581",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "262a3ff1-1795-4eac-a0f5-d7cd28f261ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f9d06e7-6193-4daa-bdbe-8dbeef214b85",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f5fb062-3dec-42da-a3c5-f4da3573ccc3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da4224a9-f343-44bd-b57a-82002f12ada8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f625c9a-0bcd-4bcd-9ab3-e46b5617043a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fbfe2547-2163-457a-9552-1d19e05986a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84a7c8ff-8928-42e4-b58a-88f904454cf5",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "947ab5d6-660e-49a1-b781-6d9585c544bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "519cdbec-e759-421a-96cc-a88fcd8c6d34"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d1bd6ca-1d9c-44b3-9e38-7970c733c596",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29af5d43-7b8e-426f-9a81-2dba629685dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78f37bcc-35d3-4865-a410-fa9438a93d51",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "603c0a2f-c77a-4539-a1ec-0ec850548cb7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72fe2177-60fa-4a4c-87de-7cb0f64a92af"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c02e924d-1b8f-45f6-8fef-66597e193a53",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "addb39e9-1f4a-4077-8b7c-34dc0179e245"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd582645-5a76-42a9-9cf5-aef496a26c47",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a6f6419-4b29-4a1e-a8ee-65c3a8007927",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2be7866e-d142-43e3-a1b3-a4f829b15c07"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "74308dbb-5cf3-411a-9d3f-3098f0a54d36",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a8b6836f-2238-4e01-80ca-63cc11c1df5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87c75196-8da8-44ae-a7ef-575ceea2dfc5",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e243e073-a1e9-4af8-b55d-ba0c6b748c24",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eac24a9b-642b-4d32-b638-c3f3f924de86"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "92aa0d54-24e2-41f8-a59b-28e9198cbddf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95640f21-73bb-421f-99ec-9b56b6941f71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b68b078a-1f41-4163-82fc-3ada407215a8",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2cef8fa-8967-4c4e-aab0-56fba47dfd05",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2661bce-3914-4f3e-8253-94df70fdf9dc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c335e87-0e7c-4a8f-897a-7c75a5cd0c72",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "140312c4-7330-4586-b9e8-a181eb3dc2e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac904fd1-b554-4030-a2c2-d772da148077",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f312f906-8bf0-4848-b763-2884827a2b89",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "69129cd9-cc6c-4db7-9bb5-2ed0d95b378e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7bde6f0-8981-41a6-bbf9-fd04f66d0252",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28098fd2-4cdb-42a8-90ae-fd6e44324d07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af18439e-c9ab-49e3-8643-a8c95d0bf40d",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e76c7471-1e7e-4ac7-8c3d-55a23af4b6cc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "43c96723-22d8-4150-987b-fb9b33120c33"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "41bb4129-c56c-4da4-aef6-4a1c5f188d2c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e86f157-141f-41da-bba0-1af004dfa2f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3b3c298-ef88-4bd5-8b7c-7c3cbd48c6fb",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac0d14b5-3901-4257-a200-dbd61e99d896",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "27fa7e26-3b95-4eec-b734-f201fe32b502"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8360a94f-a4b7-4af2-9514-1452b3f31c02",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f65fbe1-14df-4dde-a3c9-42fd3d654816"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e22f7e4-afaa-430f-86cb-23df1c815bb2",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e993171-9572-4a78-9692-5a08e1c936fc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2b0cc75c-0530-4ef9-940a-e59c307c8e1e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6466a0fe-b917-466a-b47b-836d2abab013",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8cf2b47d-e5a9-4759-8bd3-d8a1fd087537"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ce28630-923a-4ce9-ace0-048e43490ef5",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2911d889-9263-492c-9088-119990e1d2f0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a551e247-9685-4c70-9300-23496a93db1f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "abc93d4e-6e61-482e-98fa-e597564ac014",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7de16b1-7311-4b90-8089-4b490d5bcd28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f7dcbfe-ecf9-4d27-957e-c5173f5e80cc",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "600f6458-c22c-464e-a878-66c5fc6b934a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c49341fa-9ad0-40f3-a704-ae3dbe2376f6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fccb5694-b699-475a-bbf7-6fe54649c5f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "444bfe86-7f5c-4619-9573-7c30cd0f6727"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c12c6ccd-d47e-4c7c-9b20-422ec32cacf3",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "130acc6e-8fff-4fe3-830e-ac964d6d91e1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "80e36ce6-cdd8-40cb-8d2d-0d65f043c80e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "02c7201d-9a37-4571-a2fe-90c3d6af501f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f581220-1cf5-42a8-9b13-a7f844b50f30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c36db390-7b34-4ba4-81f3-7afc3e3b0032",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dacb15fa-3520-4b12-a5e9-d67f335195fb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "12836b00-3fb1-4c0b-a0b8-085ac4fe35e2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "75db9082-8904-4a37-b93c-dc1779b8b6a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "04c02298-8e5b-47c8-8a11-5f8e04cc75e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16836878-3b8e-4fe0-805f-85df896f741b",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73896240-ab80-4e64-ae26-112699aefdf0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5d343433-b10a-4ef0-890e-0208dbeae990"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "71ad64ff-c8c8-45e6-bba0-f6dc24359f79",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "484c77e8-6c85-4805-b397-2c785bdae0ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ed1cc36-855a-4826-830c-0ab756d65ea3",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df15da0a-0209-4d02-8b21-180c007e28f4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "210420f3-2f63-4985-8208-4d494a26d13b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0331d719-0ef8-4acd-873a-4c545c6d5015",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0565d0c2-707c-4a3f-a9d6-642a4327db77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94d9f727-232d-477c-9263-7ceaeebeb210",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1e93ad9-6d38-4f5b-8e5f-2602e73f1677",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7ab22c37-a805-47fc-9a04-02c0dde32342"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "22231e85-7da5-4553-afa7-a96bcf217b43",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e7a52b9-b2cd-4171-944a-11649f305b52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71335500-aefe-4a36-b0e0-521fe2ac27c3",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4153dcd8-b40b-4420-b5ad-e44377b7b9a0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7db1a6f4-517c-41e7-8c5e-1e8a3e0671f2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fc89e5f-6eba-4905-ac9d-1a93662b2bdc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "788b8156-ce41-45bf-be89-95fc1385be9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60f16443-d2d7-4b2a-852d-0aeccd309070",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7df76440-7dc4-47be-a28e-833fd8435128",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cc1d088c-0edf-4d87-9cf7-f0eb18445a05"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e6c8944-6818-46b9-bd61-79318fd172f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88271697-5281-44ae-a95f-4b773648c350"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ea3458c-48df-41f9-90a0-08b50eda7e1a",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0470ea8-d163-4bfd-a51b-05e147d713d2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ce78684f-1824-4c66-a959-a6a5eca13c5d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bae5c26e-c709-410c-9e09-b0c223fae481",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8c692dd-e219-4cf2-bf4d-2ccb7049a2e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d788e280-ca7b-4f50-856e-53fc9417bf75",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e90c2f0a-3c42-49a4-8c4b-87dffc604395",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b210d0a4-5d49-4d9b-8d07-799ddffee947"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "62906720-a886-4b69-b3ba-40301ce348ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50d11c66-df61-49b9-8855-e84b2a2fd098"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b81d375-305e-48ba-8839-557d13988128",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab300edb-e144-498a-ab66-a3775cafaf71",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c4ce8012-9a20-4985-9b5a-d44fc1b7426c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bef3f93a-978f-429b-9bef-79d1d3b3f4ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ba8b186-f925-4113-887a-4cd35e4db26f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a15a6dc-f9c1-430f-9e61-a45711f758ee",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbea01c2-1740-4506-a20d-6737b4257a28",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fed873c4-dc8b-4061-9c65-730405968457"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5b8fe5a-dbd7-49a8-8dd1-f5892872697f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c843ab55-dc54-4282-90e3-5bd19cd957f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "969247dc-e103-426c-b3bb-184bec060d16",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6eaa67f7-d972-46e5-b870-9342d46bfb37",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3ac3557b-cc8d-466f-b8c2-3976429f5a33"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eade0921-50f5-41a6-868d-3d1b2cb58962",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "358443d4-5ae7-471e-a360-da3a7a0c2fd9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2f1466c-f769-4666-ba77-3abd2153c108",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd5292f1-f72f-4e00-8c0e-de44dcf18cea",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fa725d21-e622-4597-9cec-d4363fb16c64"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c09b49d3-6511-4ddc-a5c9-b3cd8b237c78",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0824b44e-a36c-4295-a75c-604de4f84e90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48ef173e-b1e8-4f86-9bfa-2cadc9fd23e8",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9bbc1d37-dbd7-4177-bdb3-80dce43176a9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a844170f-e16c-4ca3-991c-4bc0458c1afd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "391026b5-5914-497e-97d9-9f759e823626",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44169bd2-f77c-4836-8975-43fe810bbbf6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d90f9ec1-c82c-45d2-8cb2-c2124b0ff1d3",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0bc92918-f93f-41e2-9aab-74a41e1667e2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f7422bad-5876-4f15-9688-d01e4e048ac7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc0072d2-266f-4a6d-9171-398a9b926cd4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3921d10d-aefa-4736-9c54-e89a4ae8a879"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4d7dbcd-f9ad-4748-9d56-36e9ddb9a2bc",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff849019-5617-4f22-94a5-1ca49fd1bd06",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8e3819c1-ca22-4444-afe4-9427ff40c65f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e238da3-2647-4451-aceb-9a5d3528a9ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a12528a-74a7-4a2e-a817-f80288a2dcfb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2266c7ea-4da6-43ea-817e-5408847d9b6b",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "638b9e5b-d37a-495d-9994-6eb75eb34200",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5b93b60c-4493-4533-985b-2ada04dc9910"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "22505bb5-4abd-495e-9969-a2c7d4ea3737",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3993553d-1221-4e7c-acaa-b8373f963dce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0cce0586-19f8-4b2b-a813-0d26d73c7dbe",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ecaad86-336a-4fef-ade1-787ebc4597ec",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f8f4603f-8693-429b-8aae-94a3d0a1fac2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b50a21c-794e-496f-8cfb-b4b13e19b31a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "197b0dc6-59cc-4e0c-aad3-af9224a33cd1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fcbffea4-ca1b-43a4-ad8c-37611b45e07c",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa103eca-0552-4d9a-8d23-5a6987c43a9c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c3183750-e38c-4a7e-b42f-c5766b13b751"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "84da2e83-e937-4a0f-9186-b6e327b14f6a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a715391d-8154-4f91-82bf-ecb277cd7125"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7048f2a-4b23-4c08-98d5-fa6d8b8793d7",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61df17f5-5625-43f6-83ff-3c5a0e5174b6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "21bc19bd-4a3d-4759-bcda-c8bdec47e324"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5283d39-bcb7-4c14-adab-cb1583ac70a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "959827f0-e152-49b6-8545-bbecaa08dcd5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00d0c118-109f-4db9-80d3-22b127baf823",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dcdb1d5a-1362-4a14-ba57-e364c610287f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4378f338-e00e-4090-8f01-7e2b64b07d50"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f821c01-2d51-46ae-a8a7-4654fe3b5eaa",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42bf9897-9f54-4aac-9fb3-719f6e4f649c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad5424c7-68af-483d-9e35-7c53ab5dde20",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90f76772-29a1-4ee7-9534-1710f04934bc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1a09cbe8-0569-4866-a02f-9a51fe485f3e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb2c7384-c73b-4858-984a-7efa2d0fd347",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b68f9791-fec3-4a9a-9a33-5ef436328c1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d71498d-7e5e-4893-9e6d-8726b7d91c8e",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5877b61-87da-4df9-a5f6-8403070f87f7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "38780c98-4fbf-46a4-a456-a63958595fab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b79c989-4769-4bb0-9318-5da313af33ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "13a1650b-7b13-4082-ae28-7b01617a63b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9152cd0-68bb-4205-931d-2bdc78f51456",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c032577-a555-4d26-8eda-e8ba0d159da3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "205b40bd-e3aa-4cae-9571-51a7dc68051d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e15441c2-016f-4862-9492-4e66c1bd18de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "000a92c1-f544-48f5-953c-05fab48f217b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41999a67-c1c6-49ef-8e89-9afe83ca4527",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "040abee4-6260-4784-ac68-5d294ddba87d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "60606507-1af8-428b-aa32-98f2915eb289"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8a20208-0bf9-45b6-969c-b6906ef820c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67f1b959-aa3e-45c5-a647-e2902c67565a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef8f9eb2-2039-49e9-95b4-6635eb306f12",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa5019f0-f22c-4a18-8d42-381723115b4e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3184b8b6-8063-4055-a0b4-29e4d7ee3448"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "57e623dc-5268-40b9-ab07-984e74b0789b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "343dbcaf-76d9-4d7d-bbda-6ce00782c741"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9dac2142-04ad-4193-9b29-16130b9e18c3",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86c47b88-43a0-4873-8b62-ea003b7b45cc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8d01f24c-380f-4044-bd5e-eb801ca58e11"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3aafc58-2d9e-4006-b425-c2cc79444f3f",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad77bb64-0722-4f3b-b309-1fe5fa4917e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b347ee2-bc48-4211-8644-e8fcaa2f72f7",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e3a363e-2f1e-4a42-afd5-612475512a54",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4f1f85ab-006b-42b4-9efd-31160770c5ca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bb2dd61-1dfa-4ed8-9a90-1c0784303dfa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c466e892-122c-4d9b-9422-97e7d2d76913"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b3b4f673-e71b-4934-8684-b87278fb547f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c017ee1f-c2a2-47e3-a7c0-02f116f9d845"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "fc80b5fc-ddbc-41cf-af25-88ad1920c6ef",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "1ff13925-7c65-4676-94e3-3e9689783fe5"
                    }
                  }
                ]
              },
              {
                "id": "c81e7258-1336-4ec1-917b-d6bcb0ca755a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "967e90e8-2ee2-4d4a-a92e-1d7ba3c19d34",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e2a57a7-dbfd-4226-8066-ed1ed993bafe",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "ce74dbe5-3d5b-404c-9796-2bf581231bcb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffcf9b98-841b-4c80-8613-80d5629c963c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7d09e02f-dcce-41e8-949d-1fbf091c2e76"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4372fffa-d5c9-4df1-82f4-0dac3a65f25f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5796f03e-978d-4f9b-ab32-8b23ab60c735"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d1cc729f-0cc5-47e4-b92c-7caf7508cc6d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "68bde3ed-add4-4c45-9408-1e4574dc22e8"
                    }
                  }
                ]
              },
              {
                "id": "530fbb20-56e6-4f9d-a38c-db6c33e17448",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "301f5658-7b81-4997-9196-a38a8aeeaa36",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3735ad59-496a-45e7-8625-d758c84260ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "ae38cc79-75e3-42f5-acd1-27c6b4857fb2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0bf9f8dd-a299-43b4-b43f-2a26244e482e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9fd5075-d47e-444e-9ca1-4d7a273d32be"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "1378309e-f7ee-413e-9f42-481e3a667b11",
            "name": "Positive Testing",
            "item": [
              {
                "id": "32ed9e30-9ad8-494e-b181-fb98e79e65c4",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c743ab5c-6242-4fb7-be77-8f7c48c11b7e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "0546ecef-fbc8-42a6-9842-2a9a03088e65"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "31a6f15e-c788-4b6d-ad47-4ab6bf0064e3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a50ca4b2-1d5c-429a-829c-2d9c0e19c6ca"
                    }
                  }
                ]
              },
              {
                "id": "006ee747-1111-44a2-b804-05dca7115149",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "bc0b7f16-e3e3-49ee-87bc-20b651ee80a6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "3d510298-47fc-4d86-8f47-44ce5250ee75"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f72c52b3-0935-455b-9fff-fe5f98635ef2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6dd3770a-32c3-49b9-bb1d-a0196a03b964"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e48581a9-991d-4483-a96e-a9c63bbffa87",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "07c61ebb-8455-472b-818f-c80ac108fe1c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "70dd3839-c554-47bd-bcff-5ed147337a5f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "38d7ce41-8394-4fe9-92a7-365e3376b508"
            }
          }
        ]
      },
      {
        "id": "12c2a6c0-421c-42d7-803a-bca1610140d9",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "9eafefd7-f16b-4a0c-971f-497ab06489d4",
            "name": "Negative Testing",
            "item": [
              {
                "id": "3805921f-efed-413b-8ce5-c17b215edd2c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "0b3e3f7a-87e0-4d68-93b0-ca948e37313a",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e207dc7e-4167-46e6-9540-02ac4402d835",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "10eb382d-1d09-451d-a489-da84e4fc2999"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "921e8975-9083-4733-ac2a-9737997dc221",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "40731e4c-c714-4750-9146-c40b2481e5c9"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "bc9ecc34-7a98-45e3-a5a4-8a657cde78d2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d833c50d-c339-4247-a480-c68c08685237"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "0a6656cf-0157-4f9a-965c-a7c743f982d6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c810b1a7-c940-4639-a539-c97e4078f460"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1e37ea22-775c-4c1f-b6f0-b45c5a6d5b30",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "69e121d3-f9ff-417b-a176-b02126b905f8"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "96c02c55-14ea-4350-b8a8-8e8b7b28b8e0",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "cfe177b5-0fd6-4d3f-8aad-6d2b4d02b0e5"
            }
          }
        ]
      },
      {
        "id": "1caa9881-44f2-4fe0-ab1d-86d596013780",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "24196d8f-a458-405a-8f3e-bce0da6ab6de",
            "name": "Negative Testing",
            "item": [
              {
                "id": "01b6be89-fd5f-4b56-b8b5-5290b0efd20d",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e919c868-5327-44b7-bdeb-e94699f8f64d",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5255ea7c-0e71-468b-95cf-189ae32eee18",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "19e3546f-97f2-472b-980c-0d5171dfccae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b63c7d7-5ccb-40e5-9ca0-044bfdd5d64d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1abe7f61-7a33-49ef-a9a3-d08f641d6e0a"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "321442d8-17df-4f14-a0f9-30b6fd4a9e09",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1ecfdc8b-6a40-4ef8-8361-74bd5c412251"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "2dc0b905-052e-4f2f-b0ea-bbf467577242",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "cb6406c6-9dae-400a-8b5c-7f399f95185d"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4e9c6b49-19ba-464a-ad1d-4516c8f953c8",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "c51d5008-adfc-4a47-ba4d-2ebd0de06ee7"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "19867e15-06ad-4b53-b8d5-7598dde319df",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b96dcb3a-ae46-4f90-ab1a-90ad4940161a"
            }
          }
        ]
      },
      {
        "id": "f8780c4f-b330-401a-9c7b-81c7618bd603",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "f0297979-dd32-4dab-8ffe-4ec030c48d12",
            "name": "Negative Testing",
            "item": [
              {
                "id": "8938c5ea-b1cf-4812-9446-0dd235ec2f5f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "699a4933-3061-4e53-aa36-89566daea7c1",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3740eda7-7d86-46db-a785-6ae0c185cbbc",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b1f557f5-5d2e-42d3-8bf3-5d06a7a2bed4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "872a328f-6a16-4c61-affc-aeef64580e1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "16faa546-25a7-43a0-bf04-2e45a9fcf2b2"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "bd4a9b05-287b-42b3-b1c5-45dbfd33aa02",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c0eb4d31-96ce-4cb9-aedc-4c10df99f7ef"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "49b7082c-816f-4761-9824-d54c4a1b6fa2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "54fe0236-e06d-46ec-8173-64aabb6923cb"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f1226143-a5af-4515-8150-ab01e8567952",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "01ea14f0-72b5-4ece-b755-55d629fd56c4"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e8c9ee79-2025-4b32-879a-e6eb50213502",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "1ab5013b-94c6-4aa8-8270-53fdf083cba9"
            }
          }
        ]
      },
      {
        "id": "b7168c2c-1047-41ba-84c7-d2d34d9286ab",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "57e26c76-cdf9-47a3-ba50-6b8553d6eace",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "16805ba7-333c-4a9d-8d63-779c960c8d7c",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "e1393dfa-afeb-439a-9ae9-3dc5b30f9b9f",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "51814520-6f27-4b8a-8c09-022812859bc6",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "001671fd-7442-4f14-8f6f-09010292fc3a",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2083,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 284,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 570,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 1046,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1037,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 15.014084507042257,
      "responseMin": 5,
      "responseMax": 229,
      "responseSd": 28.15750116841332,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1694997202843,
      "completed": 1694997218995
    },
    "executions": [
      {
        "id": "ff8f5627-eb74-4783-8573-cf50e25209f6",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 282,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "c0c7c42e-f75c-481f-bbb4-aef899788e91",
          "httpRequestId": "abf3c862-bd39-4300-8320-cd7364eadd06"
        },
        "item": {
          "id": "ff8f5627-eb74-4783-8573-cf50e25209f6",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "d0ab38ab-80f7-4423-887c-2b65b5417183",
          "status": "OK",
          "code": 200,
          "responseTime": 68,
          "responseSize": 0
        }
      },
      {
        "id": "541a2c38-70b9-4d50-bf9e-52667d6a25f9",
        "cursor": {
          "ref": "05d9ece3-cfd7-4c28-ae05-54d6e8d45305",
          "length": 282,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "c389bd25-d00f-4da3-88af-07f573a21420"
        },
        "item": {
          "id": "541a2c38-70b9-4d50-bf9e-52667d6a25f9",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "1bf47c89-c898-4eb1-bb5e-dc056d0a8a7a",
          "status": "OK",
          "code": 200,
          "responseTime": 5,
          "responseSize": 0
        }
      },
      {
        "id": "4f0b55ac-8de3-4f26-9126-e253e1a230f5",
        "cursor": {
          "ref": "97c5ea7c-0185-42ba-9eee-213ea26fc6d3",
          "length": 282,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "1416aac9-4fce-4ba8-b5ba-e07d42a2688e"
        },
        "item": {
          "id": "4f0b55ac-8de3-4f26-9126-e253e1a230f5",
          "name": "did_json"
        },
        "response": {
          "id": "6693513e-6884-4309-9735-63c7afe5fb36",
          "status": "OK",
          "code": 200,
          "responseTime": 220,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a3c03ab-b6c8-416f-b8fb-5ff2ea2ffc3c",
        "cursor": {
          "ref": "60856943-bf66-4a55-ab9c-89a084068534",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "16ef25f6-5531-4df2-872c-821e5a1aa2cc"
        },
        "item": {
          "id": "9a3c03ab-b6c8-416f-b8fb-5ff2ea2ffc3c",
          "name": "did:invalid"
        },
        "response": {
          "id": "290b6384-fc5e-49e5-9699-8253d1a60bdc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a3c03ab-b6c8-416f-b8fb-5ff2ea2ffc3c",
        "cursor": {
          "ref": "60856943-bf66-4a55-ab9c-89a084068534",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "16ef25f6-5531-4df2-872c-821e5a1aa2cc"
        },
        "item": {
          "id": "9a3c03ab-b6c8-416f-b8fb-5ff2ea2ffc3c",
          "name": "did:invalid"
        },
        "response": {
          "id": "290b6384-fc5e-49e5-9699-8253d1a60bdc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ceb3800d-57c0-4790-a302-bae4d142ee7a",
        "cursor": {
          "ref": "3fbf0740-34dd-46cc-a258-82f92cc3d159",
          "length": 282,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "28af6c60-b797-46a3-9a3a-27ad65cbc56e"
        },
        "item": {
          "id": "ceb3800d-57c0-4790-a302-bae4d142ee7a",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "16fb3383-5499-4de8-b3a6-a828539e0466",
          "status": "Not Found",
          "code": 404,
          "responseTime": 58,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd8f8662-b341-40c1-bf1b-2c452ea02bf7",
        "cursor": {
          "ref": "8aa004db-d29d-42e5-83f5-a5b5d808bd59",
          "length": 282,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "142ae667-d7e8-46aa-a70e-88c4b9e26bb7"
        },
        "item": {
          "id": "fd8f8662-b341-40c1-bf1b-2c452ea02bf7",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "d7c74f8c-829d-47f4-b04e-800b1ef0f79b",
          "status": "Not Found",
          "code": 404,
          "responseTime": 9,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59f148bc-7f2c-4722-814c-8fd78e063d17",
        "cursor": {
          "ref": "4acad9ad-2157-4dcf-91bf-558a3179a35f",
          "length": 282,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "b4e2846e-d5b6-4e3d-be99-fe0790356981"
        },
        "item": {
          "id": "59f148bc-7f2c-4722-814c-8fd78e063d17",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "9532546b-e22c-4c94-b0f6-f26ad8b359b3",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 10,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c704cf78-c584-4599-b94f-bc0ac54aa848",
        "cursor": {
          "ref": "8d656d69-2fb8-4024-91d3-b8162e35086f",
          "length": 282,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "69f313b6-bc8c-4061-bbe2-d566192416ab"
        },
        "item": {
          "id": "c704cf78-c584-4599-b94f-bc0ac54aa848",
          "name": "identifiers"
        },
        "response": {
          "id": "7e9ac83f-21ff-4dfd-91ae-8d0f3b023808",
          "status": "OK",
          "code": 200,
          "responseTime": 225,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "410760b0-7ee6-4e39-a8b8-4e524a0f0917",
        "cursor": {
          "ref": "17338a2d-b880-4f3d-b8d3-5d712e38ae85",
          "length": 282,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "abc8362e-708c-4307-8ed2-2f3a5d63909c"
        },
        "item": {
          "id": "410760b0-7ee6-4e39-a8b8-4e524a0f0917",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "1796f5f5-4a79-4d6e-8471-6e2f65e5c129",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d71ec029-0bbf-4cca-81d0-4693c5d148c0",
        "cursor": {
          "ref": "994e3430-8231-4e70-8f3a-918dac4664bd",
          "length": 282,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "e6c37dfc-047c-407c-b696-1d0b60e36097"
        },
        "item": {
          "id": "d71ec029-0bbf-4cca-81d0-4693c5d148c0",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "031fb248-c437-4396-a608-5406957cae1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ce0ca5b-dc31-45ab-9847-55fd703555c2",
        "cursor": {
          "ref": "7c76f548-0d6c-47b9-8077-b8f77188b996",
          "length": 282,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "0055ff57-f905-4e70-981e-9b9dd427da59"
        },
        "item": {
          "id": "5ce0ca5b-dc31-45ab-9847-55fd703555c2",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "44f420f6-d758-47fa-8c1b-003e13dc3289",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3012d3b-feb2-431f-915f-a94e5c3aa2bc",
        "cursor": {
          "ref": "1fa6c837-a5e7-4bd4-9ed5-84037c6c08e5",
          "length": 282,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "4b4f15d7-75e2-422d-8649-80ebe068ebcf"
        },
        "item": {
          "id": "a3012d3b-feb2-431f-915f-a94e5c3aa2bc",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "1b80e801-f4d5-473c-ad12-5cbfc3065868",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3782d39d-3ec0-4fe0-9adb-602935d80b12",
        "cursor": {
          "ref": "0c9b5e40-a002-4d88-9690-8e984a98e3fb",
          "length": 282,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "e8e71d7b-1271-42f4-8800-ef2c546a5f61"
        },
        "item": {
          "id": "3782d39d-3ec0-4fe0-9adb-602935d80b12",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "6bda4b7b-b24f-4d46-8cd5-734a01b45fa6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bda9985-07fb-4553-807c-a28b4f78bb35",
        "cursor": {
          "ref": "67edaaf2-3543-4b97-9869-62e225d3a15b",
          "length": 282,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "1f4eebe2-c874-41db-9a93-e547990491c4"
        },
        "item": {
          "id": "1bda9985-07fb-4553-807c-a28b4f78bb35",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "9719bfad-2af6-47d5-a7d5-8585f160cb9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01af5a4f-b52f-4a93-86dc-2dc8785ee536",
        "cursor": {
          "ref": "55f6144f-0fbf-4cea-8085-1d9fa40848c5",
          "length": 282,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "45ef6604-582f-4954-9a72-9b4759120380"
        },
        "item": {
          "id": "01af5a4f-b52f-4a93-86dc-2dc8785ee536",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "a591acd3-2e37-4c96-9714-bfffd1321c51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61d64640-1600-415b-a863-ab9b11fab3b9",
        "cursor": {
          "ref": "4d2e33df-fff8-459e-9cae-1e8601ec1ca8",
          "length": 282,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "24b2c592-894e-428a-8595-b49be19623cc"
        },
        "item": {
          "id": "61d64640-1600-415b-a863-ab9b11fab3b9",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "504dcfd1-0651-4cf0-9b0c-b54703cd711e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ae0c064-e160-4c5c-bab9-07bae9206181",
        "cursor": {
          "ref": "2d9c0cc1-c785-487c-a77f-f0ee56bcc95f",
          "length": 282,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "bfc5d99e-6efe-4f36-a01a-29634e0be4e5"
        },
        "item": {
          "id": "4ae0c064-e160-4c5c-bab9-07bae9206181",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "78e9a49d-804c-46d5-b358-5720c138d4a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "788410ce-7e9c-4270-afa4-bc1ef3dada1b",
        "cursor": {
          "ref": "54197f8a-68d5-47fe-8726-f274b8111542",
          "length": 282,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "71d91c3b-c63c-41d6-b81a-70e41fcf22d7"
        },
        "item": {
          "id": "788410ce-7e9c-4270-afa4-bc1ef3dada1b",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "ae08ebeb-a8b8-4266-a1bb-1703f61b06fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "404aa681-c844-40ae-b046-07e8a65fc063",
        "cursor": {
          "ref": "16ea00b8-4b91-465c-b82f-9126dcb598a9",
          "length": 282,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "95a14c1f-e6dd-4e22-b5fe-8f640674d793"
        },
        "item": {
          "id": "404aa681-c844-40ae-b046-07e8a65fc063",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "270a581c-a60e-450a-acda-c2db8cfa1ccd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b6821e0-2774-4501-8bbf-930967b2824c",
        "cursor": {
          "ref": "30000422-226d-440a-b13c-9c9639ce0aa9",
          "length": 282,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "cc5a8a39-2df6-4d86-b29a-686526a42bc1"
        },
        "item": {
          "id": "6b6821e0-2774-4501-8bbf-930967b2824c",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "6c502bed-9842-45ab-9de5-2d761166a49d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b38fc74-1f83-4db1-894c-7b482942aae7",
        "cursor": {
          "ref": "e00c280b-cbb7-420e-85df-e4ac6e85e362",
          "length": 282,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "98cfbe69-7eab-433e-95a0-b108d54a895d"
        },
        "item": {
          "id": "2b38fc74-1f83-4db1-894c-7b482942aae7",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "7cd8000f-aaa1-4471-ab6d-918c2b7c2a9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e12763e-ab03-4b95-8b64-c8b0ddefedc6",
        "cursor": {
          "ref": "1bfe09f4-7212-4d72-ac04-d26151a6c0d3",
          "length": 282,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "6938131e-03e7-49e0-93e6-efafa7de01af"
        },
        "item": {
          "id": "9e12763e-ab03-4b95-8b64-c8b0ddefedc6",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "2e2e8bde-3dfb-4781-8fb6-c0e0ad69be40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98d9d094-04a4-4f22-9a99-cd3e6438d373",
        "cursor": {
          "ref": "44b074d5-bcb8-4eff-89ac-6d4f07754ba1",
          "length": 282,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "de22c5fb-6a1f-4cd8-a91a-0165d8f38d67"
        },
        "item": {
          "id": "98d9d094-04a4-4f22-9a99-cd3e6438d373",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "df4694cb-ac7b-4d17-be04-897b59daf225",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9af272ff-aad2-42c4-971c-c370e41087db",
        "cursor": {
          "ref": "811b6540-dcbe-455e-bf08-482ce82a3833",
          "length": 282,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "ba46dee2-ffea-4b92-8df5-86de48e94b02"
        },
        "item": {
          "id": "9af272ff-aad2-42c4-971c-c370e41087db",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "bda559ff-b110-403e-8d47-5981f329028c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f40cd8d-c1f4-4418-86af-99d74d3d2e38",
        "cursor": {
          "ref": "775a8b8d-2ba2-4d63-b448-79ae9bd74932",
          "length": 282,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "ea149bb3-108b-47cd-9ce8-52656fb4f5c4"
        },
        "item": {
          "id": "0f40cd8d-c1f4-4418-86af-99d74d3d2e38",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "7873ca6f-ad74-4805-a8ac-304c920af8bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbf2c82e-73ee-4616-b6c2-c0e166e41306",
        "cursor": {
          "ref": "97edbb34-43ee-42ab-aa78-1470e32e2204",
          "length": 282,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "dd2549d9-f4bc-4863-bd7c-8333ec0f707e"
        },
        "item": {
          "id": "dbf2c82e-73ee-4616-b6c2-c0e166e41306",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "d02da202-e98c-49c8-9019-65bca01d320f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c2b0840-241d-4737-a716-5a092c3979bc",
        "cursor": {
          "ref": "c8b829d0-9a1a-483f-82ef-34dafb2ebd10",
          "length": 282,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "6ad1235c-4b62-473f-9ca2-ec154aa24c09"
        },
        "item": {
          "id": "1c2b0840-241d-4737-a716-5a092c3979bc",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "4277a6c6-520a-4f93-bee0-92841da6b792",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8833aee-1f16-4d09-84be-abb6ea5f28aa",
        "cursor": {
          "ref": "a86e807f-6d23-4e15-96fb-3646b99cde31",
          "length": 282,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "68022bbe-f118-493c-9006-90ab1e6f6737"
        },
        "item": {
          "id": "b8833aee-1f16-4d09-84be-abb6ea5f28aa",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "2efdd5e8-64fd-48a6-baf5-f27e272ad73d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35c5e011-0d9b-428f-a472-9a1467a4315c",
        "cursor": {
          "ref": "a8f533e4-488f-4f36-bb50-54abdf981661",
          "length": 282,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "3737bd0b-c5a4-4f0f-8d24-3fb8e545da8b"
        },
        "item": {
          "id": "35c5e011-0d9b-428f-a472-9a1467a4315c",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "4de3b45c-1651-4ac5-a484-4f996ae24ffb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "683568d5-168d-48cf-81e9-580e6437ae72",
        "cursor": {
          "ref": "6a6cac9f-455e-4e0f-94b2-537f81f7d7be",
          "length": 282,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "9ba252de-1302-4a3c-a936-0c555bba6d57"
        },
        "item": {
          "id": "683568d5-168d-48cf-81e9-580e6437ae72",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "a9a38a76-24f8-48f7-93c8-8bafed8a1fb9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c503505-c4f5-4b6a-b307-e5e961c0d64d",
        "cursor": {
          "ref": "fd5fdcf4-0db0-4f13-a8db-83949bafd8b1",
          "length": 282,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "69260a60-7bc8-403d-ae50-92feb6e0a74d"
        },
        "item": {
          "id": "0c503505-c4f5-4b6a-b307-e5e961c0d64d",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "d4d059b5-467a-4105-a9ed-723fe59c4614",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a66b229-e62e-488f-883c-00dc37241a63",
        "cursor": {
          "ref": "f8d7391b-97cc-4f8e-bb34-3c646a13613d",
          "length": 282,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "6f917fc6-3e00-4851-871a-2841edb6fe28"
        },
        "item": {
          "id": "4a66b229-e62e-488f-883c-00dc37241a63",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "49a69675-a27c-48fe-a8fe-bad67323b9a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26d95d09-735d-4d48-99f5-6191fc98ac8e",
        "cursor": {
          "ref": "2f0d65f2-372b-4077-9456-4bee086fdbd1",
          "length": 282,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "ae3fe4fa-1899-41f9-94d2-fe2dfbc7df3e"
        },
        "item": {
          "id": "26d95d09-735d-4d48-99f5-6191fc98ac8e",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "57d3f8fd-fd46-44e9-b6de-d4fe9c760130",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc57b791-efc7-4783-85a2-7920dd3d4f73",
        "cursor": {
          "ref": "8d83b7bd-2e9f-44a1-a43a-ac6b6156a25d",
          "length": 282,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "f3730e00-6d6b-4973-bbe9-0d8497ff15ec"
        },
        "item": {
          "id": "cc57b791-efc7-4783-85a2-7920dd3d4f73",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "3bbfcbf0-51e7-4c4b-ab69-eccbb3b034cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "faf45a04-d549-4c06-95b3-b9e7ae7808b8",
        "cursor": {
          "ref": "623777ee-ebb3-4036-a24b-17e467b3a8cd",
          "length": 282,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "a2548d3b-7d55-4eeb-8c63-3d88d404632a"
        },
        "item": {
          "id": "faf45a04-d549-4c06-95b3-b9e7ae7808b8",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "c2e776ec-4207-476b-b0e0-439a2bc0c0d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1a72f2d-4509-480d-a269-3caf6eb33a49",
        "cursor": {
          "ref": "a2e5e3f8-0862-40f0-a185-c240004bf168",
          "length": 282,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "ec04dccc-a102-4969-a179-f7f41f34d942"
        },
        "item": {
          "id": "d1a72f2d-4509-480d-a269-3caf6eb33a49",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "3fa1175b-6709-4661-bc12-b67d062b065a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5aba80c-dbd9-4446-b828-4ab435646dc2",
        "cursor": {
          "ref": "72a3c428-e99f-41d1-8714-8cd2737a34ce",
          "length": 282,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "927b4788-c80d-428e-881b-a76930f029c9"
        },
        "item": {
          "id": "d5aba80c-dbd9-4446-b828-4ab435646dc2",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "e6b3a385-915e-432b-9417-e0b0d1300312",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "111523c1-ba06-48b2-a769-d850704e1c95",
        "cursor": {
          "ref": "8491d04f-6561-4784-b7ab-6710c5c70dc7",
          "length": 282,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "519ebe97-3f3b-481f-990b-609af52bf861"
        },
        "item": {
          "id": "111523c1-ba06-48b2-a769-d850704e1c95",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "1629a30b-f19c-4ca3-8720-47f5d391f0ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98d4c34c-2326-4ba4-88f4-42d0a74bba3b",
        "cursor": {
          "ref": "5fc611f6-44fe-4993-9f54-52394850d3f2",
          "length": 282,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "664d0ef4-e72f-422b-9c0b-3c05e94e081c"
        },
        "item": {
          "id": "98d4c34c-2326-4ba4-88f4-42d0a74bba3b",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "b6a42b17-d4d2-4a27-9302-f0d2293270d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c3968b1-7057-46ca-abee-62f267d29644",
        "cursor": {
          "ref": "5cc52a87-e7d4-4f01-985d-830c6a7b119c",
          "length": 282,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "bf68dc00-d2e8-4402-bd57-cc80b9839e30"
        },
        "item": {
          "id": "0c3968b1-7057-46ca-abee-62f267d29644",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "e36a912b-3e20-4b87-b1d1-152dd7eeb59e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "233b5878-8a34-443f-aae2-e9941036bcb7",
        "cursor": {
          "ref": "89784be3-1f23-4c75-90f8-6ad67d8a4480",
          "length": 282,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "d2a78863-57a1-412a-bf19-601ab4cc5111"
        },
        "item": {
          "id": "233b5878-8a34-443f-aae2-e9941036bcb7",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "8f6d27ba-1b0c-49f6-bc1e-24dd7e6ca9b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfb49c87-38d4-4220-b83a-dbd20ecdff6c",
        "cursor": {
          "ref": "44ae5c38-aedb-4c97-ac8b-1a1f2021cf54",
          "length": 282,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "1c3f84e9-d963-44b1-893a-4ed512313d8b"
        },
        "item": {
          "id": "dfb49c87-38d4-4220-b83a-dbd20ecdff6c",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "e52f7e05-68a1-4dc4-b616-043751108e7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a731f7e0-ada3-49bb-b8a5-f3eb33246652",
        "cursor": {
          "ref": "f915d573-074d-4507-b61d-fc1a0a40c3b9",
          "length": 282,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "92971db5-94e2-4bcf-8d8b-12b35c18d8e9"
        },
        "item": {
          "id": "a731f7e0-ada3-49bb-b8a5-f3eb33246652",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "93b3f910-1c98-4795-a8a1-f8453be4f162",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e253d313-ae67-4c85-9ca8-c48ebfb7ec2a",
        "cursor": {
          "ref": "3ffe4d27-c8b4-4ab8-a2f9-3f044fe33bf2",
          "length": 282,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "f367c2a1-e364-4bd5-aa83-9cfc2ec9e38b"
        },
        "item": {
          "id": "e253d313-ae67-4c85-9ca8-c48ebfb7ec2a",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "c123a35e-2b31-438c-8da1-3704299667ff",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 33,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84445638-b578-4045-aa90-57a47ba60d0e",
        "cursor": {
          "ref": "8821e045-883a-4559-9bdb-3fa74905614e",
          "length": 282,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "7f6825d8-6bf1-4eea-9ef7-9b33c7b76779"
        },
        "item": {
          "id": "84445638-b578-4045-aa90-57a47ba60d0e",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "6b6b95ee-35ed-4640-82ca-d17f1d29df0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65d7a123-7fa4-4722-b61e-32df90baa119",
        "cursor": {
          "ref": "1a3abc59-eee0-4a99-8da1-7ce8bd7ab7e5",
          "length": 282,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "9250d080-8a47-4c41-83ea-6e4174623353"
        },
        "item": {
          "id": "65d7a123-7fa4-4722-b61e-32df90baa119",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "4f8038b7-209b-404b-a683-013212b54e07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92858edf-46bd-47de-b684-ea03e602a613",
        "cursor": {
          "ref": "6665a340-2f07-45e9-b4d6-9b84e650fe47",
          "length": 282,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "924a3c87-e71c-473d-b103-812380fce558"
        },
        "item": {
          "id": "92858edf-46bd-47de-b684-ea03e602a613",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "07bd908c-e3bf-47f8-94d7-5466acc0f262",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "867048de-4b31-492a-834a-712c0fb6eeeb",
        "cursor": {
          "ref": "f3dffc81-f20b-4145-9028-dd73635a7768",
          "length": 282,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "b1da91e1-18a9-4924-ac1e-a3003e024c4a"
        },
        "item": {
          "id": "867048de-4b31-492a-834a-712c0fb6eeeb",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "5b93e538-c916-4d6c-a507-c7d94a65e9e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0594b485-a347-4562-9e11-d789302360b0",
        "cursor": {
          "ref": "64137768-b09a-4e55-87bd-0194dfe95b8f",
          "length": 282,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "701d0910-95cd-4867-acd3-34916333d4fa"
        },
        "item": {
          "id": "0594b485-a347-4562-9e11-d789302360b0",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "2dcb8565-6f43-4ad4-83b4-4d3510b5b181",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b5f248c-a6d1-4360-bd54-7a311c0e1bb2",
        "cursor": {
          "ref": "62151418-a494-4276-b492-9893c39da0f7",
          "length": 282,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "155d2f86-8b1a-41a9-827d-6ab0508f27a2"
        },
        "item": {
          "id": "9b5f248c-a6d1-4360-bd54-7a311c0e1bb2",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "f75d279c-ca1c-4eb1-8454-53709a05a8ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c3a925d-ff45-48ba-8dbf-be8bb4e9ec72",
        "cursor": {
          "ref": "8761fb6d-ba8e-4b2c-9830-7e2a97481d2f",
          "length": 282,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "386f5ad5-8151-4bb8-bc00-427fbc944446"
        },
        "item": {
          "id": "3c3a925d-ff45-48ba-8dbf-be8bb4e9ec72",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "9be40b3d-1c05-4461-8a31-0e1056299e36",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 24,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3410d5b5-adca-4936-818a-a277d77af815",
        "cursor": {
          "ref": "b1410ab2-d9be-4aed-9b7c-a521e7553053",
          "length": 282,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "0875a8ea-09ec-4bfb-a895-0822d9b5db11"
        },
        "item": {
          "id": "3410d5b5-adca-4936-818a-a277d77af815",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "464d8887-0095-4c51-9bda-6315a15b2e10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf1b98d1-05b3-450f-811c-55b2ad9c0e89",
        "cursor": {
          "ref": "cb3ddab9-c922-4ccc-b5d6-ead2f231ebce",
          "length": 282,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "2208c1ef-7ab7-4781-9759-f26e6ff02120"
        },
        "item": {
          "id": "cf1b98d1-05b3-450f-811c-55b2ad9c0e89",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "a314343f-5a5d-4bea-aa3a-4befa7a3cf74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "343a7507-20eb-4447-b3ee-e65989395bdf",
        "cursor": {
          "ref": "27887e96-9a3b-4a8a-bed7-b90b338d7648",
          "length": 282,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "d2816c79-fec6-4f31-9513-e334cbd1277c"
        },
        "item": {
          "id": "343a7507-20eb-4447-b3ee-e65989395bdf",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "fb24c027-0027-4e6c-bd84-28e4e52e113d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "918587e2-cc01-46d7-a131-7ae606740701",
        "cursor": {
          "ref": "40badd27-87df-436b-9931-7069f437a336",
          "length": 282,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "f21088c1-2199-440d-b02b-987015d737e3"
        },
        "item": {
          "id": "918587e2-cc01-46d7-a131-7ae606740701",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "bb0baef2-d719-4165-8640-2513be05002f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15f36300-827e-4c4e-9a3f-cadfc236d15c",
        "cursor": {
          "ref": "1a687020-d2de-40cd-8b4a-8d47ee8c0bdc",
          "length": 282,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "8332c155-0769-49fb-9645-35e27935d7b3"
        },
        "item": {
          "id": "15f36300-827e-4c4e-9a3f-cadfc236d15c",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "42f4c591-b45c-44ad-b91b-3e84ce04f894",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d154991-63d8-4f32-919d-e823a096601d",
        "cursor": {
          "ref": "29f0c9e4-032a-48e9-8d7f-964230863ed0",
          "length": 282,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "60a104cf-1aed-4946-9d09-bcc0f2d2fd29"
        },
        "item": {
          "id": "1d154991-63d8-4f32-919d-e823a096601d",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "d2789161-253b-4944-a8ee-aa7beed6aac8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7b20dbc-3ea0-4f58-b1e3-f8e7c6eac670",
        "cursor": {
          "ref": "85bf4121-6ad1-48ec-96ad-88dfbf3ac197",
          "length": 282,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "211a184c-74e4-4d9c-aa3c-74225c2b3bc1"
        },
        "item": {
          "id": "f7b20dbc-3ea0-4f58-b1e3-f8e7c6eac670",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "f1953fe9-5a37-4da4-bbe2-0e4c2347fd39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b766ed7-1975-4ae3-bb4f-9cf0531d72b6",
        "cursor": {
          "ref": "546f8741-2e80-49e7-babf-30a394375e15",
          "length": 282,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "eca6e6a1-560b-47c7-92cd-53e9165e1481"
        },
        "item": {
          "id": "4b766ed7-1975-4ae3-bb4f-9cf0531d72b6",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "76bdeb57-07c4-4f49-9f21-9404cac0c036",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c975b1f3-f65d-4fd9-b546-5063e33c8b1f",
        "cursor": {
          "ref": "d9018e1a-5fe9-4b15-97c1-5d1987545fd3",
          "length": 282,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "f26bb201-052a-4183-acc5-43a2002acc9e"
        },
        "item": {
          "id": "c975b1f3-f65d-4fd9-b546-5063e33c8b1f",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "0a9b8643-1196-436d-b87e-3f5edbc4dd80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0242b75c-9ea0-4445-ac19-694d43fbf60b",
        "cursor": {
          "ref": "e1b3d7d8-dc50-4c84-a9e3-289af8466f57",
          "length": 282,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "346e28ca-7957-4387-b3ce-c63620e29944"
        },
        "item": {
          "id": "0242b75c-9ea0-4445-ac19-694d43fbf60b",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "cf062c2e-439e-4cb4-a8eb-3f1a7efbcf4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1ae9616-e25f-4e1e-885b-fa00919d1487",
        "cursor": {
          "ref": "1c913209-9d45-4c8e-b77c-a95d3543a938",
          "length": 282,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "a162cb95-4701-47aa-b028-a8fa9c6d05f3"
        },
        "item": {
          "id": "d1ae9616-e25f-4e1e-885b-fa00919d1487",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "55965502-43c4-49ec-9189-a1cc2161687c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e168a206-9466-44ed-a785-ab02b7e56c70",
        "cursor": {
          "ref": "9f550732-9130-48cb-85ca-e3bf16143d07",
          "length": 282,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "61a78b02-8ed3-4ab1-9a87-e70ac70038ed"
        },
        "item": {
          "id": "e168a206-9466-44ed-a785-ab02b7e56c70",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "323cdf44-6cd7-48a9-a274-5063e9ad9080",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67c43220-c2a1-4f85-926a-50f5eab2d6fa",
        "cursor": {
          "ref": "47ca0113-e2f9-4487-b7f2-e732e302f7d8",
          "length": 282,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "14bbb557-4cba-4c1b-aff3-9a655bbecdba"
        },
        "item": {
          "id": "67c43220-c2a1-4f85-926a-50f5eab2d6fa",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "d5441a36-c99d-4f8f-9fa3-3a2dd7159d0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e82c1687-551b-497c-914c-fe4acdf16a7d",
        "cursor": {
          "ref": "c92db315-870e-4450-a73d-474378f24e09",
          "length": 282,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "43f63eb4-7a9f-4dd9-bd5b-3479244d5c4b"
        },
        "item": {
          "id": "e82c1687-551b-497c-914c-fe4acdf16a7d",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "356d813d-3510-41da-86fb-649d490a7aa3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de7b9763-fce7-42dc-b5b5-5ef2f23a41c2",
        "cursor": {
          "ref": "c187431f-3352-4366-8ee6-84b4703b2613",
          "length": 282,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "70254be4-a962-4cae-a9c7-37ce5990d3f7"
        },
        "item": {
          "id": "de7b9763-fce7-42dc-b5b5-5ef2f23a41c2",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "fb6fea9f-c5f8-4ac9-9186-40bcbc152c5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4240f7f3-1945-4e55-8283-cc4b380acb62",
        "cursor": {
          "ref": "dd0d7728-e39d-4338-b532-3c8adaa4e30d",
          "length": 282,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "08160838-1258-47d2-84a0-38e735a72635"
        },
        "item": {
          "id": "4240f7f3-1945-4e55-8283-cc4b380acb62",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "bbd65319-c488-4dc5-9e20-8755c1ff212a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f56cb71-257b-4271-a01e-1274b44dcec8",
        "cursor": {
          "ref": "366538ed-cc52-420e-9315-c0b33054189e",
          "length": 282,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "eac8c711-e280-4032-a70c-489f5a1ee7bc"
        },
        "item": {
          "id": "0f56cb71-257b-4271-a01e-1274b44dcec8",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "fc1cc7e0-d39a-4e79-8dda-faa270d017c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65db8e6f-950f-4e26-9a8b-485fbdf895a7",
        "cursor": {
          "ref": "d3857e73-6796-45d7-ab0d-9ad969383f95",
          "length": 282,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "3960e001-ef80-4bbc-a9f3-92b709443635"
        },
        "item": {
          "id": "65db8e6f-950f-4e26-9a8b-485fbdf895a7",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "04364697-2ed2-4e5b-a4fe-5581d1ddfa6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70971069-e9da-4f83-8a33-22fe0b4603bc",
        "cursor": {
          "ref": "3dc7cd36-2dbb-4f36-8b6b-64fa50997686",
          "length": 282,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "58528343-92bf-4e8a-9830-ffc8d4d20797"
        },
        "item": {
          "id": "70971069-e9da-4f83-8a33-22fe0b4603bc",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "a4c97abd-5494-4cb0-bbec-f5c376d2dece",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c2b35a4-3f9f-41ef-8cbf-5d7a0b2cf08e",
        "cursor": {
          "ref": "854257a5-32a9-40a4-a13d-8acbf1a9d671",
          "length": 282,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "5ec9b611-2795-473a-8ef8-23170ea0027f"
        },
        "item": {
          "id": "0c2b35a4-3f9f-41ef-8cbf-5d7a0b2cf08e",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "9bcee527-6ebf-4eb3-9cf2-55838b520813",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f46b4d86-d82c-4412-bd5a-8c06cf3c1a8d",
        "cursor": {
          "ref": "45a5070a-fe5d-4094-8c63-2de8a634efa8",
          "length": 282,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "f00cad8c-e522-44e8-bd1b-031f4c2ca778"
        },
        "item": {
          "id": "f46b4d86-d82c-4412-bd5a-8c06cf3c1a8d",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "5d131d47-d9ea-488b-876a-d0ef358a3a09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e06453a1-8737-4068-9413-d993ecbe3c27",
        "cursor": {
          "ref": "a275fcf3-dd73-44f4-b778-fbd0e1ab336e",
          "length": 282,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "3e7407c8-2cb0-4298-bca1-6d959633b4fa"
        },
        "item": {
          "id": "e06453a1-8737-4068-9413-d993ecbe3c27",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "6921b72e-d4c6-4b12-aa2a-6a1b10efde27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4bc711be-3d7a-4e4f-90a2-8ad58ff53194",
        "cursor": {
          "ref": "04422a36-fa33-4b1b-b028-6cdbc7c4843b",
          "length": 282,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "5bb85c85-234a-4931-9bf8-e1a302b26a18"
        },
        "item": {
          "id": "4bc711be-3d7a-4e4f-90a2-8ad58ff53194",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "51bec849-823f-4689-ba89-55ca574763e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ab82ab1-0109-49df-810b-7e406b01c96d",
        "cursor": {
          "ref": "a1200015-b79c-4b5e-9169-be508519cdfe",
          "length": 282,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "cb7039e6-16ef-4904-baa3-b0b9bb28c5b5"
        },
        "item": {
          "id": "9ab82ab1-0109-49df-810b-7e406b01c96d",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "b82ba261-665f-4cf3-b1d6-524054f4b765",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6e01f30-aaa7-4520-8aa7-c663be0519dd",
        "cursor": {
          "ref": "ca80327b-63ce-4562-ad0b-c800be9dbbdb",
          "length": 282,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "8507eae5-c10d-4a2a-bce3-1960f5d483d4"
        },
        "item": {
          "id": "f6e01f30-aaa7-4520-8aa7-c663be0519dd",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "ef07ef96-75ea-46a4-8b0d-e6de1df9d06a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aed086c8-027c-4aa4-9bff-165e3d61a731",
        "cursor": {
          "ref": "6fe6eafd-da26-4f91-991a-4f867a1f2a53",
          "length": 282,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "f64dfe4e-7081-4b52-a84e-0c3aae7abc8e"
        },
        "item": {
          "id": "aed086c8-027c-4aa4-9bff-165e3d61a731",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "86f4f31c-c6ca-4152-8ffd-99932cdbe22f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9643e29-59e9-4143-95d1-a49095fb6e5c",
        "cursor": {
          "ref": "1c390e99-19a7-4ebb-ba5b-6a0c4b229ec1",
          "length": 282,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "1570e887-8d91-4b8c-b0e7-6eda41c95acd"
        },
        "item": {
          "id": "e9643e29-59e9-4143-95d1-a49095fb6e5c",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "36f8d1e5-139c-4e2e-9999-7e123725a580",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af41aab8-4c19-478e-bc25-bac6b41faa8a",
        "cursor": {
          "ref": "ac338d0d-db92-4fbf-82b7-bd004a41d61f",
          "length": 282,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "010b6921-77ce-4ed0-afd4-c89b60b37169"
        },
        "item": {
          "id": "af41aab8-4c19-478e-bc25-bac6b41faa8a",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "d5f760d3-e25f-4629-9a8f-84e166e39d3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f57add1-18d0-4423-9b00-e93840891af4",
        "cursor": {
          "ref": "62c0d90b-abe8-44e3-836c-25d326afcf21",
          "length": 282,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "55e33c10-9c4b-49c7-b0da-f1276cd0bea1"
        },
        "item": {
          "id": "8f57add1-18d0-4423-9b00-e93840891af4",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "14084d56-7e14-4547-a1ea-2ce24114354c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b0acd4a-3d1e-4e9c-9dff-6d8d1fba39b8",
        "cursor": {
          "ref": "7d6ec6a3-969d-4c27-9ed6-75e377e11822",
          "length": 282,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "cef8d4aa-8816-42f6-9a15-42dfb5d2b9ab"
        },
        "item": {
          "id": "7b0acd4a-3d1e-4e9c-9dff-6d8d1fba39b8",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "419caf80-04eb-42ff-ba08-d9034ba0a69a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56a05770-e01a-4f08-9b5e-79ace3045797",
        "cursor": {
          "ref": "d3ec596c-0c30-43ad-a77f-32758111bcb9",
          "length": 282,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "b63fecf9-aec9-4166-90b9-249787bf788d"
        },
        "item": {
          "id": "56a05770-e01a-4f08-9b5e-79ace3045797",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "9554af0e-3524-4c95-9638-23bb89e68652",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 169
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "260497fe-d1e1-4485-8b39-1d022105e264",
        "cursor": {
          "ref": "db02e45a-2292-40ca-aef5-23e185e85d3a",
          "length": 282,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "38d2807f-fbae-4326-9ea3-7c4f9859e2bf"
        },
        "item": {
          "id": "260497fe-d1e1-4485-8b39-1d022105e264",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "64717871-61d5-442b-a181-e2a0190a4901",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc51f4e7-7684-458f-8e8d-b44c5e1131e4",
        "cursor": {
          "ref": "b0902d22-a54d-4deb-b550-0f58bee9d6fa",
          "length": 282,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "bc610083-8c8c-4ac0-9118-0cc65eb2673b"
        },
        "item": {
          "id": "fc51f4e7-7684-458f-8e8d-b44c5e1131e4",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "f560b95e-4816-42cd-b2da-a57782cc51ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83e45778-83c2-48ff-a3fb-8c0988e6b047",
        "cursor": {
          "ref": "8730f3d4-7499-4251-9e37-ccb2c8304107",
          "length": 282,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "8e219a64-eb0e-4927-8bd9-8012e056c263"
        },
        "item": {
          "id": "83e45778-83c2-48ff-a3fb-8c0988e6b047",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "5385ff7f-52d7-4051-b728-1fac19839c33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b92e01d1-ab38-4023-a625-fc87f20a07af",
        "cursor": {
          "ref": "59bdaba8-32af-4c48-97f8-fe7da179368c",
          "length": 282,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "cbd9bae3-c2af-446e-bb41-b2833e2c5d37"
        },
        "item": {
          "id": "b92e01d1-ab38-4023-a625-fc87f20a07af",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "f3daf197-7d75-46b3-9e51-905d3d6e36cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4fa73e6-3e61-4af6-b07b-fdcfc972cdbe",
        "cursor": {
          "ref": "1efd1c14-b8b9-469f-8e1f-534d62b5d583",
          "length": 282,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "95aa6d26-d681-4be8-9cda-5ac6e22f3032"
        },
        "item": {
          "id": "d4fa73e6-3e61-4af6-b07b-fdcfc972cdbe",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "be7686f7-baea-4b61-8f9a-92491f72082d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "782d7478-3720-48ec-a3bc-457594863712",
        "cursor": {
          "ref": "51ffb9d3-70df-4c16-9ed4-602702ac262e",
          "length": 282,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "c7ff0427-c742-46c0-973c-adda239a2507"
        },
        "item": {
          "id": "782d7478-3720-48ec-a3bc-457594863712",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "95c0e234-6890-44da-b213-382d414202fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef66c081-bac0-4d57-9af7-27705379d8a0",
        "cursor": {
          "ref": "fb710930-acf4-4a35-9d7c-d6b45670117a",
          "length": 282,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "8cd5f68e-40a7-4f76-8ab6-93e58fdfeea0"
        },
        "item": {
          "id": "ef66c081-bac0-4d57-9af7-27705379d8a0",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "73044a0a-bb09-4462-a0cf-00091ae653d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2aef72d7-49b7-4b59-90e9-f757843e2d40",
        "cursor": {
          "ref": "ae829c09-76b5-4d82-8088-d281c005711a",
          "length": 282,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "81ad46ce-20f0-4201-87a8-841b0629bda9"
        },
        "item": {
          "id": "2aef72d7-49b7-4b59-90e9-f757843e2d40",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "b606585a-163d-4c8e-97cb-2ad46699785a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e51e806f-305e-43d7-becf-b6d7cc8fb475",
        "cursor": {
          "ref": "69e51568-8957-4682-bdff-96caba8a5219",
          "length": 282,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "dcb9b797-8c5c-49f3-b80e-9c234653fdbb"
        },
        "item": {
          "id": "e51e806f-305e-43d7-becf-b6d7cc8fb475",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "a6358261-c5b9-4573-9d38-099e723e58ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c26c81eb-80c6-4d3d-9638-99b5d8fd5569",
        "cursor": {
          "ref": "4b5df0ee-050b-4dbe-9ed6-869faec7b637",
          "length": 282,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "8269551b-527c-481b-8604-ff46f1c28368"
        },
        "item": {
          "id": "c26c81eb-80c6-4d3d-9638-99b5d8fd5569",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "fb0b36d3-6900-445d-84f2-4daee268e5d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "444c6560-21b9-4e2b-8d32-1d9b8cea9bdb",
        "cursor": {
          "ref": "0c741ae1-b550-4ce5-951f-cb0e2669c553",
          "length": 282,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "f04d2945-c125-4b30-b5d5-dcf25f5b719f"
        },
        "item": {
          "id": "444c6560-21b9-4e2b-8d32-1d9b8cea9bdb",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "445e5567-e514-48f5-85fd-e31d9ce9cd69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22c3998c-ba79-4868-9b23-e06f7b901d28",
        "cursor": {
          "ref": "ce013926-5fb4-4aa7-9161-d8bdfa9d0895",
          "length": 282,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "6416ba9b-0812-444e-af9c-d9f146d24f01"
        },
        "item": {
          "id": "22c3998c-ba79-4868-9b23-e06f7b901d28",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "6c0396b9-0f4f-41e7-9ab0-15cb0877b030",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7eafb245-8bea-4278-9102-5fbb9d68cc8f",
        "cursor": {
          "ref": "b7b4dab4-dee7-4b22-90eb-1b69e2a7d46c",
          "length": 282,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "211e97e9-f14f-48d6-ba7d-80c5a84d5d07"
        },
        "item": {
          "id": "7eafb245-8bea-4278-9102-5fbb9d68cc8f",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "f328011a-2a15-4dc0-8f9a-166f747f4e3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9707dc17-8864-4878-b3ec-91c27b6fa9b5",
        "cursor": {
          "ref": "b4c3d033-28df-48ca-b7e3-a048e4f62228",
          "length": 282,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "6ae90f53-6e9e-4a66-84f3-b093713b885e"
        },
        "item": {
          "id": "9707dc17-8864-4878-b3ec-91c27b6fa9b5",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "31223145-62d7-43f6-8fdd-cd2d5a143b52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64ef4400-208f-4f45-8374-efc51d21cd6b",
        "cursor": {
          "ref": "421f31e6-35b0-4713-85ad-b6c6be534c1b",
          "length": 282,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "09005181-0538-4514-b695-73d7afe47646"
        },
        "item": {
          "id": "64ef4400-208f-4f45-8374-efc51d21cd6b",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "cfbcb6ba-cf7c-4afb-98dd-a7a5059b72dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1633f129-44c1-4e0c-82fb-faf3e39013eb",
        "cursor": {
          "ref": "a0e35141-a339-4255-8a82-43ac28faccce",
          "length": 282,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "ef583958-e4c2-4a5c-a2a4-0e0f2c321088"
        },
        "item": {
          "id": "1633f129-44c1-4e0c-82fb-faf3e39013eb",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "173eb312-ce41-47fc-956c-4a490d611aa2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ba3b22f-1d84-492f-a426-82ae880fd49a",
        "cursor": {
          "ref": "cdf2e050-8193-4cc7-80f3-16cc52fca8b1",
          "length": 282,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "a86e568e-c8ca-4862-975e-23b82a41f3b1"
        },
        "item": {
          "id": "8ba3b22f-1d84-492f-a426-82ae880fd49a",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "c4b56800-555c-4276-97c3-ac9c3f3e4714",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "065e400a-1054-4309-913e-354c1d9fdfd5",
        "cursor": {
          "ref": "275163f6-14a8-4d38-b44d-b3d4c35e2231",
          "length": 282,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "6cf14d6c-a2d9-475c-93df-46e1db727af5"
        },
        "item": {
          "id": "065e400a-1054-4309-913e-354c1d9fdfd5",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "fe11ba4e-36cb-4d42-b6ba-f049c0adbf4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "715757b9-a478-4151-a96d-1662a333f17c",
        "cursor": {
          "ref": "c7c68a79-e7c8-4c95-a4b8-77876494987b",
          "length": 282,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "d4cef748-2b34-49ae-a2c0-73c7698a8ef3"
        },
        "item": {
          "id": "715757b9-a478-4151-a96d-1662a333f17c",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "980df4bc-a4a2-4b66-85d2-fba7cbe7e322",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 9,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6ae7da8-1e36-40fa-8be3-e0f078215b16",
        "cursor": {
          "ref": "f866d3cf-c0cc-426a-afb6-3cd50582c1e6",
          "length": 282,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "96f983fa-44be-43c9-b059-dd24e03dec34"
        },
        "item": {
          "id": "a6ae7da8-1e36-40fa-8be3-e0f078215b16",
          "name": "credentials_issue"
        },
        "response": {
          "id": "94d0daa5-0f35-4e64-a784-37e2a8c5b4bd",
          "status": "Created",
          "code": 201,
          "responseTime": 96,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "52c34949-a2fa-496c-b43e-38d2a5eadff9",
        "cursor": {
          "ref": "2e3dd59d-40ea-466b-ac5e-0a150abece6e",
          "length": 282,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "3c11338c-fbc0-4896-bd66-ec4618037ebe"
        },
        "item": {
          "id": "52c34949-a2fa-496c-b43e-38d2a5eadff9",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "5cee0a37-40b2-4a4e-98fa-b4d8252c78a8",
          "status": "Created",
          "code": 201,
          "responseTime": 176,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "d727c867-1110-4547-859c-5a4a64a29650",
        "cursor": {
          "ref": "9855b79e-5a40-4d88-9c5a-91a6a157ef21",
          "length": 282,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "b87f39ac-cba1-42d1-80c7-8f3ae5568e4a"
        },
        "item": {
          "id": "d727c867-1110-4547-859c-5a4a64a29650",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "10ba8e3c-ae6c-4d62-ba19-ff72d52318a7",
          "status": "Created",
          "code": 201,
          "responseTime": 35,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcd105f7-49dc-4e4f-a251-4b740f04d40a",
        "cursor": {
          "ref": "5b5c6950-655a-4dc8-9a03-1e9fc1ef4d71",
          "length": 282,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "237687ce-614f-4b28-bb3e-3a8c34acec69"
        },
        "item": {
          "id": "fcd105f7-49dc-4e4f-a251-4b740f04d40a",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "6d0ecd3b-9dd3-4e53-a598-d9d9d626eec4",
          "status": "Created",
          "code": 201,
          "responseTime": 46,
          "responseSize": 928
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "7665b04f-8e97-4d0d-9606-92f055a66df6",
        "cursor": {
          "ref": "08f818ec-15e3-415b-84ea-0d257da41c07",
          "length": 282,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "9ad8a2c4-069a-4d52-be0c-dd0ba81bf662"
        },
        "item": {
          "id": "7665b04f-8e97-4d0d-9606-92f055a66df6",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "79f309b8-6285-4760-8d8e-399c9b4ce3f9",
          "status": "Created",
          "code": 201,
          "responseTime": 39,
          "responseSize": 907
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a9a06af-7c4e-43b0-a5ed-eca834a1e60e",
        "cursor": {
          "ref": "7dbb0bd8-b050-4459-8961-96b5688193e4",
          "length": 282,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "bab67b00-14f6-4ccb-a122-ec22a43177f4"
        },
        "item": {
          "id": "3a9a06af-7c4e-43b0-a5ed-eca834a1e60e",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "8117c998-9d22-4693-a176-5b20437b63a4",
          "status": "Created",
          "code": 201,
          "responseTime": 34,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c58471c6-68d4-42cf-989a-22e662e155a4",
        "cursor": {
          "ref": "33310c7c-23b2-4fec-b1e2-06272cca0fc7",
          "length": 282,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "367f673e-2c0a-4b45-988f-279a2497e2f2"
        },
        "item": {
          "id": "c58471c6-68d4-42cf-989a-22e662e155a4",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "ff96046b-4b8d-4c80-a9f0-c28f29a1cac0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "242fef4f-a878-4850-b234-9444c8a4fe7d",
        "cursor": {
          "ref": "10c6eaeb-9b1b-468d-b0a6-ed8baee1d129",
          "length": 282,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "1455266c-a031-4bfa-93e1-6dc5774a05c7"
        },
        "item": {
          "id": "242fef4f-a878-4850-b234-9444c8a4fe7d",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "a161e7bf-64ce-491a-9c6b-719796c0d39b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02ed1d4a-dc76-47ee-b905-dca577875b9a",
        "cursor": {
          "ref": "8b11b24f-18bd-4557-aa19-f6f0cc4cc39a",
          "length": 282,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "2d23898d-7e2a-471e-b9b2-6b9d373e48fa"
        },
        "item": {
          "id": "02ed1d4a-dc76-47ee-b905-dca577875b9a",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "2857b776-2573-4a79-812d-b351ade350db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b29732a-7beb-4e42-8de7-b2297c2a3df7",
        "cursor": {
          "ref": "37282a1e-006c-4aaf-8ef8-fddde38c1dfc",
          "length": 282,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "af293071-3a89-4ee6-b289-83a409ce96d9"
        },
        "item": {
          "id": "5b29732a-7beb-4e42-8de7-b2297c2a3df7",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "95d05818-c124-423d-adeb-38b1730e58c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "102c7517-0836-4d9a-bcbb-dbe2c5c282e1",
        "cursor": {
          "ref": "64d992ec-2393-409b-b5d3-41e6f358d32a",
          "length": 282,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "23a156b6-54f8-445f-b3d1-fb4d78a249e1"
        },
        "item": {
          "id": "102c7517-0836-4d9a-bcbb-dbe2c5c282e1",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "369034de-c6b8-48c7-ae12-a329cb3715c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1387922-903e-4851-8a87-dfddf8f63ff2",
        "cursor": {
          "ref": "1cf2e80a-567e-4f55-8259-25ce6f7ac059",
          "length": 282,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "792616d9-0eb1-494d-b509-2817d1cc8fbf"
        },
        "item": {
          "id": "d1387922-903e-4851-8a87-dfddf8f63ff2",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "1bbcf1e9-c685-4390-8427-85249014a968",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d023e50-9017-4997-8c56-6bcde5fe7397",
        "cursor": {
          "ref": "a0c88a46-0dec-4304-aef5-de6b71e71b1e",
          "length": 282,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "639fdfd1-cc0a-4293-bdf5-312291c1fbc8"
        },
        "item": {
          "id": "2d023e50-9017-4997-8c56-6bcde5fe7397",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "097b879f-eac5-403d-9cbe-482def8405db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3cdb5978-36a8-4ecc-bc46-abfbe0dc58ed",
        "cursor": {
          "ref": "3985cc1b-52b7-477e-adc8-5cd6c3b392ec",
          "length": 282,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "e781f3b0-6894-4384-b2fe-5f05e37b2bfe"
        },
        "item": {
          "id": "3cdb5978-36a8-4ecc-bc46-abfbe0dc58ed",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "f3b9f858-6894-4d22-a064-3c06fe74d405",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35774aab-1348-44b9-ac1a-8506dbaa4af1",
        "cursor": {
          "ref": "1af306cf-9855-4284-bf4a-14f21b8fc99d",
          "length": 282,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "fcb4402d-4a9e-4f55-8397-c9f295b891f9"
        },
        "item": {
          "id": "35774aab-1348-44b9-ac1a-8506dbaa4af1",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "d86c0008-2e16-4e03-a60f-665b3d0d3371",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4fc78e4-e733-4621-8d61-fb82fbbcbd54",
        "cursor": {
          "ref": "0ab94af2-838e-4b6a-bf52-811680626bd6",
          "length": 282,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "ac3f75fe-f2a8-4ef3-abe4-5510057d8ff3"
        },
        "item": {
          "id": "d4fc78e4-e733-4621-8d61-fb82fbbcbd54",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "8b672eb2-0941-48d1-93e5-274170833db3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e40b5d77-c5e6-46cf-9cf0-645be25d939d",
        "cursor": {
          "ref": "9f722f19-106b-4bbe-acd8-c0dab9518a8e",
          "length": 282,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "8de9aaca-e043-4566-a62a-3e7bb729f09f"
        },
        "item": {
          "id": "e40b5d77-c5e6-46cf-9cf0-645be25d939d",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "d5ecf3ae-b1d4-47ca-a7e4-0c34c9a72e31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5ffd54d-36d7-4dd4-a2a1-a61acc9afdb9",
        "cursor": {
          "ref": "e1649baf-0284-4ba1-bee4-9cb2970ecf29",
          "length": 282,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "1dd011c0-56eb-47fa-921b-de7691b4bee0"
        },
        "item": {
          "id": "e5ffd54d-36d7-4dd4-a2a1-a61acc9afdb9",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "27874d65-aab9-4020-830c-f0a28d10e086",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffaa60fe-83fd-4a8c-8aaf-499409ef7198",
        "cursor": {
          "ref": "f21c6c69-aada-4968-830e-7890f71a895b",
          "length": 282,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "3f6c0ed9-68d4-466e-9abc-3abf961e7144"
        },
        "item": {
          "id": "ffaa60fe-83fd-4a8c-8aaf-499409ef7198",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "c8fa8d03-298a-46aa-a67b-5255c2cda137",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87f002f3-fc85-47b0-94f9-c8afa090b6c9",
        "cursor": {
          "ref": "8f331a33-ed17-409e-ae1a-4e1556d7ab9d",
          "length": 282,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "4924e999-54f8-418d-af5f-007da4fa1329"
        },
        "item": {
          "id": "87f002f3-fc85-47b0-94f9-c8afa090b6c9",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "37e230b8-44ef-45f2-aa04-b96d0aaaf569",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fab2ebb8-87ad-47ac-bffd-c72033878ddf",
        "cursor": {
          "ref": "8341cbfa-2706-4d15-8a3e-e812a5d85303",
          "length": 282,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "cf13cb54-7100-41af-9452-3ab670ba10e3"
        },
        "item": {
          "id": "fab2ebb8-87ad-47ac-bffd-c72033878ddf",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "18e2db67-03ad-4702-9101-31fd6c3be127",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d707e45b-932c-42f5-ae59-98510e07be69",
        "cursor": {
          "ref": "9c4b997b-e2d5-47ed-9fbb-afcf17388ecd",
          "length": 282,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "c5bae9c0-9f57-4b00-9449-3a00732723a3"
        },
        "item": {
          "id": "d707e45b-932c-42f5-ae59-98510e07be69",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "45e75322-a778-4c16-8f46-622ced5cbc2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8736bed-fe3b-4d29-8582-f04d709495c7",
        "cursor": {
          "ref": "01390a39-11ea-4951-816f-b808d46eb3d5",
          "length": 282,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "b155a374-75f2-4ccf-8886-6ca877903f35"
        },
        "item": {
          "id": "f8736bed-fe3b-4d29-8582-f04d709495c7",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "8a257145-6158-4e54-832d-4edcc5092cb8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dce0997a-0aa1-4342-afcd-6b0052df37bd",
        "cursor": {
          "ref": "08686145-3f65-4ce0-9e8d-deec08d7673a",
          "length": 282,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "2e0facdb-3e1f-452e-8bdc-dfa42d8d705a"
        },
        "item": {
          "id": "dce0997a-0aa1-4342-afcd-6b0052df37bd",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "7b845641-6987-492a-ad9b-defc63060804",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "698f2bc6-4822-4a85-ad63-ca994b947e3d",
        "cursor": {
          "ref": "244006c9-e012-457a-89a1-4b0aee78ef19",
          "length": 282,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "bdb2249b-c2c7-4545-9de5-4a774584015b"
        },
        "item": {
          "id": "698f2bc6-4822-4a85-ad63-ca994b947e3d",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "7dbe577f-afd3-49b9-9f03-8e262cc33e28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56a49187-5d7c-4a27-97e7-4671a92547a9",
        "cursor": {
          "ref": "0ced2aa7-7075-437f-b7db-3d0e1b33d38c",
          "length": 282,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "c7977341-a665-4c3e-bf89-9ee7d950e40e"
        },
        "item": {
          "id": "56a49187-5d7c-4a27-97e7-4671a92547a9",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "03f56245-6a4f-4e36-8cd0-0b5b0a9a2e95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebcd41fc-7d64-496a-a15c-11e7260ee01a",
        "cursor": {
          "ref": "c4fa5bb6-5cea-4265-9eb7-94423739d022",
          "length": 282,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "4f4b2fae-467c-4ab2-9cc5-a7099dfc17c8"
        },
        "item": {
          "id": "ebcd41fc-7d64-496a-a15c-11e7260ee01a",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "9ce3d88a-ad6e-491b-a0c3-1303074a2ec5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "137fb079-9297-4445-936f-903474137b8f",
        "cursor": {
          "ref": "41af2650-6ab6-42a4-b11a-6b35d1e7aad5",
          "length": 282,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "6380567a-378a-41db-a5e2-89be7359ea99"
        },
        "item": {
          "id": "137fb079-9297-4445-936f-903474137b8f",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "4a84d3c7-160e-4aca-9599-0ee27d95fb9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7133879-81f2-4ada-aabd-56d7e97ef313",
        "cursor": {
          "ref": "dd448a65-e2d0-4c06-ab89-a5ba976ba6b1",
          "length": 282,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "d4ad26d7-0a67-4608-b76a-3a49c2812d50"
        },
        "item": {
          "id": "c7133879-81f2-4ada-aabd-56d7e97ef313",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "0c7acbed-6994-4e04-a655-e7ce1f3cde98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c2b6c3c-d898-4977-b158-ec7b19fbdfe3",
        "cursor": {
          "ref": "d9db6f9d-fa59-444b-b313-97a458e25187",
          "length": 282,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "47d0272f-e27e-43fe-8966-b496b289a8d4"
        },
        "item": {
          "id": "3c2b6c3c-d898-4977-b158-ec7b19fbdfe3",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "45534bf0-c7f5-4559-87cf-8ce27d323d03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e69e6047-05bc-4e7f-ba0d-d413edb91480",
        "cursor": {
          "ref": "5a80cd69-e9da-48a4-8022-1f8beef53ffe",
          "length": 282,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "a2a8f795-e19a-486d-9843-8dd8ae71ef51"
        },
        "item": {
          "id": "e69e6047-05bc-4e7f-ba0d-d413edb91480",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "42117c94-37f2-4e63-ac7c-a44b49125c67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49ff1a4f-6960-47b4-83e9-953293768bd4",
        "cursor": {
          "ref": "c69c4703-6f65-4d1d-9fa2-bc11ffb8a846",
          "length": 282,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "0dbbd657-fcd5-4115-836f-30488c411f93"
        },
        "item": {
          "id": "49ff1a4f-6960-47b4-83e9-953293768bd4",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "dc95d0fd-6877-437b-a550-cb09a9ccb102",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca73e8cc-afa8-4350-af20-12a7886b7a42",
        "cursor": {
          "ref": "472a9584-21c5-4c93-8be3-a7f7525d7586",
          "length": 282,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "436d8352-4a08-49e3-8b3c-df3e6c9af8e5"
        },
        "item": {
          "id": "ca73e8cc-afa8-4350-af20-12a7886b7a42",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "87d91308-766f-459f-97fa-0090715438fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b74db5d9-88f6-4ea2-b6bb-5feaf1af0169",
        "cursor": {
          "ref": "c3dd8267-0f1f-48de-ac06-25948792a38f",
          "length": 282,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "d067f584-ee45-4e50-945e-dbd8036c8fc5"
        },
        "item": {
          "id": "b74db5d9-88f6-4ea2-b6bb-5feaf1af0169",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "adff95c5-e4b2-45f9-a71c-63a2c7887d88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fafd331a-87f4-4962-9348-dd19d4e4e815",
        "cursor": {
          "ref": "a1ffb9a9-3a47-4e45-9b2e-3fb823878c0d",
          "length": 282,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "9943825b-2a56-4a35-a20a-cac85144a9d4"
        },
        "item": {
          "id": "fafd331a-87f4-4962-9348-dd19d4e4e815",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "55841c60-751c-4cac-8751-c7840fc8ff13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "643d853a-625a-4708-8c6a-7a29ff4d864f",
        "cursor": {
          "ref": "b8d012ae-e586-411d-9e55-36ed25edbcc3",
          "length": 282,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "a4647f68-308d-410b-a4a0-b3329b32d81e"
        },
        "item": {
          "id": "643d853a-625a-4708-8c6a-7a29ff4d864f",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "e4702078-a1cd-4825-95db-c9dc6bda327c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a514f3d6-5080-4af5-a7d3-737f0d4edda1",
        "cursor": {
          "ref": "4f6254cb-4007-4212-a808-d389f546e92f",
          "length": 282,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "832492f3-b134-45c2-87be-6e7136cff7da"
        },
        "item": {
          "id": "a514f3d6-5080-4af5-a7d3-737f0d4edda1",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "790c4ef4-3338-46b5-9db1-b431bfba52d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e46a9ca-7279-4b37-b709-234e9b2e03e4",
        "cursor": {
          "ref": "8353a187-fc1f-4812-8a59-81ffdf5704bb",
          "length": 282,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "8a7540c9-fab9-441d-9906-9735a9c3ff1c"
        },
        "item": {
          "id": "2e46a9ca-7279-4b37-b709-234e9b2e03e4",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "49310018-516c-4b77-88a3-24ef800f4282",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0ad9034-f231-4df6-89ca-fbdc13d958fc",
        "cursor": {
          "ref": "363084cc-6c06-4502-bc98-6598ccc5e49f",
          "length": 282,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "109fa6b3-07af-4724-8dd0-e8fbe3ad3735"
        },
        "item": {
          "id": "b0ad9034-f231-4df6-89ca-fbdc13d958fc",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "bdd7631d-8750-44f0-aab3-6c5fc66c312c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 9,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef48c59f-9fad-4b19-a3bb-80d13436d5f9",
        "cursor": {
          "ref": "b18786ce-099d-4e89-b476-a6993d57be4d",
          "length": 282,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "5e6d7e57-8789-4e51-ac2a-cb6d467d5031"
        },
        "item": {
          "id": "ef48c59f-9fad-4b19-a3bb-80d13436d5f9",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "4f33e279-389f-4987-801f-7b0af4a7233a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "072c439e-59ce-4e00-a8ea-f31fbef20d34",
        "cursor": {
          "ref": "7d0e1fd4-0cf2-4445-ab5a-7826d0217b7e",
          "length": 282,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "55e62f97-b8af-473a-85f8-5d14e1000e7a"
        },
        "item": {
          "id": "072c439e-59ce-4e00-a8ea-f31fbef20d34",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "bab399a3-928f-4860-bf9c-8d7c9291d711",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8babea00-e0b6-4ed9-b486-a687df2e368c",
        "cursor": {
          "ref": "d45e7684-2ff6-4985-9a2a-96a906f8be29",
          "length": 282,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "97b61312-e937-49d6-b0ba-588f28f54773"
        },
        "item": {
          "id": "8babea00-e0b6-4ed9-b486-a687df2e368c",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "3d8dc6ae-b779-4bbd-bfb6-98061e111913",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cf2d0e1-c8cd-42db-8152-a41f265efb53",
        "cursor": {
          "ref": "9bdaeb8b-5b6a-4280-97d2-bd5e07379c23",
          "length": 282,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "2c3fa401-b366-4516-877a-8278596e3315"
        },
        "item": {
          "id": "2cf2d0e1-c8cd-42db-8152-a41f265efb53",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "05698bda-9d54-49cc-9ad3-14c4ef512982",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "633beae3-0883-4381-8d4c-269845becb15",
        "cursor": {
          "ref": "1f475e9b-6684-481a-bb36-389682866046",
          "length": 282,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "1376fb55-27f6-4e41-9947-007f871dd3f1"
        },
        "item": {
          "id": "633beae3-0883-4381-8d4c-269845becb15",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "0fe46564-3399-4e52-8843-7db427d4fc90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc625545-5874-4cc0-a07a-d501583401e2",
        "cursor": {
          "ref": "4f5a5ecd-87f4-4a9e-a558-1091bcb1ddce",
          "length": 282,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "0aef7d7a-4046-4034-966d-4c263ed89f66"
        },
        "item": {
          "id": "fc625545-5874-4cc0-a07a-d501583401e2",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "59114117-8099-4ca1-a472-447215f6c553",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a2e222e-fa7a-4b31-8ff0-50db71c6e09b",
        "cursor": {
          "ref": "12296cb3-ce82-4e38-961c-22a933e3fdd7",
          "length": 282,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "b55a2c70-c38f-4e32-973e-79771295d2fb"
        },
        "item": {
          "id": "6a2e222e-fa7a-4b31-8ff0-50db71c6e09b",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "f4d52610-34aa-441a-b49c-67642242b8b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6c4c018-4bc4-464a-878c-e885eb52f555",
        "cursor": {
          "ref": "3697bee5-9a7f-4cad-a6c2-5b3d88cd5727",
          "length": 282,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "f12bfe41-58a2-4c3d-bf84-a8e5e20aac40"
        },
        "item": {
          "id": "e6c4c018-4bc4-464a-878c-e885eb52f555",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "dcb4bd9e-fa2e-4538-a081-75714c859f94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3163370-23b6-40c7-8dd4-2b5c2875da4e",
        "cursor": {
          "ref": "281daab4-f6c5-47d1-9a6f-df506787fbb1",
          "length": 282,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "ea9503d8-a5bc-4561-ac83-da5c83e11a64"
        },
        "item": {
          "id": "a3163370-23b6-40c7-8dd4-2b5c2875da4e",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "aa4eb554-eade-4d01-8d6c-611d2b558671",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d2532c4-f350-4bf8-8280-15f914a7b997",
        "cursor": {
          "ref": "af282a11-abc8-4985-b711-6844152c54e2",
          "length": 282,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "5d34cafe-143b-47d2-b4f8-6c2daa238b79"
        },
        "item": {
          "id": "5d2532c4-f350-4bf8-8280-15f914a7b997",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "48b81dc2-6590-401e-be6a-bbb353763e69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7873c2d-6640-4aa7-b73c-907f89ba6861",
        "cursor": {
          "ref": "fbbd0d4b-abb1-45a5-b1ac-ffc21dea473c",
          "length": 282,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "eb4d8c8b-5d63-491f-a547-148e3d481b8c"
        },
        "item": {
          "id": "c7873c2d-6640-4aa7-b73c-907f89ba6861",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "bd0d263f-95de-429a-ba95-10c55cdb643a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ce54f72-87ad-4f69-b340-8e15030ef60a",
        "cursor": {
          "ref": "4b21e902-5031-42d0-836c-3fe55e789471",
          "length": 282,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "8e987134-bae9-4bc6-8ede-8f9f859c6586"
        },
        "item": {
          "id": "5ce54f72-87ad-4f69-b340-8e15030ef60a",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "9b363b22-5074-498d-aa2a-3c18cc5591e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94518a41-0684-4891-8f1f-b5579e7296c2",
        "cursor": {
          "ref": "60695776-31c9-48ae-9e9a-b514280e8910",
          "length": 282,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "5d641e65-256d-4919-b8aa-2f636e8d77bf"
        },
        "item": {
          "id": "94518a41-0684-4891-8f1f-b5579e7296c2",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "6249c113-4919-4e62-9755-abc4a267ed51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43df56e7-71b3-4ad6-aafe-3dc610571452",
        "cursor": {
          "ref": "b7b33eeb-413f-4be7-82b4-83526e5ebb1c",
          "length": 282,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "eb75fbea-179e-4c9e-90ea-3d4b34174f17"
        },
        "item": {
          "id": "43df56e7-71b3-4ad6-aafe-3dc610571452",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "0f4c2892-e2ee-43eb-93c0-dc64516c6a4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27fb5c7b-8b3b-4d6c-8f89-5efb154063aa",
        "cursor": {
          "ref": "1922a91a-3e53-495a-bd11-471d9baae783",
          "length": 282,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "ddb718a2-0515-4abe-b277-5ea756438403"
        },
        "item": {
          "id": "27fb5c7b-8b3b-4d6c-8f89-5efb154063aa",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "3e0e7367-78f2-4c2f-b622-f57c8595adf9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4da3d254-2fca-4376-a6b1-ea6587daf6aa",
        "cursor": {
          "ref": "c82b52e8-5017-45a4-8681-37bb5ca9f8cd",
          "length": 282,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "aa27dd48-7b9b-4203-b310-c4677f71f409"
        },
        "item": {
          "id": "4da3d254-2fca-4376-a6b1-ea6587daf6aa",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "37e9fe9a-4c4f-45e2-a3f1-31717adb3f2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23f598c5-ae6f-4910-895b-98d8288bba09",
        "cursor": {
          "ref": "44f23ea2-cef2-4566-9bd0-4a0e6e354ec9",
          "length": 282,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "a48c29dd-d391-4375-b8fc-19f3ed5dc01a"
        },
        "item": {
          "id": "23f598c5-ae6f-4910-895b-98d8288bba09",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "c59b1023-1993-4ba4-a437-ff1adb8da688",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16ae19b9-2c61-430d-8a24-4708a7122cab",
        "cursor": {
          "ref": "28a87ce9-48d0-4565-87ce-7e37f843c429",
          "length": 282,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "b982a4ac-baa0-47e7-b34a-b22b99162123"
        },
        "item": {
          "id": "16ae19b9-2c61-430d-8a24-4708a7122cab",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "435d16a2-07c6-44dc-9b1f-b49bdc576243",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c21136ac-d088-4702-947a-754893c421fd",
        "cursor": {
          "ref": "c51a9824-a4f8-4ff6-b72d-dec142f16880",
          "length": 282,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "f0ae1fea-dc91-4251-b93c-daaccf326343"
        },
        "item": {
          "id": "c21136ac-d088-4702-947a-754893c421fd",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "65a3a0e6-6a81-40f8-a6c9-52a01aaebb81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43e767dc-61e9-4e65-8899-deadb29f8dbb",
        "cursor": {
          "ref": "3d214109-2cec-4adf-a6b9-77b283bd27bd",
          "length": 282,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "d0bb8453-8d2f-4c8b-be7f-9cb0cd22b67b"
        },
        "item": {
          "id": "43e767dc-61e9-4e65-8899-deadb29f8dbb",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "5d528233-b446-4f33-9281-787e6203e407",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "192ea381-758b-44a9-beae-a9c2d2e315ae",
        "cursor": {
          "ref": "3d7fc8ac-0c7f-45ce-9767-010dd06d0978",
          "length": 282,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "a83f6b01-f1d6-4c4e-a0aa-c5b4429bc297"
        },
        "item": {
          "id": "192ea381-758b-44a9-beae-a9c2d2e315ae",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "a39c9d8d-291c-43d4-a009-372b3a244533",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e05617d-fe82-4870-8e63-8b88bada16a3",
        "cursor": {
          "ref": "76f0c864-36ac-464a-91d4-1b119ee5fd13",
          "length": 282,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "0db26b9c-e261-4f8d-8053-a4b44cb49a10"
        },
        "item": {
          "id": "5e05617d-fe82-4870-8e63-8b88bada16a3",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "b7714939-78c5-47eb-90d2-fce46eb31277",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8b64f71-cfca-4ad9-bbba-a9fea2759a20",
        "cursor": {
          "ref": "c2077d70-19eb-41e0-8578-da5c351df6cb",
          "length": 282,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "065d5b52-3a7e-4890-8b77-2f1311ab7c7f"
        },
        "item": {
          "id": "f8b64f71-cfca-4ad9-bbba-a9fea2759a20",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "0cd9ae98-ffa4-4116-afc8-15469ce01901",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "864b8755-32a8-4c44-88a2-10d19afc90ca",
        "cursor": {
          "ref": "36e4e07c-6416-407a-9b9c-ab1aaa80eec1",
          "length": 282,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "b26e7b54-95e2-4480-bef1-2bd2d0a1b80f"
        },
        "item": {
          "id": "864b8755-32a8-4c44-88a2-10d19afc90ca",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "e373ce57-c89a-4c10-80b5-04364f53f420",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1a82ec4-a7c8-45bc-a604-bbf492e42bc2",
        "cursor": {
          "ref": "79083f04-ffa6-42ef-a844-d36e1e699bb4",
          "length": 282,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "57e69157-3610-48a0-b6b3-551c37e01dbd"
        },
        "item": {
          "id": "f1a82ec4-a7c8-45bc-a604-bbf492e42bc2",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "a24edf70-6fc7-4880-ba86-082c70c453fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3832106b-cede-45f7-acc4-02e1461cc8c8",
        "cursor": {
          "ref": "0358b652-4973-44be-81c4-69a3e5b942f1",
          "length": 282,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "62f55e29-1093-4115-b628-3d3aa7a3c688"
        },
        "item": {
          "id": "3832106b-cede-45f7-acc4-02e1461cc8c8",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "89a642e1-14d7-4bb5-933b-4d4653615de8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61d99607-e0e8-4443-b294-b545ca0b9046",
        "cursor": {
          "ref": "f33bd78f-fe17-4bfd-9955-0db85496b30c",
          "length": 282,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "ff217a36-74f8-495c-b14a-305460f04a7a"
        },
        "item": {
          "id": "61d99607-e0e8-4443-b294-b545ca0b9046",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "99888c03-fe16-4885-b48d-44d1903a1e3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0130e71-ef4e-49b8-aa81-3e444bcf2a56",
        "cursor": {
          "ref": "87d26953-a6ca-4efa-b3db-e9f6563525fd",
          "length": 282,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "0665f583-147c-4cc0-a10b-63e6816f45d4"
        },
        "item": {
          "id": "c0130e71-ef4e-49b8-aa81-3e444bcf2a56",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "b0f39e40-44a1-46ec-9c90-bed759bb9371",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5409f91c-a587-4b69-bd12-8e1ce3f5d8e7",
        "cursor": {
          "ref": "6b721a65-5248-4c6c-bd8e-b5a32b8bdbd8",
          "length": 282,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "544e62f9-478b-4a4a-bc98-ec2246b53393"
        },
        "item": {
          "id": "5409f91c-a587-4b69-bd12-8e1ce3f5d8e7",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "4346c557-dac0-4eb4-824b-92a28e621b28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77438033-2605-46f3-80f0-bf3ad5f6785f",
        "cursor": {
          "ref": "47dd90a5-9b91-4c97-b622-edb6bd30e95c",
          "length": 282,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "ca9e6330-ed4e-41ed-8b15-884d749d5452"
        },
        "item": {
          "id": "77438033-2605-46f3-80f0-bf3ad5f6785f",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "0b2950d2-5b6d-4084-8766-0235024dd3d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e64174d-8db5-4b17-9125-efbb6128dbf8",
        "cursor": {
          "ref": "c783c54b-13a5-4e75-beda-d748d2c400ed",
          "length": 282,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "fb5cc36e-8bbc-43c8-ab4d-373c7f529447"
        },
        "item": {
          "id": "3e64174d-8db5-4b17-9125-efbb6128dbf8",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "2b640916-b3df-478c-9143-84b4dc720cd4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9750fc1e-744e-43d9-bcbd-7d28f0940581",
        "cursor": {
          "ref": "c6d27a96-6a74-4fb4-a64b-ef19267b5ae1",
          "length": 282,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "14fe4ccc-7944-4e21-b73e-a4fdab35d0fa"
        },
        "item": {
          "id": "9750fc1e-744e-43d9-bcbd-7d28f0940581",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "f0ce1e1e-1d7b-4e96-abb4-0d8996492c1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b529100-c575-46c2-8b98-a864e96ac4c3",
        "cursor": {
          "ref": "e83773cf-73e5-4fa5-b059-4ce1934e802a",
          "length": 282,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "8ff4d112-7f1c-4f63-b32e-1f02a1ca6577"
        },
        "item": {
          "id": "6b529100-c575-46c2-8b98-a864e96ac4c3",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "59fd246e-87a8-4094-9ba8-3e349d74ac71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bc4e3c0-e980-41c9-a21c-707af4ad225b",
        "cursor": {
          "ref": "7df1a35c-0f53-445e-aa16-ffc3afeea1e0",
          "length": 282,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "93ffa8fc-efd2-4ef0-b7d5-27e2c5a25244"
        },
        "item": {
          "id": "5bc4e3c0-e980-41c9-a21c-707af4ad225b",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "818d2c72-c7e0-43f5-aa05-14e078f78398",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f662e93-c6fb-42e6-8677-bc37b54becab",
        "cursor": {
          "ref": "98427a79-514f-4047-a83f-9999df08f312",
          "length": 282,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "752fe7ea-aea1-406c-ab03-b500994035ca"
        },
        "item": {
          "id": "9f662e93-c6fb-42e6-8677-bc37b54becab",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "18bbc4c7-960d-44fc-9bbb-2a79c00f8cd1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68e08977-8563-4d0a-88aa-30cad0b82b27",
        "cursor": {
          "ref": "d6fab1a3-8def-4c59-b4ed-ad519a2bc847",
          "length": 282,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "5383f611-a73d-45cc-aba8-2fc02fd09ea3"
        },
        "item": {
          "id": "68e08977-8563-4d0a-88aa-30cad0b82b27",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "7cd2ea67-8a3c-4456-b777-bce65f6a8362",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eed63e11-01c3-4595-8474-f1b78b7e2a47",
        "cursor": {
          "ref": "4bcda576-166b-458f-ab26-f6d1c2bc5a69",
          "length": 282,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "f3fc0ece-c2d8-4284-adbb-91c50c027a98"
        },
        "item": {
          "id": "eed63e11-01c3-4595-8474-f1b78b7e2a47",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "94218342-b707-4181-9ca0-02c9d4027917",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df29e8c7-eb8c-4b05-bb59-e4a4292dbaac",
        "cursor": {
          "ref": "5aee8214-b357-4921-a700-3c288c8f6350",
          "length": 282,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "68f7bae2-2495-4e18-8d59-4d5c8b718972"
        },
        "item": {
          "id": "df29e8c7-eb8c-4b05-bb59-e4a4292dbaac",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "bab33ef3-1031-4979-93b5-1cc467dfb7a9",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 9,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07a3ecc4-9489-4c04-b2ea-dae0241b3cec",
        "cursor": {
          "ref": "86a48a8a-73f2-43db-a43e-354983a9f11b",
          "length": 282,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "1c7aa82c-53b1-47a2-ad1e-c3d38871af6f"
        },
        "item": {
          "id": "07a3ecc4-9489-4c04-b2ea-dae0241b3cec",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "d4512ffe-c35c-4645-bcfe-a3b98db26eed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d8c86e6-7dc7-49b5-8943-659ae228bc76",
        "cursor": {
          "ref": "ed68febe-7b25-41a5-bf40-427ea28a6c69",
          "length": 282,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "80a0c188-42b5-4230-bbb5-a206ae7b6ea9"
        },
        "item": {
          "id": "8d8c86e6-7dc7-49b5-8943-659ae228bc76",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "82b1246d-4024-4cc5-9ff3-5b5351a284dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5df70bb9-91e0-40e9-97c1-84ca17268689",
        "cursor": {
          "ref": "feb61975-6669-499b-adb1-b8790c53fa26",
          "length": 282,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "37577b9c-ce6e-40f6-8978-9dc7cbda3d31"
        },
        "item": {
          "id": "5df70bb9-91e0-40e9-97c1-84ca17268689",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "b6997c2c-f5b2-4691-9e98-aac6b87c6748",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f398224-0bf4-4558-a386-4a61a8c9ea71",
        "cursor": {
          "ref": "f2398b95-d445-4bc7-b588-90279e03c6b2",
          "length": 282,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "4d1f415a-946a-4535-981d-6c1ce517b064"
        },
        "item": {
          "id": "8f398224-0bf4-4558-a386-4a61a8c9ea71",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "6b2192d1-6bad-4445-afb3-d13d40b2dbc4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6ca9f8a-1578-4f73-b5ed-0453ec0ea856",
        "cursor": {
          "ref": "63d12f47-7dce-45e0-873f-9871312ac75d",
          "length": 282,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "afeae4b9-7ae3-4d51-98ab-12c5e97a87e0"
        },
        "item": {
          "id": "f6ca9f8a-1578-4f73-b5ed-0453ec0ea856",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "c0f62fc2-7191-4a79-9b25-d480ea55e998",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd7cfa83-456d-4bc3-b814-fff8d4902f44",
        "cursor": {
          "ref": "8d802607-0a3b-40f5-bf0d-51b654929831",
          "length": 282,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "176eea86-60aa-4505-9d31-1cd4549b05f8"
        },
        "item": {
          "id": "fd7cfa83-456d-4bc3-b814-fff8d4902f44",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "3f4ab015-f000-4eb7-b3b0-707f5901a1b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03d1a383-f22a-4fd1-a456-940880a014c1",
        "cursor": {
          "ref": "be89faf3-fa1c-4c57-8873-c04a34deeed0",
          "length": 282,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "44a10936-865c-463e-8bfd-ea9b381b0359"
        },
        "item": {
          "id": "03d1a383-f22a-4fd1-a456-940880a014c1",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "827942e3-9659-48af-9a06-940534112358",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64442cd5-aec0-4597-af7b-16b06e48daf3",
        "cursor": {
          "ref": "49c23e51-ec20-4532-925e-b3ff58fd7a85",
          "length": 282,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "00c8d328-a257-4b23-b9f5-a92429d39419"
        },
        "item": {
          "id": "64442cd5-aec0-4597-af7b-16b06e48daf3",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "b7e39298-9170-4953-85c0-b74ceb097c9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f361e18d-10af-48c2-a1c1-fbae845eb92b",
        "cursor": {
          "ref": "21983f47-5799-4108-af7d-afd5f3299725",
          "length": 282,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "7be0ec47-ad52-4b28-8b6e-46e6d13ca04e"
        },
        "item": {
          "id": "f361e18d-10af-48c2-a1c1-fbae845eb92b",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "672dda09-dfc7-4f47-95ca-de3b13f4d3b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd0f40d7-1264-4037-99dc-81c36248a313",
        "cursor": {
          "ref": "92b7b1fd-2b29-4577-a872-53b0e577279c",
          "length": 282,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "b2baf1a2-8700-4e4e-b7b2-48d0e21f4a1b"
        },
        "item": {
          "id": "cd0f40d7-1264-4037-99dc-81c36248a313",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "c01010ba-d751-4050-989a-3653bc7de7b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "041b4209-baa7-4301-b2d2-316ef955f215",
        "cursor": {
          "ref": "b5977cf3-6517-4bfd-bcd4-6da2b261551b",
          "length": 282,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "481bdab9-767f-429a-8e8c-e7c30e0f8b99"
        },
        "item": {
          "id": "041b4209-baa7-4301-b2d2-316ef955f215",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "e5586b95-69b7-4364-b2f6-0d26676c1ad5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e176f051-6b86-4836-b2c9-2be66cef43e5",
        "cursor": {
          "ref": "3df450fd-a90e-4873-bde0-83c7c58b2d4d",
          "length": 282,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "37c2c695-9b9f-4722-a797-d28a4ca74195"
        },
        "item": {
          "id": "e176f051-6b86-4836-b2c9-2be66cef43e5",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "f22d3486-ad80-4c5d-97d2-595cff4d65d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b10c663e-cf5b-4340-ad41-4c805cd96298",
        "cursor": {
          "ref": "0f84f8a0-27dc-4192-bacb-faa3cd553a38",
          "length": 282,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "14805a93-92e3-48df-90de-f49d5f3e27d8"
        },
        "item": {
          "id": "b10c663e-cf5b-4340-ad41-4c805cd96298",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "1fd1087e-f36d-4cf3-b647-3d42a4646ef9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42ecba32-5b8d-44ec-b14e-5a98a6bb4520",
        "cursor": {
          "ref": "4a616016-cd9a-4c71-9fa1-95075dd0f34f",
          "length": 282,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "9338efc3-6f48-4a29-851b-dde413573931"
        },
        "item": {
          "id": "42ecba32-5b8d-44ec-b14e-5a98a6bb4520",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "c5eb91bf-2b75-43da-a2c1-7a9ada11053c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2b5befe-aa01-4e59-b9bf-769ed66d0705",
        "cursor": {
          "ref": "ed07dbc8-321d-46a3-a9e7-d1145ff62a19",
          "length": 282,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "167e1859-9d9e-40b5-a29a-1bc29587ca01"
        },
        "item": {
          "id": "e2b5befe-aa01-4e59-b9bf-769ed66d0705",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "c7df4ba9-bcd0-40e7-b86b-d1dfefe22dcf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b43496d-e9b5-40d1-8d29-767f0ad1d860",
        "cursor": {
          "ref": "fa61ac10-a6c6-4b7d-9079-c79ce1d87589",
          "length": 282,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "6d211f1d-5ce1-4abd-a9fe-31783e7a9da8"
        },
        "item": {
          "id": "4b43496d-e9b5-40d1-8d29-767f0ad1d860",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "29c8d500-3fa4-4634-a837-7d2abc401dff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "364dd404-2956-4429-8151-011531b3c6e6",
        "cursor": {
          "ref": "74713431-025b-4db4-89d3-1331854053fc",
          "length": 282,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "2d2dde80-5b43-49c8-a0fa-27ed97711f0d"
        },
        "item": {
          "id": "364dd404-2956-4429-8151-011531b3c6e6",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "ec44e8a3-fc4d-4402-a0b6-e83e7e628d7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4228e3f2-c6da-49f1-a850-aee9d3b16a3f",
        "cursor": {
          "ref": "9694de5e-686b-4076-991a-9621f351aebe",
          "length": 282,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "2dc85aa9-03b1-4677-a45a-42a3bf719737"
        },
        "item": {
          "id": "4228e3f2-c6da-49f1-a850-aee9d3b16a3f",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "2adb4620-fafb-40be-9066-7f7795ae081b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90ffef10-4add-46cf-9996-3ec0c25d5bcc",
        "cursor": {
          "ref": "7ea333cb-b850-405b-aa17-43afb059e365",
          "length": 282,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "048dc0ca-6913-4df6-b552-ad52f192e984"
        },
        "item": {
          "id": "90ffef10-4add-46cf-9996-3ec0c25d5bcc",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "de0e1f2d-8c1d-4844-9c33-e5e3bb47255b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af58f29b-0fec-46d4-ae31-5e47b2ce041a",
        "cursor": {
          "ref": "d809645d-0c3e-4005-afe7-47241410c23c",
          "length": 282,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "f42ea7d3-a4c9-4340-af83-ebb8c16fe872"
        },
        "item": {
          "id": "af58f29b-0fec-46d4-ae31-5e47b2ce041a",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "64e4db24-6c78-4889-a4c8-88c9c5c6d845",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3868f8f0-75fa-4afc-ac8c-3674916f7e51",
        "cursor": {
          "ref": "e25ad8e4-9a30-468e-8828-ea5b44a7c917",
          "length": 282,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "bb826c94-b3dd-4be3-a8f4-edeacd4ec02a"
        },
        "item": {
          "id": "3868f8f0-75fa-4afc-ac8c-3674916f7e51",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "a405ed77-f9be-4921-b1c1-fbcecde2a972",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c79c317-b91a-4421-a0bc-527ceef31af0",
        "cursor": {
          "ref": "38e814c4-ca54-4b1e-ba3b-b32d7da2f5a8",
          "length": 282,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "d6b050df-9aa8-4222-a80a-4663881317df"
        },
        "item": {
          "id": "7c79c317-b91a-4421-a0bc-527ceef31af0",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "63af6fc5-5d31-443f-aaf5-e9036e9f32bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11c386a8-8384-44b5-89b0-8bb1d502e817",
        "cursor": {
          "ref": "c58981c3-ab7c-4614-8055-44308ac43eee",
          "length": 282,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "4dfe134b-3a66-4369-9721-167f9c7a1894"
        },
        "item": {
          "id": "11c386a8-8384-44b5-89b0-8bb1d502e817",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "20240529-3946-49d0-ad53-c8d5e4da5d96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ed62cd3-acf4-443e-9d4d-d689219d0d94",
        "cursor": {
          "ref": "9a200dd7-b3d4-4da4-8635-caf64b6e0e46",
          "length": 282,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "20bdec46-4c7d-4604-abf8-8ce1b9a54a26"
        },
        "item": {
          "id": "2ed62cd3-acf4-443e-9d4d-d689219d0d94",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "a01bb57c-ee1c-4d65-9872-020a207b18c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "963bab96-c1fa-4ab3-819b-c79ef7a11474",
        "cursor": {
          "ref": "143133a8-5db4-4102-b088-d800fa6f1644",
          "length": 282,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "4ca33887-774f-426a-89d8-4586f9c966b5"
        },
        "item": {
          "id": "963bab96-c1fa-4ab3-819b-c79ef7a11474",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "e26a0470-d49c-4fc8-ad73-7b210b5b5f67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 226,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7153df10-2426-46fa-bc15-c472ce05074a",
        "cursor": {
          "ref": "297a26f5-b6e7-4782-a18c-13499855b355",
          "length": 282,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "65a12b92-15bf-4447-8e16-e56be5759937"
        },
        "item": {
          "id": "7153df10-2426-46fa-bc15-c472ce05074a",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "4ac0ae7b-c9d2-4993-854b-3c4813c694a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3dbfe98-aee8-4c0b-ab7e-bc1940926f4b",
        "cursor": {
          "ref": "8af0c03c-1bb6-425d-b520-077d4e08e614",
          "length": 282,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "74f49cad-1fa4-4472-b297-ef46b8e71fb9"
        },
        "item": {
          "id": "a3dbfe98-aee8-4c0b-ab7e-bc1940926f4b",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "4ac144ca-c61c-4612-8811-7191502c528c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "713996d0-c2d6-491b-a71a-db2e4ae50505",
        "cursor": {
          "ref": "eea58228-05c6-49ee-ad92-0f48b5f54501",
          "length": 282,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "264edefb-645d-4fc7-af69-856d0a2c7002"
        },
        "item": {
          "id": "713996d0-c2d6-491b-a71a-db2e4ae50505",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "ca2f12e1-d32b-46b8-b6ba-4087ab46e9b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ed718bd-893a-4da7-8a59-65eaf9f3d4e2",
        "cursor": {
          "ref": "bd5a0e21-dce9-43c7-bfe4-0b6e1a4d9330",
          "length": 282,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "8845afa2-812f-4b42-9c56-d0d72fd3607f"
        },
        "item": {
          "id": "3ed718bd-893a-4da7-8a59-65eaf9f3d4e2",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "458c685b-4add-428b-aaa7-8b42388339d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 182
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35c0421e-82bd-45b7-be9b-d0f8c78c1944",
        "cursor": {
          "ref": "862cb9c5-23bb-447e-b2e6-db146bc68018",
          "length": 282,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "9790dc62-98df-4692-9ed1-4f8d7e9295f1"
        },
        "item": {
          "id": "35c0421e-82bd-45b7-be9b-d0f8c78c1944",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "7062b082-621b-4a58-93e6-b998f8041d49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5105528b-5649-4cff-8342-5eeac02bc287",
        "cursor": {
          "ref": "735eed7b-8e85-4f89-9ff9-45c6bac9a607",
          "length": 282,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "c29fa974-411b-4c4c-87dc-e45477178038"
        },
        "item": {
          "id": "5105528b-5649-4cff-8342-5eeac02bc287",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "44873243-01dd-4fcd-95c4-384a85e75c4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e6354e8-e1fd-4734-b2f8-693567404dc7",
        "cursor": {
          "ref": "d954ac0f-a1d9-4fe1-a536-2aebb437ec86",
          "length": 282,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "85b86fa6-fe19-4d1a-a6a0-3acdd7f67f87"
        },
        "item": {
          "id": "2e6354e8-e1fd-4734-b2f8-693567404dc7",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "2e0d39a8-b85a-4019-86a6-f4e7f835eb2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b96bc2e-f309-4e39-a4c6-dffa8a120e21",
        "cursor": {
          "ref": "af3a5e2b-4be0-44d1-9167-5aeeeec911c0",
          "length": 282,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "32a77af6-04b3-48a0-868e-b2092b06d60f"
        },
        "item": {
          "id": "4b96bc2e-f309-4e39-a4c6-dffa8a120e21",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "7ae5c5f2-3b07-46df-9c6c-3ee020d932db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "778cba53-7bb5-412e-8eac-58d8ffc99c34",
        "cursor": {
          "ref": "36aa8993-dedd-41ca-bf1c-80be3ba49bb7",
          "length": 282,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "5cd35adb-276c-4813-b159-312909c27d0d"
        },
        "item": {
          "id": "778cba53-7bb5-412e-8eac-58d8ffc99c34",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "3ab48b8a-eb6b-4c31-8028-4148305ccd95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4524862a-66bd-42dc-8444-f5f44dba36d6",
        "cursor": {
          "ref": "0f21980a-dc5c-4892-8fbd-79a76a96b8d4",
          "length": 282,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "8efe3a0b-c1f3-4478-89f4-ff11548c3b83"
        },
        "item": {
          "id": "4524862a-66bd-42dc-8444-f5f44dba36d6",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "2a04f808-d302-493b-8ea7-76160034d64a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8b24f61-0160-4c9c-8273-6420bc1ee342",
        "cursor": {
          "ref": "26bd123a-04fc-4fee-bc96-3b64b6caf707",
          "length": 282,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "d583c8ec-abf6-42c2-aeb3-209e0a70190f"
        },
        "item": {
          "id": "f8b24f61-0160-4c9c-8273-6420bc1ee342",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "2c57807e-3a68-4305-a872-bde161dd3d9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3102ceb9-dd70-45d5-991b-eb459707345b",
        "cursor": {
          "ref": "1c641021-dbda-4f52-81a1-16be047e7007",
          "length": 282,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "9a992924-f9c6-4334-b134-6355424d5fa3"
        },
        "item": {
          "id": "3102ceb9-dd70-45d5-991b-eb459707345b",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "7514dd2d-50fc-4048-8d82-311a2ccadc1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05130e08-88bb-4073-b156-a512779c26ec",
        "cursor": {
          "ref": "41092844-97fa-419f-88b8-a585d6818f61",
          "length": 282,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "49f4a6a7-23f1-4db8-a260-f1dbaf4d2a87"
        },
        "item": {
          "id": "05130e08-88bb-4073-b156-a512779c26ec",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "56b7875e-1bff-4e29-a6cb-de73872d4ab6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbff64d5-6f21-48da-9c46-a9b562dd5eeb",
        "cursor": {
          "ref": "ce3796d7-5b3b-48b4-a0ba-cddd9b6a1347",
          "length": 282,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "fe6c8c17-c2e2-41e4-af8e-d5bd37ce7447"
        },
        "item": {
          "id": "fbff64d5-6f21-48da-9c46-a9b562dd5eeb",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "6524774e-5739-4044-8c36-2639e3bc5dae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2cd6d38-6440-40d2-b511-cd34e3b03c7a",
        "cursor": {
          "ref": "b51ff22b-b41b-40ba-8765-f1050d428271",
          "length": 282,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "7cf2bac1-2082-4f8a-87c4-18b7fd940a55"
        },
        "item": {
          "id": "a2cd6d38-6440-40d2-b511-cd34e3b03c7a",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "2143cc54-ad05-4d4d-998c-5ae5dbaf6361",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "580c5142-7a99-44c7-ba24-b27a5abcbd82",
        "cursor": {
          "ref": "e995e486-7c8c-4bbc-8a08-7398aac119e6",
          "length": 282,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "0da9089e-2863-4ea4-876a-9f63b3607389"
        },
        "item": {
          "id": "580c5142-7a99-44c7-ba24-b27a5abcbd82",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "d49114ba-a690-43b5-bb87-6a3cd8c571af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a601cea9-2fbe-4ec2-9ace-75f9392f6798",
        "cursor": {
          "ref": "774aff4d-54ee-4d8a-9a40-cbc8fdac850b",
          "length": 282,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "90f85914-564d-47c3-998f-18e33234b84b"
        },
        "item": {
          "id": "a601cea9-2fbe-4ec2-9ace-75f9392f6798",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "fdca70ef-fd87-4d44-ac3b-32bda83889ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48811f8f-e7d4-4060-b2d2-e5d3b5297515",
        "cursor": {
          "ref": "94576562-08c7-4854-aea3-c225c2b744b2",
          "length": 282,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "0d9f50b9-0715-41d5-b63d-89e024cc0866"
        },
        "item": {
          "id": "48811f8f-e7d4-4060-b2d2-e5d3b5297515",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "ee823b3c-5a42-45a0-b2b0-86840ce630a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5011fd9d-e27c-4f51-b095-e2aa4c30c42d",
        "cursor": {
          "ref": "6c58949f-b166-423c-b0e6-4f4be2d81e21",
          "length": 282,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "0ffa6faf-d858-4a49-bd2f-a8887120f9ed"
        },
        "item": {
          "id": "5011fd9d-e27c-4f51-b095-e2aa4c30c42d",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "0f9aded6-4065-4f9f-81f7-25a1dbfd156f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "451a4d8e-2be4-4c58-917f-4e45d92fca9d",
        "cursor": {
          "ref": "ac94e65e-6aee-4c57-a09c-6092a8c13db7",
          "length": 282,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "9903b611-ea01-4497-b591-664629abd93c"
        },
        "item": {
          "id": "451a4d8e-2be4-4c58-917f-4e45d92fca9d",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "abfab60f-a216-42ab-abbc-6c9579a3adaa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba671089-96b2-4500-bd78-f38c39812406",
        "cursor": {
          "ref": "8afb9c24-9440-4579-9f9c-b2307e61ef0f",
          "length": 282,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "27d8435f-1059-43f7-8b41-1d7218b13d27"
        },
        "item": {
          "id": "ba671089-96b2-4500-bd78-f38c39812406",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "1de82ac8-9ffe-458c-b32c-e081d2ff71d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56ed1742-4748-4012-b722-60534a08e5a9",
        "cursor": {
          "ref": "dc40659e-b24f-46ed-a504-fd4d5084c609",
          "length": 282,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "62fa2414-d926-43e1-b486-d9b2908638a7"
        },
        "item": {
          "id": "56ed1742-4748-4012-b722-60534a08e5a9",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "ff950c91-3713-412d-8eea-0b20d04bf50b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acde3f32-25da-4aef-aa63-38a0f44f852a",
        "cursor": {
          "ref": "c94007d7-f1f2-41dd-bec6-798314c8c61d",
          "length": 282,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "ad49a1a7-3ace-4031-a1b6-5fe472823a74"
        },
        "item": {
          "id": "acde3f32-25da-4aef-aa63-38a0f44f852a",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "70cbe480-c5aa-450d-a2ad-c8e213d7cd5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8939a1b1-0ebe-4b5e-8f4e-642922f88a5a",
        "cursor": {
          "ref": "0dfb37e5-41ae-419c-9024-42189c7a88b1",
          "length": 282,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "7d34f801-979d-4762-beb8-ccd644c4b8c3"
        },
        "item": {
          "id": "8939a1b1-0ebe-4b5e-8f4e-642922f88a5a",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "e24a4e76-1e47-47bd-ac5f-1cbedc7f251e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24f8e3ab-ac3c-424d-a6fe-497df087ff78",
        "cursor": {
          "ref": "d11f96ae-b56a-4990-9f55-1a5fe056db4a",
          "length": 282,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "be194cda-708f-47c4-bfcf-a3df9321a7c8"
        },
        "item": {
          "id": "24f8e3ab-ac3c-424d-a6fe-497df087ff78",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "3a10a0da-0851-4d3d-94af-e06f7de4ae4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e769e44-7498-45fc-951b-03e61b7d9d1a",
        "cursor": {
          "ref": "a60f0b95-f0d2-4b72-a1d8-38866fed432a",
          "length": 282,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "2c386ff5-494a-402e-998b-62957ac4bfa8"
        },
        "item": {
          "id": "1e769e44-7498-45fc-951b-03e61b7d9d1a",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "9672f85a-4911-445f-9095-713d8ccc1196",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51e64497-3a47-4cbe-b6a8-9606f7f23062",
        "cursor": {
          "ref": "bbd42bbd-297a-49ab-aefe-b77bfde90da1",
          "length": 282,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "41d54524-f5fe-4cb1-ba2c-77ee0ea0534d"
        },
        "item": {
          "id": "51e64497-3a47-4cbe-b6a8-9606f7f23062",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "488bffde-77c5-4390-895e-931e613e9ddb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8308cee1-de43-4a2e-9e82-2c56ff8c41c6",
        "cursor": {
          "ref": "8fc8b866-afbd-441e-a6e2-a1457ca26767",
          "length": 282,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "078c69c9-b8a1-426c-bed4-ea7fc21709f0"
        },
        "item": {
          "id": "8308cee1-de43-4a2e-9e82-2c56ff8c41c6",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "2b140e6d-0f44-4fd5-a60e-77013b21d6b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e037c0c3-f92f-4d54-a8db-8d4a01f85c3b",
        "cursor": {
          "ref": "00594aee-a8c6-47bf-aa90-87c59d542103",
          "length": 282,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "d6886c2a-4ba8-4eba-96d7-3b608709cb09"
        },
        "item": {
          "id": "e037c0c3-f92f-4d54-a8db-8d4a01f85c3b",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "b552adab-f0b9-4b5e-88d1-be6a3dad73cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40ccb5ce-b033-407f-8365-cd9ce460ed1c",
        "cursor": {
          "ref": "4560daa8-ce93-4494-95f9-cdc74a5d4b56",
          "length": 282,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "86ec1313-1a2c-46dd-b060-b4a97d695154"
        },
        "item": {
          "id": "40ccb5ce-b033-407f-8365-cd9ce460ed1c",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "2ab2c041-691c-4f94-a993-cbab860ea81b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "038726d5-f1a4-4b6f-826d-9d831c732883",
        "cursor": {
          "ref": "78e77553-691f-4bc2-b62d-028534f0b6c7",
          "length": 282,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "cc94006a-b62e-4ea3-8a19-862a6b2f21b2"
        },
        "item": {
          "id": "038726d5-f1a4-4b6f-826d-9d831c732883",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "2b623dc7-5b4e-4be4-b0ac-279c91f14ab4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6a142e2-37be-4f40-9e20-2e4720ef0cab",
        "cursor": {
          "ref": "604aaf36-7fd0-4000-834f-2b2c89744ab7",
          "length": 282,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "2a8fea06-c3ce-48e9-8ece-1d429c2fe1de"
        },
        "item": {
          "id": "e6a142e2-37be-4f40-9e20-2e4720ef0cab",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "5bd8e7e6-606e-43e1-9c77-f8c6ee3f3c05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f9d06e7-6193-4daa-bdbe-8dbeef214b85",
        "cursor": {
          "ref": "f4028280-0b24-471f-988f-0d8909fbe2d8",
          "length": 282,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "03be56e5-27d3-406a-99e8-28dd44a4998e"
        },
        "item": {
          "id": "9f9d06e7-6193-4daa-bdbe-8dbeef214b85",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "5c2f5418-0e8b-445d-83ac-2acd9e88f73c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84a7c8ff-8928-42e4-b58a-88f904454cf5",
        "cursor": {
          "ref": "0a6ab309-d844-4e57-b307-875c9051509e",
          "length": 282,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "9db767ab-4436-4efb-85f4-611ccfbc05b1"
        },
        "item": {
          "id": "84a7c8ff-8928-42e4-b58a-88f904454cf5",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "e7037968-b466-4b18-8062-70a350d6f6c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78f37bcc-35d3-4865-a410-fa9438a93d51",
        "cursor": {
          "ref": "299ffa96-f623-4057-93e9-9c64bcfb374f",
          "length": 282,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "09f54d6b-1166-40a8-bdb3-4a7d37bfccd7"
        },
        "item": {
          "id": "78f37bcc-35d3-4865-a410-fa9438a93d51",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "5e8ebe34-3923-40e3-a274-2de6206379d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd582645-5a76-42a9-9cf5-aef496a26c47",
        "cursor": {
          "ref": "37cf0e81-766f-430d-903f-84d8b2f8a7ed",
          "length": 282,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "1ed1cf39-0e6b-4e95-819b-90cd844db228"
        },
        "item": {
          "id": "fd582645-5a76-42a9-9cf5-aef496a26c47",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "1236836b-b2fd-4fdd-a0c6-8cdc3585f075",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87c75196-8da8-44ae-a7ef-575ceea2dfc5",
        "cursor": {
          "ref": "5f6ac45d-5efa-441c-9a7f-61d3a1ca9211",
          "length": 282,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "7f7ec93d-3a2e-41ae-94e0-094bcc89131b"
        },
        "item": {
          "id": "87c75196-8da8-44ae-a7ef-575ceea2dfc5",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "b81b5b84-3750-4365-b205-af398c992eab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b68b078a-1f41-4163-82fc-3ada407215a8",
        "cursor": {
          "ref": "539513d8-32ee-4534-89d8-481b5b2a3e2e",
          "length": 282,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "13ca4758-ab58-41bb-84fb-42a97f20707c"
        },
        "item": {
          "id": "b68b078a-1f41-4163-82fc-3ada407215a8",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "de9988fc-14df-4217-9d0c-bb0891c21e93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac904fd1-b554-4030-a2c2-d772da148077",
        "cursor": {
          "ref": "716e8b2f-0e4e-4a27-8c22-d39dc5c65666",
          "length": 282,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "6264ed69-cc7a-4312-a864-4db8aab595fb"
        },
        "item": {
          "id": "ac904fd1-b554-4030-a2c2-d772da148077",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "c5325729-2191-42a9-a743-9867c158a8ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af18439e-c9ab-49e3-8643-a8c95d0bf40d",
        "cursor": {
          "ref": "f29b6867-4604-4b81-bef2-5e2312e5d94a",
          "length": 282,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "14ce72eb-841a-4d8a-87ad-342d74e0d5ca"
        },
        "item": {
          "id": "af18439e-c9ab-49e3-8643-a8c95d0bf40d",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "46a5aa4e-2115-4c39-9efc-bc84d6101704",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3b3c298-ef88-4bd5-8b7c-7c3cbd48c6fb",
        "cursor": {
          "ref": "fd159595-8617-48a9-9f2c-b4a9f71ee0ef",
          "length": 282,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "f32ccf84-ae79-4699-95bc-064a2f0491ec"
        },
        "item": {
          "id": "d3b3c298-ef88-4bd5-8b7c-7c3cbd48c6fb",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "96d9ec44-84ac-4e16-ba63-72c8bfe2a760",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e22f7e4-afaa-430f-86cb-23df1c815bb2",
        "cursor": {
          "ref": "83f5d93f-5f72-4ae6-b72d-abeb32d38394",
          "length": 282,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "96a82e98-95c7-4e59-983d-df7fcffdbd28"
        },
        "item": {
          "id": "3e22f7e4-afaa-430f-86cb-23df1c815bb2",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "78d51e51-d76f-493d-a492-764e7757f847",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ce28630-923a-4ce9-ace0-048e43490ef5",
        "cursor": {
          "ref": "ee8cac34-bd93-4d76-abd5-53b084476504",
          "length": 282,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "391943a6-b376-4cbb-b21a-305bf09fbb68"
        },
        "item": {
          "id": "8ce28630-923a-4ce9-ace0-048e43490ef5",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "8a9f5a24-6172-4b64-9d00-d89d72a73c17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f7dcbfe-ecf9-4d27-957e-c5173f5e80cc",
        "cursor": {
          "ref": "a87206bf-9644-4baf-9fc2-b8c902e3dabc",
          "length": 282,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "e67922eb-4f57-4243-82b3-abfe1153fda7"
        },
        "item": {
          "id": "9f7dcbfe-ecf9-4d27-957e-c5173f5e80cc",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "2cf36670-c547-46ea-a60a-c52d0f1f4989",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c12c6ccd-d47e-4c7c-9b20-422ec32cacf3",
        "cursor": {
          "ref": "c3f5cc66-41fe-4fd5-af19-30b9543df3f8",
          "length": 282,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "15c82b22-ef10-48f9-aedf-592f688cdecd"
        },
        "item": {
          "id": "c12c6ccd-d47e-4c7c-9b20-422ec32cacf3",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "a21cadb8-acf2-4503-88d7-1a610148b338",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c36db390-7b34-4ba4-81f3-7afc3e3b0032",
        "cursor": {
          "ref": "e5c6323a-5ae8-4ce7-9211-801011b3225c",
          "length": 282,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "55b35f2c-5722-4fbb-9a1b-394945631352"
        },
        "item": {
          "id": "c36db390-7b34-4ba4-81f3-7afc3e3b0032",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "f85e266f-e4f0-4c1a-bbea-050097dbb3bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16836878-3b8e-4fe0-805f-85df896f741b",
        "cursor": {
          "ref": "5ca73473-5a1d-43d5-9340-e6a48d68b5c5",
          "length": 282,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "a17128f6-62f6-4157-a18d-5a1bb0711506"
        },
        "item": {
          "id": "16836878-3b8e-4fe0-805f-85df896f741b",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "4b880655-3047-48a2-ae18-2def8323f35d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ed1cc36-855a-4826-830c-0ab756d65ea3",
        "cursor": {
          "ref": "a3d713ef-fd94-440a-8ca5-142ab1a123d0",
          "length": 282,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "125cf4da-6fd3-4b94-bbda-a1c88d7d4002"
        },
        "item": {
          "id": "2ed1cc36-855a-4826-830c-0ab756d65ea3",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "dc9f1883-4f63-4b1d-89c2-1155064104dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94d9f727-232d-477c-9263-7ceaeebeb210",
        "cursor": {
          "ref": "c325dbe4-4c67-4ea6-9215-b828b550e8ba",
          "length": 282,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "015c989c-6b7f-4c04-b534-06c2adadaeac"
        },
        "item": {
          "id": "94d9f727-232d-477c-9263-7ceaeebeb210",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "c5c233c5-4092-4693-8bd4-5aa71e4b40dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71335500-aefe-4a36-b0e0-521fe2ac27c3",
        "cursor": {
          "ref": "0480bf99-083c-478f-8c54-ef3e4068f966",
          "length": 282,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "9ebaf723-f871-4901-b4b6-6becbafd0961"
        },
        "item": {
          "id": "71335500-aefe-4a36-b0e0-521fe2ac27c3",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "de0d745d-20c5-493e-b3a2-d9e099c8e826",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60f16443-d2d7-4b2a-852d-0aeccd309070",
        "cursor": {
          "ref": "ad076a77-d2a7-41e4-973a-d8fde9b4b13d",
          "length": 282,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "a83105d6-525e-4a76-b637-efcae6cec999"
        },
        "item": {
          "id": "60f16443-d2d7-4b2a-852d-0aeccd309070",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "02e67255-a666-4a33-9df1-7c0488a02131",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ea3458c-48df-41f9-90a0-08b50eda7e1a",
        "cursor": {
          "ref": "82dfb275-c5d3-4bed-a1ae-a908b291ae98",
          "length": 282,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "6dd3e39a-9ec6-448b-95c1-ab59423848a9"
        },
        "item": {
          "id": "3ea3458c-48df-41f9-90a0-08b50eda7e1a",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "1666d111-8fa8-4d68-a3b1-bfff426ddc16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d788e280-ca7b-4f50-856e-53fc9417bf75",
        "cursor": {
          "ref": "0e1a0e60-acd2-4a75-95b4-5f731b623fd3",
          "length": 282,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "535ee92e-2d91-40fa-9571-8e89af316ee3"
        },
        "item": {
          "id": "d788e280-ca7b-4f50-856e-53fc9417bf75",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "0d3968da-023c-49ed-9629-f894d569e8b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b81d375-305e-48ba-8839-557d13988128",
        "cursor": {
          "ref": "e9debd65-974d-449c-bcf6-d1a2262be353",
          "length": 282,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "908729d1-87da-466d-9784-c61ea0f799eb"
        },
        "item": {
          "id": "0b81d375-305e-48ba-8839-557d13988128",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "a5c6138c-fe14-4aa7-974e-5c808ea2898e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a15a6dc-f9c1-430f-9e61-a45711f758ee",
        "cursor": {
          "ref": "4fbf565b-5474-428e-bd70-c22b418e0db0",
          "length": 282,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "ec727c2d-9744-427a-9dc4-ea272f6a062e"
        },
        "item": {
          "id": "0a15a6dc-f9c1-430f-9e61-a45711f758ee",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "9490974f-0192-4884-b200-813718796c69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "969247dc-e103-426c-b3bb-184bec060d16",
        "cursor": {
          "ref": "013d156c-ef49-4143-ad1a-b02a767f5aaf",
          "length": 282,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "de856dde-86f2-4ef3-9c36-3db676e249a5"
        },
        "item": {
          "id": "969247dc-e103-426c-b3bb-184bec060d16",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "d7cce7dd-a4b4-48bb-992d-474934f370b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2f1466c-f769-4666-ba77-3abd2153c108",
        "cursor": {
          "ref": "c731b8c9-e86b-438c-bf84-bc8e060c1485",
          "length": 282,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "332e220f-2221-4078-a9f2-a9386d694f64"
        },
        "item": {
          "id": "f2f1466c-f769-4666-ba77-3abd2153c108",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "85e1f996-2ef6-49f3-9286-70a027361b62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48ef173e-b1e8-4f86-9bfa-2cadc9fd23e8",
        "cursor": {
          "ref": "f827da05-1b32-43c1-be35-01ac40c7ad30",
          "length": 282,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "2b123b2e-d31e-4558-b873-c60e83e62415"
        },
        "item": {
          "id": "48ef173e-b1e8-4f86-9bfa-2cadc9fd23e8",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "54043850-27a8-4b03-91a3-a8e9ae5d8e33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d90f9ec1-c82c-45d2-8cb2-c2124b0ff1d3",
        "cursor": {
          "ref": "bd750973-f646-43fc-9d8e-213d50fc1e00",
          "length": 282,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "a57f174e-7f26-45ce-b59c-71a77c3338d5"
        },
        "item": {
          "id": "d90f9ec1-c82c-45d2-8cb2-c2124b0ff1d3",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "67778d3f-9dc0-401e-a35b-65ba0d50080d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4d7dbcd-f9ad-4748-9d56-36e9ddb9a2bc",
        "cursor": {
          "ref": "fb96aa2c-67b7-49ff-a9a6-20b36c2bcd53",
          "length": 282,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "3c74f203-f9d7-49ee-a764-5906ae5b4fbc"
        },
        "item": {
          "id": "f4d7dbcd-f9ad-4748-9d56-36e9ddb9a2bc",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "757f2f80-a7ee-4f15-9481-9f45c6152e5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2266c7ea-4da6-43ea-817e-5408847d9b6b",
        "cursor": {
          "ref": "37531774-bdf9-4a69-a5b2-e53d425e5eb3",
          "length": 282,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "659704f2-5daa-4a91-a6c9-f0cee14bdf39"
        },
        "item": {
          "id": "2266c7ea-4da6-43ea-817e-5408847d9b6b",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "f73120b6-6c4b-4837-b232-76d04822286d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0cce0586-19f8-4b2b-a813-0d26d73c7dbe",
        "cursor": {
          "ref": "38a2e7bf-1844-4186-a593-df5ea78b115e",
          "length": 282,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "cf0d915a-c211-48f7-9f20-ffaf19ceb41c"
        },
        "item": {
          "id": "0cce0586-19f8-4b2b-a813-0d26d73c7dbe",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "16510308-4592-4224-9e36-8aec4e827cd0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcbffea4-ca1b-43a4-ad8c-37611b45e07c",
        "cursor": {
          "ref": "c030ba3c-082d-4ade-a086-dcb96a4ad270",
          "length": 282,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "18eb6f0c-9bb0-4898-9907-c1a7f516856c"
        },
        "item": {
          "id": "fcbffea4-ca1b-43a4-ad8c-37611b45e07c",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "102b497b-ffbd-4568-8eb3-dc0d0ae70eaa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7048f2a-4b23-4c08-98d5-fa6d8b8793d7",
        "cursor": {
          "ref": "2d2edd18-f08e-41fc-b6f3-3c85b07d9512",
          "length": 282,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "b839755e-79e7-4ff4-ada6-07d81da9483e"
        },
        "item": {
          "id": "b7048f2a-4b23-4c08-98d5-fa6d8b8793d7",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "b73b049a-acac-42e2-b7ca-487e4d8d4375",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00d0c118-109f-4db9-80d3-22b127baf823",
        "cursor": {
          "ref": "916e706f-1fcb-4f1a-8201-b55f97b1fcc8",
          "length": 282,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "b4c4c131-bf42-4e71-ab28-8fcd37871fb3"
        },
        "item": {
          "id": "00d0c118-109f-4db9-80d3-22b127baf823",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "c67db3dc-f851-4660-ba0e-f49a188439b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad5424c7-68af-483d-9e35-7c53ab5dde20",
        "cursor": {
          "ref": "fb2dffd3-fb93-4425-a1e9-8d7a1100aca4",
          "length": 282,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "bb615cf4-8542-4e2b-8bc9-09d2eccf2248"
        },
        "item": {
          "id": "ad5424c7-68af-483d-9e35-7c53ab5dde20",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "482882f8-c121-4783-82eb-dc098aa47993",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d71498d-7e5e-4893-9e6d-8726b7d91c8e",
        "cursor": {
          "ref": "b7a01d61-d6b1-4855-a1fd-32926dc903ad",
          "length": 282,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "b886353f-ec7e-4fe9-9383-0b9a8f48b58c"
        },
        "item": {
          "id": "4d71498d-7e5e-4893-9e6d-8726b7d91c8e",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "49c14a55-ef95-46a9-91ad-3b94be5e2853",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9152cd0-68bb-4205-931d-2bdc78f51456",
        "cursor": {
          "ref": "5a5f648d-3c13-4abd-aa7f-dc3d6f5f5e19",
          "length": 282,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "f75575e7-2375-4419-b8bb-69a06c9a9082"
        },
        "item": {
          "id": "a9152cd0-68bb-4205-931d-2bdc78f51456",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "28114212-e920-4655-b1f4-76393397fbb7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41999a67-c1c6-49ef-8e89-9afe83ca4527",
        "cursor": {
          "ref": "d49037f5-7650-4f35-9fe6-1502ac98e6f0",
          "length": 282,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "e1dd710b-aa24-49c4-9a75-33ae072fc895"
        },
        "item": {
          "id": "41999a67-c1c6-49ef-8e89-9afe83ca4527",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "7eb271cf-0bc9-49f5-bab3-b609c9d36a3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef8f9eb2-2039-49e9-95b4-6635eb306f12",
        "cursor": {
          "ref": "453ff65b-582b-4e43-9807-1036839477d6",
          "length": 282,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "fa5d4a9b-7827-4caa-8791-c777fce23abb"
        },
        "item": {
          "id": "ef8f9eb2-2039-49e9-95b4-6635eb306f12",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "bc3d3fe8-1057-4a51-b4f0-5c968d28b187",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9dac2142-04ad-4193-9b29-16130b9e18c3",
        "cursor": {
          "ref": "ab304a95-0c4f-42f2-83d9-0548caf94669",
          "length": 282,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "7ae4c9e0-9f81-4516-a190-bc76d4715254"
        },
        "item": {
          "id": "9dac2142-04ad-4193-9b29-16130b9e18c3",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "30e739f5-7cb1-4cb2-9db6-786e19502618",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b347ee2-bc48-4211-8644-e8fcaa2f72f7",
        "cursor": {
          "ref": "caca0737-8ad5-4be8-9204-0f9c766e4445",
          "length": 282,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "c34faa3e-656d-4e9f-a106-4ceedda92ae0"
        },
        "item": {
          "id": "9b347ee2-bc48-4211-8644-e8fcaa2f72f7",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "d5b514db-f5ef-4a6b-8b9f-3c5073b96761",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "967e90e8-2ee2-4d4a-a92e-1d7ba3c19d34",
        "cursor": {
          "ref": "2755ee2e-3dfc-4785-bf14-b2f0a32e0c2f",
          "length": 282,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "c9722385-4c65-4a1f-a8dd-b70296586be9"
        },
        "item": {
          "id": "967e90e8-2ee2-4d4a-a92e-1d7ba3c19d34",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "51e1a848-6ad2-4e96-8da0-ca6e58809b14",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 9,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "301f5658-7b81-4997-9196-a38a8aeeaa36",
        "cursor": {
          "ref": "526aeb5f-71e7-42b2-a152-4e11061a4c0b",
          "length": 282,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "6e4bf8d0-0a23-4256-9c05-fe545cc464f0"
        },
        "item": {
          "id": "301f5658-7b81-4997-9196-a38a8aeeaa36",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "15d43a12-883c-4711-a9f2-6d6888ed2ee8",
          "status": "OK",
          "code": 200,
          "responseTime": 11,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "32ed9e30-9ad8-494e-b181-fb98e79e65c4",
        "cursor": {
          "ref": "fb044c4d-21f4-48b3-b415-5817711b6d23",
          "length": 282,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "ccbd87f6-3ca5-46a8-aff4-c19d54cbb355"
        },
        "item": {
          "id": "32ed9e30-9ad8-494e-b181-fb98e79e65c4",
          "name": "credentials_verify"
        },
        "response": {
          "id": "198e0ddd-d184-4b12-96c8-d5352f218cb7",
          "status": "OK",
          "code": 200,
          "responseTime": 26,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "006ee747-1111-44a2-b804-05dca7115149",
        "cursor": {
          "ref": "d625b2f8-c366-4c35-9ec9-32678cb3c2d3",
          "length": 282,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "6a06a926-6760-4f54-a9ba-87c72bbdb40b"
        },
        "item": {
          "id": "006ee747-1111-44a2-b804-05dca7115149",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "260dbced-e70c-4ef0-9b7e-a1a1bd767679",
          "status": "OK",
          "code": 200,
          "responseTime": 24,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b3e3f7a-87e0-4d68-93b0-ca948e37313a",
        "cursor": {
          "ref": "a637fd78-f6be-48a1-8e6e-c250304b990c",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "3cfb36cd-d1a2-487f-919e-257ad7b7cac7"
        },
        "item": {
          "id": "0b3e3f7a-87e0-4d68-93b0-ca948e37313a",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "bc3b766d-38a7-46e0-b78c-c96feb0bc726",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 9,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b3e3f7a-87e0-4d68-93b0-ca948e37313a",
        "cursor": {
          "ref": "a637fd78-f6be-48a1-8e6e-c250304b990c",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "3cfb36cd-d1a2-487f-919e-257ad7b7cac7"
        },
        "item": {
          "id": "0b3e3f7a-87e0-4d68-93b0-ca948e37313a",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "bc3b766d-38a7-46e0-b78c-c96feb0bc726",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 9,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e919c868-5327-44b7-bdeb-e94699f8f64d",
        "cursor": {
          "ref": "2b5edfca-2e22-4172-b72d-d41223e578c4",
          "length": 282,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "1195a717-8d31-4c64-b4b2-d5839b03a88c"
        },
        "item": {
          "id": "e919c868-5327-44b7-bdeb-e94699f8f64d",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "a208a236-e9a1-4d8b-b42e-79fe14acf1d0",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 8,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "699a4933-3061-4e53-aa36-89566daea7c1",
        "cursor": {
          "ref": "5434c1eb-76f7-4add-a197-38c935a65d45",
          "length": 282,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "f19f17d3-70cf-455b-9d30-684d124d87dd"
        },
        "item": {
          "id": "699a4933-3061-4e53-aa36-89566daea7c1",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "72574f66-47e3-45d9-9415-912b11ecd85a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 9,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}