{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "e5b22f3c-c8a4-4414-80bf-ead27eb9ef50",
        "name": "Clear Cache",
        "item": [
          {
            "id": "da240ead-b697-4740-8220-9657066bc301",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "bf00c781-0f3a-4f00-a5c4-957ecfce3034",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "40059f69-c118-42c9-93e0-38fe90ed6bce"
                }
              }
            ]
          },
          {
            "id": "cd777f24-3de6-49c2-ba60-bce6f037570e",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "05724e1c-55fd-476c-8c8a-f2193ff7964e",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "5d1be79d-05c6-4871-8bc5-3be5bfa917f6"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "7f881969-e09f-4b68-8219-916b276391a2",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "8dfc7289-80ba-4168-b048-52bf25530f5a",
            "name": "Positive Testing",
            "item": [
              {
                "id": "093e6959-e8ae-4e12-a130-c89d24179226",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "da311dd3-e729-4fb0-8186-d89ea3dd8208",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "1b2463ee-36ac-43be-b055-13c9e8a6143f"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "8e76309f-660a-4b95-a092-553e00874acf",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "4b8faa5a-f80a-43d7-b642-f12cb3238833"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "18c55cb4-412c-4716-9b36-04c7e281b6be",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "56c54f9c-80ee-47e8-9f41-26ec17857843"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4837a26b-0bc0-4442-927e-40c34482e827",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "4d87da47-deaf-4d83-9eca-485452f50b2e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1eb6a97a-0293-4d30-8efd-d1274ac1ab49",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "62b58099-5008-4286-b679-7fbdcf104716"
            }
          }
        ]
      },
      {
        "id": "02106098-fd16-4d17-a6ff-f70dbf0dcfee",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "c7e3b3f7-9968-4e04-bcc1-f4e9d379cde2",
            "name": "Negative Testing",
            "item": [
              {
                "id": "a0b3505a-4549-4bcf-8e6f-4799f8e87ac6",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "8826c4fd-6954-495c-a69d-201a3367893a",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e62b3b6d-62b5-4cb4-9e8d-77485e9c8afa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9b64a478-3b48-4b1a-81d0-4379440c5c1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a11e9d36-4b6c-4ab1-bc61-d6100105ae07",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b387c09-3cac-4d14-bc13-f7ec7cb90397",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9c02b31c-d5d9-4c88-805a-759110bb0fc1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38390f5f-531a-49ab-a79e-552b1c4e90c7",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "233e2dd9-be3e-40e1-9044-b3d8dfafdae2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1f5c770a-c3c3-4f94-b033-ca3a087c6ff8"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "c6faa663-1abc-4b9e-a1f4-88f8b5e540ef",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "7b21bd37-f080-4204-9b64-bbeca3d85210",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37d95399-5fe2-44aa-887b-ba6c70b7f785",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "22d7f9b8-7526-447a-a12c-36031a90d88f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b97ad7b-d1e5-41b2-b534-48bbbfe80c35",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f45e3285-edb4-4d19-80c9-ebc0aad0ccbb"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "2d41da7e-1647-4eb2-8cf3-f54d16311f62",
            "name": "Positive Testing",
            "item": [
              {
                "id": "c15c7251-7208-438d-82be-4855c8bc4cba",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "da4637a8-7e44-4797-8df4-aa577ba75e2a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "37d60e2a-8a8c-4b93-9cea-5654820fa709"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ea1713b4-b883-411c-8e07-37661d76d2c7",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "9ac411ec-81fa-4e8c-96e9-bb17d01dba6c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "cdd4b1f8-f55f-4fca-a10d-4d7f27657f74",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "062c419e-9b02-4e2b-94bc-a48b72cf73a4"
            }
          }
        ]
      },
      {
        "id": "b9efe1d9-ac9c-4c63-9961-3811469fefd3",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "c75bc572-9afa-42d4-9ab4-b77bfd17bd3e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "1315a01c-8136-445d-83ee-0f7669b31618",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "f85f7955-4c1b-4e72-9c0d-0adae4d462aa",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ba568e4-b579-489a-b3ba-5a54639bb223",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d8e4b0b-3f99-49cf-bb9c-024d9506878b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef340f15-20ee-4bb3-b348-3d9b70e839c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "33003674-232d-4c55-b575-e6e023fef96e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59c9d892-7e20-47e2-8174-cc793febeb6f",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f36f07e3-f41e-4938-b5fb-b932bb7b343b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "252f1cbb-a9cd-4ddb-bfba-d03deafdca5c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21f2f9c2-adf5-40b1-95e8-80d9e59fc04d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f4175c98-6b46-471c-8525-7f63cc094023"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fa5ef53-d921-4001-b974-516f983b197f",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd7ed435-94bb-4b2d-bdfe-011a43e5e0b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91412f27-c6f9-4cbb-a537-a8eb4e211ae4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4eb61c0-6086-42d4-b986-5f77af7b9aa4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e92fb0a4-bc63-4aa0-8dad-d09eabb09b49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e3b4fe8-7789-4544-831a-f21e864644f9",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2724815-b934-4483-a730-b61e246311db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33f03180-0267-48ca-847b-86d440f1c295"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14f3cece-78eb-49e1-8ec9-98b75200b9ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3de6bc17-5e15-4c7f-9e88-777c4c1d070d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d283c02d-6e83-4cc6-aeb6-8f7c54c90125",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73a9abd9-359e-4884-bcd4-944d2fb31099",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "867a6ba5-19f2-45da-b07f-6e1aed4041b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2cfac95-57ae-4159-a6b3-1b915c7df46a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0578df91-1183-45e9-9b55-14a0bef2113d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "559393e8-240b-420c-a74e-de6917566f19",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab9d2ef6-a04f-422c-a9f7-d2f1c7de5efa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6a9f51b-937d-4a60-abcc-780bb2b127fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fd9f8b3-8e9c-4e4f-a92c-156f7a04bf85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9c363bbd-13c9-46f2-9076-529a4fa0accc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee72ce99-229c-4e58-ad92-2c9468cefe1d",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6397b458-b024-4a1e-b2cb-3e1a44a58141",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f312565b-d560-499f-874b-c008930d8b25"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b40c6b6d-ec1f-4c06-82f2-e9f050f6571d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "233bead7-632c-448e-931a-e9effda8d1e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "989a1dfd-576c-42f6-b5a8-cc183d30368b",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09deb238-3a24-4f7e-b221-6e556481eddf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d822de7f-2ede-4b71-b1be-3c8bbb97ab31"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebf72343-b420-4738-8416-7717cd4ca708",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "946c07fc-d446-4ca0-9c4b-13440ec95aaa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32f3875e-aadb-4ffb-a35b-6e18948bc372",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cd7af32-2c2b-4194-8931-7080a43bf995",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "697e5a2a-716f-4c5a-a94b-208400c3f13f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42256e86-b7c6-4967-885e-bda1e68d7476",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "95374762-73a3-4172-8cc1-db1cc8c25941"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29c14e09-6e61-42f7-84b9-f2913bd00c7f",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14a3366d-4031-4010-b44d-0ee02fe0489a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b141eb58-2794-4764-a18d-97950f1f9377"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf422a9b-9d43-4e37-805e-ac1eada0296c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d909bbb8-c5ec-4c46-952c-65cee56c2452"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f905eb0-4ba4-4032-80de-3120ae16fcb8",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0178518-4143-49ae-b83f-2a10c4388afb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12d8b45a-97b7-4c71-92a3-a28c09e3ca35"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe39bc89-7401-4a6e-bef6-6e45bebfc86e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e69f5ff2-d960-4003-a95d-1f3ad2f59f22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2b2bf19-3495-4c29-b05e-957e44093118",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dece5c06-ac88-4db7-8f22-fc9638e4c55c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59f92e34-8433-4760-8079-cd0788f3f861"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df4ba769-ea47-4847-8a5d-ff7d37b4dddc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "76530d08-65ed-4141-992e-132264d253aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13dfacec-fe65-4a3d-87a7-dba7b44441db",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "998911fd-9c96-422f-8bf5-c407c6b7ff4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f999697e-95f2-4976-9039-e990e2803c26"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7446499-6731-42cf-b9e1-6b971c89780f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d40b1c33-6a68-468c-aa68-2856ef542b27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32863b7b-5049-4f83-8a53-a5dfb023f00b",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1d885e1-ba8d-4910-a1c8-e6479327850f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "945a7d69-6bee-46bd-9a34-876dd034e0eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e81cd04-ff5b-4075-a5b4-5898e5b120d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0d263756-e1b0-45d7-b0d6-88ad9bb36c2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c555a46-1aa1-4207-ac9b-a961111d70e0",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef0deac9-552d-4dc3-acc6-6994d747c654",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5136e71-e5b3-4089-a722-f48567bd5552"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "486f6c6c-2d9d-4a85-b81d-792b57f01eef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "15167468-36c0-4c5c-be01-29527844a36e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aec96142-34ae-4f4b-94f7-a172edefe07b",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1eebd20-5c02-4e33-bebf-0658e5d1fa4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30ef5978-5757-4d47-b103-9e604665bb0e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ac24ed7-f9a4-4948-9d83-e1c4a5e3370b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7420b072-421d-45b4-9f80-6562737a2654"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77447440-a3ec-4a0e-bff6-6267188a9eb9",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88297507-c57f-4a91-bdd9-0b5ed734c971",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6db701e9-5099-4570-8e4f-0de7ffe51669"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d41bb974-8bd9-4164-a9fa-6ed5fe1968c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6f9895fd-6e45-42ed-9f38-5d5c6f0e35ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6893845-11c1-42bf-ab69-7ea15c5e4e72",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09fc38b8-7792-4180-824c-fd61fd0dbe36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db628d3a-c08f-4bd2-ae42-157e2e7ecf13"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "171f9579-2f35-4479-8539-12a1d23252c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "148fa1d0-6187-4e4e-8d09-8aa99b38fc5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c6851ee-bb6e-4b76-917a-10fe4fcc539b",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb48fcc7-f66a-4f8a-99bf-3cbd23d0ee5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61102dce-8669-41a5-8266-852ad9b450d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5966bb72-a48d-4741-b7d8-64ed79e93d9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f4d90d26-e8f4-477c-9c6a-9706e9dc9252"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5d2b7b9-5fcf-4749-815f-53498a03cd34",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7929f8cd-acdf-4e55-a8ce-190601db0dcf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "97dd9d89-3237-413e-af1e-065666b17b1b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0feda64-4c92-4c0c-aa5d-f2afccb4e809",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "dfa06d16-7629-4716-9758-9a572d0219c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4be337d5-e38d-460c-ba2f-09acb4e5035e",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ee8b7d9-c7cf-47c2-ba7c-f2674805124a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0711bc5e-7e66-4051-997b-8e9e497c0186"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd3aa557-daa5-48cb-9b76-cbd9df0a04ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3a15365d-9536-47f0-b2f6-4597c92efa8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b329bd81-d916-414c-aaa0-bc5f66cd8609",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ab609a3-8366-487f-8bc5-a36b62918a9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27e3367a-b852-41bb-b251-9af7cda7d904"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "421e91f4-3bc4-4ebe-b124-413dd1a45f07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "865e0c25-467e-45bf-bf81-e0b37117af48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b82967fc-6eb2-45fa-87eb-ff6e8cf7cdbe",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa1b1845-e2fe-40db-857b-971f34b59324",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9b474d8-f6d8-4a22-9553-69df34370bc9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38c42416-5723-4718-ab66-8b554257ca9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b92d7660-bee2-4d6b-a5eb-682e48bd44ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b7db8a6-8c18-4fdf-8a40-c41c9b0459c6",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3310180-9edd-435b-8418-f8756ac1b325",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc0ba27a-19c9-4694-9885-b0217e27c93d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0e8f20b-58da-4894-9630-1d53a4ea742a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "9c23194d-6576-49fb-9715-2e12c07e15b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c662fcb6-4511-47d8-b6f9-3ef0d4ac8b0b",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3c70623-ca71-457d-8204-802ac0c7714c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cce8de54-09a0-4db8-9231-7c9b60bc3f0f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ef0a23d-03b0-4cdb-a186-f4d92929b4fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "53fd64a1-23fb-4191-ba29-72b0174b1df8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64721828-a8e5-4fba-b452-3031d01556ab",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f651075f-d830-4438-8beb-1267006833a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b7283f09-8062-4d05-baa6-d6ba37f91454"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84d45530-2458-43d7-9791-c0e5eb784242",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "32916c6a-cd3a-4bc4-ba16-28efe796f1e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44f04cdf-1ca3-4c13-a951-3f1a171ff2df",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08566c71-1b8b-4a2a-91f1-5eba929246e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b64ce0f2-c8e9-49da-9c35-9185e663fd6f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "561d2e33-c58b-4b4e-be65-098b4113c224",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "0dfdfb50-d0c3-4cab-9e1c-53d1b6996858"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fda7bada-8f98-4e19-ac39-6472cdd762d0",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "473bb828-9af0-437a-8372-20569fa54115",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "958b0eec-10f0-47ff-a928-f6c4a7f5091b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9634d710-eb74-44b4-b37f-389dcc540a8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "d4f1ec14-65f2-430c-8df8-07c77027c6f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a0aedf9-3b33-4dcc-9de3-eae7b0fd4ef8",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e46fde7-3284-4557-83fd-9a7a25597769",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d84b6ea-354f-4d81-8927-cd93d58f65e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef4b7fb4-6c0a-4dac-a368-d150469ce094",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "3e0f0508-c052-4a56-b1b3-f69fba3e4b49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a133903-fe7b-4ce9-821b-6d48040c4cfe",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab24c640-feb6-47ec-9a96-2a648d67033f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23661115-ce45-48ea-86f5-58379d49e3f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9061436-ebb6-4ae0-879e-b6f70a05d300",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "b86f43c9-4631-4961-8b97-50c28637ce3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "780d0d8e-dba3-471a-a999-9a0d11bec009",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72bc6a1e-75fe-4b93-8cfb-e75fbc122714",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19015d34-74e1-4ea0-8098-abfdaff3bfeb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3496bbd9-6388-4a3b-8982-81367dcae077",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "f4dded9e-f043-4df7-ac19-d4e9d5048915"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c50d43c3-612c-4db2-bf6e-3bb2f6e5e477",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81b3788f-e8ec-4a3d-9a5f-d05e94ba35ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "87b5cbd8-ff65-47b2-a225-4618deb3dab8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1db015dc-8223-4926-a704-e2b96e3d0efd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "bd65f581-8048-40dd-ad46-36717a10c140"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4e9d71a-cde7-4945-a6f3-82b8f52594c5",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79a17bde-ecd1-44a6-8e6b-6c9bac520714",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0466216e-0187-449c-af5d-d29e4169b6b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6474cfb-b8f5-4f52-95f0-fcef343552b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f297f68e-58ec-47ec-a309-a895dc769fd7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dca8a1e5-751b-43b0-9c6a-3e3153824599",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df5cd9fa-f696-436d-908f-c7f202f58add",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6070c37b-8e86-40c7-81e2-0ca93526db7e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0338d18-412f-4660-a794-12594f3eba63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f4f91034-cfd3-48b4-b526-0d194f5963d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "452b1282-bd2c-4e7b-9ccf-e6b4ebefd7f1",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e3d09dd-c188-4ddd-b768-0dd9c7892b4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17f5f1b5-4b46-4150-a21e-6895cc8e524c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb751ab9-6b84-4e81-85f0-d16341cc2e63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "0cd523ac-aaf2-4297-8d06-271d64bbb197"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c42b7e21-23ab-436e-ba6f-219e0b1f93d3",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d83e515a-34de-4bb2-ae0e-f3b2782ad5f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2bf1dc7f-f708-4996-90fb-7dcb60374632"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ecdb7f11-1108-496f-93df-c241aa16fe4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "2ff92a54-f001-470f-8ad6-79f10593135c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a574319-50a9-451c-ae24-694c8d5ea359",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fda59c1f-0e86-4f36-909b-3bd9408ad506",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ace503ee-3873-4bde-a2ba-dc5f83362fd5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e005f2cd-3fae-43d4-bef2-0eb4527bd14a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "0809b4ee-ed32-4fe1-ab7a-529818fcd206"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fcae79f-3fd8-4dbc-9278-fd0537fbd034",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fd4702a-507e-4f87-a92b-32e58eb34f73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "520e0068-2c3c-4981-b2e8-c87e3e74e251"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44404e42-4a26-40fe-a626-1e0c9dd79584",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "e319d5a7-1c57-4f1f-a2a7-930c285593f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5e2b106-604c-4cc6-92c0-1f24180d57cc",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b78796f1-907f-48f9-b75b-a4308371f7a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b156d2e9-ac49-4dc4-ac78-a495e174a445"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7cd589b-49d4-4fac-a227-368c390533a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "e99091cc-973d-4a66-8a99-ed068cb03377"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e25d7170-c1a7-4830-8557-b49c2e4cb0b3",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37d5378f-7f8c-4af2-8b79-1e05f82db770",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61a7e4cd-bd52-483c-86b8-068f621d10eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a85af10-02bb-4a9e-bda3-87ba62fe6032",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "2fa81363-2fc9-456c-b853-ea4210abc817"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab873f47-1441-4f0a-be9e-5c307ce5ac50",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "258484cb-0a17-4b16-8eb4-85373a3014b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d5240c9-b3e7-4d62-9e32-7c504c4478b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48100d96-9434-4158-869a-1ade10ea04fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "61202a7c-3ad4-442d-b0a6-126bafcc5b9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9fa535a-16ce-41c1-a3df-42d136bd4e42",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b87dedf-50cc-469d-8516-1c492e056644",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "406d339a-912b-47bc-b888-5d91aec3104d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "685c6c0d-4130-4707-8fb1-e8d5e20f80ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "8720269e-d65d-44a2-8a01-83ae70325ce2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9839087-be71-4a2d-86f4-79a25f498b44",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b412a1a3-0b18-4f0f-92e0-535c7587741f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df279ac8-1222-419e-81b6-063d08422521"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1db970cf-f9a5-4303-b8e5-cd997af8c7b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "7b277ad3-910b-4276-b9f9-38fbf4f75869"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10d68867-7aa6-428c-a360-634029f46b47",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb054a84-246b-40c5-b7b7-e8018a9c6d0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6edf91c0-5706-4136-aff1-509239db3d32"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13494745-e3cb-4461-bced-24634abe8f6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "f7c94e07-41ac-456b-b405-c5fd90053c42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b09301cf-ed78-496c-a720-694c01cb4642",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b8dc21d-fb41-4b32-aaac-d32fcc36b5dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea184518-a2dc-4d7b-9132-cca46009e97a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63353bd8-f4a0-48e3-8ac1-9f251cc5a4c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "9e09ea6b-3808-4571-a420-6f6051b5a0c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05e4b0a7-65ec-4849-9ce7-f74986e927f3",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3e3e2f2-2bfb-451c-81e2-e739bc62cae3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe5f8877-4f96-4c56-a875-65cdb163f683"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "399da756-d22e-4b96-8259-01cf133e2e75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "838e8385-b9c4-4b73-96d6-bed9f5ba97d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3871c6e1-2629-41f6-a1a9-e4e353225133",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbc5d350-7694-46a9-89c2-013622d5ed19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73aaca71-97d9-4995-ae2d-2e89fea0e9d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ce6f612-89fb-4563-a094-98fb74aebdb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0cb05067-2b47-4780-afae-c2fb9ee9f0e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "909ab399-4024-490e-8a78-2579d5f6a4d9",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac353099-fcf4-4e3c-85b6-2b29c076a47c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "97806be5-fd4a-438f-a171-02ee0897892a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90aea1c5-73d3-44a5-b3bf-232f1821b842",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "533dd719-9e83-4a2a-ab0b-5e3f874fddba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "495f9ebe-3002-438c-8958-60087aa68f37",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbf94626-0bac-4ae6-a6d7-e2597d81b366",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4855acd2-e325-4ba6-8825-eedc8a19b437"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7dce27d6-639e-44ac-b1fe-a7347a29857e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "371d2eb6-78ac-4e65-a1aa-f2358de97d4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "beca59b2-b0bc-4d69-9188-16bf9453fa7d",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f410c30-99f2-4f42-a6cc-9dd3ea5ee813",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e6427ad-9681-485e-9bac-408732e30743"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56f6852e-0f02-4f86-a665-1a383c955356",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "74b1e276-21fd-4d53-864b-2223114fb9bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "667186ad-a429-4b28-82d6-3702b47b424a",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24bbfcff-a0ec-4460-b67b-78c8be322780",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "85ace11e-ecb0-4ca9-aeb2-1375634ff62d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5d538f6-b8c9-4473-b02b-78c7be614840",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "6d7f6fca-93a0-444d-9956-7389a3957269"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3bf0c54-2fce-413b-bdb5-42cfdd92dc2a",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a11a7007-cae5-4cf6-8706-9612e50b3256",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bec6971c-b154-48d6-92db-3c14bfb186ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8a52e8e-1bba-4bfa-8787-34160318753e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "1bebb782-52c2-4fe7-9365-8c51ab9e8432"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e76fcb3b-ae48-4f59-a5fb-385bb3b2e7d1",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72f10b20-fe5c-484f-b447-70344200eaad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7875b172-4bdd-4a9d-bbec-5fe95f9a6b00"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9eb89b83-d1dd-41df-9d8a-62c7d10df3e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "817a39bf-a2d4-4817-94b4-8f6551a0b89f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b93aaa6a-176e-4e4e-91a6-e4660f0ce382",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f87a8fb7-6e97-49e7-aa12-be278819866d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c300e79-0a91-4a67-8c57-c5c6e34592bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82861f94-4964-4e05-a332-798f2dc62844",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a6417216-34e4-44f2-ab1a-1ff0915f207b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85e34cd0-69d2-4f4d-8c10-54431710a060",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f58a6bf3-2ad5-406b-87a9-e98b7fc3db52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cdbe6878-b65a-42d5-b630-b385645fc21c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5dcaedea-f8a2-4575-803d-7034f9a249c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "10fcc776-51cf-4937-b962-83f5a3c40bda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfe823db-50be-4330-95bc-da407d05a97e",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b66b3ba2-4b29-4cb7-b4e2-61a95a1c918d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba6615fe-5673-49c1-8412-cb36ae3eb3d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d140b9a0-89e6-44cd-aed1-474045611dd8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "0b7554fd-8b38-4fe2-b0bd-7bbb5264a2d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a15abd8-17d8-4ec0-94eb-bcdcda7b573d",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d21727d7-d478-4f0a-87ef-b7625aa37731",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f9290a2-4124-4e0d-b54d-03964d4eec3d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbc3258e-e994-4035-b5b5-db122573ecc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "d5bff7ae-4859-45e5-a48a-5a918bea2bef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf956452-713f-4e75-9c85-439c0da4eaf5",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0b4844a-917b-472c-a1cc-ad3932ed5523",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f72dee0d-bd6b-4acf-84cc-38b9e029b43b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68e17cb3-4ee6-4e28-8efd-cae2d92c07b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "75a8203d-7659-441d-8cd5-0db4990f94ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a1de128-bbfa-4d2d-925c-ab26eabe7d6a",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d901b854-fe15-412f-ad47-5f7fa3a3f616",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb33eb87-d566-43ed-8976-de3f2cf8c8f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7cd88b0-4a0c-42f2-93ed-ceb1bfcda37d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "19bd5b59-05d8-4e78-84bb-a428b1b1483b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7512a861-901e-4d57-99d4-eaee40e80169",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2dede8e-1f51-437a-b502-6d66b802a05d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8cba9ce-8b93-4ce2-b986-8dab3d4198d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfe9e9a7-e611-4f07-bc80-cb7f38bd5255",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "52769c37-cd63-4b1d-a32e-0de733a1e573"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2374d5c-dc70-45a3-9199-81d04d249e1f",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bab9c312-4e8b-4008-aa16-4c419354458c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99e35331-34a0-4b42-ab9b-2fb37adb61ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26ef03c2-b571-413f-9bd7-34ba90e6279b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "0e196f8d-696e-4b6a-aee8-9a2612bf9a6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0dc0dde2-0de0-4f28-814b-3945578e5c61",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06f2fee8-90c5-47e1-abe5-a557c49a1a64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "533c747f-00fd-4226-b19e-aa1dc601f55d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad3fd77d-828d-4faf-bc2a-9dc0949d2908",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "bd63fce1-94bd-4dbf-9fa6-906ae976a1c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6baa126-b7d9-4ff4-ab23-144f6d1a546c",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff895f69-087a-4dd4-b3f8-301875699721",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fbdc98b7-3cc1-4e1b-8c74-925847707c99"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebb14030-0e63-40ea-acb1-def778a01403",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "1f1a43dc-e86d-4cb1-8d95-aba1e24a4917"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a4cb392-ac00-47d2-be22-2bd5dc0d68f4",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66be9153-1856-4126-bdd5-e19fc72b7d6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4f892e9-df68-4afd-b1ea-ca6b4372dafa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2de66e7-8c0b-4cfd-9ca5-4475995513fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "118181a2-880d-401a-822f-a7ce27a40d0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d8737d0-a4ff-4449-bc75-9316a486563c",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a4ca493-1660-4eb5-8098-c15d47ba630a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b18cfea-3721-4bdc-8dfd-3927fd753838"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96b56535-f5c2-4347-8a41-e22d5d43df59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1490fd11-cf14-4390-b483-cf33b60e0a89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "052322e9-4e51-4628-ae8e-8ea9cb4d44bf",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5bdc9f6-50e5-440a-b7c8-b93d2738bbb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3312066a-89d5-4738-8076-f312cb814fdd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4f58d04-6eca-41aa-980a-5d907e252201",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "190c1642-4250-4590-b120-e75d3558ca09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a9599dc-e3cd-4cee-94fb-dfcaada14895",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7f1b329-c1e1-44fa-9d0b-ed42082b2f20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4aed0811-06aa-401a-b4a0-4ce27d6b184c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51385582-7b2a-4da2-959e-edfd43f993a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "5b623f91-10c9-446e-b9c3-18c1d846cf00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffa15206-b4b8-4861-96e2-3054a9f71bc9",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5edb8893-d32d-4070-a44c-fdf4a53c8dab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "445658da-4a4b-42af-9dee-7c2458616ce6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37aa6444-4b1a-440b-b458-a73b6d11c9b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "369638d9-1a93-4bc6-bdfb-89e41235ddc8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af7bcbdd-d90b-4c45-b949-63ca13ab6d4d",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "acc4751c-45ad-4cf8-8247-8c16aa7a43a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd248af6-5178-4eec-9052-0bb06032e7a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7baa5e41-24ea-4029-b513-20fe3ebc32d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "190963a6-8895-4464-aeb0-bb8c1e76d29a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "892feb73-a7de-45aa-8706-af5d3c5d1efc",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebe2c325-03ce-42ed-a6a1-7eceea92c3ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7eebb453-3084-47cf-954b-b31dba2190bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48aedf80-75d7-4dab-9810-9d19223057c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ff042b18-01b9-4bf7-ae9f-87a795575f1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae646431-9980-44b9-9e25-22db14349e55",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c55841c0-dd84-4d78-b280-663f2aa42545",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "124d9ddb-2a41-49bf-961f-9fe8487458f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e79a2c64-49cc-4b0d-94bf-9b84ba94a952",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0d9391e1-8b6f-41c9-97f8-3889613b7cce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f290e1a7-dd93-4629-9293-d3a0bf8ac890",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f223b60-3b89-42db-bd15-b4c992cc4d0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b61a2b67-057c-452f-ab45-16fe3abc2362"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "525f2d19-3fde-431a-b7a9-5e58f80695e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "79cd5ab5-2c66-42a5-aee1-1f980a41b2d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e1b30ec-66e4-4bfb-983e-0c6ab032d184",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1af03a87-7ce7-4429-aefd-2d55ca16a063",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4352a1d6-263e-4df0-875d-84c2e5417289"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85a48881-b2cb-4333-9899-594e6527bc05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "8a8ed7eb-b02d-4eec-99d0-5fc77866f0dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63444993-5a42-4075-a03e-c2ce3e8918e7",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73166879-dc87-4353-8300-78286fa6213b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2aeb7488-37ed-4e3e-a292-5dd4d664b4e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1189c507-b70a-4e5e-8411-5350a54256ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "4879ffd6-5736-43c4-a9d4-d25c44936333"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12136227-63ff-4011-b604-e0c0c3628431",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8083a01e-33de-4f89-b78a-036078e4c561",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44b7f25f-7e0d-4e37-a15b-b006e78809a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d06f087-f670-4722-99bc-2d45ef185b54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "e468c34a-66cf-4525-8a24-86a088e85a60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d85f6df8-9fba-413f-bca1-6326ec20c597",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "977dab85-74d6-477b-b4d1-d5d1ea583271",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84d4006d-fa63-43fe-abda-f70d7c71bdd5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "383a86b1-5398-45fd-854d-6ba8f7cf843c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "64cef636-d81a-413a-b5db-d55edc551deb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "863728ae-30f0-458e-9c0a-0915f113c9e7",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64a9bd05-fde3-4a46-a6b3-bc4a0ad76959",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a774b2d-3780-4d1c-8e39-bf6b9db6492f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82817cc7-a56b-4adc-aef8-cf4ef15cdabb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f32683be-65d8-4f64-a1e0-2c6728bfb94e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b82d6b81-d1bb-4a7b-adf1-ee0b1cffa4ee",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "852518d1-0d6f-4c05-9085-f91145060ed7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8de6ec6-d12b-4ea7-8a12-bda27b577675"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b5502be-3266-4dd5-9894-79e7795691c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2c7e8adb-242c-4796-8cac-66943a6f22dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8157dcae-88e0-4886-b37a-8f00b3bf1f69",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbd67ebd-c2c8-4b0c-bb9e-ea9eca5b38ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1be3df3-1aea-4c34-a705-aa4e21238943"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69faf0ea-0107-42b7-bbec-b1e14a3bb720",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f2e2a757-ec27-4d03-b936-a8933d969466"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef2a9c53-6f5f-4c6f-af68-d3254c98ed60",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc64ad83-1478-44f2-824c-6b6aab3461a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6acf6724-7caf-4327-b71f-9d416a3dc0a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8bdcb4c3-f30b-4814-ba0d-3cac225e4155",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c8ac7ef0-9fe6-427f-91c0-5e1216d92713"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cdebade7-80f6-4c03-a978-634f43c612df",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80c16f7d-de0c-4b38-ab82-2b82c2291971",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fcc3d7f4-bbb1-400e-b77b-49b951202f0d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "792da5b7-ef36-485f-871d-c7130c8c871c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "fa2a71c6-4543-488b-8789-ccae21bd2768"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fbde22f-1c28-4ec9-a247-a011ab02da92",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7792c2a-03a8-448e-b220-9e68bb53ca84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a768455b-3627-447a-a908-c485ae595032"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58ac1158-16fe-4ae6-b618-c60a66cdc130",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b94c5d13-5d1d-4220-ac4b-19cc44f179e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2bd718eb-97c4-487b-947a-69eaeeb8c247",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "769071f7-443a-472d-a1f2-3743903b4de5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fbd11b15-fd93-4fe7-b158-8ab0c9bb48ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dec72d37-d925-435f-b4db-fce68bf358fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0cf27dde-f67a-4e54-8ee8-e72873bb5000"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3db226bc-a3a7-4c62-b2d9-7106c8aae6c8",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81f14798-ad2d-465a-a663-e0f2b2f7f6ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c01860dc-b8b5-41f8-9a69-24604932bafb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "789944b6-f28f-463e-ab27-9d4902404654",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e3ce317e-5cc5-4033-959e-73623c215b5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99977644-f925-48ce-bed1-150f8ef33486",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c90d9783-d15e-4696-ad4c-8f85f756720c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a9d408f-a818-4c94-96ad-391c3a92394a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f85da468-6cc8-4132-b091-13a41cfba5d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "92b93041-7e1c-4283-ad32-db5f844feaac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e179badb-2306-41a4-bb50-5bdf7bdae83f",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf5987a6-6d0d-4209-95f7-537a3f5a5a08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64e7d2a9-0d7e-468d-a827-dd3841ba7126"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ad5435b-0e00-4975-a009-34b92949df9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e12a2cf7-4c6b-422f-8c0d-d5399ef7f3be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24ceb46a-aa87-47c8-9957-7a92a7fd6139",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d3f4275-b4ac-4f05-976a-14d947642f61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e98c564c-6585-439a-82f1-d9838599560e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afc8ceee-e68d-486f-bab4-62c4464b76fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "f401f8b9-cc12-4afc-9797-d55c89a34b5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b977be10-4e90-48b2-87d4-a6ec56388de2",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7de729b-7a6e-4e2e-abbe-d46118fa6a9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65d2d494-6cbf-44ca-99ad-05a9bf9aab02"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7d96485-787a-4208-8267-d8ff779e4a54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "3ac2ab00-629f-46d5-a7ca-0f7af9a4b886"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e93c4d0-c10b-41a2-8b5a-df1b42818304",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "320b6cf1-6f5d-4109-a2a1-3a11af2d4958",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "253aeedf-1e1d-48e6-9ce9-6ea4871ebce6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5af5ff0f-61d7-4f72-9f78-867f1d2bb46a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "81837b33-7b4e-45db-a17a-70882f8c1687"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3284c9d3-0c8a-4530-bb8d-0119a7ad4a68",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c24be14e-ffc6-4c7d-8250-2a8d61b5214b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "916cd271-11bc-4327-804c-584d1f1faaa9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ff2c04a-b0f4-4822-95c5-d9b4377d75e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "97b9ea99-6766-4b5a-b7aa-8496dce96ab7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5759bcf-ac8a-4e9b-84d6-a12c344b461d",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79bff19d-76d9-43b0-b9a1-ea8f288d8843",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b70a9827-236e-4172-b3ea-ce4246b3bafe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "341cf157-a73e-4d87-882a-917b8580e852",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "31b59ca5-caaf-4305-9607-3226b29b6e19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "461b86c5-4263-4175-b876-bb3e511d30ba",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6036849-4414-45b4-b458-eb2d6b4d6717",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "70197f16-f4ad-4501-bf48-7919de507943"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "621cf5b4-5b87-4f67-ae60-7ca3e244fcee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "0576d182-a6c4-4c5e-a09e-2b8f9c4c40f8"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "34b372ec-e6d5-4e6d-aa6e-5b31ae06640b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "8bfaaeea-ac88-4336-9b6e-a9ded12444d5",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "479d041e-b6e6-49d9-9583-ef768d5ce60d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9221f125-cfc7-43ae-a8de-705551d82892"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32acac5b-1fb5-4b18-917d-0618a82ce5ab",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "096737e5-89d0-4062-bedc-e9d0ab2ccc33"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "81f7570b-26c2-48a3-bbc2-248fcf396565",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d715450f-9f60-44a2-9278-2f360f243d10"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "6b1e1cb0-fff7-44d9-b376-c8727eb76293",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "94e9d25a-58b7-4e17-9fc4-99eb4b710b88"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "1123916e-dd6a-4cb1-b900-f964e43b5d2a",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "14d79c9b-91c0-4cbc-9dee-8167d8b4dd34"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "c6d564db-b5d5-4e89-b034-8c4e42d8eee6",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "6b8f9baf-6eb4-493b-952c-80a4223d1022"
                }
              }
            ]
          },
          {
            "id": "e9b1a57f-0821-421c-b4e1-a91209d90893",
            "name": "Positive Testing",
            "item": [
              {
                "id": "9b93823f-da43-4b51-a585-448db6b7e627",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "a6a88fb9-27cb-4230-b687-e4597387dd9b",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07c104ba-f941-452e-ae7e-535650895564",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "d77bbbb6-0bd6-46c2-8d1c-422ff8e49003"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fafc6af-6ec5-4176-b721-aa488fa03293",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1b0e47f-83c1-442b-8528-cbd6f4296fff"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "ffae454f-fe52-4aa0-9e07-9ce731a02bdc",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "916ac5fc-54f1-43e2-a56f-6f8735a1e25d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "35af958c-1bf1-4cb8-bdad-74d0969607e4"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ae8bdbaa-da76-4e59-97cf-cba6097462c6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "ce905ea0-a564-48b9-8774-cf773159737f"
                    }
                  }
                ]
              },
              {
                "id": "9e494391-7a44-447b-a032-49c4c3af460b",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "666fe8eb-4bf9-4a10-9992-9e0c9d26450f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8aef2b04-bab4-4120-ae51-7366ca8da93e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "be77ad68-a003-4b62-b76f-8cabfde634f8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "77971696-db1a-45bd-990a-0c79dbe00ad2"
                    }
                  }
                ]
              },
              {
                "id": "1dd5cd50-c1d1-4e02-997c-a3d5045b4882",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "29a26101-34c6-420c-8782-9751b96df326",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a1fb6d26-034a-4262-a8b2-94cf7a6a379d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "85ab53ea-d8b2-47be-903a-9043cf8050db",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "a2eed849-5da0-40d8-9a41-20b37bcca00b"
                    }
                  }
                ]
              },
              {
                "id": "19b5eea2-5ee1-4d71-9cc6-c4badba62add",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c8f6d3a4-9009-4c84-8834-709ea6e97d8d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "01a0c8d4-b896-4797-b138-3ada6ce2acb8"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "36fbd381-570d-4176-98d0-720b679059a2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "9093b66a-1e2d-4aa0-bfe9-4892491d9d33"
                    }
                  }
                ]
              },
              {
                "id": "d951926f-b19d-4689-97c8-5774584ffa4b",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2b13c7c8-9bbd-4c02-a418-64d5ddd511a3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "955c1910-289f-4d7b-815f-cb68dbe64536"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d1c3f0de-354a-4448-a354-c9a5af2e2684",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "c9979939-b6b2-466f-a10f-06be9a1f5d2a"
                    }
                  }
                ]
              },
              {
                "id": "c798df8e-33b7-4337-b2da-8df316ae1b63",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "bb1e7b62-fff3-4ff5-86c0-9b5eb408893a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f3911df0-1a3d-411f-97ec-e365e960147e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "69474207-4c4c-4878-bbe1-fcd6934a9a4b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "532f30ac-8f92-447d-9247-e719ee2cd099"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "b5ac90c6-f580-41a8-8b5f-7aae7563538a",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "dba6c943-bf83-4786-9e33-501c7461445b"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "bae15f57-f05b-4372-a250-478dd9903793",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "be522d1f-cd49-4f24-9bc9-7a47091f17b4"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1a8f1f94-7526-4629-b4e9-94850df68257",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "9ae63dd3-7afe-48ab-bb5c-d852ff9fd811"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d82f26ac-163e-4310-bf5d-3bd8ff50b5a8",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "db81e765-380a-4725-9646-86f6030902ed"
            }
          }
        ]
      },
      {
        "id": "0a65d170-9663-4e85-8783-5c4e20be71b2",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "033e60f4-1f24-436f-ba83-0f0aee4208d9",
            "name": "Negative Testing",
            "item": [
              {
                "id": "22cde1d2-75f5-45a7-9e72-70ba0fa9d41c",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "2be15c4f-4acb-496f-ab93-39a9f3517647",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3934449a-f672-4ff7-b28c-431f5f96276d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6b6d7d9-76b2-4704-92f9-acce72c31fc9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb92b5ce-5918-4ea7-a5fd-e59c61e0cc33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "a1c47d75-17bc-413c-bacd-aa2a7f9eed0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27347c36-46b8-41cf-b612-8aea49da30da",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9223acb-0cae-4e30-a92d-cae975235365",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9cd2a6dc-1980-4bea-b6c1-566e17be50c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea9ddb2f-f89a-487b-8b75-ee8badf35752",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "6e7ea213-d03a-43e1-aed1-d2a76b9d93c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45412c0e-d689-41c2-94fc-933d069ffa17",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00306544-8bc4-45eb-92b0-3317dd6f7872",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4118052f-c771-4333-afe4-6880213a4160"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc1dd37b-ad46-4477-b122-8210ac944cdb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ae2688df-5848-4b7f-a26e-d1e5b43ef138"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c2bf739-ad3e-4390-b046-b6bc5c3e953a",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef6839f3-d1d2-479c-b437-38781f8efa65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c9aee83-177c-4667-b5e8-3096bf3575bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c57ea0d0-f286-418f-bf2f-e63b199bf9fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "bdb57760-d809-4a9b-88b2-47625bb3589a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "367e1f7b-ed5d-4579-8a34-017aea3bfd34",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75ffc2f4-7029-4d3a-b597-9edb9415da2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1cfb87dc-bcea-426f-ab92-d3defe6285d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d4060f5-dbcc-48b9-8845-44ff03838e81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e0e25d47-a89a-4e0e-af3c-89adf1b40711"
                        }
                      }
                    ]
                  },
                  {
                    "id": "298b80da-3fc4-4f58-beef-6583f08f2cc5",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "129979df-3d69-4ea0-93f8-fa03e33f56a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4684d7f-f070-4448-b7fc-356e8feffb74"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfb2628f-963e-4390-8b2e-5465a88309f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "894cc86a-0788-4bae-9291-ec870c7e40b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f13f42d1-3420-4380-b7b7-c3d7411777d0",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ab72e7f-ffa3-486e-a201-b37daa70a8d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d95cbcf1-dafd-416b-a367-87a9ea75eac4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6dce27a9-7949-4fd0-a1a1-96ce1af01260",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "33f6298f-b3c3-4fda-8fd6-dc143d20680c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a447a47b-786b-4f8f-8cd5-9b4937a6d58f",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f75b733a-9b25-435f-aadc-636c7dda9fb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81db1249-79e7-47e3-ad41-feef1a070301"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c03d50b6-f1d9-4b01-8857-43801542f86d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2ade57b9-505b-4e59-975b-c34a0b37fdbb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09002f7f-9478-42b3-8a30-70c9c7829340",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5511b27-7050-4d3d-8623-94b48fc28aa0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2ddd6ec-2fc6-4a7a-89bc-854ee9d78b29"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a343822-3206-4305-ba4d-8678c7a3b900",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d5961618-8d9c-4e82-afec-e8e52aa133b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84ed285c-cd96-45f5-aba6-44507d5fd8b2",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ded455f3-c70d-4449-9608-4ed37cec7845",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bcdd5a6e-8ca1-4bdc-908f-610cd0e10ab6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e01bb6e1-be54-41fb-9dc3-def09c1d0332",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "55c5cfa9-8542-45a4-b1c7-14cefbf76749"
                        }
                      }
                    ]
                  },
                  {
                    "id": "051b67bd-9718-48c5-acd2-7e57dd042057",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fb8e9a5-5167-4504-9760-956732782e67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5c88997-6d34-4c08-9338-7c0cc1c8c46c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d29f993-ff7e-48a8-a204-cbe8d303cf9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "67903107-7c9c-44c3-a0a0-ffd09a7423b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbf8c868-ef69-4f2c-94f7-fa422f51e8b6",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "464f06df-713a-4494-b4b1-f45c5f77505b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "abc4c17a-e5f0-4e3f-90eb-9dbb02f14454"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb9fe545-4ed2-459d-8d81-7c148ae13e44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "07b47046-8251-48d6-8247-b630815d9cbc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67cfecc4-e397-4598-b65a-bf0cce010e2d",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea63d6b6-3e83-4a0f-8020-a2598f0b7c24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f7e5e66-a495-458f-b599-2a2ee197ce26"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cff952fa-b5f3-4f95-878d-34b0dfd8a303",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "9f867d33-f47d-4479-be60-d576da13b9d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efae94fb-11c3-4c56-941e-b7642f3628bc",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffe628b4-18d4-421c-9bfc-b4678394f0f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "838d526d-136c-43e1-9002-2a2edf61f487"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "370cfaa3-c1f7-442b-8691-d52fd5be56ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "dea57cb3-da4a-4652-be81-f60be0bd5530"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16618f98-fcf5-4b08-b492-214a2ae6ae1f",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6509291-65c7-4fc6-a84b-9b0b71ef668a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "825a3b7c-f801-4521-8e9d-53ead1df8361"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad7a49ef-40cd-4844-b600-df9c33b12f21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "a302af52-37b7-43d7-80ce-a298393b49d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f953e4a6-40f1-4e42-818f-1185c738c3bb",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e68a799-8ecb-4967-aa71-4f8d1b8daff1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "046896c4-ee10-4eed-bb7b-cdae65a8a122"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6cfa557-e1e3-46da-a233-6a65508524e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "f03d1e53-1319-4b47-bfb4-bac915de55bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bca7ef86-b3cd-4838-b55a-5b41218cef16",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ba8ebe4-975f-4048-a37e-834badab573c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1f0fd6d-0737-4232-ac15-1dd7d076e7cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "817def69-afde-40f0-8198-385c027653c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "4bb94fef-81e4-4ccf-9657-e9fd20b9cd53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8173430f-24cd-499a-b829-432176929f09",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3d6f74a-cc09-4583-8e57-35c9fdce167d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd6a5b1a-97d1-43e2-9aa8-29ef89ec9c2e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0442257-54dd-460f-ac82-ef156004c70b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "22c64117-c0c1-403f-a805-4174890e67b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce4227f3-7597-4bd5-80d5-53309dd7839f",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e4cc157-189c-4566-ad32-3f9d5da1a169",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3fbb9aac-ed53-4143-899c-096e5984c8ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9574e787-28d0-404e-a952-b6b09c75d861",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fe7a7461-1b62-4a1c-b0a5-671c9759342d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0dd7dd5-6e88-4c42-8f4b-c065ca400d59",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3447bf57-34af-444d-a808-dfbda44c2de7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f771240b-9bb7-4562-9acf-fe0d2ad940bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "386809fc-5e64-467e-9e84-8785aca19bdc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4166a177-e1af-4c55-b337-1a32efe5ea66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b5c6424-169d-4364-993b-b2288d18b8ef",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5446f101-eb37-4639-84c3-8d09825f4f1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7356f9c9-d032-401d-b646-877fed765b0c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53e9799f-c971-43ee-8b24-4b5f18b07ae1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "90fe127c-9a6e-4000-99d8-2cbe712cd210"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9bd90d8c-f3ea-4288-adc6-929e1a27ce31",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a426541-281b-4565-8178-3fde1db863d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe9a2213-59fb-457a-938f-9158608b8ec7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae63b8c9-fab7-493c-8a16-bbc6bb1c3224",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b3df6335-f4df-4f4e-a530-5286f488d042"
                        }
                      }
                    ]
                  },
                  {
                    "id": "836c84b1-4371-42d4-b1aa-5dc9fd3829f7",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58f1c6e2-8dfe-47e7-881c-3c8d4ca030e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e7e9e2d1-cfb6-435d-b030-f1c0bdcf9c35"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b71a28a3-5b7e-4b8b-b350-c93ac7dc2530",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1647ffd7-a2e7-447e-9863-e4910ebc65e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "324e0289-2891-4524-850e-63c718889e6c",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e50eb4e5-c815-4f26-b804-69110355cf93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0686398-5c5e-4df5-9174-16f08e6eb579"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7156cad6-217f-4e0d-b7c8-32c252f720c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ad148583-baf9-4370-900c-fd51fa040586"
                        }
                      }
                    ]
                  },
                  {
                    "id": "998e7919-9550-4bd3-996a-5a229902652b",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bab916e8-ee53-41a0-875d-26b3a765572d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b0ac1902-6ca1-45fc-ace5-aee17487d586"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f29182d1-cfa4-489b-86ec-2f0c8e2307b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f9f1bcbb-926b-432c-9f82-f74c65119a38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2083d3f-9360-43a0-85ae-fd4968ac01fd",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a420e4d7-9d0f-4276-855d-1964b3808cee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb439e3b-24a8-42ef-9763-df3c0e30dd67"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fd77a46-648f-47f4-b193-f959fb8802b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "73c83789-b07d-41ba-8be3-5bb1650a09ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa41e099-568e-461c-9ad9-2210e41fee96",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13b16284-f61a-4a18-848a-aad634b318a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd3ff9b0-8855-4593-8520-4ad9740031ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab23ee5e-e5a9-4c1b-b7e1-09305a0678ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9ea25b89-410f-4251-8a91-1d12e05b65ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b51d847-a5f5-4f5f-9501-99d4838e2b5b",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "320dc584-324a-4e05-9844-f707b9837c73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10692117-a67b-43d4-9800-c585d2cb2d1d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6d83051-c0ed-4e8c-9764-f3ff00b207e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "be6d32d2-10f1-4125-b87a-23458b64f652"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b137d343-9efe-4c8f-939e-bec97f6f766f",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0349b6d2-6be8-42ee-83ab-8b0abf8cf026",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59cb5657-a697-41fc-aed8-7173c59840ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b357132-a138-4053-8da9-9470ac4b21f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "569eed05-4bff-4bb0-a9f6-02ab22bafe47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7de93bf0-1586-4642-883a-d90005245550",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fd7f5bb-67bf-4ae9-9c6b-01339a0068bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a7fb539-0ec7-479b-9d49-323dcbfcac99"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1dd1156f-3b17-4a40-afb7-76be9312ae7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a99452b0-b143-462d-8fc0-f7c993af490f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0443b0b2-c419-4bb1-870c-eb20c04801f3",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbd57620-921b-4b54-9868-95759847ee6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7054af42-c791-4dbf-9fba-b26bfc7ef58b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f3c4eef-8831-40f6-aa11-922a3d44e32c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "aea41988-1388-417b-945f-a42440ac5567"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2dbbaab-9e4a-4ea2-be38-2cf79bfc93cd",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed76a4a1-6ca1-428d-bb22-5ddad6fac376",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9fd42af7-3c9c-4cd4-92d0-15c412552edd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4f6ccca-02b6-4b10-8980-b4d5ec579347",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b81374ab-2296-4881-8127-232149484bba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "455b4e79-a350-43d1-bbf7-f9c0f769ecd2",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b41179bc-a130-49f8-af37-517c77b9da17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "363b41a5-aef6-43c8-8069-57673969d83d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8205ac68-00ab-480c-9655-a3ed50c3ecaf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ee5d7649-1548-4d07-8d88-3e6410656e62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6251e19d-5840-4b5d-b05b-bf157bb06e72",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6785394a-6259-4874-81d8-b07b3d105115",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc354b43-054c-4898-906f-d8946df6b19d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd61451a-3be7-4eed-9560-a15a18bf0822",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e8c09252-1b1e-4632-9dd5-2dd6d4bb6608"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a09fbb98-8f4f-4c32-93a1-499549e27cb1",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c9c82cf-3941-4e10-8363-9c8c18359557",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34e95423-79bf-4f74-a3f7-b389244399a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a483685-31ba-4b44-b3eb-bb40ef16a9a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c286fa3c-58d8-40ce-af58-75c8991440cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24d3bba0-9df1-487d-8fe3-3961a4f82d68",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95aabbcd-ccba-41d9-92f8-a98efa4a69d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76891a24-dc13-4215-86b2-4336813aa5ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7166dc2d-e6a2-4a38-8f41-6eaa21e8e9be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "75523103-51d0-4c5e-bfa2-009aa781a057"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02761681-83c6-44a1-81b9-47490368fa8c",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f39e79ee-8fe5-4864-91fd-076d199ca015",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f3b4269-9780-4112-abd4-ef1f5569e6dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48a8f172-8060-4c33-8492-7253cf542520",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0d88d3c1-b4f6-4884-97c1-60c3d1bd8794"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "1bb11823-63f5-4aa5-8afe-e7bd11c0ce5f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "4437b6c0-93cd-4036-899b-b859f9911395",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af450c60-f55c-4c4d-8974-4a704270b20d",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "c4e2840c-9067-4e20-ad05-723701094b6c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c9635ce-6990-4c27-ab8a-f75713360295",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "fe641156-fec9-497b-88d1-fa27291ce4cd"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "33a4d58d-ecda-4cdf-9022-62af04e880a5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bf67a091-40c1-4381-b602-138947b56cbf"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "0cf5d8c6-bbfc-4c3f-bac0-70709097d4af",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a8638a2e-3753-47a1-b458-ef17617544ab"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ffda0bc8-c36b-4512-a329-6175838753ff",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "b60bfde7-6676-462b-b08f-55e36390a3e2"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "cc0ef52b-5416-46fc-903b-95632e7c3b64",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "0ecb12b2-5c29-4750-9115-558cfd6c40a6"
            }
          }
        ]
      },
      {
        "id": "78f8b154-415c-4126-b954-b8bf2f607359",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "4066dd4a-947d-4ea7-b272-64525e6e405e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "adf787ec-3d75-41a2-a556-4825945646d2",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "84074bf0-f088-4046-b02b-94f1e3f69063",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb3229d3-3bf6-4a6d-932f-a80a6af34512",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "069cf319-557b-4cae-9ca2-bb9c07b77210"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cdb9a233-c3d0-4da7-b4e2-214db23ee6df",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "678ba024-7e9a-4f53-b604-f99c9403dafa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c476ae86-65e1-435b-91b1-354641009ca4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4014db88-2f95-4099-aa23-255b3749053b",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a97e9fee-a948-4193-ae2c-9844e3174de1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d54aca19-48fd-4128-bd6b-d31e695db8dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05038150-4801-4bac-bc13-fa695f89fc30",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5da2d0dd-21cf-46d6-89c8-a724e80fb798",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "301f556e-9245-4055-81a5-b7258c5a0de3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "815a719d-0d3f-4072-8eb6-e20d6bef6107",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6cbd9da-fb87-4d73-b053-2acb8c67f9bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ab99b53-4bd9-4b26-beb5-05030f4418f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d3d8a3c-ec6f-44e6-b68b-97de46592c13",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c45aa9d4-f117-45f3-9ae5-4f6353c4ba72",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a794b6db-9ba6-410b-9c38-ab70108cc015"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8851503c-885e-48e5-b496-b9bc4cb8a6ce",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a0a940d-1abc-4bc3-a311-0482842993fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "505cdc3c-51fa-4c3b-8ac9-ed199d51076c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "71b9cfb7-4e61-4db4-b1ba-3356400227fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70cc0934-7e0f-4d33-b396-cf6847262b0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f123e20b-3c25-4f84-ad8a-c5f1f72f43f8",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9e19baa-c2b6-43d1-908f-2cd8f722d451",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "36f127be-ba14-4dd9-b3be-ee5bdc76b7cc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ddb37c3-1cc6-4d14-8cd1-cad1eb29cc75",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f009000a-c533-432f-b3b2-07cad2eaeab5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7d786bd-6ed1-4da5-b113-88c05c4cd2c7",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29130d0a-ee35-4fea-987d-bf788f02d227",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "89272843-9ec3-46ec-a2d8-9a47450f4c00"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2e34d58-a05f-4603-a113-56650f5b19b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cbc8b3a8-cafc-47be-8880-b784481c8d75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62c1e087-efb0-4088-823f-c6229eeb21f7",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d75bc43c-911c-4415-8e22-a2e30e061127",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6d06ece6-cefd-41e6-8174-e8fa4d20f72c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f992707f-6f73-4c78-a6e5-c63453bf9763",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00a9d582-fd98-4d6e-bc34-6cabdb8afadf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a17fe676-8e8c-414a-adc5-dea2c5c305a1",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2abb3d6-6486-4743-8f64-fb4f21b54c29",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a72cc5e-5eb1-4ca6-b1ae-6fe0f3444376"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c0df07f-c420-490e-9a41-2596e4a30718",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9dde2c81-b8f7-497b-a9bc-7efc535da73a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a506566-cb79-4c40-9943-dd5baa4b0229",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f69d47f4-6a68-4784-9336-ac4471ec0e07",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "87d2b226-17ae-443c-8c36-33a9309931a3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b58ae931-31fb-42a1-a4b0-4f311cdd0653",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a7b879a-9db9-4afd-b025-f5ece5366e23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b4189b0-5ece-4408-94e9-607c0e0a7075",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebcf409b-aac3-4f60-a6a3-e1991cde078a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4f16c197-ce3e-437e-9fbf-c46c1580f23b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9cc14210-9c38-4764-bde6-47ac5302186f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94afee97-4c20-4e84-adbf-042151803358"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c043dab8-e475-4b04-9203-96b3a26025f5",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88463497-440d-46c1-9429-5df5799f8a73",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "03b2026b-b436-43df-ab62-2952f899474a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfd43b29-33c8-4733-b0bc-bc74ab7c491c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "41668fe6-03f5-42d2-aab7-04304a7e616e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a17df75-b992-45e6-89e2-636400d1a165",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cda60e6e-0334-4418-9045-3541d6e92d45",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ff673e4c-394c-4970-b2c6-5a401b5b99f2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab2d1039-2456-43e5-bb0c-10790f1826f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "69bda8df-6863-4c33-b202-b634c62408dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eea676e2-b285-4b89-9644-9ccd41f9d09d",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12220325-9020-476f-897e-eb8e85d1a117",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c31313a3-b0bf-4c8b-b5e7-39c5f42cd814"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "075ad8fd-a85f-45ba-b055-00d21e1f629e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2fd68b02-ee93-4e50-836e-c764e4bfcff1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b864adfe-d9dc-4b36-989c-42c732b9a508",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2bddc1f1-ae47-4052-a4c8-71103fc6cdf1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab86518b-0558-463f-9901-b16837f495b4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "16c49310-05f6-4b99-87f5-f0181e3c6ddd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c81d9c47-94e3-43db-8fa4-4668f6d79382"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94f1d967-74ba-43ac-9fd6-db15ed449ac8",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3bcc91b6-dc55-4454-af43-111da0d61339",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b46813ce-35f9-4660-a1d9-8f3f2ae2dc99"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa845a0e-23b9-4008-a222-3e19e7e9da4c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73e4f7f9-a58e-42c4-b9d1-ec3d2da429a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08f53dd6-d6fb-48c4-8f3e-badc66272cba",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca2a64ac-8e6b-4025-9034-2d5a8bf1a249",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59b45c3c-b8ac-4707-a452-08dee888366e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a48f673e-7bbd-49e8-a1d4-82cf713fd096",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a95a9443-eac6-4155-97de-844d8e854a27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bf9ce62-9219-4b38-af27-45d1c8617710",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5947e516-74a5-4a7e-9834-b92d86c7666a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ddf0081-2375-462c-bce4-ee71fce1cf41"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "115b5686-04e6-465f-89b1-065a16ca29c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "758573e6-e1a7-438d-8237-0e4f253c88e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58c99e6d-b85d-4ffc-83b4-41b84ceb8b06",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37e67139-84ce-4a9b-b88e-00273c7a8168",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0da8abb4-ef99-4e82-b7de-9b92e18dd8d8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8119219-522a-43f3-ab45-86e4c26720c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df145f2c-fee3-4bbb-9246-62e305e25945"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f30c22a-4acd-4007-a255-c34c499acba3",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30c888ea-2229-45df-868e-f73145786ab9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dabc6ad5-2195-4fba-8aa0-ac9df161fbcf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0890b34c-0675-4044-8b67-3349de8cbef4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39aebf3e-eed7-4603-a9f8-46ff50555a3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05d81853-3899-474c-8b81-86901f4429d1",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb65568b-3147-4655-939d-028dfa282451",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "484350cc-4b5a-4802-9c4a-4d444b6c21ad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "755b4c7e-1bee-40bb-9410-af763a91d2f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f8df758-a2fc-4cd8-b017-c01cbc7863fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02c01c1d-48bc-449a-89e7-eec0c1b2c148",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a602218-1352-42ae-aeb2-e38c810ce495",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bebf4d96-0b72-4056-89ea-492b5cd5cc1f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b162f55-9a80-4030-aed5-c3a761aae2e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f527a1c-431c-4125-a53b-e92eb2a5ef04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a84dc1f-040e-4cde-a1a5-2e17d19b3a36",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48c2f28f-982b-46ad-8761-7cbc8c9387d7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "11f5b64a-81f6-4b4a-8872-c09fae0356b7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd750a6c-30ac-4e1c-9ecd-4528cd8f0e7f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67e36123-7579-4e88-b74c-f33934daa2f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27bb0f06-7c20-4607-be01-8947efc6290d",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2b929d0-fd8f-4c98-a96d-6a00677ff5a9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e8f909e0-f130-4ca4-b15e-bf6fa0ceeea4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e1a3eaf-23ec-4dac-8b01-1d7ed20df13d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "753d9120-8305-43fb-95ae-20d2d46aabe3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55cb1e62-07c2-4079-91bf-642647a5e844",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56130f0e-87b0-423f-b36d-1240ee6a77ff",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6b516fd1-b0c7-4586-ab3a-31cf6c2c27e0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7b2acc9-6575-4801-b4b6-d40d1d62356f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d4524cbb-b073-4cdd-be9e-961e05ad51b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99ecfd80-14ff-4945-97a5-f536729c444a",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8e1983f-a655-443b-94c4-24cf78291cec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae1fe1d7-ade3-4f1a-8f1b-ce21240e1ffd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f75b02ea-1bae-413e-9751-0361d8bcf58a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73a8ee51-60e0-4a8d-9150-f5cb6734b7a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ecda0b6-d89c-4738-a1bb-824d795aef52",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a753124-e97c-4141-9258-da5db5bbabd2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bb271a8f-5d16-432c-b88d-9cc39473c754"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "50750869-4043-4ef4-bb9d-10e19bc15c17",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d97b1c2d-b675-468e-89df-12b8e92e7a27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5bb54fd-d252-4cfd-bde0-bd8aa908dd9c",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d8c0485-4e37-4dba-b9a4-74ca858da734",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3b886d75-1059-4de6-8e5d-387262e4d2b1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "637224dc-6a27-4e7a-9ac5-ff383ab429ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e61c40b5-5b64-4f69-a334-2d5b3151c088"
                        }
                      }
                    ]
                  },
                  {
                    "id": "507c88c0-415c-49ed-886b-53bf952d6c10",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00e378b3-d02f-4286-9b89-8e4468d8a7d4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "58e4d323-49e2-4526-881a-b2c6debb88b0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba24a123-d1e7-48a1-b85f-5c0e67ceb04f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ec1843d-3503-496e-9b51-39839b6d6776"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a4c637d-056f-49de-ac8d-1c7f167c16a5",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce132a0b-bb73-4e40-90fa-1362584a8360",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "816d0df6-4956-46be-9ffe-18505a6eb028"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e90c50ba-b514-41d1-8f9b-0335db66e588",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05b31a9b-b6a3-47f9-990b-4260d5ad97d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72ee3328-8d2e-4b93-badb-e138af0a6048",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5dfd0d5-50de-4e15-a209-28a01edd4f1d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a204fbd9-0bd2-473e-99c6-8c0fb8e03221"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a5b5434-3cde-405c-9cae-3f671298950e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba535e71-a7ee-4622-8321-046f7f4538da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3bbf9b73-be0f-4e69-b880-b6f5f5bca86e",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "beaf2dca-722b-49dc-885e-479b34c6eefe",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6d26e93f-bdd2-406d-b7da-bdf661014a8a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd8bbbbb-2fcf-459b-a89d-963267abd0d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d24ef705-f5d1-4e5b-a953-35fda3b0d25c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d9c1559-d971-40d6-b7a8-6e8e970e2162",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2dc84765-b983-448e-a0e1-3b360d3f2abf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7623f44e-cdd0-457c-9fbd-33a9e768a784"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2df12802-2a05-4d43-b3dc-57876fe5923e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "275befbd-32d7-41df-8faa-447e408596a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "096889e9-80fe-40f9-8f5f-362ea48734f1",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "619f7a10-238b-45d8-b464-a0ed82ca8914",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e92b717c-390e-454b-8597-257a86acc5bf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1862d7e9-9e3d-4d49-b639-ee9b57e98996",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "30283052-4f45-4cdb-9d84-1852e1a26d9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69dc8539-c2a1-4e6b-a34f-9a3fa3b4cc39",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "186518eb-1143-4319-b8c7-0db6292eca83",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "644d1914-e394-4d17-897b-8a07125393fd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "69edd2c9-934d-4568-a9e3-b6d86b77b3f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1b14053-ccfa-400d-b8da-d83efd13345f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "514dd881-6b25-4add-8b3f-c275a5f32d8b",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff825787-881f-4a9f-abae-1f6011f2d26a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f888549-b53f-485b-8644-d1c05e32900c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6034d5a4-6cee-434a-85b2-e2ea663875fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca075148-8c87-4462-86c9-6a9b66e49d1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31d079db-24a9-4a7b-80d1-e36133d547d6",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43f2bb74-bb6e-4765-b5a5-b72d2e873e60",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "574f7962-22e8-458e-ae4d-5335077dd87c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "78c5c04d-b368-4559-85a3-2df8135556e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73961230-5ff2-4863-af74-77a3b52f30c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8287775-a415-4685-a9e6-3a8202dcebfe",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f7419a9-0596-4630-9c9a-dba6b0b88086",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ac7a3d8-4b88-4a6c-8a5d-7c34f1907e6e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "041cef72-ddef-4fd4-81c2-58f1918b2b44",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a79074ba-8b79-40c8-a636-066ced8034f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfb4d131-2e3d-4886-aad4-4048b0060518",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "291300ad-adb3-4697-83e4-1e00cac7612c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af75edf1-c0ce-46fa-9554-baadc888d2b2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "df87e159-ab0b-408a-afd7-a79da77e322d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c9ba2800-22b0-4411-8b7a-ef4fd533a478"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3849453f-efe6-4c9d-a09c-06d21e836c68",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36fb76f2-78ba-4a91-8974-d182ed137426",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26b05825-f069-4a58-9dab-9a9daa3d2208"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2199cd0e-1b5e-43a5-99c8-8eadb87d2e20",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bdd60398-94e1-43e4-8106-4bb906f545c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab64a201-27e8-4f83-a559-15ffe87fb988",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff158b53-0910-4429-a267-066893639b17",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff448c09-a8af-4e84-a33c-2204b6ed42d3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "27d7e589-f767-44da-96d9-8a9b86626371",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ebd0cec9-c7f1-42f9-ad87-c97805674565"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19659686-da6e-4dd9-ae42-e9bad94b935d",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f891b278-6bd1-4c41-af77-964c1b0185e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d333a20-d6cc-4701-bdbf-8b39049db9ff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "64650889-d874-400a-bb2b-ca363c458dd8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e585f08-dbe2-4e68-bb2e-b94194cd7c22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62963298-19c4-451f-978c-947f464ce45a",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8da72091-4b94-4194-8f81-081d3422b615",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "afc5ec0e-b99b-49ff-8f0a-bb2a357d6167"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2ab3bb9-2fc3-484a-b216-c39ae9575192",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "158d5605-5fc3-427e-8fd3-e4c245d13b25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d8943ce-4fed-4904-b574-6a90a144db6e",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fdb8a1dc-5475-416b-afba-f227c3f35586",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ceb6658-2231-4c24-aaf6-eb16f2be498d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff133e99-7a3c-436c-a8dc-5a82fc96a09a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "064c63b0-fb3e-4c11-becf-d37252ba596d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2894d49-85a0-453e-9c99-95c54a0a6196",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3606e436-0518-4458-bb8c-b714245fc6d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea998197-7d6f-4745-95d0-14bc0a69098c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d95a8854-53ec-4df1-9ffb-bd2a2ec588be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a37c2c26-b9e4-4a18-8b44-90a0fa2be352"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93508c74-69e2-474e-8755-b280281243a7",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd63d87e-2402-47a5-8b13-1a0eb87cd6d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c5f502b2-e256-4f6c-8a26-f49197f79328"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "14dc84fb-a60e-4dcb-9b77-9292323a52f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b6366b06-b712-4a10-aedf-fb5e123c47cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "128cc94f-6df1-4a29-a3b9-c89e0470b59f",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c391bde6-625a-4a29-b1c4-78767b280b1a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a07986ba-f370-4cba-8c0f-1641233baece"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf25a09b-b829-4473-93a8-0391fd4290b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2fa18ba-a5da-4050-864a-a211c1f9e574"
                        }
                      }
                    ]
                  },
                  {
                    "id": "518a4742-e994-49af-acf6-27c7450d2d70",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3158a7c4-82b9-4ff6-98db-43e257f8d54a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e8dd733-a16a-4afe-a36c-e07673032d33"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "470453d8-2d96-4144-ab64-a87cc087ed6c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14d67ca7-b17f-45f3-94ac-075d39882ce3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5ba06ab-ee03-45c8-8af5-619435b6f68d",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa00462a-c3c5-4296-9e98-cc08b23cac6b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b620bf81-2039-4e8b-b5ce-68d92c3e2ce4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "71034378-67b1-4fcf-81b1-e647f1696d4e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "06e5829e-1bde-4f1f-99a1-51f2d6bd6251"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc313e8a-9c9a-44ad-a6c7-c5cfed4746e4",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ee9e43e-8abb-4336-9e9f-253727da0e27",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3c6820c-1436-4c01-8c71-4212cbbba882"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fab8630-f911-4540-a013-d7b1005092f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2765343-854c-41ef-88b0-ec44c9684ad2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a8f7a3e-7de3-4950-b6e8-9f8b2e0305e5",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd8897d4-578f-425b-b109-77a4911e1978",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cfdc6f5a-f6b6-4311-b44b-5f90f32f8d9e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eda847fa-2bb9-467a-9ead-accb7ab2a921",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d596f08-39bc-4e09-b333-c5597c4e0865"
                        }
                      }
                    ]
                  },
                  {
                    "id": "801ed6b1-6450-4c86-9d97-f4048bad403b",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdf3aeb8-bda7-434e-97b9-bd26d8b5c7c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d13b091-1499-4800-ac8a-d6522b991e8f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "25d6f013-86be-4230-8395-aa155a3d3ec3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea22a275-19ef-4963-a3df-d084167e7347"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a95777d-85d2-48a1-b517-81296a756329",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ee64745-7599-42a0-93be-2482b6c8e702",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "581d6d3f-d8b9-4fdc-b7bc-976cc36fe0a3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5960d309-1256-4573-ae1e-044977d9af36",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ec6ef24-7afe-4fd1-a4c8-20f7c5510570"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee9c7f08-9eff-4b99-b763-2d96ee071a96",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8bb8a8f0-e307-4e78-bef4-b1bba03a9338",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "06cca52c-199b-40ee-bb9f-5a96adea743a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e70b7777-682b-4754-9fd8-83fa9479cd5b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a3aa01b-4654-43ad-99b7-e26de1b8df2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15ab4a00-1ced-45ca-bf35-71e3a31db70f",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36bb74d3-b33e-4d30-b298-4d5af98f90cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d321f3d-dbe1-4e8b-b7a2-86fcb84a592f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d46323ba-b76c-4439-9f20-a609687bf33e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0741035e-7b31-4d38-9975-19ad76f0cddc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "466987a0-ddeb-463d-815a-63c05be15efb",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a353ac77-9219-408e-8afe-06a6e457c0e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab26180f-f101-4c2f-92e8-a59f2dac8335"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d31b22c2-fd2c-4811-a10a-0596367879d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf909747-29c9-493e-8747-27c714085151"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a8b4fed-a20d-4c5d-a828-2dcde1822a31",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f39a1a77-a858-436c-aeed-26c29c586139",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c27eb903-abc1-4845-a19e-0b1df6e74934"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d877050a-f28e-4200-8c47-0f6faa448cdd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8dc051b5-6a38-4c0e-a215-7ec630c6983e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a2378a5-9a68-4688-8366-6e29c9c817e3",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63f738a6-ee0e-4a34-83a7-cce75fb0f115",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "48ad25c7-76aa-40d8-8201-3bd0cbba0dd7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed38167d-dfbf-42cc-9ac3-8f99bb1b72b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8a9b9b6-b2e5-4e2b-8dec-40a81783373c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3fa69da-cb7f-41e7-a11e-dea2d85be321",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "489af104-9f31-41ba-8ae8-4bc36240d16f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eaa91ca2-0ac3-40ab-b1b9-a7fe4494c827"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a4fa5ac-5c0d-4860-bd45-98390c26be0b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c86f6f2a-88c6-43b1-89c6-1df90ed67c07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ed80dc5-d06d-4053-adfa-e0521d02b6ae",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "186ca056-cc27-4057-9813-c3c144d7fcba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "956dc625-d1ea-46db-8a0a-13ba35d05308"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6d0d032-4f1e-40f7-ad45-6132d7364770",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5b6c542-b784-4962-822b-bee739e26509"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eec3791e-e7c1-4eb5-b73e-e2d799342f38",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d580976-6b75-45f0-a75b-686e3d76af87",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72f7fa86-7c1f-472e-8a4d-39c185dd560a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8756b03d-0d9e-4d1d-88c3-03dc2a4622e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4247d76e-a0cb-4d8a-8631-719ec771b68e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "420a27a9-6a27-44b8-8cd1-5dcfd2fd8e26",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81432993-5ff0-43f1-94a3-44882461c918",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4f52b4eb-c6b6-4e22-959d-3f23dbfd435d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a95d87a-b31f-4b8f-9cba-7e8df84ba66a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9517937f-22e8-4a0f-b645-6b8ad9be97e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "716b015a-c35f-45e1-8553-7ebb8f14e1ae",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfdfad4e-4462-4802-aaf2-72b50bbfc376",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "13061b8e-6b8a-4d1a-8529-6502c7211cb0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff0d366c-bb01-4f58-b836-e7ea93c16601",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd759524-8946-4ecf-9ac7-2346622346f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "270318e1-19ed-432a-81db-0f6e3846dc57",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "672c54ee-067f-46bd-a9b4-eb156176daec",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0dce26b0-0b67-4fc6-82f7-a7307e27c777"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1be1743-e61f-4f00-a990-962cf671057e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb7e1d49-b4c5-4c1c-8f65-2689d7538ea3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "775fef63-5989-4620-b041-c65758f5c0a4",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d9b0ba9-c05f-4ebb-b934-0ab430946f91",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8ecfd75a-5e96-4bb3-8c74-a6ce2c160870"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3d7b90e-12eb-42f6-b00f-14b60ec8cd81",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff0835b8-dc56-48d5-8f45-52a3595d40c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58481d7e-c6a7-4b91-b754-2048eaa1eaac",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "158e117c-45e2-4d98-a6f7-28409c253856",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "58d3a299-149f-4531-8e68-01b4383b9897"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "835510b5-ada6-4cd3-bff1-d3a67adffbfb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce41bbca-fc37-4437-ace7-1ef9cce691a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5124d20-f59c-4a41-93a0-1a017eeb4f4f",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbe2f441-3037-45d3-ad68-bb6f9e1a5af6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1e8febe7-4558-4853-8179-b5291f761554"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d7500bf-28c3-46f3-b0d1-64f6c12549f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8bec6efc-ef02-45d9-b49a-aac1e455a92f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1b9cfe7-55a3-4667-b7be-554d16e5e13a",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aed91f78-dffd-4285-a6c8-3f555f5d627e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0730a2e2-199b-4f16-a321-66ba71bcc898"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a550a0c5-d279-4667-90d2-09073228d86e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "722a9aca-f053-4d2e-b2d4-65b615e6e958"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4910dfc-0934-433f-b700-2b6d27f1552c",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c753c0e8-471b-4b03-a5d3-4f5457932054",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bc1e9955-2245-4902-b3a3-c1f010e70039"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9030cea0-9cec-4b52-97dc-7ed1c7671da9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bbd4b7a0-b2fb-45d5-a0b4-2277aeba4d89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9561daba-66e1-43d8-bbd5-fffe93e1a4e2",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ea57813-dba2-4333-81ce-2184b34cb478",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bc42be2c-cfc0-4761-936c-5c0177f89286"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c56eda98-9bda-4566-af61-f56f632563d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c61e357e-82f8-49c8-9e92-92ed9096427d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c452319-ef74-4a29-ae6e-6a30fafce386",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37b37a15-badf-472d-ac4b-f06d51bb812b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a80a5688-9e16-4e09-a536-dd8cab7a35ff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "334e0f2f-2854-432c-9e5b-f735a10ddd1d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ad41c8f-8d8c-4c89-8d59-652efe3af202"
                        }
                      }
                    ]
                  },
                  {
                    "id": "004b5059-351b-4861-a4c4-ed49718f91e1",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a58a939e-1b01-44e4-a058-4be929e6cfba",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c88d4731-19bf-4ee0-bd51-d42211e1aa1d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dba58d67-ac0e-4dd8-a105-7815b93d033a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68e13a8a-6700-481d-b011-257c883d3d4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f103a1e-4ea2-40fd-92f2-00ba7e94f0df",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9197913e-8bfc-40b6-8aa6-508606cb82fb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "df1ea2a6-8c00-4a64-a242-54bd96693c87"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b480cc76-e2d5-4c1c-874f-e089c3a52101",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c9f7ed3-53fb-405e-8130-99e2563a4a85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "360989f6-0e84-4e3c-b5bc-b90c6a3703b1",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12a14472-569f-4b86-bf50-dfd789a336c9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "067836d8-9504-41f3-8e60-9c4db89104b0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "32d559c4-8312-43d4-8ad4-12982e795d75",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d47655c2-df3b-4ff8-84eb-7fb50f932c78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "104af77a-1a65-4514-8227-93c83a37c620",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e512dc8-f9af-4f34-9d73-4d136b860fc8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8b58866d-440e-4f42-993d-a07cdb0d30e6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "82535d20-3b48-4180-aab8-d212a964696a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d5ae36b-3735-4905-a874-fecb6bf7267e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd673bf7-5fd9-4a4b-975f-c67c25c131a0",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "267ef557-5fba-4e96-acaf-2420ee2da90b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e30e1eb8-aec1-4772-b67a-72869be504ee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "523f203c-55db-431c-98cf-08e0f4f94fe9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9a22b62-27e1-4c43-951a-2e6cdca934c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc0ff485-5efa-4a8b-bfd5-b021e99ccfbf",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a74ba787-1cd8-44a2-b9ea-76c75386870b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c7a0096b-e494-40a8-b4ef-9752a6fdffa7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "334239f7-925c-45d9-be58-eabda0f064ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "13b56154-d8e7-4dca-9d8c-aebc8498c4db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bacd1c11-7d79-46e7-bb40-f53a58481660",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b1ffad2-d18e-45c4-8363-1b86be7cf0d1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "06a1dde7-d971-4cf0-9566-9dc5b607edf2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c98782f8-5cad-4f56-bbf8-4c989cc223ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f1d5250-ce07-428a-8eca-8fb3d7d5f542"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54a42c9e-cd75-41a7-ae8a-120b77768352",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28b9866b-a1c9-41bf-a840-17a1b3c4a2cc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "58bf7036-6a21-4f61-b050-1b9b9b2149ac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0fbbbd3-2b9a-4473-abcc-51fc5b0cd57e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73ebb2b1-12f6-4125-a729-efb00f508299"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3147fe3e-6a02-4e31-b46c-7911550811ea",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "213093b3-988c-4f10-b20f-98a08c3b0262",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a8740e25-a742-4344-986c-b8ffe00a081a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "695b47a6-5f10-47a5-bbd0-c59357b2b6ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e144583e-5609-471b-9f53-8b3e884cf47f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa6c6b7f-b9f2-408a-8ccc-de4a4fed7524",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3210f71f-d455-4362-8f17-13db1a152a0b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "67fcc919-b33d-45a9-bd41-5a0994483cd2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c92a2f72-8e38-4fa7-93f8-1efc4cd6b8be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ffdd074-5aef-4c20-9c3d-32e0446a68da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da32abed-d0c1-4379-92b9-dfafb344c3be",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b452fa85-7d53-4832-866d-cf570eaee20f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "48b9b712-4e35-4940-94fc-8ca0af153e0e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dea28e43-6963-4b95-a2b3-a6670ceda6bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a101bf8-0638-4602-8148-e21ca141c35f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c7591d5-1ace-49d3-9b3e-8bb12c89ecfc",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ce64909-dc20-4077-895d-624a39da6593",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d703dcec-c4ac-4cb6-a241-167b3663b11a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6baca214-c908-4269-8e6f-57cc6cd9c173",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "941f6d9c-22c9-4f2a-94d6-ad29e8d83466"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff570c63-2e05-427c-a1da-8d26a2d2bb06",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc643360-8583-431d-afe6-822b4ec64456",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "df553c4f-e2de-4e4e-9b40-2dfa0186c2f0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "11343f35-6497-4b9d-b8a3-afbc3392580b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39356737-13ed-4e72-b541-17c8cf1a8bbc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "319f4d40-bb52-4172-90e0-97e50430c0f4",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9b22bf9-fd1b-4835-b013-7339ee5b71ef",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cbe98088-0d17-407e-9a5c-347788bd9366"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "720ec3c0-a899-4af7-b415-e021bc4d73b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2ee4019-5875-4781-99ad-9a30ba6850cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ebf544a-9e92-4a89-8488-c525fc5ceaee",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88009105-de62-4fab-8a14-fc36dd9ea89b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6b084337-e31a-4cd5-87de-cdc3ba26049a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "02c87832-dbf8-40e4-a6c0-8c07e7f97246",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "90416e6e-499d-43f5-a78f-a3db57139b05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a60b5d2-aeda-4014-9220-ef94cbb64268",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83e2d90a-a9fb-4ae0-a2f6-782bcd9f5cb9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9c97c5f4-7bae-4ed3-b9b8-249c90be8353"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "378d5f50-b299-4e44-af15-a5eaa2ed3e28",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95546be0-ac77-40a4-a8af-863f032f13f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2978be7b-a726-4348-a5d3-ebe2ad8370de",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9f882e4-06f0-4626-a5fe-ecb03ce8e77f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1f55b2be-f87c-4ee3-a45d-9f0380b88755"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d4d764c-7960-45ad-ba0d-413599df996f",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "242d7803-9827-445c-ad88-77ec0c1e4fd7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6450e91e-8871-4c6f-a013-6e98acc76269",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f93137ca-f89c-4b3e-a201-fa8dac977437",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "80e247c9-ae14-42b8-8fee-1d680cf37f66"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5722998f-1f99-4fbb-a222-62dc772dac0b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5ccfa77-af94-4c12-863d-cb638bffe1e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "349cbb67-f78b-4530-afa2-6f9c50d9a55c",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6876f3b1-58b9-4516-9e42-7799774135e5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5663e0ee-29f2-4f16-9ed6-346ac712ab8d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb362315-a706-421b-8015-fb70354f8054",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c4202433-cf12-42b1-9cb1-540df16adeb8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0feac34-c42b-4bc8-a3e7-bf3fdeb87bb9",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b583599-31ad-4802-b95d-7fe8e68496ce",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f3e11608-a884-4f6e-93cb-6fd537c64119"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb0ac692-ec69-4a52-bad0-ac5f0b3127ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2fac9fb8-034a-4e65-b2c0-31c76e224808"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd9fbd5b-c6fe-4002-8bad-e1a9fc9ef14d",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48b765d9-a124-41c0-971d-5d106e439630",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2d11e208-2130-4f25-8c0f-6a103bd36729"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6645314-499b-4fa6-8db6-d32f11ac046b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59279811-8e18-4896-a96c-e6f9cdf96be7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a08f9572-8fc1-4700-964d-c1cc87eca8de",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "357a4dfa-c392-4817-aadf-e1370874f6b1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f3d064c7-0970-4829-bcb3-30c4e794c683"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a098c58a-3b59-45a9-abab-90923ed70384",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e6a97ac-9ccc-494d-879a-712f266623f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad718c8a-cccf-4dd6-82c9-78c6e5eb29d7",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40835a3b-8880-4e19-abee-f5d38901f463",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e649bc04-d2f4-4e89-98e1-bc1ef4cac933"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "23e31b25-daa2-4e62-8fca-d66215d94a3a",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a40b0461-c805-41ee-8670-fbc678fb9683"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ecd9499-1307-4259-8c36-09246f989396",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c34e460c-6ba3-47df-be15-bd66d4bdb0bc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "91055579-1f7c-499a-9d96-7c965d978e69"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ef16b39-a919-4406-9110-24b7704f0396",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb886a45-ea2c-4b15-be41-c03f41ee2caa"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ddca95aa-40a5-4d3f-8996-f35df60d5fcf",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a61da2d9-02b3-4c4d-b988-0ef7d571b476"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "58f0ef28-8ab4-475b-9b8e-fe0c25e48924",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "53e66d65-cf31-4a8b-999b-39fecee66de0"
                    }
                  }
                ]
              },
              {
                "id": "03475ff2-b9fa-457e-919f-3d2691962413",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e754ee89-1e5b-47a1-8bee-3a8cc67bf865",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6cb3398-41fa-4d13-9bf6-75bd8939dade",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "580e5960-5fe7-4eaf-bd0d-dff8f3a5c3f9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1520673b-2932-4c15-af8d-731260b17eb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6be69f0f-62ec-4cd5-aea6-caf56c1e2f12"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "258f564f-4a51-4e61-8947-fe0238689b24",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "69f3aea7-a0c6-4cb7-8054-aba32d25f1f1"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "0aafe567-170b-49d9-989c-19575d0de515",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ef3674d2-eaec-486b-94cc-7a6036afa9ae"
                    }
                  }
                ]
              },
              {
                "id": "0ce2b812-7a3f-4946-92dc-4053a5627208",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "d1d78475-6e5b-4a41-b8ee-03903a34c005",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9006dc63-9320-474e-8722-0f446c16bd72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "8a80b333-7ae4-410f-b4eb-45c96fdf791e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bac24ae4-1ee4-424e-88fb-2f88b0cbbe6b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be739720-dba5-48c2-aeb3-2e2b66125f2a"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "d25c3294-500d-482b-b3b0-1954a2590dc7",
            "name": "Positive Testing",
            "item": [
              {
                "id": "726f8c69-e976-407b-aaf9-6536d236991d",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1784c602-0784-4709-a479-c036e9d2ed46",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "10a0966b-0f1c-4e1d-8db7-0604a2ca2c73"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "18f61798-2515-418d-9abc-6f0784f763c0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ace03467-7f04-4e69-83a6-892e186eddc1"
                    }
                  }
                ]
              },
              {
                "id": "17685098-f981-4b45-b7e7-030e72dbebf6",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e1209a23-b747-4757-ada3-e788ec5e9324",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "51c03c1d-0ff0-45b8-8476-a7989de938d7"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "37e2dc9f-9652-4a31-8d64-04396d315609",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8badf762-8d7e-413f-b2b1-79ae966200b9"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9a86578f-ce21-4702-90a5-f24a72bed7fe",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "52445729-d70c-4837-80e6-c946f7cfe4ab"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6fec28ec-0281-407e-9706-2cdd5dae0a37",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c48dea07-7509-4a88-80aa-597517f9b56c"
            }
          }
        ]
      },
      {
        "id": "cc69adb9-8dce-4b50-a76a-d1a68d054a83",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "bac96d80-09bd-4f18-b9dd-7f56a3029cda",
            "name": "Negative Testing",
            "item": [
              {
                "id": "a2c83a02-b1d3-4c60-83b8-55aafeb2c437",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "3c952e57-b8e3-48ff-b3bb-53fc0326714b",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38fb393b-c090-464a-81d2-34754ca69e88",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "1ceb6b63-243e-435a-9754-732b36e7a8c0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca4cd7b1-77c6-4281-b16c-598741685a35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1baf3f7c-1545-4e3d-b907-28f7a99ff034"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6c9dfb48-042d-4c89-9a62-b950c43823a8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a622fc99-ffe1-4e7a-8db3-cf2636cce39b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "1e0311d8-31e3-4c9e-8622-3d096af14f42",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1919a0da-4aec-4302-af88-6022596952ef"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8ab3c55c-ecc8-4e30-8a9a-99c330342fbf",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "1d057839-093d-46d4-b01e-cd147a53f2f7"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "23d0966a-5bcb-4e6f-8248-186048399ed2",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "3f606baf-2d4a-4cf2-8190-59e28f4ffc67"
            }
          }
        ]
      },
      {
        "id": "1a5f1809-0477-4b61-96b3-cb82c3121592",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "aae5ae67-a2c9-42b2-aadd-37860596b7b5",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d9a7c690-7a99-4c9b-b1ff-43e2fc216bc2",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "eb69d1af-7690-4bfc-8f82-8477f7f3083d",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64154a72-e16b-4059-b98d-baee5fd85293",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0db23cfb-ae5f-4624-888a-ae4fc0b57958"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4583237-f68e-4308-9ab5-8f939cf3ca18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "de4572d5-6a40-4219-9d1e-671f728b6949"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0e1cd531-f59a-448b-8962-3c22d7e60417",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "80bf6128-39b2-4c19-8f94-bb24e1046ee5"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "7a21a9bf-7948-48d6-b110-2a1363131d2c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "26ee92e8-a47f-4144-8801-812be177e38a"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4e5e35fe-5cf3-4592-ab3d-111a22792edc",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "1a66fc98-afa4-45ec-b645-14e8c19a4fd9"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "fcb5605f-a689-4753-8688-422dabd43321",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "32c21fd4-d101-41d3-bc87-8502d30b5fdf"
            }
          }
        ]
      },
      {
        "id": "05527a38-47d7-49a1-bb39-bd620c02072c",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "8ef1fa9e-abd7-47c5-9b20-28c4a9a5e827",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ce834887-1449-474d-b9f3-b97cf762422e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "557f23e6-a9df-487e-9dde-8a0846e176f4",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f5e8e6b-85e9-462e-b6bf-79d344334091",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "62f5e56f-1a56-4043-bd12-dc6681c336a5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c549abae-b9a2-4492-8956-da71914c5453",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9b96bad5-90ff-4c5c-9d4c-7540b7508e3a"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5c34db72-5129-4e0c-9bf3-a4155a21e9f4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a40ad3e3-cb44-4a18-bfd6-b4d9e7ba0ebe"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "c2c8aa9e-6123-4891-9c15-c3dcdae55f37",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "87a4c19d-08be-47ce-b1e4-0fcf2fe2ecd8"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4bb46fa1-d01b-4e20-997f-82edf643a072",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "8ee9c111-8f07-4ba9-97c6-2978d16317b1"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3aa495a4-2fe3-4748-9d1d-404d151ff42e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8da16532-e39e-4f90-8da7-685ca8253b26"
            }
          }
        ]
      },
      {
        "id": "fa45e454-c840-4292-a7df-00296e1c03c6",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8080e829-1352-4c41-b110-f55decbfb9d9",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0accdb90-c0ae-4d40-a74a-3c388c7a025d",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "298727c5-7426-45c9-a275-f66f150ea4d3",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9fef9263-2ad6-4f61-9e94-77016c0fdc1a",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "fe1d7c58-ba55-4b1c-ac9d-59ff700bdeb5",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1891,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 507,
        "pending": 0,
        "failed": 40
      },
      "testScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 941,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 94.66666666666667,
      "responseMin": 4,
      "responseMax": 8506,
      "responseSd": 619.9565716997042,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1723250423351,
      "completed": 1723250455266
    },
    "executions": [
      {
        "id": "da240ead-b697-4740-8220-9657066bc301",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "4485a7ec-9a7e-4354-9da7-363d0916a0bf",
          "httpRequestId": "fafd68cb-0488-4fd0-b179-b00d27e6fea5"
        },
        "item": {
          "id": "da240ead-b697-4740-8220-9657066bc301",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "0cae0f49-51a4-4d28-9f5b-27cd1b13d730",
          "status": "OK",
          "code": 200,
          "responseTime": 59,
          "responseSize": 0
        }
      },
      {
        "id": "cd777f24-3de6-49c2-ba60-bce6f037570e",
        "cursor": {
          "ref": "7b9086cd-4c3c-40f5-a440-02cfd363a607",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "12a7b751-2f0f-43fe-a265-3e6039bb64d8"
        },
        "item": {
          "id": "cd777f24-3de6-49c2-ba60-bce6f037570e",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "b3b904b1-89ab-41f3-8cd3-e000a3cae05d",
          "status": "OK",
          "code": 200,
          "responseTime": 6,
          "responseSize": 0
        }
      },
      {
        "id": "093e6959-e8ae-4e12-a130-c89d24179226",
        "cursor": {
          "ref": "95d99584-ac05-41f2-a277-ef854f39a07c",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "79c6bba0-3f35-4181-8b05-3f67d6d69e46"
        },
        "item": {
          "id": "093e6959-e8ae-4e12-a130-c89d24179226",
          "name": "did_json"
        },
        "response": {
          "id": "a0c2e4b7-1d57-4347-88a3-6083abbbbbc8",
          "status": "OK",
          "code": 200,
          "responseTime": 93,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8826c4fd-6954-495c-a69d-201a3367893a",
        "cursor": {
          "ref": "ce3d324c-6705-40af-acbd-0d3d415744ca",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "4dddb949-fb77-40b0-b2cc-7d18c6727431"
        },
        "item": {
          "id": "8826c4fd-6954-495c-a69d-201a3367893a",
          "name": "did:invalid"
        },
        "response": {
          "id": "8e7490f7-b6ea-4261-b48f-acc8bdd3a4db",
          "status": "Not Found",
          "code": 404,
          "responseTime": 334,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8826c4fd-6954-495c-a69d-201a3367893a",
        "cursor": {
          "ref": "ce3d324c-6705-40af-acbd-0d3d415744ca",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "4dddb949-fb77-40b0-b2cc-7d18c6727431"
        },
        "item": {
          "id": "8826c4fd-6954-495c-a69d-201a3367893a",
          "name": "did:invalid"
        },
        "response": {
          "id": "8e7490f7-b6ea-4261-b48f-acc8bdd3a4db",
          "status": "Not Found",
          "code": 404,
          "responseTime": 334,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a11e9d36-4b6c-4ab1-bc61-d6100105ae07",
        "cursor": {
          "ref": "b9461c73-5763-4286-9da0-f40b3d0b9d6a",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "a136f9bd-2483-4840-bc24-a25ab8e15c78"
        },
        "item": {
          "id": "a11e9d36-4b6c-4ab1-bc61-d6100105ae07",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "1a3c2ad1-32c4-4392-ab73-235618229431",
          "status": "Not Found",
          "code": 404,
          "responseTime": 17,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38390f5f-531a-49ab-a79e-552b1c4e90c7",
        "cursor": {
          "ref": "91d74711-51f7-4553-8dd6-dc7c9d2e0361",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "419a80fe-b007-46f1-a568-0fd963189aa1"
        },
        "item": {
          "id": "38390f5f-531a-49ab-a79e-552b1c4e90c7",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "d9338406-0542-4702-a409-1f644fceec51",
          "status": "Not Found",
          "code": 404,
          "responseTime": 13,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b21bd37-f080-4204-9b64-bbeca3d85210",
        "cursor": {
          "ref": "ec6132b4-e1ee-40c7-909f-36bfe57d0ddb",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "ab539dc7-3220-42ee-8ce9-9f83e8bcfe9d"
        },
        "item": {
          "id": "7b21bd37-f080-4204-9b64-bbeca3d85210",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "4cc01626-7bdb-4104-8c9b-bcee16c04112",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 5,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c15c7251-7208-438d-82be-4855c8bc4cba",
        "cursor": {
          "ref": "1d0793d3-5ae3-4603-8470-4601bc133e1b",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "471562ba-e749-453a-9e8b-fc1bd70370f5"
        },
        "item": {
          "id": "c15c7251-7208-438d-82be-4855c8bc4cba",
          "name": "identifiers"
        },
        "response": {
          "id": "9000407e-ec17-4d88-8057-ed2f27cb3632",
          "status": "OK",
          "code": 200,
          "responseTime": 19,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f85f7955-4c1b-4e72-9c0d-0adae4d462aa",
        "cursor": {
          "ref": "c1743ba4-8115-47e4-ac0d-53b89b9f6bdc",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "26ac75f2-fc6a-4d75-8bf3-6ca411ae7233"
        },
        "item": {
          "id": "f85f7955-4c1b-4e72-9c0d-0adae4d462aa",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "1a18c72c-5f0f-4697-bc1a-221a26546fea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59c9d892-7e20-47e2-8174-cc793febeb6f",
        "cursor": {
          "ref": "29dc16cc-2d03-4229-9da8-db9d0a22c0c3",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "1c8dcade-680c-44ef-a911-43715c03c686"
        },
        "item": {
          "id": "59c9d892-7e20-47e2-8174-cc793febeb6f",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "f71e3f75-21f1-4190-a285-9e597de8d63a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fa5ef53-d921-4001-b974-516f983b197f",
        "cursor": {
          "ref": "f2cddee9-9da7-41e7-9605-b0ef1970aaf4",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "6de7c022-7d8b-4ac9-aaba-e99f8523ad66"
        },
        "item": {
          "id": "5fa5ef53-d921-4001-b974-516f983b197f",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "02b6d928-e3dc-418e-af18-e15692168c6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e3b4fe8-7789-4544-831a-f21e864644f9",
        "cursor": {
          "ref": "c2cfb9ce-2008-46b7-927e-d9b00fe2a926",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "f60a9970-60c3-4424-9d11-3828a1423db6"
        },
        "item": {
          "id": "0e3b4fe8-7789-4544-831a-f21e864644f9",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "c84cf6cf-b265-4834-b9bd-7bd381c5d019",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d283c02d-6e83-4cc6-aeb6-8f7c54c90125",
        "cursor": {
          "ref": "9a7b2090-1197-46d6-96d7-93dc95f02d34",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "4508531e-e5b4-4015-86bf-1513fea3a1f2"
        },
        "item": {
          "id": "d283c02d-6e83-4cc6-aeb6-8f7c54c90125",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "401c9c86-81e9-4fee-a699-cb2809723f4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "559393e8-240b-420c-a74e-de6917566f19",
        "cursor": {
          "ref": "960c3140-eb24-4ff6-9f32-640459b71609",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "14fc29ac-fe1b-407c-9bb6-bb3f5ca811d9"
        },
        "item": {
          "id": "559393e8-240b-420c-a74e-de6917566f19",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "c4ea4e1d-8cfc-4862-b3f4-68a57e2f3299",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee72ce99-229c-4e58-ad92-2c9468cefe1d",
        "cursor": {
          "ref": "fb10bc33-0122-4353-869f-fec128f7d000",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "e795b1fc-4f61-4642-8ec0-3f54cc921eca"
        },
        "item": {
          "id": "ee72ce99-229c-4e58-ad92-2c9468cefe1d",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "c5a4d9ab-45f9-4aaf-bdfb-da72d72599ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "989a1dfd-576c-42f6-b5a8-cc183d30368b",
        "cursor": {
          "ref": "5d6d8c48-971e-4dee-8d11-dbb37308a29c",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "9c71854c-afe9-4a22-ab83-75a356007be5"
        },
        "item": {
          "id": "989a1dfd-576c-42f6-b5a8-cc183d30368b",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "26c40555-cd87-4351-ad7f-df328885eaec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32f3875e-aadb-4ffb-a35b-6e18948bc372",
        "cursor": {
          "ref": "a580cf0a-64dd-4a28-8b84-e4ac4780c79d",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "468c1ee1-2a07-41d4-8fd8-9c3353793c26"
        },
        "item": {
          "id": "32f3875e-aadb-4ffb-a35b-6e18948bc372",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "3804bb20-c6a1-4d71-bccc-8865a23c7e30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29c14e09-6e61-42f7-84b9-f2913bd00c7f",
        "cursor": {
          "ref": "c84a2d3f-f21d-4245-97c4-b71989035329",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "84eeb793-5e54-452c-843f-fa9c37fac323"
        },
        "item": {
          "id": "29c14e09-6e61-42f7-84b9-f2913bd00c7f",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "f5fc1708-8ded-443b-b9ca-c7a9d3622980",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f905eb0-4ba4-4032-80de-3120ae16fcb8",
        "cursor": {
          "ref": "6c58a98a-23b0-4bc4-a7f6-5a6054e61253",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "94fd8b62-05d6-4bb3-9aea-fce7626c1b6a"
        },
        "item": {
          "id": "5f905eb0-4ba4-4032-80de-3120ae16fcb8",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "e1080726-66d5-4e65-bed3-9a2e0a523486",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2b2bf19-3495-4c29-b05e-957e44093118",
        "cursor": {
          "ref": "a2d7ed8a-83c3-46a1-b6cc-65018465234b",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "769ad055-cf20-45f4-8d6c-3e59490edefe"
        },
        "item": {
          "id": "c2b2bf19-3495-4c29-b05e-957e44093118",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "f088584f-c3c9-41d2-abd5-14d64b83b2be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13dfacec-fe65-4a3d-87a7-dba7b44441db",
        "cursor": {
          "ref": "8d80a11d-529c-4629-9189-eeee09337f9d",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "7f7dfb52-048b-4282-921e-8172be90ca2f"
        },
        "item": {
          "id": "13dfacec-fe65-4a3d-87a7-dba7b44441db",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "f0fca6ac-5a46-484b-ad24-a104cef4fcfc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32863b7b-5049-4f83-8a53-a5dfb023f00b",
        "cursor": {
          "ref": "3bee63ec-44d5-44a6-ac61-6bb797584142",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "13979647-8abf-40d5-a807-613f29636ae1"
        },
        "item": {
          "id": "32863b7b-5049-4f83-8a53-a5dfb023f00b",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "55d6815e-932f-4eb7-a811-45bfe1cd9d01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 150,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c555a46-1aa1-4207-ac9b-a961111d70e0",
        "cursor": {
          "ref": "1ca65832-ce86-4992-a916-12f80cb0e5c6",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "4b0017be-e375-4b0c-99ba-87bd2fa7300c"
        },
        "item": {
          "id": "6c555a46-1aa1-4207-ac9b-a961111d70e0",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "7c95784a-bc0c-4233-bbd7-39ac9c637eec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aec96142-34ae-4f4b-94f7-a172edefe07b",
        "cursor": {
          "ref": "3ae368c4-b744-4a1d-a512-c5c286d80cad",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "5e8c453a-7098-4f75-a591-a00bc193df1c"
        },
        "item": {
          "id": "aec96142-34ae-4f4b-94f7-a172edefe07b",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "799721d5-ccdf-40e2-b790-8c8270204944",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77447440-a3ec-4a0e-bff6-6267188a9eb9",
        "cursor": {
          "ref": "36814ab7-c650-4259-b2fb-9f580d1b32a5",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "fc835fd8-f419-4d24-a599-371b8681ae33"
        },
        "item": {
          "id": "77447440-a3ec-4a0e-bff6-6267188a9eb9",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "57c4ba51-2eea-4c41-a6bb-12f95fbd0851",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 137,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6893845-11c1-42bf-ab69-7ea15c5e4e72",
        "cursor": {
          "ref": "cdce35e0-16a6-4ef1-809a-bd260007dffd",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "4dcc188e-3aca-4745-adbc-d340a636d814"
        },
        "item": {
          "id": "d6893845-11c1-42bf-ab69-7ea15c5e4e72",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "f8978aa2-079d-422e-b7d1-67e1be2ddb20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c6851ee-bb6e-4b76-917a-10fe4fcc539b",
        "cursor": {
          "ref": "1f846f39-aaeb-467e-9e1f-8aaee79fb019",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "04f6d935-89f1-43a6-b1c3-81d3b68d7d4e"
        },
        "item": {
          "id": "0c6851ee-bb6e-4b76-917a-10fe4fcc539b",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "367a0185-5bd3-4d4a-b472-b239e55b6b7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 345,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5d2b7b9-5fcf-4749-815f-53498a03cd34",
        "cursor": {
          "ref": "1e390442-aaec-45ef-8918-5f33b1757a7a",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "6e078f74-2006-4855-a5a6-2da76d523ab7"
        },
        "item": {
          "id": "e5d2b7b9-5fcf-4749-815f-53498a03cd34",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "eca44de0-ef6d-46ff-a079-f9e3f5602e7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 153,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4be337d5-e38d-460c-ba2f-09acb4e5035e",
        "cursor": {
          "ref": "c2d0c8f2-600a-4d6e-9f7f-0e17570225b5",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "b519daaa-527d-41a4-b487-8a7d58780845"
        },
        "item": {
          "id": "4be337d5-e38d-460c-ba2f-09acb4e5035e",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "367e7d5f-fc02-4771-b985-501d8d67402e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b329bd81-d916-414c-aaa0-bc5f66cd8609",
        "cursor": {
          "ref": "957bbc9d-1307-45eb-a1af-682e481039ce",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "b163dcc2-9278-4aa2-b3e3-8e125f103c6d"
        },
        "item": {
          "id": "b329bd81-d916-414c-aaa0-bc5f66cd8609",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "d3def15d-dbec-417e-890f-c3aa676bb5da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b82967fc-6eb2-45fa-87eb-ff6e8cf7cdbe",
        "cursor": {
          "ref": "3657d621-2dba-4315-b344-5fbeb3b961ae",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "f2433d0b-13bc-4690-97b8-9556a69e4aac"
        },
        "item": {
          "id": "b82967fc-6eb2-45fa-87eb-ff6e8cf7cdbe",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "8ecfb206-0d97-4ff8-ab2a-ef9072be26f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b7db8a6-8c18-4fdf-8a40-c41c9b0459c6",
        "cursor": {
          "ref": "7687b237-a468-4f7c-bbf2-01aebb2fc851",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "663e6a4f-66b0-4520-bb54-694bf66c16f9"
        },
        "item": {
          "id": "1b7db8a6-8c18-4fdf-8a40-c41c9b0459c6",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "0a3dd53f-2c81-4b7c-8e75-997f03369d57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c662fcb6-4511-47d8-b6f9-3ef0d4ac8b0b",
        "cursor": {
          "ref": "6920f596-d259-4de6-866f-ee9c95b0e0d8",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "c3c3ba03-d82e-4776-997e-07b0066c6ae1"
        },
        "item": {
          "id": "c662fcb6-4511-47d8-b6f9-3ef0d4ac8b0b",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "5c9d4aa1-a3a8-4177-b821-e05325784371",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64721828-a8e5-4fba-b452-3031d01556ab",
        "cursor": {
          "ref": "227cd1b3-ba3d-4ed7-9b42-65db0cb3e644",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "206e3676-a02d-443c-8a71-7962a943b1b7"
        },
        "item": {
          "id": "64721828-a8e5-4fba-b452-3031d01556ab",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "e4715ad6-0178-4de9-97e0-17c93f7d796e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44f04cdf-1ca3-4c13-a951-3f1a171ff2df",
        "cursor": {
          "ref": "60e46e77-7ba6-4d43-a062-4da596da6945",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "63193532-b250-422a-a82b-8893ac93062a"
        },
        "item": {
          "id": "44f04cdf-1ca3-4c13-a951-3f1a171ff2df",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "d896aecf-5241-4207-836e-7b1542b2ef55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fda7bada-8f98-4e19-ac39-6472cdd762d0",
        "cursor": {
          "ref": "b645d880-ec2a-45a6-8b51-7abb46190914",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "bf8998d0-e394-40b6-b25d-f5e28974ee7d"
        },
        "item": {
          "id": "fda7bada-8f98-4e19-ac39-6472cdd762d0",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "2213cb4d-9a7f-4373-bae7-869448701099",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a0aedf9-3b33-4dcc-9de3-eae7b0fd4ef8",
        "cursor": {
          "ref": "1ac05151-c517-4b37-80a2-0582d008860e",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "0e5ba497-3680-45a1-a21d-fb4ae608cfc2"
        },
        "item": {
          "id": "4a0aedf9-3b33-4dcc-9de3-eae7b0fd4ef8",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "0da5cdd6-34d1-4672-8ea1-b0c6a989ebe2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a133903-fe7b-4ce9-821b-6d48040c4cfe",
        "cursor": {
          "ref": "cc76aacd-309f-49ca-a2b4-d7664505d24b",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "0055dc0b-285b-4afb-b9d1-ae7f000e087c"
        },
        "item": {
          "id": "5a133903-fe7b-4ce9-821b-6d48040c4cfe",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "fd4a7440-41cb-41b3-9dab-aa789e99b98c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "780d0d8e-dba3-471a-a999-9a0d11bec009",
        "cursor": {
          "ref": "2e3eec2f-3163-460f-afd6-3c1998905b0c",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "dc3af5f1-4525-4c54-9013-91de912f32c3"
        },
        "item": {
          "id": "780d0d8e-dba3-471a-a999-9a0d11bec009",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "1095466f-c065-4452-9e7b-294ac2dee777",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c50d43c3-612c-4db2-bf6e-3bb2f6e5e477",
        "cursor": {
          "ref": "9aa41bed-35d4-4daf-9903-634ba9edd8b4",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "d3b602cb-dd8b-4299-a8fb-145101c1e3ee"
        },
        "item": {
          "id": "c50d43c3-612c-4db2-bf6e-3bb2f6e5e477",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "2e970a87-58ab-4c47-9ad4-08be050c84e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4e9d71a-cde7-4945-a6f3-82b8f52594c5",
        "cursor": {
          "ref": "283995a2-802c-4c06-a6ac-92cbb589d38b",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "2fb8b6d6-37ca-46cd-9a92-15378ba91607"
        },
        "item": {
          "id": "f4e9d71a-cde7-4945-a6f3-82b8f52594c5",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "71fc3560-166f-472c-9cfa-a882f42015be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dca8a1e5-751b-43b0-9c6a-3e3153824599",
        "cursor": {
          "ref": "5064b815-e1db-41d3-9909-f07ee02444fc",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "83a5468a-6098-452a-865d-baaa6561d1cf"
        },
        "item": {
          "id": "dca8a1e5-751b-43b0-9c6a-3e3153824599",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "ccd77377-0d74-4f65-8e6d-702928ab6701",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "452b1282-bd2c-4e7b-9ccf-e6b4ebefd7f1",
        "cursor": {
          "ref": "3088f099-ff07-4a4b-bece-291b206c10b4",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "80cca91e-e083-4255-8796-f011a2abc039"
        },
        "item": {
          "id": "452b1282-bd2c-4e7b-9ccf-e6b4ebefd7f1",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "701444dd-8686-4a1e-bf47-6169ab02c181",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c42b7e21-23ab-436e-ba6f-219e0b1f93d3",
        "cursor": {
          "ref": "714258db-8e04-419c-8766-e9b5d9cd1f9f",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "da3b69a3-29d8-4df6-b712-30715716c2d4"
        },
        "item": {
          "id": "c42b7e21-23ab-436e-ba6f-219e0b1f93d3",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "2c82c9a9-18c4-4500-a9c2-106e1b006e07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a574319-50a9-451c-ae24-694c8d5ea359",
        "cursor": {
          "ref": "c5b4a614-a047-4fe6-a301-91eea4a0e20f",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "c1b5fe9e-8596-4e4c-97a9-7cf70666c77d"
        },
        "item": {
          "id": "9a574319-50a9-451c-ae24-694c8d5ea359",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "7ea1a1ad-cef1-4f93-8013-57790c834ee9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fcae79f-3fd8-4dbc-9278-fd0537fbd034",
        "cursor": {
          "ref": "2f27dbe0-69c0-4561-9361-5d163d5d3d90",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "2094594e-7696-4c67-b1f0-381914df361e"
        },
        "item": {
          "id": "4fcae79f-3fd8-4dbc-9278-fd0537fbd034",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "b06b3693-2599-4b10-88d9-3faa4f41b0e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5e2b106-604c-4cc6-92c0-1f24180d57cc",
        "cursor": {
          "ref": "bade2100-3ba3-4262-b0ca-0e9eb12bf92b",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "a876d8a7-88e0-4dd2-a675-0d73f78c16a3"
        },
        "item": {
          "id": "b5e2b106-604c-4cc6-92c0-1f24180d57cc",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "2e633b20-5d58-4b8c-99b1-7207a67ff9c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e25d7170-c1a7-4830-8557-b49c2e4cb0b3",
        "cursor": {
          "ref": "9280c6a6-7965-475f-bac3-602cff66921e",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "1bc6415a-97e9-4523-90f6-550a11117bc9"
        },
        "item": {
          "id": "e25d7170-c1a7-4830-8557-b49c2e4cb0b3",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "03ca6971-3155-4db1-92bd-71fb5f2393e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab873f47-1441-4f0a-be9e-5c307ce5ac50",
        "cursor": {
          "ref": "c38b48ae-ba6c-434a-88d7-22541cf9e742",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "3436a8de-6503-4202-af85-07b09f7ec4a4"
        },
        "item": {
          "id": "ab873f47-1441-4f0a-be9e-5c307ce5ac50",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "bce49067-7222-46a5-beee-3b091dfae5b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9fa535a-16ce-41c1-a3df-42d136bd4e42",
        "cursor": {
          "ref": "62a35cb1-61eb-486f-b34a-a43ca406e75b",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "bf733d30-3cdd-406c-ad73-77d54f45cc2e"
        },
        "item": {
          "id": "c9fa535a-16ce-41c1-a3df-42d136bd4e42",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "5dc99086-1123-45e5-99b1-76989e15a3b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9839087-be71-4a2d-86f4-79a25f498b44",
        "cursor": {
          "ref": "2e79e6b9-9653-46b7-8020-d43af96727d3",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "acf3e2fe-a833-481a-b1dc-1f02e2d42595"
        },
        "item": {
          "id": "c9839087-be71-4a2d-86f4-79a25f498b44",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "135b9670-eddc-46be-905f-0440c3205b31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10d68867-7aa6-428c-a360-634029f46b47",
        "cursor": {
          "ref": "cc229f12-c07b-445f-a54a-c4590e85b5c1",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "dcacfc45-7851-4c44-abd1-f2609c57c382"
        },
        "item": {
          "id": "10d68867-7aa6-428c-a360-634029f46b47",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "4bc200a8-874e-4701-96fc-03e50c762e10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b09301cf-ed78-496c-a720-694c01cb4642",
        "cursor": {
          "ref": "0d5aacd6-79e0-4b6d-a73f-2241fd6df6cc",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "c8cdd88d-6e8f-4af8-8c39-81c160dbbdc9"
        },
        "item": {
          "id": "b09301cf-ed78-496c-a720-694c01cb4642",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "0d1dd338-c461-413c-875a-8d143bf66a8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05e4b0a7-65ec-4849-9ce7-f74986e927f3",
        "cursor": {
          "ref": "d7d4a024-90e6-40b1-89ed-51b2a1148494",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "37eb3b3e-54f8-4260-830e-7efe42503aa8"
        },
        "item": {
          "id": "05e4b0a7-65ec-4849-9ce7-f74986e927f3",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "faae747d-5ab1-4be0-aeac-4c1abd245055",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3871c6e1-2629-41f6-a1a9-e4e353225133",
        "cursor": {
          "ref": "afcd2289-1311-4c46-b6a4-e041cbc7776b",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "81d3f832-5d8e-4957-9075-fc7084a1c3fe"
        },
        "item": {
          "id": "3871c6e1-2629-41f6-a1a9-e4e353225133",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "f12215f6-6cd6-4517-9f63-1b2e4afcc9e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "909ab399-4024-490e-8a78-2579d5f6a4d9",
        "cursor": {
          "ref": "049d6369-c2fe-4102-b109-31b1dbfcdcf0",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "9b6c24cb-fbd7-41f2-8419-81e617d93e53"
        },
        "item": {
          "id": "909ab399-4024-490e-8a78-2579d5f6a4d9",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "f134041d-684e-44fe-9cc5-dd7b41394998",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "495f9ebe-3002-438c-8958-60087aa68f37",
        "cursor": {
          "ref": "78c97bf4-4e5c-4858-b774-07f2461340d6",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "07833368-ea93-4625-a7db-cf684fea8386"
        },
        "item": {
          "id": "495f9ebe-3002-438c-8958-60087aa68f37",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "d034b71b-3c91-4149-bcf3-0c6ea4d8c733",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "beca59b2-b0bc-4d69-9188-16bf9453fa7d",
        "cursor": {
          "ref": "ff894544-158c-4fc4-a328-32dd68748916",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "50de1a28-6a7f-4c18-8b19-46e12453c0ae"
        },
        "item": {
          "id": "beca59b2-b0bc-4d69-9188-16bf9453fa7d",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "90ef20be-a509-4966-9e45-60dbb4fe1606",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "667186ad-a429-4b28-82d6-3702b47b424a",
        "cursor": {
          "ref": "72f412ae-9caa-4439-ba6d-807b30a3043e",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "a99ff248-d580-4c4b-926a-29953fffed4a"
        },
        "item": {
          "id": "667186ad-a429-4b28-82d6-3702b47b424a",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "72ba8528-2063-4017-bd28-9b66b8313cfe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3bf0c54-2fce-413b-bdb5-42cfdd92dc2a",
        "cursor": {
          "ref": "f2d78e23-6c5d-44a1-8a9f-334c68a08f34",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "83a4cf4d-1629-4e25-a4da-29be967ac58a"
        },
        "item": {
          "id": "a3bf0c54-2fce-413b-bdb5-42cfdd92dc2a",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "9d1b66ee-0f4b-4475-9ddb-5102b95887cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e76fcb3b-ae48-4f59-a5fb-385bb3b2e7d1",
        "cursor": {
          "ref": "c9d04350-469d-4db8-b9c9-f1b9407210cf",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "f742fd14-205b-44f3-a8e0-3563b51ba502"
        },
        "item": {
          "id": "e76fcb3b-ae48-4f59-a5fb-385bb3b2e7d1",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "5203038b-6514-4f72-a462-85052454dc3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b93aaa6a-176e-4e4e-91a6-e4660f0ce382",
        "cursor": {
          "ref": "08c0fad5-fe72-4fd3-8998-8905df7d35de",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "7b5d6dbc-199a-48a0-9999-1a80bc79c5c1"
        },
        "item": {
          "id": "b93aaa6a-176e-4e4e-91a6-e4660f0ce382",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "2002b4db-de72-4c64-868a-223829a77073",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85e34cd0-69d2-4f4d-8c10-54431710a060",
        "cursor": {
          "ref": "63ab30fa-159b-44bd-86d9-859ddd3d32c2",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "90b40e94-200c-4b82-a27c-d2bccea0435b"
        },
        "item": {
          "id": "85e34cd0-69d2-4f4d-8c10-54431710a060",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "2ad36942-af25-416f-b7ad-0d6d071fef8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfe823db-50be-4330-95bc-da407d05a97e",
        "cursor": {
          "ref": "939c2fdb-ee3b-4255-a51a-f1700282a4c9",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "d5a1cbcb-b078-4ad6-b570-336f04789f2b"
        },
        "item": {
          "id": "bfe823db-50be-4330-95bc-da407d05a97e",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "5b2b7755-0ae3-47fd-8c4f-674b32a30975",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a15abd8-17d8-4ec0-94eb-bcdcda7b573d",
        "cursor": {
          "ref": "fb158447-cbc0-41ae-8730-2316075faf9f",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "94991b65-055f-4181-a48e-8fc3c55e2286"
        },
        "item": {
          "id": "0a15abd8-17d8-4ec0-94eb-bcdcda7b573d",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "bb457060-6c20-4553-b55b-3b696721542e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf956452-713f-4e75-9c85-439c0da4eaf5",
        "cursor": {
          "ref": "1ea2b505-2ade-466b-949c-221ff28ecbb9",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "a8b9c1f7-a4d8-475c-84a5-4a70d19ef249"
        },
        "item": {
          "id": "bf956452-713f-4e75-9c85-439c0da4eaf5",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "5c338ffd-4a43-4207-afa8-522ec4528710",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a1de128-bbfa-4d2d-925c-ab26eabe7d6a",
        "cursor": {
          "ref": "eaa2be9e-fe33-43cb-91b7-c963356e33b5",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "9c99119f-9647-4e68-97bb-11c67a51272d"
        },
        "item": {
          "id": "3a1de128-bbfa-4d2d-925c-ab26eabe7d6a",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "7be06876-83c6-4424-9064-34dc1587bcc3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7512a861-901e-4d57-99d4-eaee40e80169",
        "cursor": {
          "ref": "3fbf7852-439e-4943-8553-fa38ac21412a",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "60ff655e-042e-4177-b9b9-95dbe48f7f77"
        },
        "item": {
          "id": "7512a861-901e-4d57-99d4-eaee40e80169",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "8c5c834b-d82a-40d9-a1c7-82937d48a7da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2374d5c-dc70-45a3-9199-81d04d249e1f",
        "cursor": {
          "ref": "68f8daf6-84ac-489b-be5e-84a553a7c9a3",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "be580826-d435-4726-aaab-e2a292dec3a4"
        },
        "item": {
          "id": "f2374d5c-dc70-45a3-9199-81d04d249e1f",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "1a99a12d-2e53-4a61-bf17-c18c51e851a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0dc0dde2-0de0-4f28-814b-3945578e5c61",
        "cursor": {
          "ref": "236b159b-8513-4472-bdd6-86c27d31ce10",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "652a058d-5af4-4274-8c7f-422687803880"
        },
        "item": {
          "id": "0dc0dde2-0de0-4f28-814b-3945578e5c61",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "0086e00d-5d1a-4b0c-a279-424eea05e166",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6baa126-b7d9-4ff4-ab23-144f6d1a546c",
        "cursor": {
          "ref": "6f9dbf74-a686-4f79-9882-41dbcdd895df",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "0abbf774-b9a9-46b3-8b09-91551cc00e07"
        },
        "item": {
          "id": "a6baa126-b7d9-4ff4-ab23-144f6d1a546c",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "8a192421-6a52-4203-ba44-db1c6993b11d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a4cb392-ac00-47d2-be22-2bd5dc0d68f4",
        "cursor": {
          "ref": "5145ddd5-9c9e-4008-bbc0-deb8685b5cc3",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "c10347bc-1b2f-46bd-ab58-ca50f33461a7"
        },
        "item": {
          "id": "2a4cb392-ac00-47d2-be22-2bd5dc0d68f4",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "fa98771f-463e-4909-a4b9-37333922c8a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d8737d0-a4ff-4449-bc75-9316a486563c",
        "cursor": {
          "ref": "904dcfff-06b6-49e9-9751-30b33084fbc7",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "3a00a821-9fd9-40b3-ab00-55d43f1a8395"
        },
        "item": {
          "id": "0d8737d0-a4ff-4449-bc75-9316a486563c",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "1d595fde-4eb6-4ce5-97b4-cd7aecbd88d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "052322e9-4e51-4628-ae8e-8ea9cb4d44bf",
        "cursor": {
          "ref": "c9cb4520-cb43-459f-9c4b-9d0e7a338aed",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "ff2c02a4-bbb1-4ee4-b5c7-3ba1669e65b3"
        },
        "item": {
          "id": "052322e9-4e51-4628-ae8e-8ea9cb4d44bf",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "1a1f18c1-724f-48a7-a8d4-3ba0e60e095c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a9599dc-e3cd-4cee-94fb-dfcaada14895",
        "cursor": {
          "ref": "0357213b-026a-4375-bbd1-8b2a17ecec1e",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "11eaf141-b613-4a4b-8db2-c1ab52d9c833"
        },
        "item": {
          "id": "4a9599dc-e3cd-4cee-94fb-dfcaada14895",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "b7cd818b-155d-43d3-972f-36c74f384ee3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffa15206-b4b8-4861-96e2-3054a9f71bc9",
        "cursor": {
          "ref": "367d32ef-cc92-4892-bf4b-1e3a9e700909",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "3603d85e-6391-40ed-be8d-e57ea2bf3a63"
        },
        "item": {
          "id": "ffa15206-b4b8-4861-96e2-3054a9f71bc9",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "2d042f37-67b6-429a-bb4f-91214e6508cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af7bcbdd-d90b-4c45-b949-63ca13ab6d4d",
        "cursor": {
          "ref": "463db095-dc60-4541-9572-cd4e1b4f306e",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "aafe365a-7092-48e1-9957-c4dfc15e9772"
        },
        "item": {
          "id": "af7bcbdd-d90b-4c45-b949-63ca13ab6d4d",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "3b713c22-535b-41f2-9014-0f1a9ec9e439",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "892feb73-a7de-45aa-8706-af5d3c5d1efc",
        "cursor": {
          "ref": "bd5442cd-1442-44a6-85ad-6d6cad6e0608",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "b3f58a76-38dd-4de5-bf60-9959573c7be7"
        },
        "item": {
          "id": "892feb73-a7de-45aa-8706-af5d3c5d1efc",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "79d8dc1c-0e27-4a78-a77f-eb501b45da84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae646431-9980-44b9-9e25-22db14349e55",
        "cursor": {
          "ref": "ec1cf793-ecac-4bb6-8d77-f4c95250384c",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "83317d0e-c134-44a4-a176-55bae3bf8eab"
        },
        "item": {
          "id": "ae646431-9980-44b9-9e25-22db14349e55",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "87660b1e-8609-4dbe-983a-694a93df16bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f290e1a7-dd93-4629-9293-d3a0bf8ac890",
        "cursor": {
          "ref": "f7305f56-6582-42d0-8172-d379258a72ac",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "bc49b2f7-5f26-46c6-900d-e5f5d038beb2"
        },
        "item": {
          "id": "f290e1a7-dd93-4629-9293-d3a0bf8ac890",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "c0e8af5f-c672-4955-9f50-96a8710868b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e1b30ec-66e4-4bfb-983e-0c6ab032d184",
        "cursor": {
          "ref": "da900a5c-523a-49aa-b8ea-d595b23c016c",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "ac527df4-0ecd-4361-91be-199d5cd65594"
        },
        "item": {
          "id": "4e1b30ec-66e4-4bfb-983e-0c6ab032d184",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "c674fbde-b41d-48cb-b988-5f700bfa57e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63444993-5a42-4075-a03e-c2ce3e8918e7",
        "cursor": {
          "ref": "8c66f844-9d1d-4bad-8a03-6aeddf330b2c",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "06535860-5342-4482-8cc6-064df425163a"
        },
        "item": {
          "id": "63444993-5a42-4075-a03e-c2ce3e8918e7",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "27e729a3-3e7b-417c-ab29-067bdc8e8e9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12136227-63ff-4011-b604-e0c0c3628431",
        "cursor": {
          "ref": "6b5ce14e-5f32-4410-8789-07055124c88a",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "25bc2ffb-b136-4fee-9a98-ca9908d2849b"
        },
        "item": {
          "id": "12136227-63ff-4011-b604-e0c0c3628431",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "543cf7d5-8c9f-4007-8195-c0797e318239",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d85f6df8-9fba-413f-bca1-6326ec20c597",
        "cursor": {
          "ref": "32b838cd-acc2-4a00-b00f-c4a5b2429259",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "a26b8471-c3a3-40a7-b763-53a5f27df70e"
        },
        "item": {
          "id": "d85f6df8-9fba-413f-bca1-6326ec20c597",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "89d5aa04-a336-4d61-b1e6-383c45924ab0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "863728ae-30f0-458e-9c0a-0915f113c9e7",
        "cursor": {
          "ref": "c3137a8f-bf89-4a3a-90fd-c464599bf1eb",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "305afab3-297a-424b-bcc2-6701dbc5d2a8"
        },
        "item": {
          "id": "863728ae-30f0-458e-9c0a-0915f113c9e7",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "4a980177-560d-4b31-96c3-e2bef27d0670",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b82d6b81-d1bb-4a7b-adf1-ee0b1cffa4ee",
        "cursor": {
          "ref": "e452033c-ed26-40e6-8cdd-bda709b1f862",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "c8b13769-e288-41f3-a455-5bd7b5464bc7"
        },
        "item": {
          "id": "b82d6b81-d1bb-4a7b-adf1-ee0b1cffa4ee",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "a85366de-8508-4237-8b76-d0bdfabde149",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8157dcae-88e0-4886-b37a-8f00b3bf1f69",
        "cursor": {
          "ref": "f597c157-e727-40fe-ab49-c0ace60e801b",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "270ac35f-6ea9-4f3a-8773-665ae6b144b1"
        },
        "item": {
          "id": "8157dcae-88e0-4886-b37a-8f00b3bf1f69",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "d825a4e5-e430-4a50-8ee6-290fc93d9e1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef2a9c53-6f5f-4c6f-af68-d3254c98ed60",
        "cursor": {
          "ref": "868aa39e-f41a-48e1-97a2-4734246153b6",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "adbf6872-2c7c-4a29-abe4-aff4bb5613f6"
        },
        "item": {
          "id": "ef2a9c53-6f5f-4c6f-af68-d3254c98ed60",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "dcd4c76b-e82b-4892-b5eb-530d8e4ec5b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdebade7-80f6-4c03-a978-634f43c612df",
        "cursor": {
          "ref": "3c623c1a-56d1-4556-a581-cfc3cbac6f15",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "25a47710-707d-4403-81aa-9a4a6869c846"
        },
        "item": {
          "id": "cdebade7-80f6-4c03-a978-634f43c612df",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "719b0c84-92d3-4fff-ba7a-7dd84665b3b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fbde22f-1c28-4ec9-a247-a011ab02da92",
        "cursor": {
          "ref": "d3086fe2-2412-4ded-8c08-3b01f97ec91f",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "6afa5e5e-0d64-4f6e-b995-b09b0f298548"
        },
        "item": {
          "id": "8fbde22f-1c28-4ec9-a247-a011ab02da92",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "780b1d79-0c0b-4332-983e-8ed90956ce3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bd718eb-97c4-487b-947a-69eaeeb8c247",
        "cursor": {
          "ref": "4dc54290-0e63-446a-b42d-c001d4ffb42c",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "489aaad5-9aee-468a-aef1-b5a9e6b3b2e6"
        },
        "item": {
          "id": "2bd718eb-97c4-487b-947a-69eaeeb8c247",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "9456a056-e5dc-4bae-9713-6a8bffbac0dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3db226bc-a3a7-4c62-b2d9-7106c8aae6c8",
        "cursor": {
          "ref": "861afba9-c23d-4a26-90de-2dd59e3b720e",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "9e967da4-9dcb-4971-a6ea-a7bc4f3ce5c7"
        },
        "item": {
          "id": "3db226bc-a3a7-4c62-b2d9-7106c8aae6c8",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "8635c360-df85-48f8-bf02-b8ecffe0f283",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99977644-f925-48ce-bed1-150f8ef33486",
        "cursor": {
          "ref": "f345ff6c-ecd4-41a9-af2e-29f004e6b7c5",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "32290dbe-0779-4b5b-aea0-81e90ab6b894"
        },
        "item": {
          "id": "99977644-f925-48ce-bed1-150f8ef33486",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "61729d21-cd65-4279-a4a2-7ce1b6204e97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e179badb-2306-41a4-bb50-5bdf7bdae83f",
        "cursor": {
          "ref": "e1c5b6b9-36ef-48f1-bed1-4a56593dd0d1",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "df620f64-0bf3-4d7a-bbfc-21386f6dda6f"
        },
        "item": {
          "id": "e179badb-2306-41a4-bb50-5bdf7bdae83f",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "d48eb624-91e5-48a5-b885-c509c641882d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24ceb46a-aa87-47c8-9957-7a92a7fd6139",
        "cursor": {
          "ref": "4490923f-75bd-4f7f-934a-c022ecf48e62",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "2d384a14-463a-4466-a60d-6f24a51a499d"
        },
        "item": {
          "id": "24ceb46a-aa87-47c8-9957-7a92a7fd6139",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "a4c122fe-033c-40e9-a71e-a7cf1606937d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b977be10-4e90-48b2-87d4-a6ec56388de2",
        "cursor": {
          "ref": "e926b739-95de-46c2-bbd2-33d6a14f49f6",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "6f0f96f7-6f92-49d5-a3a1-31699dd01d77"
        },
        "item": {
          "id": "b977be10-4e90-48b2-87d4-a6ec56388de2",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "1692319a-7a13-4303-a8b0-10b0f5f5a0ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e93c4d0-c10b-41a2-8b5a-df1b42818304",
        "cursor": {
          "ref": "af469b96-46b3-4c66-9c87-27463c19f748",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "f91c7085-af80-417a-af6a-9d3decdae9ab"
        },
        "item": {
          "id": "3e93c4d0-c10b-41a2-8b5a-df1b42818304",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "891dc64d-5cfa-40c7-9d36-b884bf0b1ee0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3284c9d3-0c8a-4530-bb8d-0119a7ad4a68",
        "cursor": {
          "ref": "2fb3668f-a777-4b76-a0e3-d46b03735474",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "a1aecd20-26eb-4edc-9b1d-32ee96c3ac5d"
        },
        "item": {
          "id": "3284c9d3-0c8a-4530-bb8d-0119a7ad4a68",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "c64de5b2-0dd3-4990-b730-72e81d1770f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5759bcf-ac8a-4e9b-84d6-a12c344b461d",
        "cursor": {
          "ref": "2062273f-cc87-4c0e-b963-61fb0423c5a3",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "7fa84d36-986c-4b04-b563-ef959c6e6400"
        },
        "item": {
          "id": "e5759bcf-ac8a-4e9b-84d6-a12c344b461d",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "324743a8-1358-4410-b819-3af5d66eeeaf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "461b86c5-4263-4175-b876-bb3e511d30ba",
        "cursor": {
          "ref": "a5feb4c6-6265-430b-9bbe-a3c9ac8e6959",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "9a9940ea-07e4-4fbd-b7f6-80a6b654d9f5"
        },
        "item": {
          "id": "461b86c5-4263-4175-b876-bb3e511d30ba",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "c7eb21d8-e5d5-4f1a-831c-41a652c7d75f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bfaaeea-ac88-4336-9b6e-a9ded12444d5",
        "cursor": {
          "ref": "7e4e4c8f-dc3d-41f3-a2ca-e69e873c6cfa",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "ca3eecfe-c8c8-45f8-8fee-fac969221c10"
        },
        "item": {
          "id": "8bfaaeea-ac88-4336-9b6e-a9ded12444d5",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "c7e94e62-e9cf-496d-92ac-f1dd77fc4e40",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 7,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6a88fb9-27cb-4230-b687-e4597387dd9b",
        "cursor": {
          "ref": "1535dce8-af5c-4db0-84a3-749c96118bd4",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "92814514-7d36-4a87-9381-dfdc9f42acda"
        },
        "item": {
          "id": "a6a88fb9-27cb-4230-b687-e4597387dd9b",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "cabc534b-e2cf-46ab-a269-a808cbb230a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "ffae454f-fe52-4aa0-9e07-9ce731a02bdc",
        "cursor": {
          "ref": "773f57ce-9443-499b-ad11-f88aade9a247",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "86af7fe2-d4d0-4df7-80dc-579fc417bc3f"
        },
        "item": {
          "id": "ffae454f-fe52-4aa0-9e07-9ce731a02bdc",
          "name": "credentials_issue"
        },
        "response": {
          "id": "ce338329-5876-49ca-938e-705d0391682b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "9e494391-7a44-447b-a032-49c4c3af460b",
        "cursor": {
          "ref": "502fa612-0c13-4da7-a72f-8a619b24d1cd",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "31c84975-150b-40eb-990d-35cf22a5488e"
        },
        "item": {
          "id": "9e494391-7a44-447b-a032-49c4c3af460b",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "3f27e572-5957-4fc3-9b48-3eda83cfbc30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "1dd5cd50-c1d1-4e02-997c-a3d5045b4882",
        "cursor": {
          "ref": "f80da3de-25f2-4eaa-bc21-895b9d11867c",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "249f9c4b-589a-42b4-aebf-dbfa4b3f4fb8"
        },
        "item": {
          "id": "1dd5cd50-c1d1-4e02-997c-a3d5045b4882",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "8b01d546-0e1b-488b-b279-d14831f826d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "19b5eea2-5ee1-4d71-9cc6-c4badba62add",
        "cursor": {
          "ref": "b662a449-6909-4632-ae37-c487df8503ed",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "85b6989f-1b8b-4a85-92cc-5d360309abed"
        },
        "item": {
          "id": "19b5eea2-5ee1-4d71-9cc6-c4badba62add",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "4733790e-eaeb-4ea7-9560-3eee5649e6f2",
          "status": "Created",
          "code": 201,
          "responseTime": 8506,
          "responseSize": 993
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "d951926f-b19d-4689-97c8-5774584ffa4b",
        "cursor": {
          "ref": "1967574d-880f-49c6-b311-fd0517adeab6",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "c102e8c1-249d-4e47-b268-beb9e414e1ca"
        },
        "item": {
          "id": "d951926f-b19d-4689-97c8-5774584ffa4b",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "212deb28-3c7b-4042-a1c7-68a0dfabf14e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "c798df8e-33b7-4337-b2da-8df316ae1b63",
        "cursor": {
          "ref": "5fc6b88c-a735-4158-afe0-935ed124adbc",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "c2863514-dfc1-4c3e-8e19-239921672326"
        },
        "item": {
          "id": "c798df8e-33b7-4337-b2da-8df316ae1b63",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "b898b2c0-294e-4633-8cd6-f601f8b23919",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "2be15c4f-4acb-496f-ab93-39a9f3517647",
        "cursor": {
          "ref": "40062e94-0b36-43c9-8fb2-903569105759",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "fef86c1e-bc64-4936-be8d-2c4fc22b9c78"
        },
        "item": {
          "id": "2be15c4f-4acb-496f-ab93-39a9f3517647",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "f1fb88e1-236e-40ec-85ab-39477a7ca6e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27347c36-46b8-41cf-b612-8aea49da30da",
        "cursor": {
          "ref": "8361f21f-ee1c-4971-9cc8-0a34c7e16d47",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "52704ad1-1b20-445d-b87b-90dea969de4e"
        },
        "item": {
          "id": "27347c36-46b8-41cf-b612-8aea49da30da",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "06595193-c7fe-4dd0-b9bb-6931acce1353",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45412c0e-d689-41c2-94fc-933d069ffa17",
        "cursor": {
          "ref": "e6f91715-d260-47af-9ab6-fab20e805b17",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "8a2fb0e2-52be-4079-8402-abfd05da2bae"
        },
        "item": {
          "id": "45412c0e-d689-41c2-94fc-933d069ffa17",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "04eedec7-7888-4bbc-9f38-633b8f4ab29c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c2bf739-ad3e-4390-b046-b6bc5c3e953a",
        "cursor": {
          "ref": "6e51b002-f99b-4366-a3f1-062d1588a389",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "e63ea4cb-5da6-4acb-8750-fdc45f98fcbb"
        },
        "item": {
          "id": "5c2bf739-ad3e-4390-b046-b6bc5c3e953a",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "947a5a1a-ec3c-4200-80c7-bc19f0bb8a3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "367e1f7b-ed5d-4579-8a34-017aea3bfd34",
        "cursor": {
          "ref": "9c785270-2c31-4f05-8b15-c2a7d1c2b3a5",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "40690665-b078-4b27-a0b8-2c329249e038"
        },
        "item": {
          "id": "367e1f7b-ed5d-4579-8a34-017aea3bfd34",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "e35407f1-6994-400b-b20c-7e4104a4fb69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "298b80da-3fc4-4f58-beef-6583f08f2cc5",
        "cursor": {
          "ref": "f835cf43-d672-47be-8eb9-5ee3819afe2f",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "d2d5f516-53ee-4656-a088-45561146ebac"
        },
        "item": {
          "id": "298b80da-3fc4-4f58-beef-6583f08f2cc5",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "cff06e69-3770-411c-97fa-dcbd22313d26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f13f42d1-3420-4380-b7b7-c3d7411777d0",
        "cursor": {
          "ref": "f99a32b5-855b-4c1f-ac78-07a338305472",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "bddaaf5d-e0f0-4fe1-914e-0f92f888ca75"
        },
        "item": {
          "id": "f13f42d1-3420-4380-b7b7-c3d7411777d0",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "8ab88b68-5457-4b35-9c94-7423b43fde31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a447a47b-786b-4f8f-8cd5-9b4937a6d58f",
        "cursor": {
          "ref": "186507ad-9bd0-41b4-a9ee-e670c029be17",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "8227d38b-fb29-475c-8ed8-69a7382f91c4"
        },
        "item": {
          "id": "a447a47b-786b-4f8f-8cd5-9b4937a6d58f",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "9c5e519d-a3ce-493d-9c2c-bfa04f9d64c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09002f7f-9478-42b3-8a30-70c9c7829340",
        "cursor": {
          "ref": "7ccb3908-64f3-4bce-bc4f-8acd7d9333f4",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "f612cd4f-8443-4236-aa0d-dcd634db43cb"
        },
        "item": {
          "id": "09002f7f-9478-42b3-8a30-70c9c7829340",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "2ee0579f-0c5a-40b6-a96d-c77fd4b2bd2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84ed285c-cd96-45f5-aba6-44507d5fd8b2",
        "cursor": {
          "ref": "28ad9940-0ae8-430b-82cc-192503faea90",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "8b1e6d93-ab04-47e1-a4c1-7b434994a85b"
        },
        "item": {
          "id": "84ed285c-cd96-45f5-aba6-44507d5fd8b2",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "d3bd8c4a-c8a6-46a6-ae6f-c97322e6e0a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "051b67bd-9718-48c5-acd2-7e57dd042057",
        "cursor": {
          "ref": "f61e4dc0-5e3f-40eb-8447-9cf070f5d9be",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "50f531a9-09a0-4cf5-b0a6-cae216f613f7"
        },
        "item": {
          "id": "051b67bd-9718-48c5-acd2-7e57dd042057",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "1c5c7fb3-4c16-48f3-9872-9cee6ddaf41a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbf8c868-ef69-4f2c-94f7-fa422f51e8b6",
        "cursor": {
          "ref": "e49c6229-870a-4c5f-a6b7-1d673196e665",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "c8794244-3bb4-4475-abaf-9c0a26b478f0"
        },
        "item": {
          "id": "fbf8c868-ef69-4f2c-94f7-fa422f51e8b6",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "70fcee27-8d60-48b9-92da-1e4fa58350fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67cfecc4-e397-4598-b65a-bf0cce010e2d",
        "cursor": {
          "ref": "cca12ab7-571b-4a65-9c02-949aba28b7c3",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "6fae0a6d-2fd5-4dcf-bc0e-354483f46765"
        },
        "item": {
          "id": "67cfecc4-e397-4598-b65a-bf0cce010e2d",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "52ef459e-db6b-4e8c-9e21-7af800684f2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efae94fb-11c3-4c56-941e-b7642f3628bc",
        "cursor": {
          "ref": "cb876e84-b817-4f48-8820-4d35c860c417",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "21240ad2-67a8-43b9-a1e8-33f5ea065c1f"
        },
        "item": {
          "id": "efae94fb-11c3-4c56-941e-b7642f3628bc",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "1c7dfd50-7372-42d4-871e-8a2f86c9505e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16618f98-fcf5-4b08-b492-214a2ae6ae1f",
        "cursor": {
          "ref": "d44f31a0-fa91-4a12-9cad-10badf4689d0",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "8fa08cc4-2aaa-4c13-92bd-50f75c8c45f9"
        },
        "item": {
          "id": "16618f98-fcf5-4b08-b492-214a2ae6ae1f",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "cf9e4e03-8fbe-492a-b994-e14f35066d4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f953e4a6-40f1-4e42-818f-1185c738c3bb",
        "cursor": {
          "ref": "4d8945cd-b8fe-471c-a2e6-aa0264e69117",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "19341a65-8916-49d4-b954-c0323e78d616"
        },
        "item": {
          "id": "f953e4a6-40f1-4e42-818f-1185c738c3bb",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "ead45686-33b1-4f42-9078-88986f79cd32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bca7ef86-b3cd-4838-b55a-5b41218cef16",
        "cursor": {
          "ref": "9808bef7-8fc5-4597-8924-b206ccebbcc1",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "85fcfb03-f376-40ef-9efe-f811d5f7e408"
        },
        "item": {
          "id": "bca7ef86-b3cd-4838-b55a-5b41218cef16",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "38028287-32a0-4cc4-8455-e8dc102baf67",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 30,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:125)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:125)"
            }
          }
        ]
      },
      {
        "id": "8173430f-24cd-499a-b829-432176929f09",
        "cursor": {
          "ref": "228c5794-c022-4e5f-a1d6-7a8383c5e395",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "2bc8cc35-6a70-46a6-aee6-beb242d34c7e"
        },
        "item": {
          "id": "8173430f-24cd-499a-b829-432176929f09",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "cd6e5c4d-97e9-43b1-9859-f52965737ff6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce4227f3-7597-4bd5-80d5-53309dd7839f",
        "cursor": {
          "ref": "a8b199d4-9fef-4f32-8cad-9d2f32c24f91",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "3cba44d1-7c24-450c-aeb8-7175322ab047"
        },
        "item": {
          "id": "ce4227f3-7597-4bd5-80d5-53309dd7839f",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "a4750696-ce7d-4339-b2aa-be89c3b885b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0dd7dd5-6e88-4c42-8f4b-c065ca400d59",
        "cursor": {
          "ref": "46a80465-03b6-4e29-a912-ff915bd16117",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "afe63245-e1ba-4659-87b7-ea7b1de8d7d2"
        },
        "item": {
          "id": "a0dd7dd5-6e88-4c42-8f4b-c065ca400d59",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "2eceff55-1ba2-4eb5-ad50-a575721e7005",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b5c6424-169d-4364-993b-b2288d18b8ef",
        "cursor": {
          "ref": "ea6f3175-f3c4-4822-a08b-e6dcf145a8a5",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "e258892c-6159-4e06-8401-4d582b8b5f91"
        },
        "item": {
          "id": "0b5c6424-169d-4364-993b-b2288d18b8ef",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "27a9cc12-080b-423f-8b99-945e53830823",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bd90d8c-f3ea-4288-adc6-929e1a27ce31",
        "cursor": {
          "ref": "5517b870-8a5b-4899-90f8-966310d0f543",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "f395a280-03fb-441c-a1a7-a9ce1dba9d93"
        },
        "item": {
          "id": "9bd90d8c-f3ea-4288-adc6-929e1a27ce31",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "911dd48a-8661-4c01-a575-f9c9512b304f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "836c84b1-4371-42d4-b1aa-5dc9fd3829f7",
        "cursor": {
          "ref": "04397511-1f54-41ed-ba3b-35645733fef9",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "36641f36-99f7-4dcd-ac45-2c3a2b92bfac"
        },
        "item": {
          "id": "836c84b1-4371-42d4-b1aa-5dc9fd3829f7",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "2f02ae82-53bf-447a-9b19-81b2b7f7a891",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "324e0289-2891-4524-850e-63c718889e6c",
        "cursor": {
          "ref": "ab3bc9c0-3f3d-469f-94de-a122011fcdf6",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "168b0570-94da-4e5c-b5bb-7a1671489b8c"
        },
        "item": {
          "id": "324e0289-2891-4524-850e-63c718889e6c",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "60d47d3c-f0c5-44f5-aff3-f7c40c3c2858",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "998e7919-9550-4bd3-996a-5a229902652b",
        "cursor": {
          "ref": "86c9a00c-ac1d-4256-b0df-b3aff30433bc",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "de75783d-aef2-4b16-99f1-9ab76de6996b"
        },
        "item": {
          "id": "998e7919-9550-4bd3-996a-5a229902652b",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "a51c1d72-47ff-4ee2-b464-f50c215ef0eb",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 24,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:133)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:133)"
            }
          }
        ]
      },
      {
        "id": "a2083d3f-9360-43a0-85ae-fd4968ac01fd",
        "cursor": {
          "ref": "ed6bebf8-29e1-4b07-a8ef-47b6dd29ac93",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "82162935-6dd6-49e2-ad02-26f70e6082a4"
        },
        "item": {
          "id": "a2083d3f-9360-43a0-85ae-fd4968ac01fd",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "48145f5c-5d39-4772-ba1f-10cdb686ecf4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa41e099-568e-461c-9ad9-2210e41fee96",
        "cursor": {
          "ref": "658e5e28-89e0-45e6-9ad1-07466f3cf10a",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "fc4c0ee1-0da4-4fee-b87e-96950ba68d2b"
        },
        "item": {
          "id": "aa41e099-568e-461c-9ad9-2210e41fee96",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "b97bcc78-0af8-40a0-837f-17bae3d4f4e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b51d847-a5f5-4f5f-9501-99d4838e2b5b",
        "cursor": {
          "ref": "1cf63648-fc95-41e6-8d51-9083b041d7ac",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "314a090f-1c51-4744-8c14-77e94557883e"
        },
        "item": {
          "id": "8b51d847-a5f5-4f5f-9501-99d4838e2b5b",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "7d0c20e6-9e2a-480a-82d7-5be7d027140e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b137d343-9efe-4c8f-939e-bec97f6f766f",
        "cursor": {
          "ref": "c9a71702-7269-471a-b865-caacb57d2ec9",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "4060e99a-4001-4747-b8b8-e454b7870d83"
        },
        "item": {
          "id": "b137d343-9efe-4c8f-939e-bec97f6f766f",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "48a2c0eb-784f-4bf3-91aa-b61a97fb26fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7de93bf0-1586-4642-883a-d90005245550",
        "cursor": {
          "ref": "97938ed1-b22e-4381-a287-f31ec1de025f",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "aafd83e6-a4b8-4225-95d1-3d2370ec4d58"
        },
        "item": {
          "id": "7de93bf0-1586-4642-883a-d90005245550",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "13709578-7e0c-4b96-96e8-e6b426450411",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0443b0b2-c419-4bb1-870c-eb20c04801f3",
        "cursor": {
          "ref": "6feb093d-d5e8-4003-b454-6c751e4f3bf2",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "1d50199f-797d-4011-9a9b-dec37b2f64bc"
        },
        "item": {
          "id": "0443b0b2-c419-4bb1-870c-eb20c04801f3",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "4c7b67ea-71f1-48eb-843e-8d1f43415b04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2dbbaab-9e4a-4ea2-be38-2cf79bfc93cd",
        "cursor": {
          "ref": "172a2966-bdd2-4241-9195-4a7612265583",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "c1151f77-edf9-40af-bacb-09698deb61a2"
        },
        "item": {
          "id": "e2dbbaab-9e4a-4ea2-be38-2cf79bfc93cd",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "0c924ca6-52a9-48c6-a2a3-3826175b1e26",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 15,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:140)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:140)"
            }
          }
        ]
      },
      {
        "id": "455b4e79-a350-43d1-bbf7-f9c0f769ecd2",
        "cursor": {
          "ref": "af8c0826-7080-4234-8e6a-8d06eeec5e6c",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "498aa3d5-8268-46e1-85f8-47ec6835fdc6"
        },
        "item": {
          "id": "455b4e79-a350-43d1-bbf7-f9c0f769ecd2",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "1564261f-e35d-4753-b417-e440498703c4",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 28,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:141)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:141)"
            }
          }
        ]
      },
      {
        "id": "6251e19d-5840-4b5d-b05b-bf157bb06e72",
        "cursor": {
          "ref": "8a3a45da-3eaf-4830-ab09-002c8cf8ac80",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "7f356149-c374-4f2b-b5ab-7ce0ba49839e"
        },
        "item": {
          "id": "6251e19d-5840-4b5d-b05b-bf157bb06e72",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "c750ec01-aa3a-428a-b758-ccef71c0a2c8",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 26,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:142)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:142)"
            }
          }
        ]
      },
      {
        "id": "a09fbb98-8f4f-4c32-93a1-499549e27cb1",
        "cursor": {
          "ref": "67b12956-4bde-4b27-8665-3e45d7f50773",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "5cb28deb-65b0-4cb2-be0b-0d614be3a97b"
        },
        "item": {
          "id": "a09fbb98-8f4f-4c32-93a1-499549e27cb1",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "ba8d381a-4d6d-4628-aa31-77167b0e7d1d",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 26,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:143)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:143)"
            }
          }
        ]
      },
      {
        "id": "24d3bba0-9df1-487d-8fe3-3961a4f82d68",
        "cursor": {
          "ref": "6cf94118-fc7a-4052-a298-576dccde3f9e",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "197da7a5-8eb4-4de4-8ca4-f8c716017281"
        },
        "item": {
          "id": "24d3bba0-9df1-487d-8fe3-3961a4f82d68",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "ea3b22b5-6ce6-414f-ada5-bf09dbaf94e4",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 20,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:144)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:144)"
            }
          }
        ]
      },
      {
        "id": "02761681-83c6-44a1-81b9-47490368fa8c",
        "cursor": {
          "ref": "f2850eb8-7aa2-456b-92bc-87f9ca7ae3cd",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "88ba46bf-7252-4368-ae64-5445313d59ad"
        },
        "item": {
          "id": "02761681-83c6-44a1-81b9-47490368fa8c",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "dfa118ab-d36b-47eb-a382-fed1fa42b5e9",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 16,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:145)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:145)"
            }
          }
        ]
      },
      {
        "id": "4437b6c0-93cd-4036-899b-b859f9911395",
        "cursor": {
          "ref": "0ed2955a-3508-4ac9-9a68-2b163a989e21",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "66072d19-ab94-4376-b520-00d2a37eca4d"
        },
        "item": {
          "id": "4437b6c0-93cd-4036-899b-b859f9911395",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "7147f92f-506b-4acd-a5e2-703b1d73a269",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 16,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84074bf0-f088-4046-b02b-94f1e3f69063",
        "cursor": {
          "ref": "7e866109-b863-4fee-b9fc-bc08268b43b7",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "fde65225-c841-47bf-87bb-392366f66264"
        },
        "item": {
          "id": "84074bf0-f088-4046-b02b-94f1e3f69063",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "9ab02d58-3638-4d51-b1df-80feeabd6c3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdb9a233-c3d0-4da7-b4e2-214db23ee6df",
        "cursor": {
          "ref": "c79e328c-432d-499d-9a45-e6ce125b7b8c",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "3d105c29-6b9e-49b0-94aa-53203701766b"
        },
        "item": {
          "id": "cdb9a233-c3d0-4da7-b4e2-214db23ee6df",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "39a0e445-3a1f-4e6a-96da-3566df707901",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4014db88-2f95-4099-aa23-255b3749053b",
        "cursor": {
          "ref": "c414aefd-c5c5-4f61-9c24-fff4b04d2463",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "2fffb087-70fe-43ca-aca2-df53d2086fd5"
        },
        "item": {
          "id": "4014db88-2f95-4099-aa23-255b3749053b",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "1878e73c-f071-415e-9065-c55cb0eebc6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05038150-4801-4bac-bc13-fa695f89fc30",
        "cursor": {
          "ref": "4b384288-7923-4026-948a-681ff1be01eb",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "88d614ef-cf1d-4b17-b749-31764fd22ead"
        },
        "item": {
          "id": "05038150-4801-4bac-bc13-fa695f89fc30",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "5e083118-e04b-4675-b22e-8fe94e63cda5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "815a719d-0d3f-4072-8eb6-e20d6bef6107",
        "cursor": {
          "ref": "eee0efec-e85d-418c-848b-a12a69e1cc0a",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "b993c754-758a-4c36-b7d3-40094f8181f1"
        },
        "item": {
          "id": "815a719d-0d3f-4072-8eb6-e20d6bef6107",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "3e04dc25-226f-48ee-b252-3a53f5873ea5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d3d8a3c-ec6f-44e6-b68b-97de46592c13",
        "cursor": {
          "ref": "55dc997b-0b50-4c41-b5dd-465daa6fea29",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "28ad71c8-885a-4589-9efc-90579185cb75"
        },
        "item": {
          "id": "1d3d8a3c-ec6f-44e6-b68b-97de46592c13",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "f0823269-f835-4fe0-bdd6-f24b715c88c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8851503c-885e-48e5-b496-b9bc4cb8a6ce",
        "cursor": {
          "ref": "5a8b1f2f-659d-406d-911b-994b9f7fbc10",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "88ebce04-692f-434f-a490-b3195ce73625"
        },
        "item": {
          "id": "8851503c-885e-48e5-b496-b9bc4cb8a6ce",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "1aa8abd9-3387-4119-941a-650e308cbecd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f123e20b-3c25-4f84-ad8a-c5f1f72f43f8",
        "cursor": {
          "ref": "d4438f9c-d0de-4020-b4e7-efcd9324e7a8",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "92a67d8a-ce58-4b0b-a229-b3f5ddc4a371"
        },
        "item": {
          "id": "f123e20b-3c25-4f84-ad8a-c5f1f72f43f8",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "26b6bc01-4f2e-480d-ab9a-e32ffce78269",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7d786bd-6ed1-4da5-b113-88c05c4cd2c7",
        "cursor": {
          "ref": "81ca714a-1d64-4340-8c12-4f8f71800d6e",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "480d8d4b-f48c-4969-9fcd-33ab2d898b1a"
        },
        "item": {
          "id": "b7d786bd-6ed1-4da5-b113-88c05c4cd2c7",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "7db6fb72-ea24-4c42-97aa-7e94f9bf3900",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62c1e087-efb0-4088-823f-c6229eeb21f7",
        "cursor": {
          "ref": "b0fa565a-0b17-46b6-b80d-d30eac6f6af9",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "861dfc5d-316e-4434-96ba-c65a51904e8e"
        },
        "item": {
          "id": "62c1e087-efb0-4088-823f-c6229eeb21f7",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "f1a1926b-deec-479d-ba47-d78e602a2ef7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a17fe676-8e8c-414a-adc5-dea2c5c305a1",
        "cursor": {
          "ref": "8d42a3d7-44a5-4f0a-bd20-d7ed8bed7ecc",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "a6d781cb-da69-434a-b747-69c1d7389139"
        },
        "item": {
          "id": "a17fe676-8e8c-414a-adc5-dea2c5c305a1",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "1f236f26-2181-4f6c-a804-33d175d4557a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a506566-cb79-4c40-9943-dd5baa4b0229",
        "cursor": {
          "ref": "22a725d7-a584-42c7-933a-b708b82a2651",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "534cf4ca-ab14-48aa-b3ce-c81547cee36e"
        },
        "item": {
          "id": "2a506566-cb79-4c40-9943-dd5baa4b0229",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "3c36b195-d19d-4a3d-9780-78dd27f03c2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b4189b0-5ece-4408-94e9-607c0e0a7075",
        "cursor": {
          "ref": "0b052523-2ad4-479b-9486-3dcd27901d64",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "40c34f4c-11c7-44c8-ac55-c320f309a7dc"
        },
        "item": {
          "id": "0b4189b0-5ece-4408-94e9-607c0e0a7075",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "5a2a203e-1e86-4489-8bb1-b750e3d3e73c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c043dab8-e475-4b04-9203-96b3a26025f5",
        "cursor": {
          "ref": "0ae193bd-d526-4660-9592-6f2350ccc384",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "75e50bb6-28f9-413a-801a-4a030ff41d52"
        },
        "item": {
          "id": "c043dab8-e475-4b04-9203-96b3a26025f5",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "3dfaca17-278b-4380-a2a0-eeebf2cdaf73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a17df75-b992-45e6-89e2-636400d1a165",
        "cursor": {
          "ref": "3008fb54-3019-4b55-b08f-96677d672f22",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "3769f946-c922-4fec-8a97-519d3774b2e0"
        },
        "item": {
          "id": "0a17df75-b992-45e6-89e2-636400d1a165",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "baf73ef9-80e6-4ca4-a29a-61c98dfa0813",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eea676e2-b285-4b89-9644-9ccd41f9d09d",
        "cursor": {
          "ref": "f31d64f7-ba60-4aff-99d9-2b26bf00923f",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "89d46bdf-10e2-4846-81b8-3d5474f936d1"
        },
        "item": {
          "id": "eea676e2-b285-4b89-9644-9ccd41f9d09d",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "0ed69cfc-83c8-4371-b992-57d4c6d463bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b864adfe-d9dc-4b36-989c-42c732b9a508",
        "cursor": {
          "ref": "48ef177e-47eb-4d23-a2f4-19f948531a76",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "0cc92baa-638c-4135-9de5-7c05c5ff75a4"
        },
        "item": {
          "id": "b864adfe-d9dc-4b36-989c-42c732b9a508",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "d25848d6-000c-4dc6-a270-0dad1b1238c8",
          "status": "OK",
          "code": 200,
          "responseTime": 72,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:163)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:163)"
            }
          }
        ]
      },
      {
        "id": "94f1d967-74ba-43ac-9fd6-db15ed449ac8",
        "cursor": {
          "ref": "dfce5efc-4375-49f9-ac07-f73c23bd1a70",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "f2ad1704-2a37-4465-aa4c-a228620e3110"
        },
        "item": {
          "id": "94f1d967-74ba-43ac-9fd6-db15ed449ac8",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "ad5244a9-97d1-44b8-beec-c34775a73416",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08f53dd6-d6fb-48c4-8f3e-badc66272cba",
        "cursor": {
          "ref": "69bd7c4f-deac-4d35-a529-c0f619b90176",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "80fc7a33-1b79-4ba6-8ad9-0da3f2a1acdc"
        },
        "item": {
          "id": "08f53dd6-d6fb-48c4-8f3e-badc66272cba",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "e10d36d6-81e8-4b08-8931-19c84263606c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bf9ce62-9219-4b38-af27-45d1c8617710",
        "cursor": {
          "ref": "2dd1dc8f-7fa7-4eb0-8e6c-5f7f913ebf5b",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "da75920c-bd4f-4b55-81c2-cecc98551cbf"
        },
        "item": {
          "id": "7bf9ce62-9219-4b38-af27-45d1c8617710",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "ccae74f9-a3c4-495c-aaae-33177b5d88d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58c99e6d-b85d-4ffc-83b4-41b84ceb8b06",
        "cursor": {
          "ref": "7e9246f8-09a6-4963-b4ce-f46ea65be7fe",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "2bcb0417-0b8d-4c28-926c-4f1bfff89493"
        },
        "item": {
          "id": "58c99e6d-b85d-4ffc-83b4-41b84ceb8b06",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "36283471-2380-4933-86f5-d3eb309c920f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f30c22a-4acd-4007-a255-c34c499acba3",
        "cursor": {
          "ref": "9de97fdd-1252-40d5-91e3-5a893a10d967",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "cd9aad37-8734-48d7-a636-c98874237624"
        },
        "item": {
          "id": "7f30c22a-4acd-4007-a255-c34c499acba3",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "91930579-ab65-4348-b1a6-b7f11f42dc14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05d81853-3899-474c-8b81-86901f4429d1",
        "cursor": {
          "ref": "4501f79f-0074-4b86-b594-c945aa6202e8",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "ea53b234-764a-47aa-a969-d4a5fe50d609"
        },
        "item": {
          "id": "05d81853-3899-474c-8b81-86901f4429d1",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "58c4cff0-b210-48c0-8129-d61927b77956",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02c01c1d-48bc-449a-89e7-eec0c1b2c148",
        "cursor": {
          "ref": "19a4f363-68a9-42bd-b689-ac88de5b5b81",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "1e1af8f9-cfbd-4745-a89b-dc6a29f3cc4f"
        },
        "item": {
          "id": "02c01c1d-48bc-449a-89e7-eec0c1b2c148",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "c89f7740-6063-4e1d-be47-0072bc2f1aa4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a84dc1f-040e-4cde-a1a5-2e17d19b3a36",
        "cursor": {
          "ref": "5c900730-eac3-4f06-80d9-50b327c11f5b",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "2655f003-a0d3-48e7-b3ce-eb8f61c0bb55"
        },
        "item": {
          "id": "6a84dc1f-040e-4cde-a1a5-2e17d19b3a36",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "6cc0853a-ce9f-49f9-86ad-fd51b8f1a26a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27bb0f06-7c20-4607-be01-8947efc6290d",
        "cursor": {
          "ref": "65fe9347-8054-4292-b794-c9fbe54ddcd9",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "0ca75a90-4d3e-493f-9217-57a6a67d8efc"
        },
        "item": {
          "id": "27bb0f06-7c20-4607-be01-8947efc6290d",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "b2b24b11-7294-4d33-b624-c9bad0aa71e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55cb1e62-07c2-4079-91bf-642647a5e844",
        "cursor": {
          "ref": "c6ab4eb6-90bc-47fd-8013-de763a682d8f",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "5f7c58b3-b77f-4f4e-bf01-0e5022c8a84a"
        },
        "item": {
          "id": "55cb1e62-07c2-4079-91bf-642647a5e844",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "39149eeb-7627-46b8-b7b8-b732137e2699",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99ecfd80-14ff-4945-97a5-f536729c444a",
        "cursor": {
          "ref": "63abbf47-e042-4fdf-85e5-8e434862338f",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "741827ae-3fac-45b2-9de6-38a33879fe97"
        },
        "item": {
          "id": "99ecfd80-14ff-4945-97a5-f536729c444a",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "6a14ecf0-3725-46f6-8cf6-4ee1bd7573c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ecda0b6-d89c-4738-a1bb-824d795aef52",
        "cursor": {
          "ref": "22ffb12b-7964-49cf-82f1-185c5504693a",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "e48191d0-f761-4694-ab35-cd5dcfeb3697"
        },
        "item": {
          "id": "7ecda0b6-d89c-4738-a1bb-824d795aef52",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "f7909f4d-29db-4e9a-9245-968660458be9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5bb54fd-d252-4cfd-bde0-bd8aa908dd9c",
        "cursor": {
          "ref": "72602699-9b45-4496-8fff-46d67dde1b01",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "4ab07038-7050-4e14-ace6-18dab7aa81f9"
        },
        "item": {
          "id": "c5bb54fd-d252-4cfd-bde0-bd8aa908dd9c",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "a4f4d10b-e637-437e-b2b4-3670d43610fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "507c88c0-415c-49ed-886b-53bf952d6c10",
        "cursor": {
          "ref": "7fd10c4b-9a95-4055-ad1c-7914d7362237",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "85eb9f86-644d-4eeb-a40a-3d7f32f45f2b"
        },
        "item": {
          "id": "507c88c0-415c-49ed-886b-53bf952d6c10",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "8107c509-13d0-4564-8451-abd30e5e52ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a4c637d-056f-49de-ac8d-1c7f167c16a5",
        "cursor": {
          "ref": "109cd98c-226f-43ea-9524-68ec58aa0bfd",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "2426c26a-40bf-484d-8319-f86406485b1a"
        },
        "item": {
          "id": "9a4c637d-056f-49de-ac8d-1c7f167c16a5",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "4a70d516-029b-49c8-9e60-fda8b9548190",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72ee3328-8d2e-4b93-badb-e138af0a6048",
        "cursor": {
          "ref": "f5f0f283-5c7d-46a4-9d03-5608a3738564",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "ace35880-38d0-4036-8d4d-dad1bb8ab8a1"
        },
        "item": {
          "id": "72ee3328-8d2e-4b93-badb-e138af0a6048",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "f71fd979-892b-4353-9b0f-118e3ea9ff0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bbf9b73-be0f-4e69-b880-b6f5f5bca86e",
        "cursor": {
          "ref": "461e5917-3aaf-47b7-b9ac-2bb8812f3866",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "b41d679e-d738-4e1f-a414-73eb374bf390"
        },
        "item": {
          "id": "3bbf9b73-be0f-4e69-b880-b6f5f5bca86e",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "5327a6fb-6baa-46ce-b881-511d5be21d66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d9c1559-d971-40d6-b7a8-6e8e970e2162",
        "cursor": {
          "ref": "6a984b61-0194-406b-b2f5-5d3fee0c29c9",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "55288765-5779-4df2-939c-b908cae1afa6"
        },
        "item": {
          "id": "0d9c1559-d971-40d6-b7a8-6e8e970e2162",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "f2590ab5-7f2e-4b4e-b22e-1aad075d7c41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "096889e9-80fe-40f9-8f5f-362ea48734f1",
        "cursor": {
          "ref": "121eac70-3107-4574-b0cb-1f40626af701",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "f8aa5b30-484e-48fb-b309-5784000b4772"
        },
        "item": {
          "id": "096889e9-80fe-40f9-8f5f-362ea48734f1",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "0a3ace28-bb69-47ba-8013-55dece011d09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69dc8539-c2a1-4e6b-a34f-9a3fa3b4cc39",
        "cursor": {
          "ref": "fb1f5b3b-d802-46fc-8e7a-a150ad5f7022",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "ee1ddab4-7791-454d-98bd-ebd77dcf1968"
        },
        "item": {
          "id": "69dc8539-c2a1-4e6b-a34f-9a3fa3b4cc39",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "f86e96af-aa8d-4c8f-a3fc-c960096a4ebf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "514dd881-6b25-4add-8b3f-c275a5f32d8b",
        "cursor": {
          "ref": "20bace60-ec07-430e-afbb-2f2c2149dbfb",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "191acb53-8e45-4187-9388-a6ef79f4746f"
        },
        "item": {
          "id": "514dd881-6b25-4add-8b3f-c275a5f32d8b",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "2d418409-4b95-4f8e-bccf-21dfbad4bdf1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31d079db-24a9-4a7b-80d1-e36133d547d6",
        "cursor": {
          "ref": "6e0580ce-a14b-401b-a710-ffec77a04da9",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "8772079f-d136-46f4-8725-542587ac8887"
        },
        "item": {
          "id": "31d079db-24a9-4a7b-80d1-e36133d547d6",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "26047808-154b-4e67-bb9a-5699adfee652",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8287775-a415-4685-a9e6-3a8202dcebfe",
        "cursor": {
          "ref": "481d52f0-5584-4ec7-90ab-9127ea272fdc",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "2cff7bdd-2e14-435b-9728-203f20c57aa5"
        },
        "item": {
          "id": "a8287775-a415-4685-a9e6-3a8202dcebfe",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "96fb62f5-5532-47e8-b83d-89b8e46a904b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfb4d131-2e3d-4886-aad4-4048b0060518",
        "cursor": {
          "ref": "86dde1da-b22b-41b5-a5a4-d49363ea12f0",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "cd6a9416-2e6d-4b2e-ad2a-d23c95839d20"
        },
        "item": {
          "id": "cfb4d131-2e3d-4886-aad4-4048b0060518",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "03ccdaca-fafd-4326-b871-970d0a93cb36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3849453f-efe6-4c9d-a09c-06d21e836c68",
        "cursor": {
          "ref": "30a383f8-f252-4198-8d17-cc0594fd3453",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "0ec0ce2f-4838-4f84-a12b-493f89e7a4c8"
        },
        "item": {
          "id": "3849453f-efe6-4c9d-a09c-06d21e836c68",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "1aa0a9c8-19ac-498d-8798-f97b007686b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab64a201-27e8-4f83-a559-15ffe87fb988",
        "cursor": {
          "ref": "e69ed1a2-4d0a-4264-8201-1d4a64a3ac3c",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "ffa9e25f-506d-40df-9354-86a5d804b30e"
        },
        "item": {
          "id": "ab64a201-27e8-4f83-a559-15ffe87fb988",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "d46e195a-0a0c-4b38-9a83-4f5f6e47f7e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19659686-da6e-4dd9-ae42-e9bad94b935d",
        "cursor": {
          "ref": "597d8e8e-ce1e-413e-af2a-f47621fd51af",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "b0314f45-8079-4e2a-a7bd-2095253a90e2"
        },
        "item": {
          "id": "19659686-da6e-4dd9-ae42-e9bad94b935d",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "bf78bcc8-aef9-4dda-94ef-38a0e6af7f5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62963298-19c4-451f-978c-947f464ce45a",
        "cursor": {
          "ref": "c14b75b5-9dd7-4ad2-9783-6b9d0febf67d",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "b1452a16-d7c3-481d-b369-549ad6835b8d"
        },
        "item": {
          "id": "62963298-19c4-451f-978c-947f464ce45a",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "dfbfe822-169e-4910-b3d5-22db3519e4e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d8943ce-4fed-4904-b574-6a90a144db6e",
        "cursor": {
          "ref": "3cbe1d92-a1f9-4719-bb53-5972b1b11415",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "6b0680bf-070d-40ac-b549-1fabb89f0160"
        },
        "item": {
          "id": "7d8943ce-4fed-4904-b574-6a90a144db6e",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "3c9323aa-c583-4a8f-a091-2320a2568014",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2894d49-85a0-453e-9c99-95c54a0a6196",
        "cursor": {
          "ref": "3bf75fc3-f712-4e51-a44b-50b7dcbdb223",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "33abdba5-5655-48f8-8f0c-6c8c3c6b837f"
        },
        "item": {
          "id": "d2894d49-85a0-453e-9c99-95c54a0a6196",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "50a39fc2-1c4e-4972-8132-dd4b03b1f13b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 103,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93508c74-69e2-474e-8755-b280281243a7",
        "cursor": {
          "ref": "409af5ab-7a52-4683-8377-37b3c0bd967a",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "c1c3d587-28b2-43a3-984e-fcc982a5e356"
        },
        "item": {
          "id": "93508c74-69e2-474e-8755-b280281243a7",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "020aafd1-b2a0-4ce1-aeaf-7218ed5af1ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "128cc94f-6df1-4a29-a3b9-c89e0470b59f",
        "cursor": {
          "ref": "91fc09a6-276d-4f25-9db5-942a5c5640cb",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "a1fec3de-3fd2-468d-8123-ece992be389c"
        },
        "item": {
          "id": "128cc94f-6df1-4a29-a3b9-c89e0470b59f",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "ce832dd2-e665-4e93-87ab-4a3a5c5ede2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "518a4742-e994-49af-acf6-27c7450d2d70",
        "cursor": {
          "ref": "bd7d9cdc-485d-4ba7-9959-e61eddc2f3e2",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "b5f05951-bbfc-4087-9cbe-799eae24e00f"
        },
        "item": {
          "id": "518a4742-e994-49af-acf6-27c7450d2d70",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "bab10e89-ce5c-4e43-a619-a968d57ce8f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5ba06ab-ee03-45c8-8af5-619435b6f68d",
        "cursor": {
          "ref": "2336ad32-ec12-48b0-907e-bb7e84747970",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "fc5dbec8-7ac0-4622-816a-e25020214c7c"
        },
        "item": {
          "id": "f5ba06ab-ee03-45c8-8af5-619435b6f68d",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "c43735ee-aca3-4b87-ad9e-0087e7a0a0b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc313e8a-9c9a-44ad-a6c7-c5cfed4746e4",
        "cursor": {
          "ref": "b634e6bb-d1a6-48a1-b817-3612c27f9c63",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "c30de06a-3e26-4374-ae41-49418dc204bb"
        },
        "item": {
          "id": "fc313e8a-9c9a-44ad-a6c7-c5cfed4746e4",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "5b9b0dbe-cbad-4d0e-a559-923f5b7f380d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a8f7a3e-7de3-4950-b6e8-9f8b2e0305e5",
        "cursor": {
          "ref": "b8a3ab63-21dc-4204-aec8-ab7ee1109fcd",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "8db2a081-ecf0-4f65-a8bf-2537f15fc355"
        },
        "item": {
          "id": "1a8f7a3e-7de3-4950-b6e8-9f8b2e0305e5",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "d5883035-c6df-4f19-8e98-99a275d23fc8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "801ed6b1-6450-4c86-9d97-f4048bad403b",
        "cursor": {
          "ref": "fe29aad9-0269-4b8f-90b4-c758ec2e3146",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "3b1861d3-14af-4127-81ec-a27b022277e0"
        },
        "item": {
          "id": "801ed6b1-6450-4c86-9d97-f4048bad403b",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "237aa325-d250-4508-b8ca-00e4252d2c17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a95777d-85d2-48a1-b517-81296a756329",
        "cursor": {
          "ref": "33b265fa-532c-41f0-89cb-db65b5104db8",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "8fae8dc5-ef2b-4a40-804c-59b3672566e1"
        },
        "item": {
          "id": "2a95777d-85d2-48a1-b517-81296a756329",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "4e2dc188-2ce7-42b2-91fe-b97af9114dc3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee9c7f08-9eff-4b99-b763-2d96ee071a96",
        "cursor": {
          "ref": "8ec10b3d-4927-431a-a0d4-ee06f4ec0981",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "0e05a176-7c40-460b-926a-09b238ad35a8"
        },
        "item": {
          "id": "ee9c7f08-9eff-4b99-b763-2d96ee071a96",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "23085ff0-6405-4725-b318-a9dbeb6f6555",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15ab4a00-1ced-45ca-bf35-71e3a31db70f",
        "cursor": {
          "ref": "46140943-49b3-4f49-9363-498d44c2c5a6",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "e6ddf378-f796-4f21-9d05-d1ecacd7da6c"
        },
        "item": {
          "id": "15ab4a00-1ced-45ca-bf35-71e3a31db70f",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "3506dbab-91fc-4781-87c8-2230b7898cad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "466987a0-ddeb-463d-815a-63c05be15efb",
        "cursor": {
          "ref": "39158b32-f660-4528-871f-a84c8a08973a",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "8509b389-bff4-474e-bf02-0a8d1eed91f6"
        },
        "item": {
          "id": "466987a0-ddeb-463d-815a-63c05be15efb",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "90f343b2-dd51-4405-81c5-ecc89b65a349",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a8b4fed-a20d-4c5d-a828-2dcde1822a31",
        "cursor": {
          "ref": "39689ad3-45ee-41b0-aea7-983035200488",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "5b5f9fea-faeb-4ff6-92b6-c6f578a245a0"
        },
        "item": {
          "id": "9a8b4fed-a20d-4c5d-a828-2dcde1822a31",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "330d12d7-c5b2-4832-951b-4c057a8c4293",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a2378a5-9a68-4688-8366-6e29c9c817e3",
        "cursor": {
          "ref": "2ff841df-3d51-43d5-9ac3-361ecc3202d6",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "4f6be12e-4d9c-455a-8ea6-121140e861bc"
        },
        "item": {
          "id": "2a2378a5-9a68-4688-8366-6e29c9c817e3",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "ebf7e7f9-d164-4dd5-8aa2-2d3180fb32bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3fa69da-cb7f-41e7-a11e-dea2d85be321",
        "cursor": {
          "ref": "204158a1-6e0f-43aa-9495-1f18656892f0",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "a0e912e0-1028-46b3-84ac-738ea57f4814"
        },
        "item": {
          "id": "e3fa69da-cb7f-41e7-a11e-dea2d85be321",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "5f1ced2c-9347-4185-a39e-e7ced049a3a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ed80dc5-d06d-4053-adfa-e0521d02b6ae",
        "cursor": {
          "ref": "b6af3061-b3ce-458a-acd8-27fe68ea22b2",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "175c550a-9dbd-480d-9f9a-a26b2a8616d8"
        },
        "item": {
          "id": "1ed80dc5-d06d-4053-adfa-e0521d02b6ae",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "462afe9d-15c3-4f43-8a66-8b33cce11629",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eec3791e-e7c1-4eb5-b73e-e2d799342f38",
        "cursor": {
          "ref": "35ea9d75-6fa8-49de-9cbd-878ea917563b",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "2799a1c4-b018-44eb-b61a-f5f1a0df92a3"
        },
        "item": {
          "id": "eec3791e-e7c1-4eb5-b73e-e2d799342f38",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "c2cce857-ed04-4562-96d0-56a49f0e55a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "420a27a9-6a27-44b8-8cd1-5dcfd2fd8e26",
        "cursor": {
          "ref": "e194180d-82d6-4a22-833a-5ca8ff4eb59d",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "9ae477d4-8d98-43d3-b3ff-0376c5728bd7"
        },
        "item": {
          "id": "420a27a9-6a27-44b8-8cd1-5dcfd2fd8e26",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "21007cc6-1259-4968-a67f-7d45c18d26c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "716b015a-c35f-45e1-8553-7ebb8f14e1ae",
        "cursor": {
          "ref": "37712d07-264d-4f9f-bf46-7a57618cf6ab",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "2be1da91-8a63-40cf-b952-7650516ee622"
        },
        "item": {
          "id": "716b015a-c35f-45e1-8553-7ebb8f14e1ae",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "87fd52f7-34e3-4dd1-aaa0-0037b0f437e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "270318e1-19ed-432a-81db-0f6e3846dc57",
        "cursor": {
          "ref": "d14fa038-2ff9-47df-a777-6bfca89d2ee4",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "e3294a8d-746c-40cc-9091-519a5753d662"
        },
        "item": {
          "id": "270318e1-19ed-432a-81db-0f6e3846dc57",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "4e4a46de-cec0-4728-947e-b4e1057b92ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "775fef63-5989-4620-b041-c65758f5c0a4",
        "cursor": {
          "ref": "bcdf7eb1-a627-4331-94dc-d6274e4e77f0",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "312a8747-ab29-45d5-96b3-1beba552cdc8"
        },
        "item": {
          "id": "775fef63-5989-4620-b041-c65758f5c0a4",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "69c595e0-c46b-49c9-bc06-f40249f3a4f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58481d7e-c6a7-4b91-b754-2048eaa1eaac",
        "cursor": {
          "ref": "b78b1fbd-fb5a-4c08-b6ba-728bb38ea075",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "cfa7d23c-80c4-4326-b62d-547490e7edd7"
        },
        "item": {
          "id": "58481d7e-c6a7-4b91-b754-2048eaa1eaac",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "499e0764-83f1-4d34-a2dd-a1adf4da62a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5124d20-f59c-4a41-93a0-1a017eeb4f4f",
        "cursor": {
          "ref": "280533f2-25a5-4b1c-81e4-fb68190e16c3",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "5dc0223d-a4f7-4355-bc05-1507b6c04d5a"
        },
        "item": {
          "id": "e5124d20-f59c-4a41-93a0-1a017eeb4f4f",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "7b08e5c3-b718-4160-959a-de1ed00ff899",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1b9cfe7-55a3-4667-b7be-554d16e5e13a",
        "cursor": {
          "ref": "3c121952-9354-4142-8806-d694b6b44748",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "e5b5a172-c64f-45cb-a69b-80d7b3d5e279"
        },
        "item": {
          "id": "f1b9cfe7-55a3-4667-b7be-554d16e5e13a",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "cc8bed5b-0719-4e13-8e22-bd6b85216cef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4910dfc-0934-433f-b700-2b6d27f1552c",
        "cursor": {
          "ref": "c4c76ead-2b98-418a-b572-5bc800511017",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "ec135085-ac85-4c32-85f2-9d7dd5a7af93"
        },
        "item": {
          "id": "b4910dfc-0934-433f-b700-2b6d27f1552c",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "5b7e7972-a647-4a48-b94f-9f5ae3073a3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9561daba-66e1-43d8-bbd5-fffe93e1a4e2",
        "cursor": {
          "ref": "b9bfa66c-5924-448c-a75c-2f4236808491",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "54d07f8e-f89a-4467-9d46-b5d773816337"
        },
        "item": {
          "id": "9561daba-66e1-43d8-bbd5-fffe93e1a4e2",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "5973c1be-d3ba-4b6a-8516-5053363f2ba0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c452319-ef74-4a29-ae6e-6a30fafce386",
        "cursor": {
          "ref": "03c7e251-0f47-49a6-a4c4-4afdf7890426",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "42633492-617e-4f47-91f9-dbc59e538b2c"
        },
        "item": {
          "id": "2c452319-ef74-4a29-ae6e-6a30fafce386",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "d9736e08-f1be-4666-a935-f4d432628fb4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "004b5059-351b-4861-a4c4-ed49718f91e1",
        "cursor": {
          "ref": "ad7c4bdb-0ed2-4412-bf81-86b1d583902c",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "ee1d3ccf-d76c-485b-9eee-d6b83143dc61"
        },
        "item": {
          "id": "004b5059-351b-4861-a4c4-ed49718f91e1",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "a00d5c0e-3e0f-4a90-94cc-f2ef77838f4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f103a1e-4ea2-40fd-92f2-00ba7e94f0df",
        "cursor": {
          "ref": "f5cbc08f-550a-4eda-9bad-7e9f4646830c",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "0b0fd96e-99c0-47b1-bbd3-db2a117d940d"
        },
        "item": {
          "id": "7f103a1e-4ea2-40fd-92f2-00ba7e94f0df",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "dda9aca1-e212-4ef5-8e6b-84c465d69727",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "360989f6-0e84-4e3c-b5bc-b90c6a3703b1",
        "cursor": {
          "ref": "983472be-3b8d-4edd-bfc3-115f6c38b754",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "6d7f37a2-e261-4deb-9a02-27e0756131ab"
        },
        "item": {
          "id": "360989f6-0e84-4e3c-b5bc-b90c6a3703b1",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "313a068a-93f9-44ee-8acf-32410fedb173",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "104af77a-1a65-4514-8227-93c83a37c620",
        "cursor": {
          "ref": "85c07029-7020-4dcb-ac69-a26305aa7279",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "2ed1c061-fbca-4429-aada-25dc1322135c"
        },
        "item": {
          "id": "104af77a-1a65-4514-8227-93c83a37c620",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "852dc383-2afa-4cbf-8c1e-59b20a3d5b9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd673bf7-5fd9-4a4b-975f-c67c25c131a0",
        "cursor": {
          "ref": "22a825ab-f27b-4da0-a0a5-7fe189e0e95a",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "cd142b9f-489d-4474-a4b9-4aeeda068e20"
        },
        "item": {
          "id": "fd673bf7-5fd9-4a4b-975f-c67c25c131a0",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "dc25dfa2-61c3-4d35-a5b7-3dc90816e7da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc0ff485-5efa-4a8b-bfd5-b021e99ccfbf",
        "cursor": {
          "ref": "6294a0f4-ce1c-4134-abec-144de245b359",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "54c82602-c050-44bb-bec0-fcd046a0c93b"
        },
        "item": {
          "id": "cc0ff485-5efa-4a8b-bfd5-b021e99ccfbf",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "354bc9a9-20e2-409d-a8d2-c7285171e422",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bacd1c11-7d79-46e7-bb40-f53a58481660",
        "cursor": {
          "ref": "cd8af534-e740-4ed9-bf8a-fd7651085a72",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "8ddfdd78-ce73-4135-bdeb-b44625663998"
        },
        "item": {
          "id": "bacd1c11-7d79-46e7-bb40-f53a58481660",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "349e5fde-7d8e-4249-ba0f-d76d847e0d3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54a42c9e-cd75-41a7-ae8a-120b77768352",
        "cursor": {
          "ref": "1333f935-7872-46d6-9500-fbd789613415",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "909db6ad-aa5f-4b24-989b-e702ed0f726c"
        },
        "item": {
          "id": "54a42c9e-cd75-41a7-ae8a-120b77768352",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "fed96983-e9c7-46a2-aa28-339dd84d6c55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3147fe3e-6a02-4e31-b46c-7911550811ea",
        "cursor": {
          "ref": "0885d3b4-49aa-437f-a500-df46e6a96257",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "15b820b8-703e-492f-a785-c3c209b23611"
        },
        "item": {
          "id": "3147fe3e-6a02-4e31-b46c-7911550811ea",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "6bf7f79b-b72d-4c41-9aa5-939acd34d442",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa6c6b7f-b9f2-408a-8ccc-de4a4fed7524",
        "cursor": {
          "ref": "7652581b-13ae-4ed4-96e2-691748144a12",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "fb5f50cc-ba4d-4831-af43-a5aba8512385"
        },
        "item": {
          "id": "fa6c6b7f-b9f2-408a-8ccc-de4a4fed7524",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "d4693b27-5f98-495b-94d8-91d36bd3aea5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da32abed-d0c1-4379-92b9-dfafb344c3be",
        "cursor": {
          "ref": "4f54545d-27f5-4297-8360-2913b49c774f",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "a292a4f4-0cae-489e-b3c2-7fb156c0a352"
        },
        "item": {
          "id": "da32abed-d0c1-4379-92b9-dfafb344c3be",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "062d5341-67e1-42dd-a328-aae35352c4a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c7591d5-1ace-49d3-9b3e-8bb12c89ecfc",
        "cursor": {
          "ref": "6f81e08b-d754-4fa3-a539-f81647489581",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "4ae13f75-ad69-4b96-b975-f4e8a4a784f7"
        },
        "item": {
          "id": "9c7591d5-1ace-49d3-9b3e-8bb12c89ecfc",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "7bcdb4b2-d99c-4ae7-8711-c09857a4c4bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff570c63-2e05-427c-a1da-8d26a2d2bb06",
        "cursor": {
          "ref": "d1306083-91e2-434d-87b1-688483c0f252",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "7a79b71f-6c15-4596-88f4-1317f931c9c3"
        },
        "item": {
          "id": "ff570c63-2e05-427c-a1da-8d26a2d2bb06",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "3ec711ef-9279-4a22-b37e-c7a8346a69f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "319f4d40-bb52-4172-90e0-97e50430c0f4",
        "cursor": {
          "ref": "6fca9ba4-0b18-4835-bca3-e851a582d964",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "7ccc4385-9f18-4838-bcb7-0b7e8eaa30f3"
        },
        "item": {
          "id": "319f4d40-bb52-4172-90e0-97e50430c0f4",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "af7d25ff-a4e2-4546-a408-26a9eebe1784",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ebf544a-9e92-4a89-8488-c525fc5ceaee",
        "cursor": {
          "ref": "be77ce50-ef63-47f2-97c5-927fb500e1d0",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "25903e14-b7b7-419c-9b64-b0f1e9502908"
        },
        "item": {
          "id": "2ebf544a-9e92-4a89-8488-c525fc5ceaee",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "df507c35-1529-426d-8655-c4d60f8c7688",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a60b5d2-aeda-4014-9220-ef94cbb64268",
        "cursor": {
          "ref": "70f8b23e-5ae1-4360-a4d7-73105de7e962",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "e22983ce-decf-41c5-bc16-51ab10f3213c"
        },
        "item": {
          "id": "0a60b5d2-aeda-4014-9220-ef94cbb64268",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "213cdb42-ff4b-457b-9379-b50a65518e56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2978be7b-a726-4348-a5d3-ebe2ad8370de",
        "cursor": {
          "ref": "22596e10-63a6-4a51-a302-6e3889b27000",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "a932f3f7-5cb5-466d-a417-3eccfa5fd2ac"
        },
        "item": {
          "id": "2978be7b-a726-4348-a5d3-ebe2ad8370de",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "7593da41-0e45-47b0-bb5e-d9200a71b426",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6450e91e-8871-4c6f-a013-6e98acc76269",
        "cursor": {
          "ref": "625adf45-3cb4-43c2-b95c-2e6c56b86dbe",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "97d08e0d-10dd-4c85-addb-436587a36ad6"
        },
        "item": {
          "id": "6450e91e-8871-4c6f-a013-6e98acc76269",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "8ba51e0d-03cd-42cf-b333-2038d6373de4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "349cbb67-f78b-4530-afa2-6f9c50d9a55c",
        "cursor": {
          "ref": "633cda2b-239f-4e44-85d7-826712bf336e",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "5c0aa9f6-27c5-4b3f-96cc-2ef5434e2fa9"
        },
        "item": {
          "id": "349cbb67-f78b-4530-afa2-6f9c50d9a55c",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "1f67bddd-8456-4b30-81b2-3380356fa44a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0feac34-c42b-4bc8-a3e7-bf3fdeb87bb9",
        "cursor": {
          "ref": "37e79ce3-ba39-4b1e-ab33-7f25545339e3",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "bd7ce4d9-c5df-4d80-bd0b-6c64712e6bd4"
        },
        "item": {
          "id": "f0feac34-c42b-4bc8-a3e7-bf3fdeb87bb9",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "5b82a8c3-b492-473b-9aa1-933a59bac0a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd9fbd5b-c6fe-4002-8bad-e1a9fc9ef14d",
        "cursor": {
          "ref": "cce412ae-4ec3-4c49-898c-592eb92ba736",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "5850333c-ff9b-4fef-9e42-70aa8e1b85db"
        },
        "item": {
          "id": "dd9fbd5b-c6fe-4002-8bad-e1a9fc9ef14d",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "cee52cab-ca2b-4d51-ba15-07aef95365e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a08f9572-8fc1-4700-964d-c1cc87eca8de",
        "cursor": {
          "ref": "849a6c22-ba40-4f6e-8471-617dc471c754",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "083e87af-6c46-43ca-9c2c-692c91acb4b2"
        },
        "item": {
          "id": "a08f9572-8fc1-4700-964d-c1cc87eca8de",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "1f46c8d5-895a-4105-a933-59b573f32346",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad718c8a-cccf-4dd6-82c9-78c6e5eb29d7",
        "cursor": {
          "ref": "4d2b70f1-6e8c-4935-be2a-cd2032c3b0ac",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "18e95548-7592-4ca9-99d9-d15a667a55fc"
        },
        "item": {
          "id": "ad718c8a-cccf-4dd6-82c9-78c6e5eb29d7",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "7ab3e0d1-e030-404c-ae15-302dedc0c282",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ecd9499-1307-4259-8c36-09246f989396",
        "cursor": {
          "ref": "b52bfe5b-6546-4102-810d-dea73be78668",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "3f026dae-189a-460c-bb1a-b7426b54f772"
        },
        "item": {
          "id": "8ecd9499-1307-4259-8c36-09246f989396",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "e92b1c2e-6409-4ee4-bbbb-e4d18c44ae33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e754ee89-1e5b-47a1-8bee-3a8cc67bf865",
        "cursor": {
          "ref": "1df88d0f-9145-47aa-9ed8-62c1bb32ca47",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "cd4fef0a-cccc-4017-9858-99f3e991a059"
        },
        "item": {
          "id": "e754ee89-1e5b-47a1-8bee-3a8cc67bf865",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "90f08864-5c3e-4b66-984e-5f5d0bc72a0a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1d78475-6e5b-4a41-b8ee-03903a34c005",
        "cursor": {
          "ref": "2e9596c9-adcd-4651-9c35-d7ae2e95543b",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "35c81364-f1ff-4d40-aea5-87e1fd56a19d"
        },
        "item": {
          "id": "d1d78475-6e5b-4a41-b8ee-03903a34c005",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "0bb485ab-e470-4363-acfd-8730ce146dee",
          "status": "OK",
          "code": 200,
          "responseTime": 105,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "726f8c69-e976-407b-aaf9-6536d236991d",
        "cursor": {
          "ref": "209d2d77-29f7-4ea6-a4be-c50e0205b8e9",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "f00ce6e2-e575-4e77-911a-4647c5024c90"
        },
        "item": {
          "id": "726f8c69-e976-407b-aaf9-6536d236991d",
          "name": "credentials_verify"
        },
        "response": {
          "id": "e61a8266-db57-48b1-880d-9d05a4fb3e19",
          "status": "OK",
          "code": 200,
          "responseTime": 3904,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "17685098-f981-4b45-b7e7-030e72dbebf6",
        "cursor": {
          "ref": "993f50a7-7d51-48e1-9716-f879f9adaefe",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "4133001e-228d-4f0a-8fa2-f784eb592d98"
        },
        "item": {
          "id": "17685098-f981-4b45-b7e7-030e72dbebf6",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "2ccbb991-8a9c-4d22-81db-b268ae39e533",
          "status": "OK",
          "code": 200,
          "responseTime": 2525,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c952e57-b8e3-48ff-b3bb-53fc0326714b",
        "cursor": {
          "ref": "e8e38d76-0057-4c95-8dc1-8f1fe68767ec",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "6c005d07-5e76-4bb1-86df-fd9de6368007"
        },
        "item": {
          "id": "3c952e57-b8e3-48ff-b3bb-53fc0326714b",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "242fd6ef-f5e2-4048-a122-e61d2489a49f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c952e57-b8e3-48ff-b3bb-53fc0326714b",
        "cursor": {
          "ref": "e8e38d76-0057-4c95-8dc1-8f1fe68767ec",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "6c005d07-5e76-4bb1-86df-fd9de6368007"
        },
        "item": {
          "id": "3c952e57-b8e3-48ff-b3bb-53fc0326714b",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "242fd6ef-f5e2-4048-a122-e61d2489a49f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb69d1af-7690-4bfc-8f82-8477f7f3083d",
        "cursor": {
          "ref": "e5579e2a-3808-4bc7-9d2e-d739a3c0c4e4",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "8b20e334-b6a5-4a77-9c98-b8e5ad82ce9e"
        },
        "item": {
          "id": "eb69d1af-7690-4bfc-8f82-8477f7f3083d",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "f6645dad-5a45-44b8-9b2c-2db3074c1fea",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "557f23e6-a9df-487e-9dde-8a0846e176f4",
        "cursor": {
          "ref": "1ba8daf1-09ad-442f-a60b-54bc289ba330",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "09510de3-a92e-4c6d-a37f-a084a63f5381"
        },
        "item": {
          "id": "557f23e6-a9df-487e-9dde-8a0846e176f4",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "16a7b70f-9486-4824-bc54-1edaa1ac1a06",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}