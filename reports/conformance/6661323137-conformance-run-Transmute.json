{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "3c0d3afb-da30-48e0-801d-fba5636b0d05",
        "name": "Clear Cache",
        "item": [
          {
            "id": "70dba6d9-04e4-46f1-b82c-d43a42599152",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "0cbfbbee-4fc5-4e21-a72d-5209a8bed3d9",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "98cebda0-0be3-431e-bd19-aa662d29e8f2"
                }
              }
            ]
          },
          {
            "id": "a6cdc351-4c3d-4cfd-9f27-0b2ac78f9647",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "7586e731-27b3-4cef-987f-65c0a9c63b3c",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "1d018211-ff72-4952-9394-f8b3967945ec"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "2d7c1ab1-a2de-4fa2-b444-51e0d6508716",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "555f0715-a59b-4db0-ac4c-c982af1edd39",
            "name": "Positive Testing",
            "item": [
              {
                "id": "39ed8c93-9d74-40d6-bf23-06156bae8d52",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "dd8fd1d6-1027-46bc-85de-eeccac71f42a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "7d33b363-4dd3-4e00-b55d-50ba98e7d177"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "510d646b-aa47-4d21-a221-547d279d4dd9",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "b2585220-1dc8-4cb7-ae8c-d3bea982290a"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "0bae7bc0-75b5-4a68-be88-b73fe8ec6829",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "46d0cf62-6bb1-40bd-8b72-5945cea7d3c8"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3dc9ec41-ef01-406a-9aca-ace0d1967ba5",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "917bf81b-f79c-41aa-9176-d58fdcdc1243"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1ab8888e-f913-4037-aa1f-86d0d9eb7e21",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "5b8c9a1f-4633-4109-88fa-cfed8f674e22"
            }
          }
        ]
      },
      {
        "id": "26ff52b9-baee-4849-810b-00ba8e20113f",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "762c6501-06b0-4d47-beeb-911682617422",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c8776d63-ca30-447d-99f9-a7c64624a28b",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "ece02668-5049-423b-9ac3-4c0bfd8ee1d7",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbf932f9-feba-4c08-966b-ad333522a42b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c45465c7-aec6-4f78-908a-7d14a793e7f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bdd676c1-ef04-4498-b2b3-141fd68cf7d1",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c1a3b36-993d-4403-8af8-43d18cef0d59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "469b3885-50f9-4b4b-9ff2-290f07295aa5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a61d153-8991-4772-bd0a-699d685ee3c2",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b856019f-5647-4dfd-9213-dd84b68484b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4d2edf66-0199-44d8-a61e-d8796945b4f7"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "f4b73ba6-8217-4bce-b99d-13fe9e86e10a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "280090e6-be9a-47a9-a8d0-eb623a6e900f",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12b0ed9d-aff9-4c18-934b-04581d8c29d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "33626ecf-4c52-4e65-bae8-db96a98bbd63"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41746296-37ed-46a2-9939-d513368f8a8d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4c6694c-dd21-469e-9f07-53ba68c5352d"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "ba85d7bb-ac33-4dc0-b093-8fb86e8b8ea8",
            "name": "Positive Testing",
            "item": [
              {
                "id": "fb29b99e-78e1-4a06-ac27-b85c4d201a93",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "07c72e2e-fd1c-40b0-8399-ceda034772c7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "6289e428-0d80-46a9-9405-09f2f841baf5"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6e8e7ea4-fc1e-419d-b4a2-ecf8509cd3ac",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "3dcd7a03-a536-437e-bac4-4dfb232f1034"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e8e7e917-3ed8-42b2-9438-971afb370822",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "66e1b7cf-fedf-44fc-a989-1f8391be28e5"
            }
          }
        ]
      },
      {
        "id": "466e0876-feb8-497a-bfb5-1ded07f244d9",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "071c8593-0612-46a3-be78-2df0746cd209",
            "name": "Negative Testing",
            "item": [
              {
                "id": "19eb2de6-ebcc-4473-9d1c-f75ba517d4a3",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "666adfb6-14dc-44ab-ac3f-2f415569f4d8",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93b9e4b6-a6d3-4695-835b-d8bba2427f1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da4481fb-737b-42ec-bb2d-07e3a939699b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba5ed33a-5969-4fe4-9cf8-63fcfdca8c4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b53e025e-c67e-49f9-9807-248962ea1776"
                        }
                      }
                    ]
                  },
                  {
                    "id": "980b300e-ddab-4fc4-85af-44953181d459",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2825f362-1029-4ed4-a1ec-c82e23f12ddf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d731a25-0529-4962-a036-25ff2f2fe060"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49a8a4ed-910a-4399-a996-48ba67c15b5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ca8de942-d749-400e-aa0c-e6f656f6fc14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32d9d42e-c411-4414-b4b2-24a13c71f0ee",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a683412a-b82c-48e9-b72f-23fa2296413c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "615d9237-60a9-4059-92e0-e01c8dd08c13"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8b91073-a31f-4580-8fe0-5612d404f75c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "836cb50b-e773-48ab-a197-c436953d5dff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8701afb8-d7d7-4b92-8064-784714b952c6",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0cd0385-4f81-4338-8b29-5029040e5ac6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c15b86fd-911a-4d6d-9d80-818440700136"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "135fe3ab-799e-4f97-9c17-43568ff82ae0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c8e7533d-921f-4c14-a49f-1e0f154fd0c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94816b76-eb99-414e-a14a-003a725049f2",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f3cab10-e44f-4d78-9bda-bed99c959b8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e9b497e-b3ad-4171-817c-535b6317432b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ab69d26-68f2-4fc5-ae49-62aad7208473",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b3642f9f-2d02-4d9a-bde2-43ba4f36cbbe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22333c90-5409-4851-b2de-f3d34c121203",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8760d7c7-e31f-4448-886a-5c1340ecab32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed7c296d-c393-4c65-b465-217df930e0a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "014732eb-7e4f-4eaa-b0d5-7a6b6f72675f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6bfa1781-00e4-4c34-a2ae-b671bdb9b65c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38bcbd33-878a-4d2e-ad3c-f8d2bfd80e20",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa3e2119-a188-4e35-9a99-5ef5eb7b62c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "15b348bf-401a-4e14-9a92-af03c8e4f2ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "703bbcbe-efed-41fa-8f74-030333a0e388",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6ef03952-c765-4ed3-9ce6-c09bfc1c1943"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36521e2b-9493-4c6e-8e22-f9804fc356b1",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eecac5f0-2e6a-4a20-81da-5a746d501e83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3ed1e66-6c2f-4951-b22e-849ea128be40"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78ed4855-dec3-4072-afef-61b0da305d86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fa625871-aa71-4165-b0fd-c5fa8c3ad79b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "759e684c-9f82-417c-b969-6b6f2666df75",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c31381f-98ba-4fb2-9444-8ae28a4815b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ece78747-06a6-47fb-b477-dcceb8759c39"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56665ae9-2850-4f22-9b8d-4a762581b943",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a3ed6922-2bcf-4cb6-a5dd-d9137a5a09fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85b859f7-5cbb-4e5e-93d2-94635968367c",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91515eab-0a52-49b2-b7c2-3c3cb4df1163",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f78bd98-4518-4840-9935-6cbc65cb3b65"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd64b4ec-d794-49a8-a422-f80754e3690e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bc10ae46-dfab-4001-9b80-112383c07c61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d4ce103-8bae-4a85-8e57-1b067047ce28",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a805a22-59de-4edd-87ce-96381f2f9413",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "729a3b0e-58fa-4415-b0e2-5be7dfb9beed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a7bc489-817e-44e5-874d-aa1d82a2ae83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a613ac2a-a4cb-4c12-8e4c-12fd056618ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ae48647-d25f-4c01-9af1-5c522b82bc2f",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b1e502f-971e-4667-9f3b-776207cc034d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22ff18be-25a9-4a81-841b-ae3aba97cfa6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c379e67d-25f0-4e66-b354-0e3f66c11e81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "131dccac-cf36-45c1-93d1-4a2ddf4faab2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0892cc51-9ea8-46af-b630-c7b18d7a92fe",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4ec5371-e043-4085-9987-f7e7ce991eb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c833c03d-060e-4bf9-b95f-1d666ffe4420"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "982ad84c-661e-425d-b854-6007f3547c21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bfe892e0-044d-49b1-9cfb-cd3caf12f5c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "146566ff-5d37-4ee8-8c3e-cf27a89f2980",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90b7a928-52c6-4fa1-9f8e-40f855d1e1e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9b11ae0-92c7-4c36-9417-fd56b3b6269b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d1563d6-60e5-4732-89c7-b088e6648df3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "90843f23-d733-46f1-87ff-110f753e9121"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21ca43b3-3134-454a-9f61-7256373f7a23",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51fd4384-8c0d-4103-a434-1cd50657dd6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d1d57fd4-f943-4e5a-ae11-4587ff7fdc75"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a94de701-0547-4205-9be3-23fc2f3a6d50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "58f43d61-5183-4805-b316-4b6dc8422071"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd8830be-fbd4-4afe-8021-6c0f4dcee7f3",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf78b58e-2701-40c7-827b-b34bfdc90081",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9eaf406-d916-4cf8-a8c3-0e093d442403"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a62f16b4-3108-44a2-a8f7-2aeb3d0c8ef4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f1f9393c-f522-484d-9989-1840c865ba7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec0b7591-fc28-4010-98bd-b9899f1a9bdc",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f3b25da-b4c4-488c-80ad-89cfd4d17020",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf7bee6f-6805-4bb3-8829-d0ea57cf6e1d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d156333-5590-425e-8c13-b125f31e19b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c840d39d-cb7e-4aa9-81cf-a21d384e1845"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ceca768b-d079-4f69-bceb-b1d162b47610",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbc8cd75-7b3d-4607-8a3a-b98b0dfd8d9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5450155-c68c-4225-9bac-6a17e8332b0a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f8d96b3-70b8-4284-8a45-25636d008a18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "c55d2536-269e-4394-aa32-579ed97112fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b365d846-36e9-4283-a09e-e77a2207f444",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fffda424-d21a-4367-a80d-7c4662b3a978",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3389d7e3-2cfc-4bc6-99c3-4d6a4392ce38"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed201e85-11f9-4cd9-8f17-c7f69436e366",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0aa1d606-1db2-4ad8-b4df-6b00782750ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fcf071d-6a52-482d-ae26-3b7696f66af9",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c99870d-ab7c-4a45-8621-80a2e8022f6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a34652d-6d27-4ccb-af08-da853166e827"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f896b1a1-ccbe-4a1c-a1fd-56119e420079",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "91770554-4093-4f28-81da-2189aab7bd43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "780f0aa7-1e0a-4143-b88a-361ee734616b",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0eda4ae-7c94-4931-b7bb-7efdf5443aed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe08ddc7-e3ef-4049-89b3-9af865e554c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "506b1394-b000-4429-b2be-d81cb220b830",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ce58e023-d486-40e1-bf26-329fa90a9519"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f71c01b7-02c5-49ed-97af-fad629b66a29",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71fac8f3-66f0-4906-8f85-a770e6c3407b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ddce9a3-4125-4130-afd1-f38d9a4b0512"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1d05038-ee56-45d7-9be6-f2a219769ffb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "1d13f250-29f8-4287-a380-9d8af36bdabc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e15cfa93-873a-49ff-996f-5c45704f8e5b",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a36975f8-2d64-4167-b7b5-de194c606b44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90055e87-85bb-4b40-b56e-d5347c58c17c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6393f82-6433-482c-940d-32ddc0fdb705",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "5956f7a1-b03a-4945-a178-703928d07e5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "884d9b81-154c-40e5-b415-dd1f679ffa00",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bb303c3-2523-4a12-b59c-693656fa1389",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5affc3e7-5264-465b-9b15-67113f0aea65"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7018c760-ac46-4c31-bf87-7633f2a69786",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "ff22a87d-bf1c-4280-96bf-5b5f4783166e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee1b13eb-3c21-46b7-8410-8594bcf9b023",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f952423-724a-4963-858b-5561755d54dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "866678e7-bdab-41e8-8a97-b549e52606d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c31f5fbb-d47d-4778-9640-7dcb6dc872e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "fa9c8086-db87-4215-a12a-6393a2b069dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee7e9f81-fbac-4c7a-b502-e4ff801bc199",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d85b06c-c944-4e88-960e-4752a723debe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fdf1c76b-7cc7-4c3d-8a39-171bbe60b4fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ff920df-35a7-4fa8-a32b-c18d0dfd0901",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "87fae50d-07e4-45a2-8188-d19796fc695a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e94a8364-8b75-469d-b08f-7c6b19bf100b",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "891e7619-07e6-46b3-984b-4151de646b21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "efbe8329-ea67-4585-9edb-ca8fe7b1fa8a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c165d00-0392-4fe3-94a7-c050344b2dc0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "5e3e9737-b212-403f-82fa-622644167a7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3dd417e1-d52d-46e9-a227-13efe05162e8",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0972824c-0541-493e-8d71-02ca8cb0606b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af95fd4a-f102-4e51-91f9-c05030970c06"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5eb9e4fe-55b9-4398-bdc9-6c5e2dc54659",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "951b9768-102d-4d0f-9146-ebdff14f6c33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ace0a0c-bca4-4fbf-9453-375b4ed73981",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d691db91-3048-47c7-8f9c-f20050b85128",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67903bc9-4d34-4633-92ec-eb842f4a7da6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b445e3dc-5ee5-4bf6-8bd6-d34bcfcb000c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "31120258-02bf-442f-8d2d-122672307f70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3d2185b-0750-4914-8629-e4e2a4777b7b",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "894a892a-4be2-4cfc-b6f9-eb7f8b7f27ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2ad1886-0095-4c53-884f-7adb2e6bc678"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf62c9e0-4f9a-470e-896f-160bffa16a89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "921c5f2e-281a-4c8f-89ac-75769474ebbc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec5b1723-156a-4080-b0e9-1fe51a95d20b",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3826060d-7af0-4ce9-b661-3a38c9845561",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9bd0bb56-1b13-4027-ac92-775964cf8f89"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "152f574f-7db2-4ccb-9b67-657e1e9cdb1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "dd8302bd-9b83-4bef-b408-69b4b5242d11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87d8fcfb-e281-4057-a6df-687bea9ac87a",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb88c5ce-3050-41d8-91fc-32d3c64cfe49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b3fec00-3827-4a93-900f-f4375196f6eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "576f68ac-ca2b-437e-a1bf-95b26d36594b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3acb23b3-4d21-4bd1-93b8-66b0a3bf1708"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9d5aaa1-d2c1-4427-a8a0-2b033e59a53f",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6332b24-3969-40c7-b7cd-864dd1eca255",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d8ad869-a813-40b1-a885-addfed0f4726"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dada33b7-4a72-486c-a7b8-71fb3a297710",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "14e2b157-bc25-43fa-9046-bf9b99171cbc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6500d24a-4d0e-4e6b-a171-49ce2af7538b",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c511c8b9-e26d-4185-a6fd-372f9e037b83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b18d4657-3061-48f3-8100-b9afebae4425"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1550212d-eea3-4678-a99b-3f5e977d65cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "690eb217-055e-44e4-b6ca-c83feced5eb3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f23ccff8-0101-42ac-99cd-3c423821cbf7",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c45d2355-9574-4442-b5bf-a69a4efaa777",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc6f58a7-fbb0-4b41-8274-4b11d28434c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfb674a1-19c7-477a-8da6-c8eb631b714e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "d555ae68-ea31-48f7-92f7-90195d2ebaa6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9cd8b73-2681-4cb7-b0a0-aa40780e7680",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e33f531-6721-4625-b371-afcac0eb3c77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7d90cbae-570f-4965-9734-ef227a2e29ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "edd2d056-416c-4f70-989a-95f924eeaab6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f7d0d38a-e020-459a-8f10-6b4416931235"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a68ce4e3-3550-499f-af21-d628273d3fc7",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bfc4c28-8429-4a64-997e-6f99fbe81b56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0502fde5-6a8e-4e66-b0b2-0ae8afaf3cb7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a144ae5-a5eb-465d-9ffc-598d39ed5b1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "77709f1d-b6d5-48de-8a83-f70622386d44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a28a61f5-af99-4c41-9f99-8de52e5fb41b",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c04ec492-f740-4090-96e6-12b16ddbf4e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba39eee8-8364-4fbe-94d4-c19ce3109ce3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51e11186-d4c2-4e59-95a6-19788807794d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "feea4094-cf18-4bf5-ba9b-d30c489d4fd4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c7d8b2c-de78-4f11-abad-2176dc49a7a7",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bda29fc-f282-4497-99e5-52d4128072e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f451f95-9d0b-4c85-a6b7-4b939ccd4c1f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c99a0219-572f-4486-b703-636d48698c45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "3cecc012-eb76-4ba6-a246-cfe2ba47ca8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b576f01-8b1e-49c9-b23c-63a111ee8ec0",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fcc81f0-5264-4859-8775-6a97edb1f362",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5122cc50-2393-45ab-b6aa-8d1af602e229"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4da8651a-468b-4916-828d-815f596c15ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "2b1ef2eb-84fa-4ac3-8a7c-e15b2c4eaed4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "590e4a20-ce24-4105-a809-1ed853d391a0",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "857c9445-be51-482d-ad00-41c03dbde9c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c484b6b5-37d5-46a7-b89f-ac3dbd4dd130"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8930a8f7-ba80-437f-9432-a83dbcef8666",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "9062bebf-5e4a-46be-9c88-72a0a7695508"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11efd598-ae14-42c7-a141-1994c9784cf5",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90c7bfa5-ad55-421b-9c81-f6bd710a2aa6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0eed7ad7-d93e-48f5-9004-b5ec2e5c4845"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e9f7dc3-998c-43bd-9736-fe8feff4f531",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "df6ff4b3-5f2a-40a4-89d3-26932a13600d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "611af37e-8825-4bdb-8ff4-c016f44bb9c6",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10be5753-18df-4880-a284-7db98da110c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aaf10b86-0b46-4a80-b326-a74bf7c80448"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75e5b523-fd3f-4c76-91a4-8fbb9d3e1860",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "fc071646-dd48-4ff8-93be-e151440dd77c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6003a2b3-dfc9-4b6e-b729-e1bdb8d4827d",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be3678f9-b6f2-410e-a023-1360065cd882",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f28e32fc-71d5-4c57-9139-8989cfb1a9cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d41b242a-9d43-4531-b383-1db41ad2f015",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "26c77e0d-44c5-4ca5-bf4b-4e0f3c7e97c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "995533ce-92f2-417c-9722-53517262707a",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d13b8825-0243-404f-90da-5c8f5627611b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "912f2989-848b-4c7f-bfc5-19d03a90a8d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9790323e-c20e-4d6c-91a2-e8102e2203bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "2fa30ac2-8591-4646-b779-ad1350d3e845"
                        }
                      }
                    ]
                  },
                  {
                    "id": "695340a7-1ffc-4e0a-a771-11064727f037",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad292687-57a6-4176-89b3-0d8f44e97504",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b1cb7cc-fd5f-4fde-b449-6fc10c1a986e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88dc35ee-9237-42fa-a267-958b9b6b2a60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "738804bd-d659-4bab-9308-2d7d2630fece"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5781f1b2-48c6-479f-9214-984f94042a4f",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "705daec2-e23b-4c1c-a007-80872cd01f07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95b62f21-7f0b-47de-8963-98e35a53b532"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "744b6f0d-0cdd-4928-bd14-913f9d10fa92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "fce828fe-a4b0-4ba8-80b8-2d778d3de032"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0796af1-a460-4b39-b4e7-8f6638c25101",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62fc5ff0-77c4-4fa9-b025-04780b8c2cdf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66ed3355-ef10-4d26-8ef8-a1ffce683772"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4ff0e91-3029-4457-abd3-99660448b2e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3ec3dd7b-c6b7-4a17-bf16-57d705f6cf55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ccb1fecd-7970-4a12-87d3-dd1f7f45c67f",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98335338-6373-469b-a411-adb1abb3aa0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78074342-74ea-4702-b1b8-f162cb84e512"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6b793c0-606d-431b-a57d-f6bab73b07a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "88c58de8-dd73-4b16-93c9-72c4e7ad7bc8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed977c12-6257-4151-bc1c-e2eedca354f6",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a155c71e-ab2b-4832-a8fb-d4c27fe5b733",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e45b9725-5b1e-45e2-9abc-b9aae84e9a8a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a5c9ca7-42e4-49e7-ac29-6b772bf0c6d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "9fe481ed-3535-4b8c-84b0-460a982fe096"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36f84452-c908-438a-b693-addfea0bbf84",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9f391cf-37d4-47da-9e25-5193ab37b54f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "000f79a4-dd5f-421e-b5c6-f2395c1970bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08cb177f-f792-450a-a0c8-117cf3288a5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "5f6f873b-b5a8-40ea-a4be-83f04ef6e25b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f0c4a8d-4c75-4337-8b56-1ed3934eb620",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d8b45ea-9b9a-46d8-b92d-598044fe133b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1fe39188-5536-434d-987a-54052ac501a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6278180-39ad-4288-9d1f-cda7a92eaeb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "82afcfb5-adcf-48f4-9924-9d8cca5e6b58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d067a506-411a-4961-8af8-3926e4746b88",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b48b4ca-acc0-447b-b555-fef78403718f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2b52d6c-663f-4343-8832-1ed4a1c25dca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a62488e-61ab-47cf-a7d6-0bdaf8d8db3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6cdeff88-8450-4c71-85d9-fb72bcd50d6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69585a04-4c41-4194-aadb-fc175b62e2f9",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b5d8a28-5b08-4009-8d5f-ce57bb648fda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18e1af01-ba2b-4187-8a13-8181c7d6258f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f589dd9-f70e-43bd-a337-7e5da68d7c78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "847ff42a-d0c5-4e36-822c-0b6267d24a6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4204fef3-954d-4e28-baeb-ae24c54962a0",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "660e59c1-1e94-427a-80f2-368221735a42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd5f7529-3069-4df0-8724-2b8af545417b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1201f0e0-51a5-4438-b1e9-94a83565b795",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0fd86a6a-7317-4c3b-86ef-9f3c1270fa75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "521c5051-33d2-43cc-9ea4-b089094ae158",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf4c06b2-417a-4de6-a736-777cf9cfa757",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3f9783b-ee0d-4fb1-932a-191532e24156"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80bd2523-f475-4657-af1e-00d80f7c00a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "6bf80386-a370-4d58-9a59-1bb5e74307c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c7b2923-5f0c-4d4b-8928-4a9189f4bcaa",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b3e663e-254f-43ef-828d-e15891d55d06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ea0062d-b1b3-4ec0-839a-9d94dcf538e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a1ec428-c08c-42d4-965f-7f7cad96f6cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "22789546-df97-4c71-8f09-18b242ec113c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ce02e08-aa62-4079-b80c-f8611e91f25d",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "485c74c6-8a11-4099-b3d7-6edf76582263",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0bdbc5be-0d30-46e5-8971-44ad80995850"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8389661-f850-4dc9-ae22-f5fd9d1aaf0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "ba4b7385-ddb3-4b74-8963-11098cb85577"
                        }
                      }
                    ]
                  },
                  {
                    "id": "067e3df6-6a51-4133-94a8-690ca1029a0b",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6699aa85-cfe0-49c3-a558-57c3b0a0e4ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f081312-442d-4f4d-afbb-17fcc404b24d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d33fa372-4f41-4fa1-b057-18a35ff6662e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "97f3c6c6-e078-4778-95b4-6532b7601799"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2557cd4c-4684-469b-af21-c338d4ac9dfc",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78564bb5-a245-457e-95e3-cf7ea6d27839",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03e4f311-4a8d-438d-88a2-efadda82f483"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1bc57d9f-0c62-4195-9769-607896d745c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "663637b6-55e8-41db-bbaf-14df70755d1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cdafc0bf-7357-48d3-929c-26b6934ed5ed",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89c30430-d7cf-4fc6-a7b1-0878c09e63d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1cd4077-c129-4887-afe7-c20a69a6cb99"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60cc43f4-e295-49b0-ac5d-6dc6ef2b7c94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "f5d565ff-2e53-41a4-ba9a-6b23cefc4d3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46056dda-e740-42c0-8e18-4473f80d4dd0",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99458b77-083f-4338-8532-6c0ee29c5590",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e5e55c5-6705-4dbf-8df8-309c33a32df7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "351912dd-2edb-4586-9f4b-4cb4a51fe5d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "19a6b56f-f187-4bb1-accc-c19385e29ae4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "debc5182-3d2e-44cb-a7b6-e391b812e3ae",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c3b5bc9-c4a7-4ffd-a0db-29b0b4c33ae5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d232b3b-0258-4def-ab26-bbd580d5a73b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec214515-ee2e-404c-a654-8d5b538bb624",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "702c264f-1b6e-410b-9ee2-0818f1d1e6db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1247f2b1-d289-4e3d-835e-4c272d8ff14e",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "616e0c25-9e1b-4622-94c0-5672951f93ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c93f295e-e44b-4849-8b49-b3522130d007"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89d8bb35-5bf9-4ba6-914b-9da4467a3658",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a4c71374-7766-4418-93d0-4d5373743dc3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48fec4b0-4e14-4fee-8ecc-eec9c0bc060a",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec9cd5f4-3bf7-43b9-b625-595269c2b8e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74a811eb-8a96-4891-9537-c220df7255e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9d26f87-aaec-449e-a8f7-0991d656187b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "05b28306-0acb-411e-ac56-1b112922cdac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94d4e883-9930-4027-8651-0abef133d72c",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59b10f29-5721-4229-8537-c635293daf01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91211850-af3b-4330-ac3a-18dee666be59"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5bbecee5-54b9-4181-bf85-33f8bfda8e1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ef451043-ce59-4685-857d-d5acdf8bcc9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "124fbc48-55c3-4591-aae0-c6cfc0ae7130",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b81ead59-1472-4298-b00b-61ec0f3a365e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84dc7914-3a72-40b9-b23c-5f3405782760"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "caa2d14d-8901-40f4-91eb-f9e4346554d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "8e9ce388-70e8-4f90-b4f8-3a46ef2ddd89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0392880-a753-456c-9803-ce6c730eb469",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "182e2fef-a229-4da3-8082-4a580cd3e46a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68c38590-d7b3-4b38-bd82-1b35a9e9d089"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b92f61e3-da7f-4d0a-b284-ac70783edd46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "34ad98da-3ca1-4fc8-a647-3c8cc3d0526d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5bec665d-00e4-45d0-b4e9-78ac29f733fd",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "948a53eb-dd1c-46dc-996e-8d611001844b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c425d5dc-15e3-4efd-9bc5-17511c06d8f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28b24fb0-8678-4544-8737-f5ffee9ad124",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "df1c0e5c-ba18-48d2-a33f-cb8c4faef572"
                        }
                      }
                    ]
                  },
                  {
                    "id": "073cc8a1-b8d5-483c-82e0-1eb943761432",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd362297-5516-4583-bc75-b87f81991647",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94cbef3f-b6a7-49e6-9ec6-40e3ddd55eb4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d8996a9-8945-423f-819c-9dc44313eea5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3a4fcd65-2ba0-4b6a-b60d-b1eb2aee4903"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98f5daf3-4513-4a41-88c8-d4790e820434",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2282f841-497e-46ed-ab83-034879e17baf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1edbfb3-42b1-4387-ba0e-46d98e63403e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91f7b6b0-8bb0-453a-861d-8e0a9f8fb489",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c8cabe0a-a50e-495d-bff3-98e07f0ad79c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5d8045a-d367-49a1-83da-8bae5200336d",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ddd5400-95cc-4579-93dd-4901f4be557d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3032494c-7703-41c1-855b-523e722871ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f81acd4c-d0b4-43a7-a867-a010e435ff55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "cc811b39-7cef-451e-aa47-6aabfc672bd6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ceb1dba4-38e1-4519-b08d-5783fbc72da8",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ed61ec4-35d8-478c-b7e2-28ee8c4acaf4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "398d67e5-ef76-4491-b34d-812226131905"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ad6e5c5-ebd4-4102-b180-3a01eba6c990",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a4dc344c-5766-4b88-81e1-a89d36cec59c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d3a6cb0-671f-4a2f-9e4b-7d85d154cbea",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6923af69-fe96-43ad-84a6-9cf69f91e518",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6428643-242f-4202-9e7d-7d255d510fb5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c9970f6-2f4c-432a-8a5c-61d0a29d5646",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b26daf82-2c1e-4d95-9976-3740a3744c20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5a261a7-ae08-4ec4-aea6-fe26722d6910",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5820e205-cf03-408f-92ed-7e04f3097595",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "935f5884-a5a6-499c-8980-c7a959c95b09"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7d05ff0-62c0-448f-8322-4fc18552981e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "c5291114-8f3a-433c-adf6-1c54769864d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ba39fa0-c270-42de-a93f-5d88b93c8b1c",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc20bc39-c7bc-49b1-b33c-022fbdbc5e6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a300046-85b2-4107-9174-03cea5f0d3e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aae0c95a-2a0d-434a-a8e0-09165fbd5b86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4ecaccfb-6b57-4541-9a83-ee0a1ec634e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c77a850d-62f3-48ff-b544-c36522410c2a",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68d4308d-4891-4008-ba3a-f795fb0763c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "83753d9c-b366-4da0-be39-d956cda7576e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7c6bffc-b159-4e41-b2ec-e1a9cb901c38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "409ff242-dac7-46b9-b764-aa2be6ed9527"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d37ee531-f282-464a-938d-27af94417b4e",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "370d313a-fd1e-4835-9ad6-41985b6b56db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fcb9e418-0d69-45e8-be09-5c8ed211f683"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48c2bc3d-2057-462f-91d9-95927fb98947",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8b8ad707-db0c-4298-b982-3a73796c2f8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0e0310d-f6e1-4006-92a3-5087a8b494d7",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "605c4eaf-e075-4c1f-9b64-df89d7125514",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b53a22d5-0e62-4dc6-aa0e-f8f2e746089c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc434170-037c-48e6-b86f-2fac315782dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "eda34619-b3c2-4bc2-a0eb-1cb793dc0d02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22d0f300-2317-496a-80a0-314e32d7a986",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d874ab9c-7617-44bc-901e-76f15bb0ee66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61c515ca-444a-4945-b7d4-12f961a6049b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f173464f-870d-4d52-bc95-b1063982196b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ecc31c4f-255d-451a-ba7c-cd1ac9cd4362"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8f9e0c6-c11d-4e1c-991f-95cd39848480",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16797f90-2dc0-4b49-a345-af4fce1f7d2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "155ebb72-6fb3-435d-8bb4-23f11afd49ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd8a7156-2aa9-456d-99d2-c30c3a9ab8f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "03604f89-925e-4498-aae8-743e7fc66f95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d14566f-996d-4087-8999-016c7c69f539",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00362f7c-5848-4132-9561-4d6a4c50dcba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d1c26410-7cd2-45af-a43e-0793aa451b21"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fee947d-1034-4eba-9217-b840c3fed479",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8d49463d-4e84-4a91-b0f5-bbba9c87dd74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3504c464-d397-4065-9cd3-51bbfb1c765a",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28f92aa5-4643-4ebf-b6f8-8e822f936c71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1640fa3-e44b-4e30-a376-e4be6bc0e962"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21f4ee0b-f133-481b-a891-6051361ee3eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "cff20291-1a20-4998-83c5-6f4f2186f217"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9003ffaa-6464-481a-ac0d-344ad1f8d8af",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4e65208-f475-4a17-9efb-49050d79771c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "059bd8d1-0787-4adb-a4c2-fa9a182b8887"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df818f74-a6fe-450c-b216-975acece71c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5b1fcb3b-63d6-4b60-b277-d6a4787a1a6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3fdc2da9-dfc7-4081-b1eb-1e451f3bd89c",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "001a19e3-ca5c-439d-8047-8b644c6f3550",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "949b94f8-9446-4f98-b99e-c3d632f5e868"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "004aa763-88ad-420c-b540-c1d27811fb02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "2fce1950-30da-4a7b-b475-6a04fe42977f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4091d345-3b9c-4811-b610-e8b1e9e20c86",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3046f49-1d89-4041-8587-3a3d143b6330",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "452caaec-d79f-4626-b244-410da3800300"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6fe118a-77e5-44ee-99c4-1769987d1f15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d502fb55-a023-4de8-aa5b-98bfaf284bd2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5cf18511-d291-4627-a84c-09653961aeca",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5814dae-8327-4ec6-8338-804219cf285a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d37cf7e4-c2c0-40f8-a858-be5e0fe9002a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b92c1d3-ee6f-4c74-81cd-b5788a2e5f31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "edd85086-d0a2-4fdd-9648-412829933ab5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8540896-37b8-4777-90d2-9b1b00289eb4",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3eb693bf-57c7-4ef6-b9b4-72c20680df5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ac2756d-0e89-4c8d-81ac-c25d4587327d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fec16ab-f5a5-46a0-ad36-dcc44da6ea77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "94d812d6-4078-4709-bedf-b35f20b5928a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67b88896-bb27-4cff-9050-36223f9b2d1c",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f97a3afc-98c8-4d6f-a52c-2ba6ec85822a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce45655c-c0f8-4915-8ee6-eaae2a022c22"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65b80217-d374-4251-ad71-5ef7c27e8a48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "55215465-2ee0-4f15-8939-6016870a4079"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9007a5f-7f63-40fd-9504-bf9f7f19bc3e",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0fe06c4-2231-4536-9c34-6b2627ac10d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac88ed63-58bf-4e51-baf8-7a4fe3b9f2cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3d0cdf8-ffb9-4d1d-9d70-7dfb2f935411",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "bf8dbef3-0a0e-4f80-aae2-fea11c98bd32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5bb181ca-4379-47cb-9678-0db0177a421a",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6166fee-dc2a-42ee-8460-b4c62761cd97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3faa7a9-5f1b-463b-b2ec-407d3e5380c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e118d9b3-c31b-4b63-8b45-b6c21b069b52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "cc3cd948-7a1e-45c9-8583-33a28a3c273d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21c04d07-7949-44a3-aa58-c9591c8cc66b",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9e3251a-c93f-478d-a313-2463b7be3fbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "8e7eb6c5-63b3-4850-9f28-417cd867c9cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "838ea91f-9824-405e-b8ce-2c75b2b7e8e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "6b690ffd-946b-447c-842a-ae42ee4b0c49"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "969499b8-c2f7-469b-acfd-437f542b0850",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "37e84e96-a542-4b26-b40f-33c5af2bb324",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c339ed3-9600-4ccf-a17d-9b6e819c8cf1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f71d88cf-c51b-415a-ab61-a323cbf3aa21"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f45f51a0-15b1-4048-aea5-636f1afaa1ae",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "62a15b65-24d7-4895-a077-68bcbf880163"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "21e25891-7623-4f34-99ba-c7976ba61a16",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "34275a04-211d-479b-ac81-9e07e2cca345"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ba104ae7-7450-4dfb-9f39-c035cd28db08",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c1f77c23-05f4-4fce-9af3-5cc7c8bb4281"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "273fbbd2-4ab9-46c6-bc48-93756a27510d",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "f1233103-c022-40ef-9183-4ff07e085d0a"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "da3d39ab-7730-4a15-8991-ed3482df7249",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "19fc9a4b-a071-49d8-a29e-e6cb13e3c5b1"
                }
              }
            ]
          },
          {
            "id": "c01b0892-d9f6-455e-9e86-cca95fb34230",
            "name": "Positive Testing",
            "item": [
              {
                "id": "fb1a5b93-37ac-41c7-896a-a39f6ee14486",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "fec63a3f-b1ef-499c-a2c4-834421ddb522",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e313e02e-8020-49c7-b8b0-da8f0c025112",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "bb657ffc-c494-4944-9707-7c6198170d58"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b56379a3-60f6-4828-a793-d7f0b5dd80fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74e9a9f1-558a-4cf7-99c5-35353b74261b"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "a0f4b5ce-638d-4a0a-a997-fbb7ece2c23a",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d1503b46-4468-40d4-839a-6426cb437838",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d5e5e349-b474-43c3-a49f-c81fa68faa9a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2e0b7257-47ad-4029-980d-bc68c0130675",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "82aff999-d32b-421d-aaaa-29656f74097b"
                    }
                  }
                ]
              },
              {
                "id": "4d6bcaca-d2d9-4feb-b851-2c2a659a5e9e",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c87435fb-4ebd-4a4f-9514-d1e3a5738cef",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "09a952a9-82af-4bde-b845-bab4be057a03"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "08b28cf1-3010-47b9-b723-dfc6a2dd9ad8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "d7774247-a1bb-4192-ac4b-7e8d77266ead"
                    }
                  }
                ]
              },
              {
                "id": "119d506d-bb94-4af8-a678-aea12c9b3999",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f239f753-8d6e-46d0-81a7-4810cfe09fb2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e7d16a8e-bf35-4667-af1a-755bfe4690ef"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e4343b44-ebf5-4eb2-81e5-3cb1900a2fd6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "18f18731-18f2-43c3-bcfa-169892cf537d"
                    }
                  }
                ]
              },
              {
                "id": "2d9b00a5-3829-494a-a915-90d5d2f2125c",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6ecf7a8f-fd2e-4e1d-89c1-720851848d7b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "5780b8ee-94ce-4abe-869b-82662347c371"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6f043ea1-2f65-462a-8ee2-b12044f482d9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "2e156d47-bd42-4643-8d34-ab2f1cc265e1"
                    }
                  }
                ]
              },
              {
                "id": "dcecd03e-c48c-449f-8b0d-b4af740f627b",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8261f0f2-3dab-499f-ba66-4652dd186166",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ab1e7124-736c-4f12-8fd5-66aae12cedce"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d4209f16-300e-42ab-bd97-d3408fd42f06",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "8a1f3500-b524-495e-a4cc-3ea658f207a9"
                    }
                  }
                ]
              },
              {
                "id": "b396893c-b96c-4e4b-8f60-acf80be74e3b",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "06b55ba7-d51d-4c71-9da0-90c01c3c4d97",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b2620c28-198b-4a4f-b3d2-2c252664248f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "45ca928b-8748-4a76-b7e1-7dd584d32d2b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "d553c5ee-dae7-487c-af1b-d6e0d8028095"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "00d01008-7402-476e-9ef1-2a8f529bb802",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "14b15d44-1d84-4665-891e-5eb1677ecb0c"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "a163bcd2-b0e9-4e58-be35-9010ba3417a8",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "4ba6161d-9662-458e-89a4-8a101c9acf02"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4685b49a-94af-4ca1-b061-20f1e1a5c955",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "edacc463-fe91-4e23-bafd-3144184ce830"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d6a22c6b-a6fa-406a-8ce3-05a5824048a1",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "09010b72-ed24-47ad-879e-fa625b33d52b"
            }
          }
        ]
      },
      {
        "id": "93764aea-168e-4d54-8348-e69aea49130e",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "57f7c72b-6426-468e-9ea3-7c0220d303fa",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d9057aed-6502-46bb-aaec-cf7de88df0a1",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "c0b9661b-e577-4f40-9946-50f2dc5e202c",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1150101-73a0-45e7-8d5f-dd5348bdfbb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e25227d-172e-48df-9344-ee8a013eb90b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d835772-0e93-45fe-b8e2-4a36ddd458c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "d9d550f3-e25f-4131-848b-92172ad18d43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aca3e2f2-80e7-4c5d-961f-6f6240d13481",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "feeb251a-753c-4820-911d-6f71437645e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a604b3e-aeee-4ab1-8b2d-4ea1d776f5cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0641980-b830-45f5-960f-075c90710e42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "f5d3d72f-f784-4580-a090-18c8feb7b9a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c70dcfb-903f-4d4d-8256-86b6ad82637b",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bef8bdd9-143a-4daa-b739-0af99a19d22e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05242a8e-a608-462b-b379-03d7c90edcf6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8998c771-458d-4535-8195-6259fde74d96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1f145ae0-944c-4fb0-82d0-03d077dbc837"
                        }
                      }
                    ]
                  },
                  {
                    "id": "162ce2d6-9023-4290-8b5f-5074c01944cf",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a8dbf8d-68e2-4038-95b8-6d2511682bc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3264e60e-4a2f-442c-aae5-a921614a26bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e86aff1a-a8ae-4e0f-bf0f-3971a2dde481",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2c066707-f5b6-43da-808f-0871a0c957a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bf4f708-e180-4c19-ab5b-59ff923c62cd",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "320138f6-8a47-45b1-ab53-23cc0fae3260",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c855738e-1368-4ded-89b7-3bcbf0fd733a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f395c7a-7474-4438-88c7-da908d3786b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e9721e43-cce7-43e6-a6be-c4951ba4f34e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28534880-47a0-4b7a-ade7-68a904d24394",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5abe56ca-da1f-4e1e-b59d-abf7067cb032",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39d2335a-e2b4-4136-b17f-9878455ad59f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7a1ef84-b8f9-49b2-8cbf-7b80105b5669",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "5c7ea049-3722-41e6-a460-fe21aaf04274"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ef786e6-92a3-4ed2-993c-da65c2745a27",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61a69c99-9938-44e6-b42f-d67f15a55374",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c48c1e0-437b-4e46-9290-dabcee301d4a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f4e1da1-5009-425d-a2f8-0172b4665b5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "0d0382de-3b0d-4df7-bb10-b5aec2561cbf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d950b42b-02ee-4105-9cd9-0abfc30703f1",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1db526b6-258b-47cc-9f67-70907526cf88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a71c520a-6dcc-4edd-82ca-cfb730f12c55"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27bc0ace-4cb2-4390-8f94-beffbe785824",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5a9f59c7-b1ce-4f5c-b693-0d814a02671d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fdb2720-689e-4ce4-b13b-16ab6fca6079",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc0bc1ee-e3ab-4d21-8b6a-9f0dba738ac5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07ef2c1a-88af-42ee-a4fa-90999c90f612"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b18b2e09-4bc6-4db8-a53e-29f753c83911",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ac677cf2-7d74-4305-b4df-c529c077845e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4aacc1f-ec9d-4d84-9b67-e95497253c4f",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f3377b8-b27d-405d-9922-af1fc148e3f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3dc3f581-e8db-452d-aafa-49d522af3ea3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78781d7b-738c-46c5-a588-6b155b75f825",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "768826ce-d44c-4cdf-8044-123321b6ec16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76202767-3db4-412c-b696-0055171fb0c9",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de6952c0-e4d5-4462-a532-11484f5ce180",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c482ac3a-bb50-48d3-9245-493139fb8535"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f1c740a-4b49-4384-abab-77903870d0c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "9540c83f-c929-4c03-a2f5-ec0296fb8f14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3b1b7c5-c086-41ff-a6f4-f44f1fa46461",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f394987-9bf5-4c96-9a09-9f17de5d632b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd4460c9-66eb-42f5-8aa9-3b1c479f80b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "695e63ac-5461-4c16-afb1-37e32c66863d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c6c84ea2-4ff0-4798-9460-c372b69b5e37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39fc2671-abe5-497b-b8ce-55538bacd040",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73774afb-07a6-4156-ad04-77ef832fcfd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22798327-0020-4b18-a09a-bb319a4c85c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "351964db-af19-42c1-9c7c-a1c7ef145e08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "29bf5a65-6f75-4f15-bd26-929604d9e3aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a20a5041-b1c4-46ae-889b-e6278f4f8c78",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fb2f456-f818-4048-8b00-ad772d1d45e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8e248e9-a55e-4a1e-b6a8-0a1a46e1ced7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c29ce9d-4426-4167-b9fe-d252e0b99d63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "29d8b79e-d12c-4c49-a007-5b9cd566ffb2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6ec76c3-53b2-456b-b31f-cee531736332",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1315ee9e-d63c-4fcc-8019-cf52009754dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "269493f5-9924-4fe2-aed7-1d4579d8fe1c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5fcb2d9-298e-4f72-89ee-6ea0f8ba21ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "c8250c08-a78b-432c-92d8-82715c926057"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d01e5a0-e01f-4afe-b006-6ea9d9f04e3b",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b6bab7f-fb3f-46e5-98fc-481a5d590ea6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5d94206-d221-44fe-b61d-fcd5a97ae42d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b6c2ad1-e9ac-40ca-bc17-cbba2ed3bd47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "919821da-b5b2-4b9c-842d-faf65cc9d4e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9f09d52-857a-4669-bdf2-bc971b9d80f1",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c198d30-6e7b-40bd-99af-ada413a28556",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4d582e6-81a8-4ebb-b4c4-c02d76ef00df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1e2fc6e-4c35-4af3-941e-ffe56832bde0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "17a106a0-da70-422e-8b2e-5625dc021621"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ecfa563c-f2bc-4c29-b074-fece25b4fca6",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83619da5-6174-4523-8b38-3eb79dcaa3ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb898798-65b7-451c-8972-62cb60bdcd4e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1df89eee-508b-41e9-9f10-113c657215cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "7dac7c7d-d295-4227-85e2-5befca2ca181"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8e2f602-add3-49ec-aef1-32658042515c",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "179eb54f-7406-4b25-8c92-4315c209b286",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a34c1e3-037e-486a-994c-bddecd021517"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "799e1c0c-8e8f-4542-b14f-7105bf5fe7da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e8a22d12-61f6-4705-8008-d7a1761cc447"
                        }
                      }
                    ]
                  },
                  {
                    "id": "460e1f4e-efaa-4ff3-a58b-d5355fb643f4",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3539b4b2-a1d2-4d90-b0a9-cb5ef70c35bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3aec0ab-00cf-4dea-90ac-23b2dcd53de2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca17e952-90cd-4480-9a47-9df3b4e97a64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "56085b70-3d48-4b7d-8478-721700076806"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7c4b361-602a-4aac-afb4-b8b0718904cb",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "849b89fd-6971-4314-a57c-8284128bb378",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18da4893-f774-4b83-b37f-abcfa57317bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b37ddbd-50c4-4866-aeb1-294c08c98b38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ba77fb27-41c1-43bd-a19c-dd433ce1a833"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95d8c1a4-0fd1-43e7-81fa-6a79d0cb402e",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba2d5bbe-dc07-4698-aa04-dbfe6b4005ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "200c5ab7-b1bf-4c11-8580-021cf3fa9e61"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "720fc309-b18f-465e-a4e8-d0d6e9d26860",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8847cef1-f825-4b5b-9e46-f59b1c349864"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dcf3ad31-3fcf-4606-8c24-2cbe06f4fce7",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29e4f414-3ac7-41b4-b4e4-f1aa0abef51e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c015f937-5f8f-45d1-b1c0-3f0e9c0c077d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54163105-0343-4874-a795-2836b1c9201c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e5b5e3c3-38be-4ae5-b0f9-96f9d2229e2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82c9567f-055f-4bdd-9f59-ede9580dc9f8",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32584014-65e1-4120-a7d0-0084f34300c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf406178-8808-42a6-90ba-b29dc60b0bef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da8f0537-b658-4357-b651-7da2e7f13f32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b3bcb21a-f8ab-4d5c-ab34-5493cb0df173"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa8fed34-4da2-4eaa-a7ef-aa5254cb3d40",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45003fe7-4a85-455e-9ed7-d8f4f2dc8c4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d121b77-ac3b-4c8e-b2be-196d6294ed9f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7983887a-1f70-481b-8670-ad5c2dbccd35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e2ad16a0-20a3-4c71-ab02-7a4531f288b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "199b7794-e934-4c03-a20a-9f6ab13043f2",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6e2a59b-2438-4248-9760-9cb8f1b06a66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b521618d-18d2-4f25-ae73-66206da3001e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24097be8-25b8-4b9c-b59e-d4dc8b2322ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "520c66fa-09f2-44c2-823b-85afb1fcc8d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bc1774d-21f0-45b4-aa18-dee7b04f8ffe",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc1f0afc-1362-4666-b279-2b7d350d6e02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b65a9ad-abb6-4265-878a-2a03178a9dd2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ee9968f-2bee-4abb-a9e4-bc2d5bf3ffb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a1f5ae4c-850b-4bed-b504-1a34e37b68da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3e8a97e-862d-494e-886e-efec833caf60",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61cbdbe0-94bf-451d-aea6-fb234de869c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1aa19e02-e135-4f95-9b41-2c4c95e03f20"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc7ee0e4-8ba6-446a-8ed2-728d497d55fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "770c7d87-f11a-4e8a-995c-c31f89098e5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40f74e4c-f6fc-406b-8bba-82696ab3dbdf",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ad6819c-846b-4665-bc2a-9f9dabd213d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99b3500e-361b-4c26-a43e-ffd854ff5e85"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04dc1320-f7ae-4b2a-831d-36a4fd4e04c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d1365d7d-1c92-40d5-8d44-0923bbecdd94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5d66249-7c0b-4d5d-858e-0b7d31340212",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3131ecb-007f-4b26-a74a-eee86e7c2dcf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a753ff7-ec18-49f0-94d7-dc9883d2d111"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1f1aadb-c6e7-4a7e-ab0a-a405f3b28762",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f2dbbd40-b148-4e46-94d8-8e83c5449ebf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79de881d-9b69-488a-87eb-52205ed35aae",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a865f7cf-e5f6-407e-9e3b-ba03e0ab0966",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c4c7709-599c-4c79-9408-7c957aed0204"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b531f24a-cbc2-4a0e-b29e-cc0a39e162b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "81ad7567-d210-48db-88a6-175bfb505bbf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6df8482b-f73d-4d5f-a66e-7f41ea916b75",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3875004-3326-458d-b499-4ece21299896",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6253866-68fd-44ff-a740-f7eb73ed8ae5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22ac0df7-cd05-4ad6-98fc-86f79028457d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b5838799-6519-42d3-8b9b-bf447c3c0970"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "7b721888-6bbb-49ea-a7d3-ab55190af426",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "814822f8-035a-4d20-b347-36fe63d8e993",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ddbc6ec-14a4-4b0e-85e5-425c0dcecc59",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "3dc99fdc-5b1c-4fe7-9f19-e4736001199a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebce3d5b-5278-4603-aac3-9bf58818b4f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "202f63ab-94b8-44c6-bcdb-db135ffc39b4"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "69fb7329-0cad-4225-aaa5-419961ee7c2a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ea40a43e-c2e5-4562-9d3f-abaf838f1125"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "32ba5147-7fcd-4bf3-8a85-a5f290066570",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0e391adb-8fe1-4928-9cd2-eee61dbbb537"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8b131a28-255e-412d-905e-843ffc385163",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "6193670a-6be5-4ee2-bafa-5da9a62b96ff"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "850fcb67-79f5-4a0a-8a20-303ce9bcf594",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "612be822-ad2c-49ed-b0a3-d68c7f993e75"
            }
          }
        ]
      },
      {
        "id": "98a7e626-f671-43f6-b3f0-729afa578b89",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "11fe3207-c6d9-4190-9a63-46beafb40503",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d2acf33f-b842-4483-88da-cf302a26218c",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "ee84f6b1-f776-4664-ba6c-a56780856a87",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aeccdeb9-29fb-4d48-bca4-760a3339b87b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22dd28d3-f899-425a-8755-cc59e2daf7ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6bed43d9-19fa-4761-b276-18aa01e5fe72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "edab7fbd-698f-4c2b-b4fe-fffa252a2f8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e176f493-edab-4f19-b43c-c0e51a1411ae",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f121bbb-d09e-4d74-a1ef-3f9c576bb324",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf543d3a-4498-47e8-a995-7dfc7e8af4b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b08585dc-5c13-4539-8225-2df25d8f55e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "be2e26f4-10e7-492e-a2dc-035355b0b956"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dca12064-0768-45c9-820c-483cf856d1c0",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f3b1db9-8080-4fd4-acdc-ca4c3a3ba15f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d14768f8-0fca-4326-a90d-93ad2777981d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5a82da4-da98-4afa-8a7c-97aab9213325",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "38967ca2-ebc0-4fe5-ad82-d9055d23810d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "663f4543-c467-455b-b1b8-8ff671de564f",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15e19f30-84d5-4e51-906a-90b5dc7265c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1221708-946e-4279-bcdf-72e5f6f4020e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a99ea1e-ec76-4382-ae3f-df99a904d90e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "871b2dec-2e25-41e6-a911-1af5beaab628"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b965a503-5c50-44f2-b4d9-dc962f64af32",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b01b35a3-f2d4-45ab-8df8-6f43ce59477f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7f0c00b-0178-4264-9daa-58881af38136"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09f19ebe-2660-4798-b196-8990cda39881",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e7765e63-d532-45c5-841b-3ecd898bec7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07af1212-c78f-4899-aefc-45270b655927",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "669d6911-fe34-4b34-8b6d-160f5311e471",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e542b301-5702-4ec1-ab60-adb0cecc3d49"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1cbc4b76-53c2-45d2-bb7d-df997b10a715",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "469a78cf-9ae7-4482-a13e-0f92ec7d3c93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fee1ee9-797a-45cb-903e-faa574d68eb4",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c76a6ea7-ffe8-401a-9742-d699501b2cc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c94a1e32-5a7b-404e-8e6b-5a1f63df1366"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fc35087-2ad7-4924-857e-14aa87a1a6dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "5a19874f-eddf-47f0-83ba-a5f1b9989618"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b93369ca-7200-441a-9c13-23ac4e0a3431",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95ee92e2-7f4e-4ba1-9d34-6a27c6cf0745",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2b4a0f4-92f4-46ab-97fa-44586c20f0b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49713fd8-6920-4400-baf9-4a0dc5d2e81c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5a83dd3d-01fa-42ad-9370-306a097ba049"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59eadadf-4b5e-431e-9630-d227a859407c",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee6eaa61-26fe-4ebc-93f8-38290b98c403",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d39bd63-8a24-41a1-b016-f7e7f09bbb5f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "984c14c7-c652-4533-a54a-76514349f687",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5ad1630f-cea7-4aef-8e8b-ac37ad42649d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e28b147f-ac22-4de7-9b7a-71e126fbcbb3",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdc65a1f-9b42-4133-bcc9-e5250ffeec2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86a24d41-a4da-4b61-8df8-d33b33db5ead"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "edfbbb74-c405-4a89-892f-589687bf51a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "891d5a99-3052-41eb-9299-c0a67dc629c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c4198d7-2d7a-404a-8cb5-31a0399e584e",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9efcba9-127d-4c09-907f-a6f5d5978ec5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b0f40f98-ed03-4670-96fa-c7f14257c5b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d3d1966-47fd-4dac-bc6e-e31664a753b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "8ef6cb22-31af-4a36-85ce-1439d0bca4e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f0ceb2d-7621-4b6c-9bf1-b6189c5fe3b5",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ba43f43-eef5-4d25-9efe-006a837d84c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8ee289c-b4cd-45db-95a6-bbc078bac403"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2227a73d-f4a5-4a8b-9883-73b5dcd4662d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "959a23f0-7bb7-48a0-88ae-891feee08136"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2f16417-e19d-4dab-bb40-4f0e63ccf2f2",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf178469-b83c-40ac-a8c1-dc13164e2556",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5881159-8ad1-4a5f-92ec-8e3931201133"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f76daaf-4f1e-40c0-ac56-6abccd34957e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "60acbc7a-204b-4e46-8a13-96a538c15c35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbff75e3-f729-4afe-a078-f3e8a081da81",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b341f38d-ca57-4554-9c19-d3da1be3e4fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80f42e7b-f6f8-4740-9135-570a14ce7834"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8cd671ae-d126-4aed-8fef-2831e58b823a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "664890d7-ce3f-4615-8951-53a959b405bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d5562ea-092e-438e-bfab-6c744f80973a",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44616897-27a1-4d9d-bf87-a196e0a5d481",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7723bfd2-85f1-4fda-a9e8-975715a74ea5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "072007b0-8a24-420c-8988-bedcc8e7276d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "ffdc6c01-7edf-42c3-beab-538e7e26343a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "918474bb-b836-462a-b38f-cb458d3b2552",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85fa98d4-61e0-4da8-b109-74478db5b530",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f93de9a4-a579-4530-b5c0-1ecc09163abf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f09bec25-386c-465b-8f28-40cc4319a2c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "d71cbec9-9906-4648-9815-d7869c7aabc9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2dac0da8-491c-4113-bfee-b3ffa0de2e0b",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "055b6df6-7027-44df-b9dd-9ac4f18166da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "251a2f03-69de-48af-a126-2b430f287ee0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca521157-63aa-4dab-b125-5e4aecdf5211",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "6c631ea8-7f47-413a-b583-d41421172898"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c21fa83e-58ee-46bd-9594-0aed771e3df8",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65e5ba27-8e8d-443f-9672-c2748605e15f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bad74aa4-b586-4aab-889d-8ee77b5d4f4c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "784e3895-a82a-4f60-8729-8e1a2b305996",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "e0b717dd-aee7-4125-a94d-c2e5ecd2d974"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f85036c-d488-4e63-a8bd-6300ef3f75cf",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5881ae42-cdd8-467e-a09c-8e637a89e077",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4fb61ccd-31d8-40d9-9bd2-1e32a7a67d0d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c2e70c0-f34d-4c85-aa56-6b732a2fd132",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f52305a7-2242-4a49-a49b-3601fe7b2423"
                        }
                      }
                    ]
                  },
                  {
                    "id": "336e0a23-9753-4eb9-a653-10323d26cf55",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76d76a86-b913-4acd-a733-2d5c4255ad9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4fbad2b9-b085-43f5-834e-9c78df7803e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a1eec48-1f44-4043-9749-89897db7fbe7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "38ab9768-f8a2-4b39-82ec-e615664ca951"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb56b266-d752-48b0-979c-a001ff917741",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff3e5e51-c3b5-45ca-a02e-c9cf03d93631",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10a75122-a48b-462d-9616-32d81c872ebd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d32e4f0d-14a0-491f-acef-bcb4dfe8dc79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ce4eed8c-e1c9-4584-9479-8acc3b63e63f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "779a3ad8-11b8-42de-9094-a7484b351937",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58989d87-4417-4b8c-b861-186c4cecc2fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f9365f8-531f-44f4-9384-ba9509edf717"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "891b6744-455b-48d9-a83f-07c6290a97f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c00f2a96-016c-4164-8504-32d62ced08b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48ee4066-d34c-4ef4-b124-a06554dc4f0d",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "daac4c7a-964d-4163-9736-fbf36dd7f1d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5e4c295-2b21-4fbb-a23e-61c30aa758a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "172863bf-e863-48eb-8363-d153bf8b285f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "51752531-7ffe-4431-924a-eb026af5e4e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a17e5a82-2ded-4711-af6c-3cbd64841a35",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b474cec-3ad9-4c82-9d47-66c441cfe396",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02cc156f-f09f-4680-817a-3a7b82842256"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e102730-9f5b-48d1-a129-83127a80e241",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3fa97b69-2be9-46ad-9d43-525bb2d17ab9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5348896d-5636-44b2-b64a-33f689cf9084",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9510451d-a5f8-47dd-811c-b0a267c29eac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b203163b-0ae0-4ca4-9974-216a4e5f9738"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a576a0e5-7fd3-4f2c-b7cf-361bc0991fbf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e5906173-aa27-4666-a0cc-e68ec255164a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a59b1d6-9087-42b2-a07a-1dbef1086661",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1122abc5-7a03-4960-bd96-8c142a330bf8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73b5a9ff-ce3a-4e84-921e-cd3d71dc21d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82d66711-35d8-467f-bbeb-f3aa26cf81bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "58f1ba51-ff6f-4ee5-8e26-e72806e531c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7167e579-c5dd-455f-a73e-3cb0514d1e56",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fc30fdd-e204-4f3e-b4f5-9884226616a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea12a7ea-94e4-4a72-ba7b-a4ebaac63909"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5253ba3-fd17-40d6-8487-6d1785500c3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "38acbde2-c21a-43ba-a934-a8862fe2ffc3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c06ae8d-6b8e-49cc-a48d-082ac7590b64",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3563bb93-54e8-4c0f-b0ce-da3b47fa7071",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b0d6e75b-8542-48fc-b734-c98c30a2d18a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3c0ea8e-ef2c-4672-84a3-6d408d2862a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d449c2eb-628b-4847-a17c-3d7fc42d2668"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf21453e-580d-406f-8e63-5667285fabed",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eebc5281-2676-4919-bb55-d73ee53a55fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a82e6398-5023-4869-bbe7-7ebee077f019"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd1b2218-a9ed-45f6-9671-7008cb888d88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "18b9d71f-ba95-4fc2-bddf-8b9cd358ed04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "028d6d49-e3f8-4c28-957d-7c3dbd18699d",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4bb7100-9ce6-44c9-a011-2f14f688ffc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "668ebfb7-07eb-417e-b875-c6176982511e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff286954-2317-4558-8022-6a843d9db2a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8061a26c-ba12-4165-b2bb-596c77306361"
                        }
                      }
                    ]
                  },
                  {
                    "id": "052ae050-24e6-45fe-a1bc-f64569fa7ed2",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cf60f3f-998b-4108-a84a-14f5920ee728",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad338d89-4198-4346-9492-2abfc355facd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7cef5f8d-273a-4e9d-92e2-3be556172357",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c3b1a58a-c67d-4ca1-87ec-c36052efb206"
                        }
                      }
                    ]
                  },
                  {
                    "id": "834176ed-1ac0-4495-a63f-536f1dfc8e2d",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c070dd6-436e-47c4-bd3c-91b7643d4034",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fcefd054-df54-45a6-80fd-cf60d88ce968"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4bc9965-54ba-43f6-9a86-20982e9bedf1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4e0dd273-0d8e-4322-9359-a34a105bf5b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f082150d-54cc-4d94-8f30-6bf1beeed391",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9b19ca9-7cb3-418e-a12c-de51f2a7e2a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8becd78c-20dd-4c91-9d9b-fb65cbb23be1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e458d049-1166-4631-a8a6-e42d4c66ab9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6098128f-d8c1-47bb-96a3-3b0b3f30b6a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8879c357-fc7d-401b-8534-2e32ec79e93e",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1e37130-6b1a-4bf4-bc0d-691fa9c290fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86d63bd5-1b5a-41ba-9112-04c10a5ae6dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8aa24ec3-e86f-44f3-a7aa-fcfff7ac549c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d10f197d-91fd-4f26-8c74-d2f6addc0547"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f909a5f-00cd-4fa2-83fd-54b6d9b5e9b3",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e66c0bf-8ca3-4375-bfaa-f52b5dd622d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2874214-1607-425d-a547-ecd10ce92a80"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "633fd6aa-85d2-4abb-b4fc-7856c06585c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "62e690d6-7fa8-4e5a-8c6d-19d8a4cabd34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03d69ddb-3a6a-4b76-8fe6-b6cca6d8943c",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c749685-a9d4-4921-9581-dc898919db6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74d9df6f-2ec9-4823-95f1-6e4bcc65c2e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd72fa5d-1dde-4b33-b835-4b805a08936d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f692df9b-204d-47f8-ad24-8c3bac569a22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "190cfb2e-cd1c-46b4-8b24-82eff6b8469c",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bb767df-d289-4d7f-9f16-2ece777343a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eabe286a-b15d-4e29-908a-bece886f3460"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24c6549a-a93f-461e-8b67-1c083b120b52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d272d595-af8d-42fb-af2e-28346c7c5055"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "69a5a54a-8ada-4bdd-9c3d-67b90cac05e2",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "8eeb4149-707b-4666-9817-81e22adaf19e",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d14aeb8e-3dee-415d-a928-8f7317a88927",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "cbfc7746-0f58-47ea-860d-b4ee29c43751"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fc3f55e-8f2d-4686-885b-5d6a92a4b4d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a9395d16-f9ee-4c0c-973f-c54348366c0b"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "72163780-cdcb-47d7-973e-e6d84ab1614d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0e41f07a-53dd-4784-a15e-a7fd7eccb7f1"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "3eb8e486-db1c-4800-95e2-8a98168378f2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "cb160a72-79f5-45ed-8e54-d0a6bab42e2f"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "cb2e9ddb-5606-42d9-9c60-230b27385850",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "f12b7751-dd8e-45af-863f-9ebab72fd207"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c75edfb3-2e65-4124-b5a4-cd7b9170e0de",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f69fe9d9-656f-44bb-a8de-c874e0a2e9d1"
            }
          }
        ]
      },
      {
        "id": "4a250d0d-b87b-4f52-96a1-bffbb883d48b",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "3f79aee8-3a9e-499a-bdc8-f0b79ca638ff",
            "name": "Negative Testing",
            "item": [
              {
                "id": "22539c6d-45d2-4afe-a172-c993f193fe2f",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "c85d6078-b3bf-4def-bf45-3cb8e7641825",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fa45d9f-0d1b-4dbf-9ec5-9a17d64c360c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c3c31a97-ed9b-47be-b9c5-c575b29760f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f55f5d9c-96a6-4584-afbf-ad4ea58cf4fb",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f039e21d-3bfd-4f15-8dc0-a9f98bd39dcf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "30018ba5-39cb-4db3-b128-d89fe3c9d064"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3def094b-a503-4b65-adf5-0851fbe12f4c",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d321184-137a-4fdb-b1c6-2233cf24ad88",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a432c9cc-13e0-4d9b-bf45-8d1aa07fea60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b33ef91f-5f79-48de-a590-fa69748e4cc9",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "868d7b2b-2b27-4a80-85f6-8dd8ce2418b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2516e195-f42b-4774-95da-7331e0db05fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a004137-d1ef-4f71-9ddf-01dea31a0bc7",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36c8a22a-d9a2-447a-9622-8ddcf20720fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "15086930-01ab-47cb-ac8a-433ba49f765d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9760dc4-eab1-471d-a701-ad4dbdc4ac1a",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e705ef1-f9d3-45d4-878f-a6844de082e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e882229-635b-45b0-8542-5d32f7de8345"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ae87840-21b9-44de-b482-3ce44cb19ea5",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8348da0-b833-4dcd-ab1c-e07a6d679390",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d81b247c-5de6-4022-ad57-bc03b3720fc5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c51ccf65-5217-48ca-9ce9-ed87e6b714e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1522af47-00f3-424e-8e38-05c093e8f188"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7694e23-ee0b-4771-b945-663ff72f6acc",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4046c1e8-c3fc-4f47-8041-6287d3d9c353",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fe38590e-2e01-4571-9e72-943014ca00a5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5eae869-657a-40a1-8557-f93ce1400933",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6645d6f0-d9e6-4f5d-b03f-45435fb28ba9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6534a041-a2a5-45c9-b680-164e5eba7d31",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f8213d5-6099-457c-a3d1-fe62f13b9b28",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ad2a64f1-2a68-4e43-8689-29ac5d148432"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e6bc045-228e-48ce-86ef-f3da3ca60ec2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1e2b8a6-4f49-4260-83c9-7838ceea148f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "700ac379-dee0-42d3-93a9-e9e7ad90f2ce",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf402a39-78d8-4952-8fea-bae8972cfc4b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "00c36cff-3720-454e-88a7-33ed1585273e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "54244fd8-4604-43fc-aafe-6863cdee466d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "459538c6-3e33-49c3-94f3-e365b98fd9b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65c34e5c-bb21-4df2-b1fb-bb7c3bdc20b4",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85bc2dce-f0b9-4df8-9747-3c6745753c8f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f62eb518-a604-4847-8509-46dc1004a2c9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5ae4df8-16d1-4605-a244-b1cb7ae9daeb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f05db3a1-301d-4dc4-ae65-ec6b22368708"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69032f3e-108f-47e4-85c6-cfb5d758874a",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a64b30a-0e9c-4851-85db-cc59a3648718",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb00e3b7-db3a-4f49-89ff-665af83ecc07"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "85a74409-3852-4beb-83c5-f4637e72984c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6476e8b-909a-4f46-9ba3-70dd37d4e5b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd18c662-3478-486b-88a6-bb29724b5c23",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30a8bf0f-46e4-42df-931d-3c022ab28f5e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8d3880a1-2705-45dd-b2a7-05eccd1c6d48"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ecfe0cc6-5ca4-4052-a5be-9687c1074e0e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "181e3135-493c-4990-8e7b-aa7b738cffe5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5528a6e0-0d6f-4cc2-aec1-2658156b1ea3",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b865ba0-f7d4-40ea-aa86-9188c5ec7f75",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4856ee44-6ad3-4f31-a6a3-84d9a1613fff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "67342434-ad63-48a3-ab7b-b9a9d6e94980",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "69ac3b6e-23bb-4634-b0ee-ce7aa0d1266d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b49b5963-e164-45ba-9697-800af0cf6fe3",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "830d96ba-dbe1-422a-8f40-5c6388a0df57",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dd15c983-e6af-4473-b45a-fcdd5217b063"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "537c9212-5c17-4e05-803e-f6423d9f6da8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c32deced-422d-44b6-9a0f-99baa4b098b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c17b7d7c-e9ba-47f9-9948-07ffb6086469",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65f797c8-d4e3-49ac-bbbb-cf08b5f05ea7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "49ec853e-8931-4233-9f0c-16b9f6ae8e54"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d72f0da9-f3c6-46d9-8f8b-b958823d7dee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2fc2691-42c5-4ee8-856d-527fa1b16d8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70e87986-75f4-464b-a0ac-e973e5954a9b",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74310f30-1a6c-4358-b105-ab2b53b1da4c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a75dd30-f521-45a5-b947-b87867eb6f6d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc41a244-c48c-490c-ab58-aff88bb31832",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "31da719f-57f6-41c2-b88c-e2a0652e90f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9efe405d-42ba-42cd-b62a-e39401747cad",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "475e2c1a-7870-41c7-a909-3eef3b02cef6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ab430d0-a5bb-441b-8a62-fc497184dd5b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "51a6420c-021f-4bf7-9936-9da8b03a1afb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6bad11f6-cfb4-4f2e-afc3-ac3a4aa760d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76f7803b-a6de-4d57-80b7-f6576e878257",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25ca94e4-4b5a-4a71-af49-1a7b8ee85c9a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83930b98-6ad1-4846-84c5-5c4e420f2692"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6e8c228-4f0e-40c8-85de-1f201b7a0842",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da10e2d4-f457-4a75-9c73-bb107a1c78cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "896ea5d6-521f-483e-b516-ef788f12278c",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29db324b-d29d-41d8-ae6e-29620bde2a39",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24d9c9b1-b8b0-40fd-9929-e6e4cc60947d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc70ff34-fe78-4ba9-87cb-e50b30f32f5d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1307e161-3bb0-4991-867b-c4562b450d42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8da4f7e7-25db-4457-b503-0999a7ffba14",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a81c124-dee6-4299-8d17-9abf59ce5c50",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee675961-54db-4ae6-b310-4a45724de4a1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "846291b1-27c1-480a-9f86-cded7c89ad5a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8bcc9720-0d0a-468d-8ca3-b2e80ed4b1a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c77bce3c-9ff9-45b2-bad0-ecb413abc0ef",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62a54e09-65fe-42f0-9c4a-88106314f492",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1fee4e97-a22c-456b-9535-04ca24549be0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "02a2ff56-9937-4362-b4a7-dbfb5af1359d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d7539db-071d-4517-9494-a188c5bb180d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47f614da-e4cd-43ab-a225-e5be6abdc8f1",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0608482-8825-4a46-a6c6-357f73ec1c58",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "297f71a1-3571-4151-9a76-88d20df89f70"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5279d57b-ce68-4cd7-b5ea-4a4fb45713ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "386ae8b4-eacc-42d4-97be-e477f45a4ea7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27a901d3-6866-4c80-acf3-c3f546b96633",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55407584-2f89-42b4-a33f-d61581d0eb49",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5c5c0bf7-cff0-4cb7-bee4-1fde1db74fbd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d742db5f-ae4a-46de-9882-4b049e1ac585",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e25e9b39-8e59-432f-bce9-3d66efc16b77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "182d8507-2583-42d0-b4e6-17b7366f020a",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ed31e56-19f0-4366-8e8b-441e3de77cc7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a4b30a74-9308-437c-b89b-9031236ccd4e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "afa7d926-4325-4c9e-845e-d9baa94ab674",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5155459-a020-411b-b1be-a13404a93a3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24faf362-ceef-461e-9d1b-4cc78265eee3",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83d4fb21-c949-4758-9394-e9f8217bdf43",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "683022db-0ba8-4045-95a1-d2082c7c4f23"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2ffb72d-feb5-4a4e-a6a4-3639e5419962",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e040f70-c0b6-4e0b-86fe-649368633a78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "851afbd6-74c6-47e9-90fb-16b00b615520",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c538c9b-012d-44c9-84ad-4fa1f8dce1cf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "553e3851-1c91-4610-8696-b9e290fdc929"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6dc8556b-7fd1-40c6-9585-d4ec7938e034",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95684497-e3ab-47a9-92bd-48b412f7da1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40411843-a66a-477a-afc5-4d28542905cc",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f080a6f9-9ee8-4bfd-81c8-448c14eeacec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "931ccb99-33a1-408e-95ba-bcbc32211240"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "74e33953-9cbc-4a57-a7fb-e425599362d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6698ee5-f870-4fd1-bd1c-e5fc7ea6ef40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "deb90b82-517d-43b3-9cd9-2460c9babcff",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17a2bcb2-3ffd-4b4e-a6a3-6598ff62d79c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8192e729-3714-4cb9-9adc-3186685ad6b3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "59975975-f9a9-4172-b2a8-8e0b56ff8efc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b625ed0-2843-4763-ac51-d92797178c50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d89a98e-6aa9-4ea0-9140-138572e671f7",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20c6c555-fede-42be-9b23-68125110118d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "59bbc8c0-7f76-4b98-b95e-391fd172033a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7742082c-bc0d-4462-96cb-8c459ec95a76",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc77e183-cc54-4311-bfdc-11d301b1f19f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9892ea06-256d-4206-9514-752166b1c50e",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e37e0935-055b-47d8-adcc-673ba5f01147",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "33e09050-74c9-434a-a86d-b4c5ea2acde5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa2be59d-4f43-4a43-a866-1ab3738d90a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cff11def-1383-49f1-ab8c-e20142ef4b86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09635b73-1a7a-4d58-aabc-cde4f3bfc90a",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fa50871-868d-4023-b724-8d9145eec90f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "650b1ee7-6bb2-4330-881a-44082ee294b8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5581dafc-e167-4fb4-ba15-ee9a17616eb1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee5c5584-a94f-49a0-a85e-3f8ea0c895c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0bda7c03-a850-4925-b3dc-9d6ca82b6680",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f82ec9c2-34f2-4074-bccc-067e68951079",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2a3b2220-69f7-4456-b4fa-f0af31aff093"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4ec2498-b02b-4807-bfaa-8a137da7de80",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e082dd2-809d-43b0-a2a0-229eb3f4a56a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5278650d-3cbf-4808-bcb1-7f1010495cb2",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abd95fd3-ca67-4eae-8bfa-f32c3aa8d00e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6b8a7cfb-4b15-4361-a187-4c003ed32b1a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5310284-3272-43fe-93d8-7db241f8220b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4bee566d-a97e-4c61-9049-d4e3b0f427f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fef93c3d-8066-4df6-8844-a63d17be14ca",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "674b0859-db5f-4678-a806-723bbb6a05d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2725a610-bb4f-4baa-9778-3f113983d39a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1574779-ce01-46e2-ba61-b3c46c377134",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09ce49fd-c72d-4a32-a790-6a3fa12344e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f5ead09-ef8c-41c5-9533-40c047ed4c7c",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34cde37e-4769-44b9-b84d-72cbc4db84ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd1db26a-b268-43e8-991d-f9b56e7d231d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a71ee12b-de3c-4f84-9943-cf55ab04d46c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d4c5575f-f29a-439a-9195-e2ec0f160249"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c471f1a-d009-4ce6-a0ae-eed8c21ca86a",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "748710b3-d8b8-4d59-af53-b2a6a937cf6c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af0c37d6-cf83-469f-943e-f43974cbd9e8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "44387bd5-3e27-4abc-aa8c-f56848e21ff1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc5689bc-fa2d-4ed5-b1d8-a62e06a07505"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cde95a7f-d101-4080-9d96-f4af5c66c936",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ccb288f-9dc8-41ff-899a-1d0c9239fa25",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a437b1a-e50a-4b25-8d65-6839e79c311a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4898c47a-d947-48e8-8e0d-962dcf32a1cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3bd37cb9-3ef7-4dbc-bb35-efdbea8af154"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbf1e8bb-b705-4eaf-8372-75d99e094fb2",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e9a889d-c95a-4e0f-8352-e747156f8d0d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb55bbf9-8b0c-42ae-8c96-96ee1caa6665"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aec97929-ca20-416c-9be8-2df5c5102b27",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f8127ff-25ff-4239-8aee-37add9f73d57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e894aef-faf8-4a02-bcc2-faba6e3f2e7f",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13e2506f-be50-44e0-be28-56171026a026",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a73b397-95c0-4803-95bc-e9e5d1bce9ec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e88b23ec-a5b8-442b-800b-e343ff2eea20",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f7c71d5e-ec23-4821-a551-3899794b2165"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86a36a50-d5ed-4c35-a80f-ab51008f2aed",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "faa501fe-c182-42c5-b9aa-55d7e5814e47",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0688d334-3f7a-4968-b8fa-804a96a55c44"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0df3f5ed-4e5c-4a26-96ae-737c23339da6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f561936-701b-4498-8c05-6a21e082c761"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ca56afc-8d13-4324-b703-9e701429c70f",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14218294-196f-452f-a915-dcec37e8bbdd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d057dc41-5c6e-45bd-916a-9868c6759850"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c88e5e4-b350-4653-a922-83443fcff4c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8977142-6acb-459a-a1c7-355276e9da3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d6a7bb0-820a-4c94-b79d-a52428fa1297",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1739bb93-0830-427f-aee7-1dc611f5a5da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24348d2c-f6bb-43ef-8a6f-fab43a852bcc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "427f05d2-e94a-4b16-aa21-6bb4b8211174",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f30c251f-d73b-4391-be47-08b6b877ba66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "295c0c1f-8a33-4dc6-b9dc-3393fdd2eed7",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0cfa08c-1a7b-4d7a-9d07-150533e0358e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5fa14431-92ea-4f1a-90a0-66ebd3b9eb9b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb3f4f45-cf37-4c12-aa7a-64fdbc96d6b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58c9a684-67e7-4e32-a5bb-24ba904962fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "117898aa-f222-478a-9cee-7bb779ea37c1",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80a32c12-1d32-4a90-a45d-4c9dd0555aa8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3590fb87-059f-44c5-9f19-6e8bf4c19e27"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a056ef2-b94e-4fd2-ad24-5e3fc96edc23",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99da559c-a8ad-4105-bafa-10bfec1f1c90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1ce47df-8701-464c-bef2-ea254be673ac",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66e60fd1-aff1-49e0-a3c7-5e5f97b5b44d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7cdd9671-12bb-4e56-88f3-48e6532b0e0e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ccc31427-5c82-4601-a291-784d114e379c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b0e54cfa-8770-406b-bebf-2b19e13a23e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2edbe1c-8f29-411d-9195-113c7fa3e6ed",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db0584c2-f30a-403e-be0a-7235edc89521",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "580b3684-84c1-467d-a0d9-f191b2185262"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "37ede678-5141-47f7-9dcf-cab672434015",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63bd823a-e38f-4b88-a535-1db049356e88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45c5d2cc-1c27-4f05-bd63-9d53296315cf",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d1d698a-9e07-470d-8917-7bfe31c340f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed84e777-0019-4c53-8d0c-ab9dcb3d83d1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "004c5e25-b895-4824-a8cd-f12bbbb10248",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17f403b1-ca80-4e60-881a-cfcdeba6703f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ecdadfcb-6c29-475e-9cef-eda5cc9eb89c",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6831997b-55bf-4824-9887-b0f11a7caee3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c7f31fde-6d50-48ca-a20e-ecabd9de6c5e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6d1b468-58d2-4904-948e-606000a4e8dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8badc912-73c2-45b7-8549-90a2bb25b1e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b90bcf9f-827b-4cdc-a6bc-46d59409539c",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "134817ed-3828-4fdc-9244-723e51c27a63",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f23732e-bd4f-4a7d-8b1c-0e4e1fe6ce94"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d51c1929-43da-42ec-9f84-a0138b339a60",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5a15210-0ee7-4366-abdf-008d3214718a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a37b99a5-98ee-4470-a3bc-b702edfa5e39",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a5fb9f1-3b43-4ef5-9c88-968e45a808db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "023ae28c-6f7c-4f71-96e4-8dedded9ffa9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0664ea14-c1bf-42e7-a1c8-b3c9454fc4dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99c6cb37-3f6e-4199-98fb-7e8ed36d1b12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "986a4f79-e4ad-4c19-9f8f-a168a091b93b",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8bc53a49-5459-47e1-a80e-640a582c792a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cef5fa65-6ac9-4d5a-b25f-3e4cc041c956"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "abdc0c27-85e9-4ab8-873c-d17d754129fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12eaea30-f6f6-4078-9e24-072b2fea958a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "601d9e6f-f2b0-4a4a-a4a4-f69979609339",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c23a6bb5-dfbb-4c97-a389-fef2a79fa17f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "302aa74c-f366-4179-a4bd-c95b102388b4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0eb970c5-df2e-4f57-a62f-2c5ff8eca073",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f11fedca-39d4-433a-9b22-4878f6f81f1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa28438d-fb04-4340-9256-f7f77bd57f1f",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27beab19-6482-432f-a4c2-82fc01db2897",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "baf7c6d8-52c0-417d-b30a-d187c17a7a1d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "549b1431-f57d-4a38-91b4-ed77466c060c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8c5cd81-f838-488c-8ce7-4dcb4b8f2cf7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6f31e0a-4a29-4c75-851d-e3835f56dc9f",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dad209ca-5c0a-47a8-8416-a2a27d2915a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0181b069-c8fc-4bcc-b493-d647df04eab6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f735a51e-d378-4b55-a35e-c798baea72aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "87057dfe-05ef-4b26-82af-183e4cbd15c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5e7e144-be2a-4f68-910e-6f11ccf8239b",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2b7f9c7-989e-4d20-b23c-8d456f2c8b61",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5a28201-7d03-4aec-aa6c-3272daa9fe6a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "718e7406-675b-4e3d-928f-30e96f9a0d2b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97bf24cc-a852-47a5-9027-705c898e3172"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9d52e26-f2e9-4151-81ad-872e4c0cbaee",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b7207cd-2d24-49fe-9fdf-b4e2cf5ce843",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4301861c-5002-40ee-beb4-c54db2662009"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "27c8cfa4-eab1-4cfc-a7ce-08b1a94f81c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "def8c8d8-0768-46a3-95a8-90c7540fc5b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88e788ee-1dd0-4ec0-9f38-8cf7bae2f907",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "884ee81c-2f2b-4abf-9da3-d2b0c6748058",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95915dee-74d8-4965-aee5-5b6b603b2429"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b369afdb-cbd7-45c8-b9a8-a296e391bbbb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee7273e3-2888-45d7-a6a4-9f269974c3c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05bc92b0-8422-4736-98b0-e6708853be76",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3e6b0e6-750c-40dd-a467-1d671bfd0108",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "221fca8b-d40d-4844-b264-99df34749520"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "621a05d9-b27d-4902-961b-c4d296f048df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c774412a-2ac8-439d-a630-d9e112b97b0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a08a927-8349-4290-8ea7-0bb271fa9e13",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5004813-a599-4fdb-bf9e-7572c79569ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dbb8e5bf-e214-4e21-9b0c-88ff80fa9ffd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "77d35f0b-033b-4aa3-9d6d-41d389fc3721",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "adecf334-60f1-4110-a249-7f6034e0c4cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28474bf5-5800-4f08-8387-5d14cb015a8b",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0bd1949-e8a1-4c34-bac7-49fbf71c0f8e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f057a9f1-7052-4c70-8494-11041146f360"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8284e782-4da5-418a-91d5-3f658f01f0da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7b5ce38-6e81-444b-a8fa-ab6b06a4918e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0e6822f-3ed7-4413-9390-0609ee7f58e2",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f95edfd-b6ea-4c44-818c-6dd3456cd499",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8647e66b-1372-4574-aaba-30973fda4c8d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d242fb01-013f-41a8-a30e-1659df82f8ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db9878e3-8d09-4133-951b-044d6e8560ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6783751-13a9-4217-bdb0-3a42a5cf3563",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d9af13e-1d78-4128-941f-42c2fbfcd4c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "06599c0b-9e4a-4267-a171-162139fc3f9c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7f5f9f1-eed0-4225-a102-6a86edf37620",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ffb40c5d-d6c6-4e05-8e35-6944bc9cc1bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a09a783-2737-414c-a284-5cc225c0e5f8",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82a94eb1-ae67-4b80-ae77-d908d4f27ca7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4642f655-4f0a-4b47-b8eb-fd1fc564aed3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5473a3ef-cf7a-49db-b252-81b3850c525e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3a58c6e-1f34-472f-bf72-daa86857cfb6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5b143cd-e2ea-4a72-a9fc-f63a57e38bee",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7067505f-ff81-42fe-96db-608d0dffef2a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "239f3387-d457-4c98-9ad2-f38f6e912de5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "17cc47ba-90ad-46c7-9629-a123cf6c3803",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51d682bf-6c02-4b58-8a8f-cb0ebae8138c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "664b8fd3-bc6e-42e0-92d4-c361c5215d63",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b0cc22b-ebe5-4971-bfc7-5c03d4084ce8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8949bae5-1fbe-4998-9417-85634c2f0de3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "926cc8c0-388f-4b94-8b01-a337cb155ee8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2422899-bd36-4557-a283-56a5a8a47d17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca174ee5-5e2b-4e71-bfac-e710557c6c76",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebc7f899-9f92-4e9d-aa05-a1b5acbd450b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "88e44d7c-cb7e-4238-9ab6-1cc8ce9169a5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "68a27821-fcff-444a-9310-4e6d872f4a8e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dfdb795f-2b74-4fac-9e8b-16c6c4797ce8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "403a2f33-918b-4e4f-a21a-ba33b79fc80d",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d225919f-54cf-4a9c-b8dc-b24bebff54bd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2ad9f8f2-c3d9-4f69-b748-8523569ec3b5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "16caceb5-2f13-4d95-aae6-3628acc25455",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a22890d-ad86-455c-a695-2dfbef869306"
                        }
                      }
                    ]
                  },
                  {
                    "id": "222822de-f42c-4af3-adab-a8d1b8852669",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fd40398-1492-4372-adc2-cdeab6b7cb89",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c9d532c3-1750-4412-99ee-ac6be0b81bf9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b5e18d0-d4f2-40b2-a623-db5e7bd97daf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4bf17259-e44f-4c42-b183-1d61116e6df8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "faed00ca-cb29-49fb-8d46-e916528e1ff9",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9dd5cfa4-1444-4176-aa48-1fc0e7032c15",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "276165eb-cb68-414c-b1db-57f44c9656ea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab3ffeab-a1ce-42cb-8cdd-f4df06954af8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a394ab3-730a-436a-9679-f831681bfd13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8be01f22-1736-443f-80a3-1e6300e5ffbd",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a207a7c-8a52-4012-9386-6b973f4dcdf5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "caa423fb-1a37-4c09-995a-f144f13a7a5f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "477ce61a-79ab-48b6-bd91-af292d49c67a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "869e787b-c780-45e0-8a05-a7360880e424"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2ab5e7a-6026-4ceb-a381-4cef7d6c2beb",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63bc6028-59dc-4b00-bb8d-4f8341ec1e03",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "394d122b-81f5-4017-930e-a180153f364e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c4e304e-8f35-4188-a8b6-baf00b5f5a11",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e2cb74e-6508-4321-b4ea-ed7720c7d4b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eba401a1-287b-4b68-9a19-b1657f3e8588",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c25907a5-558c-4fd2-b910-d9cafb12c900",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c13f7d49-28bb-4690-843d-2b4790d6be4e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1a8783f-6465-45a1-8f65-7663cf50aae3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a78945f-23c7-4be8-9d0b-1c68f19f54d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee09ec99-2d86-481d-ba11-a57106503297",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3085b1e7-472b-46e8-bd0d-84f963c6558c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6e8fd269-f461-41e4-aa6b-f9bb90bb8e18"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c272f09-ea48-49f1-af94-47dc9508e5d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "373697ea-4bf9-4982-9137-2e22fd74e6a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b627e0eb-d21f-41a5-a821-53c94f5e241c",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab847de1-adff-4e12-8e59-e6b456d95945",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2fe2f16f-fcd6-41b3-82de-3fce0ee7427d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "84aa33c8-b855-4448-a75e-f5e3caa9924d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26d2e2d1-52a4-4c78-9d51-abd6dcd39eb0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3eccce29-d790-47d2-9bc1-f6d061a53507",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4ca1bec-4423-4909-abba-6689f5681bf7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "71e41378-b202-453e-9828-c4bea6833c76"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c96f0a0c-5af1-4af2-8d7f-8ae72d374eba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c8480e5-795a-4037-b2b3-d4023823daba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd809eb8-3e55-45c7-9524-05ba07a92076",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3203ca4c-8092-43d1-8205-6a41818f8cef",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9a6c9636-bb8b-45a6-b05f-a7b91c4ac1eb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "af47a475-69ab-4645-86ca-5abdaf587650",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6af8bc6-5c77-4f93-aceb-70230523c4dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "634395d9-76c3-4ae1-be8c-65ad3441d175",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ca08fb0-e3d6-458b-970f-d53f67489b68",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "168f22d4-1b7f-4642-8936-890c459fb25d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "718497e2-c3bf-4486-9494-8e5f6d44a032",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23c9030d-0571-4505-9eea-f830801c3da9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd4a2c85-211f-4a50-98ff-0982c32913c1",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f29b8fc-f3ac-4c0a-b657-1ddb40c4f444",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "40d265fc-f7c3-40f0-b4b0-8b0708f86343"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8ca2fbc-69d1-4406-9774-e62944b68cd8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3877d26d-9b15-4937-8ed1-4113c0c7765a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd2bef9e-3346-4b88-9a60-22ac5386fed6",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa386138-3e22-456e-8f6a-7e31d23294ea",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4ffeea8b-caee-4d4a-a698-69b964fb1ac3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "82435172-e3d8-4cc0-8f1b-34c9cfeed005",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dae32a9d-e55a-49c4-ba75-2115ed246aa5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a679f67-7588-40d9-bc82-3b2143f3da32",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a95c7748-9712-4c96-bf94-a7497a117f29",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f1006107-5f06-445f-b9c7-dd4fc780321a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c11f611-0c3d-4b99-a02a-34e7756ba02b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dba0dadb-e3d7-49a2-b027-0ab8ad9e0111"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae49cfd7-8951-42d0-b9ba-59f22bf46091",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20b444bc-0416-436b-a88a-cf96d9fcc172",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "455a6667-1a73-4270-9b22-235cf144b73b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "074276ca-12b8-45ac-9bca-30b80128a1b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e5220d0-1806-469c-a421-2cf64ed7ceb0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f12c615f-3432-413e-912f-58645e542929",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7149a6e7-eef0-45ba-9bea-3b704b1a45ef",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5dab7ecc-6fba-4034-b105-f2850aaae2bd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8053b4cc-1ee6-4e27-a630-6052a786f7de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1d3d562-2836-4a86-9408-fd56557786c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbb32706-8d70-4952-a056-5f30fefd17fa",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e172a294-4ab9-4aa7-a1b7-3100bf3765c4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8e6e7a58-880d-418e-a69a-8441436713f9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d813d77b-22ee-4f26-a75d-9fa0deb0eba6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "739d525a-cf21-4ab7-a03c-7eed9a90c78d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0c4a4a8-2dae-41a3-8aa4-c40665574249",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40d6853c-8426-4818-b876-f72925ca824d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "feaf4041-fa94-4d67-820b-50f2d53da4c0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "38cdb626-8a8d-47eb-b238-c893f0b6a520",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bec60164-eb93-4779-9fbb-4feda5438e80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d7d7e87-788c-424b-be3e-fdbc2eca0907",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8269a13e-3816-4cc6-8148-e3a7e262b155",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5d01492f-0892-4299-8b8c-416e68e942f3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b33f55f-bdb3-4bdc-9bb3-65dec6c17fbf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1081e52-d772-4bb5-9014-1d27cc354852"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0a94c94-affb-451b-9153-aac72d988f48",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85a7e82f-cc05-41f6-b608-83915d92d3ca",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3ce0f54f-f250-4b5e-9892-2f787bc9bed4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "409e93b4-6696-4297-b4e9-5e489b5d269d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b611ea32-7539-4849-966e-2ac31b0d8609"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e37b9c5-32ab-4050-9a0f-99ce819361c1",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5db78d18-0e11-4216-a1a3-789747d5b94e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7fcbe52f-8e7a-41ff-870b-4e8dca5c0132"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "220f3b59-dea1-4fa4-9212-5ff886efdca6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df2b9cd5-77e3-43d5-9b65-620f6e11130d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35695e1c-171a-4c4f-9a37-ed4a5a5f77d0",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8026a8b-ef0a-43af-8e86-e828c9f6724b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d11c159f-db77-4e81-8549-ca8eaeb5cc1e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7da97c4-0104-4290-ba82-2d9fcb73fdcb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc56eee5-e74c-43ae-9106-29a63170936b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38b26cc1-feba-4ceb-8da4-46a98c56c28d",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "167ceb47-cf53-4553-b634-9f3b3f63a6c5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a5acde58-2b7c-41fb-a6e4-be245630202b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2b654b3-82f6-4522-b49b-368f160c3c45",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3db741f-8887-4360-adfd-defad761a3cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eebffc6b-a05a-433d-bcae-3b8b5fb1e20e",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c85e517-a821-47ab-a5d3-3d0d081515e5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f3a99d9e-dd5a-4a41-ae2a-c0a569cdeb37"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9f9e5c4-2e89-45d7-ba42-6cea9874ed92",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2eb497f6-1b59-4b29-bf99-78e159a0d1df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13001752-01c1-4b28-8f9e-44072fd95a58",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28de3728-c7a1-4740-a50d-7df48449ae6e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "20041931-b7a9-46e4-812e-36639c7c1cd3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa0b21ec-2d9f-4ac8-8c60-ed2642cd2e40",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05b45f1f-41f6-4870-8a4e-3d27f9feb109"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f9902d6-6503-48cc-9b42-44be4ab3ef91",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "974c3d8a-12ca-466f-bd62-9fe8f8e269a9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cac95d0c-81b6-4618-8116-1ab4e6185ae8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c2aa32b-9b5d-4063-8808-fb70f6b4fe68",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1367f2a-174d-4275-b2d5-ce0603d76e19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0de5c30d-e950-45d1-b9b0-9c73b70b53a5",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d581dde-b8e0-497c-a796-8fd284e26697",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1c63b2c1-f7b5-4b9b-9a4b-841c791c89b5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c701a66-228a-4324-a83c-529d9de7a716",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a0d96b1-9b7a-4b27-9fb7-0e5b755012db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f260606-d38d-4cbb-934f-0656f06731fe",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f923a8a6-06c0-427a-b1ca-01e4ca366f92",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e1cf8afb-1f91-41f4-bcf9-b0bdfc494af7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "37e08e9b-1802-4b2a-990b-93adab675027",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09fa207a-95c4-4bd0-b7ba-8743bfbf119a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "308838f2-9270-4530-974d-4e17ae1590cc",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41aefffe-1be8-4002-9024-9240ffe0ded1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "874a9d4b-d43f-4e12-8816-4f0ab2d96913"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b934d07-a21b-4341-8531-77dab4271828",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88a53a34-7108-417a-b865-c63d492ef11c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70c54868-eb5a-48fa-9a57-23101e10cacf",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b71bf2f-04a1-406d-a21b-61236fe2e480",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "308e6358-3e50-4d47-bd40-b29951368b4a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d198c59d-7f0f-488e-a02d-6b44338f3b3e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "170f2ef6-b8b2-4b1c-a7f4-c085465b320c"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3e4f5f28-96c3-4cbd-bddc-f18a9f427446",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6ed6b506-2707-4c69-a4cc-370e7d8cb17e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "26c03028-5533-486b-ad11-a5acd4294ded",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "30740061-cb51-4f62-940a-0385d24e3ae7"
                    }
                  }
                ]
              },
              {
                "id": "64633ab4-1bf2-4661-b254-c3f80a88ef68",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "54ce2546-c904-418d-a830-8cd49f032c3c",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83f92f0e-9c3b-4bc5-8fee-767113c82784",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "7ed01431-bae8-4811-9991-af90a6f655e8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "619c8e0a-b186-44bd-80a6-4fd175df6b2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4e0056a4-6b90-4c36-a2a2-b95dbb9ac1ce"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e2cfe867-8cd3-47c8-88d7-3ca16b5b7301",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "82042a3c-5e1e-4ed5-98c2-80075118cad9"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "8d285914-b225-4f57-bb72-c628a2cd55c6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fbe85e24-54d3-4831-988e-d93cf747c901"
                    }
                  }
                ]
              },
              {
                "id": "3ec0d34e-9945-4517-aec4-8dcf9a6c1a66",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "f1177f13-d58a-41df-8c81-1c9649018549",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3599285f-701b-4150-81bd-1b71fc50dc36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "7526bd8c-6269-475e-a145-328df921d66c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de9ba4dd-657c-4512-be70-ec41248b526a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b547bf03-074f-45c6-a579-9e331154d259"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "077c2e94-e4d4-4787-b8e2-1ca2c731945d",
            "name": "Positive Testing",
            "item": [
              {
                "id": "70449db7-e98d-4be3-8aaf-575ca6cbced4",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2c0fe27b-5e3d-4ac4-94f3-454b511a57d7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "83002edc-a967-4d2b-9de7-8a0207dc1c29"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "63df6bb9-a398-4e4a-bac9-82db7a017173",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "036404bc-9b7e-4966-a0cf-2adb98c1e218"
                    }
                  }
                ]
              },
              {
                "id": "5145329a-3729-40ce-a5c1-b1d14aeed44a",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4d75e166-6d2e-4009-9357-920c50158380",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "a9b75de1-edee-4e8a-9e68-687109af5ac1"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b9de60d6-ff2e-460b-b9fc-1fce4ce2e606",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "aa2516a7-c0a5-44af-bf92-14cac40a3173"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "df9ea799-e646-411f-83e4-dacd310f9cf1",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "d20f49d5-b810-472f-8fed-3b712edf51c7"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "853f4ae9-0c3b-4acc-9529-384f0ff95055",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "fe4f28a3-7cc6-4937-afbe-04d694d147f9"
            }
          }
        ]
      },
      {
        "id": "a050b1e9-b0c3-4090-b7a3-c730ca26f95b",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "c43c3c67-e820-4b3b-99e9-a16bf6884846",
            "name": "Negative Testing",
            "item": [
              {
                "id": "27e1fab1-ac8e-46e4-96cd-5d649d0b1b49",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "1e5a0041-1571-4179-8138-c0d6ca73bb38",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea79b75d-c726-4a3b-858a-84eb917d7bbe",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "9f6c41ea-c36f-469a-be95-c40f6c93f64b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f484cd0b-9a7a-4d17-a9b7-355fe3a6d437",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "56225085-46b7-4aba-8b20-e441aa4ab8f9"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "886e48bc-b41d-476a-84ff-b038eeaa6954",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "04278c79-caeb-4f6c-b030-9f10e91c1981"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "3d46cfa4-63d7-4bfd-99f9-b9ba19d269ce",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "48eb8972-33e6-4503-8766-b79951631508"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7aa11bc8-1fa7-4b09-8117-6e3e1b5ce353",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "2d177280-3dbb-4c7c-aa1e-6a96f56e0e36"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e45503b4-cb2a-4707-8a68-bebf29f16db6",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "3023b7a7-80de-4153-a87c-ddbeef2455db"
            }
          }
        ]
      },
      {
        "id": "686ae222-0dde-4787-9b16-44c98e5a7cea",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "35f00d5f-27f2-42c4-9992-98f1f21af96e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "a65280ce-1a93-48fd-a954-882fa29c7886",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a5a0176b-7994-46e9-b05a-5d91ab6f5edb",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85c0c089-89a8-4d9e-a068-d1e8bfbc85b1",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "55248f37-0a5c-4084-a3d3-2ef7629546ae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcfed731-1682-4836-984c-4206a358ff6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "23a598c1-2417-48b7-8337-a7eeec5cec12"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3edc4870-ef28-446d-84cb-d8e981218598",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "08a77484-d506-4250-9b70-c66c999600bc"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "029fd9d0-7ee6-49ad-bf67-59adf22457db",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d25e5ff9-928e-4ae8-928a-74bb861233c6"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8f0c7dc8-d376-491e-ae53-522309fb988e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "fd7b2d9a-72a6-40e9-92a6-f812601b2a53"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a3f99871-947f-42f2-a7b4-7e02ba2ad80a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "1da2bf58-36ac-47b8-9dad-1168689f91db"
            }
          }
        ]
      },
      {
        "id": "c8942f26-58d1-41a6-affe-0a5e6b367abf",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "2b80b864-a470-461e-93e5-c2b37eeea084",
            "name": "Negative Testing",
            "item": [
              {
                "id": "0ae7fddd-a432-4ce5-8b02-8e654e87b3be",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ba227362-629e-436d-b04a-0c3ec2fac90e",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbdc81ed-fd3a-47be-8449-25bdefba046d",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "be812d3e-d1e4-4134-8338-1506c50478b4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "989a4117-1c2b-4f5e-b842-ce237612a51d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "bdaa0d7c-d8d6-4744-a02c-a566e16f6237"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ffe736ca-9ba7-4936-a476-70679df9b93a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4e26dd50-e59e-4bde-bcf9-767c24acf5a8"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "465c0259-1bc2-4a1a-b347-9c2d0a8575a9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ab5885a1-d6dd-4c01-ad7b-60f431fff09f"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "bc370070-e330-4b55-a6af-2b6665edf785",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "0dd97c1b-76ca-4e0a-81d5-753b46820358"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "88ecae9c-f0c1-4891-ae91-21e2effc7761",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6b46edae-a062-4042-a531-2807d097c614"
            }
          }
        ]
      },
      {
        "id": "2e0fe088-c3fc-4401-803a-1c3378bf176a",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7ce23f74-78dd-4b40-9650-a2bd5f99fada",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d31bc13e-6d51-4e4c-afb3-4fa5358554dd",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "c60057ac-8b17-4497-bec1-fc818a64b2fa",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "37db4500-fda9-4d35-ae99-dfb584d6fc14",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1db6c0d6-5f76-4b87-a0c0-831b19a02d3d",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 9
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 457.63859649122764,
      "responseMin": 20,
      "responseMax": 12449,
      "responseSd": 1491.0208533675802,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1698366771447,
      "completed": 1698366914243
    },
    "executions": [
      {
        "id": "70dba6d9-04e4-46f1-b82c-d43a42599152",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "a7fb9736-bfc2-4d60-b746-9fd12d8d94b4",
          "httpRequestId": "489b1c52-3a35-4a56-9f73-c1f804fa776e"
        },
        "item": {
          "id": "70dba6d9-04e4-46f1-b82c-d43a42599152",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "e27aca65-e807-4009-9b75-155b612b75ad",
          "status": "OK",
          "code": 200,
          "responseTime": 77,
          "responseSize": 0
        }
      },
      {
        "id": "a6cdc351-4c3d-4cfd-9f27-0b2ac78f9647",
        "cursor": {
          "ref": "f0607562-e3b7-495c-8d2b-3c943e1c9404",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "6106bfc8-f9d7-4c61-9188-1686c58a4366"
        },
        "item": {
          "id": "a6cdc351-4c3d-4cfd-9f27-0b2ac78f9647",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "7f6be7b2-23b9-4476-86b6-ac8eda450f41",
          "status": "OK",
          "code": 200,
          "responseTime": 20,
          "responseSize": 0
        }
      },
      {
        "id": "39ed8c93-9d74-40d6-bf23-06156bae8d52",
        "cursor": {
          "ref": "708a253f-70d7-49f3-8b47-d419ca88369e",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "b8a1b410-5a34-4f07-afd8-1791fce27505"
        },
        "item": {
          "id": "39ed8c93-9d74-40d6-bf23-06156bae8d52",
          "name": "did_json"
        },
        "response": {
          "id": "9d17e993-25e5-4f92-9efb-68a7d3820e18",
          "status": "OK",
          "code": 200,
          "responseTime": 2164,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ece02668-5049-423b-9ac3-4c0bfd8ee1d7",
        "cursor": {
          "ref": "44432c2a-922d-4971-ba03-4f3e19546788",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "093f97a9-8df7-430c-8e8c-1c1d770b861f"
        },
        "item": {
          "id": "ece02668-5049-423b-9ac3-4c0bfd8ee1d7",
          "name": "did:invalid"
        },
        "response": {
          "id": "4698b08b-8126-4b70-befa-8a31c759cf5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 387,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ece02668-5049-423b-9ac3-4c0bfd8ee1d7",
        "cursor": {
          "ref": "44432c2a-922d-4971-ba03-4f3e19546788",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "093f97a9-8df7-430c-8e8c-1c1d770b861f"
        },
        "item": {
          "id": "ece02668-5049-423b-9ac3-4c0bfd8ee1d7",
          "name": "did:invalid"
        },
        "response": {
          "id": "4698b08b-8126-4b70-befa-8a31c759cf5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 387,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdd676c1-ef04-4498-b2b3-141fd68cf7d1",
        "cursor": {
          "ref": "dd1f9850-25cd-41c9-8056-9eba8a42e081",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "1e631db5-824f-4cc6-9675-085027666e47"
        },
        "item": {
          "id": "bdd676c1-ef04-4498-b2b3-141fd68cf7d1",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "86ae678e-903b-48d8-9b08-28526f69c500",
          "status": "Not Found",
          "code": 404,
          "responseTime": 380,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a61d153-8991-4772-bd0a-699d685ee3c2",
        "cursor": {
          "ref": "e2777683-1823-460a-aeab-ac4332600bb9",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "f94849ed-3eb8-42e6-8835-997196a2a9ae"
        },
        "item": {
          "id": "8a61d153-8991-4772-bd0a-699d685ee3c2",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "fc342a57-8cb1-4681-8d02-3f9df6154b58",
          "status": "Not Found",
          "code": 404,
          "responseTime": 296,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "280090e6-be9a-47a9-a8d0-eb623a6e900f",
        "cursor": {
          "ref": "0b262005-ef03-4b79-97ba-f6762e91267e",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "33b3d012-1a83-4cb6-86ef-d1e6a3a03114"
        },
        "item": {
          "id": "280090e6-be9a-47a9-a8d0-eb623a6e900f",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "050df0b0-5f0c-4a30-b68a-6c3067930ad2",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 81,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb29b99e-78e1-4a06-ac27-b85c4d201a93",
        "cursor": {
          "ref": "3a9c25e4-d773-4cf6-80c0-f3741e1e9119",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "a16591ce-5d32-4556-b144-4a473a7bba02"
        },
        "item": {
          "id": "fb29b99e-78e1-4a06-ac27-b85c4d201a93",
          "name": "identifiers"
        },
        "response": {
          "id": "87b9c40e-4c79-44ff-a81d-99015532ca1f",
          "status": "OK",
          "code": 200,
          "responseTime": 3003,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "666adfb6-14dc-44ab-ac3f-2f415569f4d8",
        "cursor": {
          "ref": "d4a24668-4975-43ff-9ab0-7b71dd3e689f",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "26ab6f19-ef26-4023-8272-b8a9710a7b7f"
        },
        "item": {
          "id": "666adfb6-14dc-44ab-ac3f-2f415569f4d8",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "36b8db36-3da0-4d6a-a087-4c72a551114b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 277,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "980b300e-ddab-4fc4-85af-44953181d459",
        "cursor": {
          "ref": "04f3ac85-c748-4e09-9141-539fa8e94783",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "47795875-29eb-4804-beda-702294fa9fef"
        },
        "item": {
          "id": "980b300e-ddab-4fc4-85af-44953181d459",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "a4ca5def-3eb0-47b0-ad31-8a95bed66c3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 286,
          "responseSize": 511
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32d9d42e-c411-4414-b4b2-24a13c71f0ee",
        "cursor": {
          "ref": "ff279e7f-f97d-458c-b3c7-3a17fed1c4d2",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "87900e39-903f-4fac-9154-3a04fddb87ec"
        },
        "item": {
          "id": "32d9d42e-c411-4414-b4b2-24a13c71f0ee",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "de57fc5f-2ba5-41b1-9d3c-d1c3a768250d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 344,
          "responseSize": 519
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8701afb8-d7d7-4b92-8064-784714b952c6",
        "cursor": {
          "ref": "862dd3bd-4d52-4398-8ddd-362ecc579fe6",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "0a312c17-473e-4371-8f5c-e528a1545888"
        },
        "item": {
          "id": "8701afb8-d7d7-4b92-8064-784714b952c6",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "391ecc17-8be9-426f-8fbb-6e504ee2e2a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 310,
          "responseSize": 516
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94816b76-eb99-414e-a14a-003a725049f2",
        "cursor": {
          "ref": "d2881dcd-0146-473b-8717-272b0a7b6180",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "91674479-9766-4eae-b01c-46c9274f9f66"
        },
        "item": {
          "id": "94816b76-eb99-414e-a14a-003a725049f2",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "b47ea3d1-1cc8-4085-b082-6b965252e1b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 354,
          "responseSize": 518
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22333c90-5409-4851-b2de-f3d34c121203",
        "cursor": {
          "ref": "04c48bc7-595f-4f9a-bbdf-2d0d4f43179e",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "9a353c68-8511-4c36-8d06-3f5992582c11"
        },
        "item": {
          "id": "22333c90-5409-4851-b2de-f3d34c121203",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "7fe67ab0-e9d0-4761-bbea-f71688092e69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 304,
          "responseSize": 565
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38bcbd33-878a-4d2e-ad3c-f8d2bfd80e20",
        "cursor": {
          "ref": "73c16447-dcaf-4e98-b3a4-6e5a28e1b1fc",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "f0f0f915-4119-44c5-9814-b6d93bd688ca"
        },
        "item": {
          "id": "38bcbd33-878a-4d2e-ad3c-f8d2bfd80e20",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "71fb3cdd-3a6f-4618-8ca6-537ed2a44a44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 301,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36521e2b-9493-4c6e-8e22-f9804fc356b1",
        "cursor": {
          "ref": "107b71f2-0771-4066-a42c-7860cdbe3007",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "6e63b628-d939-48b5-856e-1c20ed0dc810"
        },
        "item": {
          "id": "36521e2b-9493-4c6e-8e22-f9804fc356b1",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "cd4fd880-29e1-4dcb-95f2-4b27cd305e0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 302,
          "responseSize": 603
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "759e684c-9f82-417c-b969-6b6f2666df75",
        "cursor": {
          "ref": "3988b060-2f06-4bfb-91d5-a82a3bf5fa8b",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "412d92dc-bee3-4b07-8079-a0e42444a3da"
        },
        "item": {
          "id": "759e684c-9f82-417c-b969-6b6f2666df75",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "d0747dc6-6980-4ded-aeb9-3f1828bc5446",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 324,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85b859f7-5cbb-4e5e-93d2-94635968367c",
        "cursor": {
          "ref": "78553de3-fc96-43d4-8768-2e4821bd5c22",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "2129dbc0-1de7-401b-bc5b-cbdfb4d5e86a"
        },
        "item": {
          "id": "85b859f7-5cbb-4e5e-93d2-94635968367c",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "5ca7e73e-9418-421c-b46f-a8dd31c2546f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 298,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d4ce103-8bae-4a85-8e57-1b067047ce28",
        "cursor": {
          "ref": "ac500b9b-94cc-4f0e-a54c-6b9da8046e35",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "e1b84eef-92e6-48af-ba80-4d6bea042c29"
        },
        "item": {
          "id": "0d4ce103-8bae-4a85-8e57-1b067047ce28",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "39e4e91c-73e2-4780-b7f4-4c6ac2c5695f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 279,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ae48647-d25f-4c01-9af1-5c522b82bc2f",
        "cursor": {
          "ref": "064a5327-8481-4304-9913-fd1722c95d3a",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "1bebe7f0-ec22-4a5d-98ae-eac4cf917cdf"
        },
        "item": {
          "id": "5ae48647-d25f-4c01-9af1-5c522b82bc2f",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "1fd9d889-6e21-4114-b83f-4d7edb27a0da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 307,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0892cc51-9ea8-46af-b630-c7b18d7a92fe",
        "cursor": {
          "ref": "86620590-455c-42db-8cde-2cb323426f48",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "af203ad5-ed22-433a-8c8e-02d0625a2320"
        },
        "item": {
          "id": "0892cc51-9ea8-46af-b630-c7b18d7a92fe",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "69f8e5e3-c3f7-412f-824e-c2f219a17bb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 305,
          "responseSize": 627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "146566ff-5d37-4ee8-8c3e-cf27a89f2980",
        "cursor": {
          "ref": "a7d802b5-1a87-46a8-b4f8-da765b43bd48",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "9a441c4b-c2b2-4023-9697-201fd14b35f2"
        },
        "item": {
          "id": "146566ff-5d37-4ee8-8c3e-cf27a89f2980",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "864c4338-02f2-4073-b52f-2b1cf32d4b12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 305,
          "responseSize": 583
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21ca43b3-3134-454a-9f61-7256373f7a23",
        "cursor": {
          "ref": "e9e42016-3543-4139-92c6-d1dd56c9572a",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "667d1499-a7c7-4b57-bfde-f4fd00216db1"
        },
        "item": {
          "id": "21ca43b3-3134-454a-9f61-7256373f7a23",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "408c44bb-0ee2-496b-9062-bbe989192ecc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 297,
          "responseSize": 580
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd8830be-fbd4-4afe-8021-6c0f4dcee7f3",
        "cursor": {
          "ref": "912a26f1-b4e0-490b-a014-ef265a816bf2",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "0b3d5841-0522-485c-bc8a-46cf524bfa3b"
        },
        "item": {
          "id": "fd8830be-fbd4-4afe-8021-6c0f4dcee7f3",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "9a05e678-16d3-40fb-b525-02147b09d4a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 293,
          "responseSize": 582
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec0b7591-fc28-4010-98bd-b9899f1a9bdc",
        "cursor": {
          "ref": "55eaec1c-4ce8-45f4-9b80-e1467759186b",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "4b690e5f-44b4-4578-9797-538662877eaa"
        },
        "item": {
          "id": "ec0b7591-fc28-4010-98bd-b9899f1a9bdc",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "c8ac6d2c-fd8b-4609-a514-058dc6b47584",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 297,
          "responseSize": 632
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ceca768b-d079-4f69-bceb-b1d162b47610",
        "cursor": {
          "ref": "831bed01-cfdb-4b47-b1f6-07ca3a0c7b77",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "15707368-6809-4ee5-aa22-a202f3e06cc2"
        },
        "item": {
          "id": "ceca768b-d079-4f69-bceb-b1d162b47610",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "a3e542a1-6c4b-427b-85a9-c09cef64637f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 302,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b365d846-36e9-4283-a09e-e77a2207f444",
        "cursor": {
          "ref": "c420edfd-ecc7-42f4-bea0-bd8d8b0175cd",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "e0e62625-f215-41a3-a62f-3f4162d5e6c3"
        },
        "item": {
          "id": "b365d846-36e9-4283-a09e-e77a2207f444",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "0006ac99-0da3-42b1-9a7e-d8205ad3a391",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 291,
          "responseSize": 555
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fcf071d-6a52-482d-ae26-3b7696f66af9",
        "cursor": {
          "ref": "4ac3006e-a103-473a-892a-50e59ea00e87",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "2631be80-a812-4894-93e2-262690a7aa64"
        },
        "item": {
          "id": "2fcf071d-6a52-482d-ae26-3b7696f66af9",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "d5c64832-9b3e-4a01-86a7-2ebca853af6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 298,
          "responseSize": 552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "780f0aa7-1e0a-4143-b88a-361ee734616b",
        "cursor": {
          "ref": "f6ae10ef-e4d1-41a9-b216-f4173c78ee5a",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "e1432a35-c01b-4662-ab30-de1edb7a9d17"
        },
        "item": {
          "id": "780f0aa7-1e0a-4143-b88a-361ee734616b",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "abe21424-b338-44b0-9d5b-6f22ac19e89a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 317,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f71c01b7-02c5-49ed-97af-fad629b66a29",
        "cursor": {
          "ref": "bea82333-e39c-4caa-b2cf-299efc134fd0",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "068aea8d-712f-49e4-8e30-1f38dccb4584"
        },
        "item": {
          "id": "f71c01b7-02c5-49ed-97af-fad629b66a29",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "939b9843-06a9-4bf8-a819-dd5c5924d113",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 295,
          "responseSize": 552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e15cfa93-873a-49ff-996f-5c45704f8e5b",
        "cursor": {
          "ref": "74f97501-12da-4a7c-92d9-29c2d8c04dcd",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "29266ef3-e1bd-4564-bf24-17dba0f7c832"
        },
        "item": {
          "id": "e15cfa93-873a-49ff-996f-5c45704f8e5b",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "3dbae27f-fb63-4b15-add3-1398766b7438",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 296,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "884d9b81-154c-40e5-b415-dd1f679ffa00",
        "cursor": {
          "ref": "e88c7552-7739-4965-a271-8af8f27281e4",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "626c546d-f0f5-4bb3-b57f-851c8731c2f7"
        },
        "item": {
          "id": "884d9b81-154c-40e5-b415-dd1f679ffa00",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "4b3494af-2105-4c44-aad8-aa5fb5693876",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 317,
          "responseSize": 574
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee1b13eb-3c21-46b7-8410-8594bcf9b023",
        "cursor": {
          "ref": "abcf3c3b-082a-4859-966f-367b3ed40cae",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "d7219586-914b-4dce-9348-3ee86c57cea2"
        },
        "item": {
          "id": "ee1b13eb-3c21-46b7-8410-8594bcf9b023",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "073b7a52-8593-4299-b14a-d97ebd793203",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 307,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee7e9f81-fbac-4c7a-b502-e4ff801bc199",
        "cursor": {
          "ref": "88b5ab70-b068-4bc8-8818-bb91728ae91c",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "df6671aa-c654-4c95-895d-78aef096cd78"
        },
        "item": {
          "id": "ee7e9f81-fbac-4c7a-b502-e4ff801bc199",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "4a41f707-8da0-40b7-a95c-b1d31ac627bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 296,
          "responseSize": 590
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e94a8364-8b75-469d-b08f-7c6b19bf100b",
        "cursor": {
          "ref": "7af5865f-daa8-478f-8d79-1c312e5839c1",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "5886a635-c279-46b5-b33b-27d7a041e3ca"
        },
        "item": {
          "id": "e94a8364-8b75-469d-b08f-7c6b19bf100b",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "e505c6a8-2e8d-4fb5-8076-bd640a34fef7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 294,
          "responseSize": 587
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3dd417e1-d52d-46e9-a227-13efe05162e8",
        "cursor": {
          "ref": "72ed6b93-898b-4429-9899-0448f145e832",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "27f4d324-1c8e-40d3-a6fc-02c0c599eddb"
        },
        "item": {
          "id": "3dd417e1-d52d-46e9-a227-13efe05162e8",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "a834fbaa-3557-421e-a980-f46b0939b4bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 297,
          "responseSize": 589
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ace0a0c-bca4-4fbf-9453-375b4ed73981",
        "cursor": {
          "ref": "515ef6fe-eddf-46f8-a01c-c291f0fdfada",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "3bab29e4-fd5e-4373-be87-e6f79a319617"
        },
        "item": {
          "id": "5ace0a0c-bca4-4fbf-9453-375b4ed73981",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "1ceef2f4-48e1-45bf-a1a8-1d673e951e73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 292,
          "responseSize": 587
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3d2185b-0750-4914-8629-e4e2a4777b7b",
        "cursor": {
          "ref": "e7116986-ae0e-493c-b3c0-e37b5eb1bcd2",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "83c37cf9-4af4-4eb8-a210-0c78873dc3e4"
        },
        "item": {
          "id": "d3d2185b-0750-4914-8629-e4e2a4777b7b",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "3bd10346-59a7-496f-83ca-71c6480677b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 307,
          "responseSize": 512
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec5b1723-156a-4080-b0e9-1fe51a95d20b",
        "cursor": {
          "ref": "5e20dc68-905c-4fb9-b6ba-d1c596bdc00a",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "d48f8107-4d6d-47e0-9b45-8a736b2f2d91"
        },
        "item": {
          "id": "ec5b1723-156a-4080-b0e9-1fe51a95d20b",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "ad175462-6c61-4ce5-9f18-97a902204895",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 292,
          "responseSize": 1012
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87d8fcfb-e281-4057-a6df-687bea9ac87a",
        "cursor": {
          "ref": "f967c175-7d42-41aa-a99f-50055eb5cbaf",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "d183223c-4121-49d3-ba72-613ef8f97080"
        },
        "item": {
          "id": "87d8fcfb-e281-4057-a6df-687bea9ac87a",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "f43d3d7b-ee8f-42e5-ad96-64576489a023",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 289,
          "responseSize": 941
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9d5aaa1-d2c1-4427-a8a0-2b033e59a53f",
        "cursor": {
          "ref": "01e72e79-e140-48a5-8ad7-29ed74c3c55c",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "f1d3118d-e10d-493c-9caa-3587e40192c7"
        },
        "item": {
          "id": "c9d5aaa1-d2c1-4427-a8a0-2b033e59a53f",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "686db01c-0b4b-4d75-b942-ded1dc9158a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 294,
          "responseSize": 938
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6500d24a-4d0e-4e6b-a171-49ce2af7538b",
        "cursor": {
          "ref": "af9dc785-8dc1-4410-a2b7-e2cd1b660114",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "48fbebd7-6918-44a7-9015-5bf7d4270cac"
        },
        "item": {
          "id": "6500d24a-4d0e-4e6b-a171-49ce2af7538b",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "2a6a61c3-7ccf-4560-bb07-7a06a19cb6a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 289,
          "responseSize": 940
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f23ccff8-0101-42ac-99cd-3c423821cbf7",
        "cursor": {
          "ref": "3cb01835-006e-46f0-bab4-cf2cc380d4e9",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "6a50cbd9-c5be-4a6c-b885-5655b719b1f6"
        },
        "item": {
          "id": "f23ccff8-0101-42ac-99cd-3c423821cbf7",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "bf5fe9c4-9e2b-415f-9aa9-07a6f52cff6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 290,
          "responseSize": 1343
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9cd8b73-2681-4cb7-b0a0-aa40780e7680",
        "cursor": {
          "ref": "00bc86bb-7603-41ad-9b8a-f95c69c5b35a",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "31039ec6-9f11-4f5a-b3f9-41cf02a93d77"
        },
        "item": {
          "id": "b9cd8b73-2681-4cb7-b0a0-aa40780e7680",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "e35ef6c9-6786-4dd1-b1ff-60acccd918a6",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 2598,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a68ce4e3-3550-499f-af21-d628273d3fc7",
        "cursor": {
          "ref": "c90c607d-80b9-4673-a387-e614ba02d8f3",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "54f62416-6d69-4f83-b901-2dacdfd235d9"
        },
        "item": {
          "id": "a68ce4e3-3550-499f-af21-d628273d3fc7",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "dd9f8111-d8c5-438e-b981-345a526fc04a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 284,
          "responseSize": 971
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a28a61f5-af99-4c41-9f99-8de52e5fb41b",
        "cursor": {
          "ref": "1d68e2fc-d5e3-4d60-b400-5653bbaf7282",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "adc7657b-1f93-41bf-be43-c255b76f6f1e"
        },
        "item": {
          "id": "a28a61f5-af99-4c41-9f99-8de52e5fb41b",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "2ea54eee-7381-40f2-887c-eb5d80052889",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 271,
          "responseSize": 1351
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c7d8b2c-de78-4f11-abad-2176dc49a7a7",
        "cursor": {
          "ref": "bb4aafee-394a-43b9-b217-57e2756f89d8",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "c1519168-6776-4f61-8b35-13af8f4ed1ee"
        },
        "item": {
          "id": "2c7d8b2c-de78-4f11-abad-2176dc49a7a7",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "482994ea-0d14-41f0-8e98-2fb8e5a26e21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 295,
          "responseSize": 1280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b576f01-8b1e-49c9-b23c-63a111ee8ec0",
        "cursor": {
          "ref": "d4b66ce3-a49f-42ad-a0cb-37ce47ca8c77",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "f0f00ef7-4fb4-4266-bdd5-53a962cf7049"
        },
        "item": {
          "id": "4b576f01-8b1e-49c9-b23c-63a111ee8ec0",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "0b972cc0-f7ec-4108-9fd7-ee641d33c5d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 297,
          "responseSize": 1277
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "590e4a20-ce24-4105-a809-1ed853d391a0",
        "cursor": {
          "ref": "cc2988a4-ec42-482d-b76a-a4e8161fb301",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "9dc34509-899c-4d65-a567-52ac66b1cd15"
        },
        "item": {
          "id": "590e4a20-ce24-4105-a809-1ed853d391a0",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "eb0bd9c6-bb5d-473f-b320-2887c408710e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 301,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11efd598-ae14-42c7-a141-1994c9784cf5",
        "cursor": {
          "ref": "34374931-df91-4558-ae62-ced440008df7",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "454d05b8-9bd8-4e5e-9ac4-c58fcaf7fdf4"
        },
        "item": {
          "id": "11efd598-ae14-42c7-a141-1994c9784cf5",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "fc7bcba8-5fbd-4a5c-acc7-304c70c345e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 291,
          "responseSize": 1682
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "611af37e-8825-4bdb-8ff4-c016f44bb9c6",
        "cursor": {
          "ref": "ce4b255a-f99d-4ddb-8648-814e1897d671",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "6fed3abe-d2aa-4a4e-bc25-9de27e327e32"
        },
        "item": {
          "id": "611af37e-8825-4bdb-8ff4-c016f44bb9c6",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "1c5fbd69-724d-40fb-8089-bb0251c8173c",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 2434,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6003a2b3-dfc9-4b6e-b729-e1bdb8d4827d",
        "cursor": {
          "ref": "697ce3b1-84c1-4e3f-9ccf-325a94e1f503",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "5104bd30-cad9-4471-89a4-98bf6db0d632"
        },
        "item": {
          "id": "6003a2b3-dfc9-4b6e-b729-e1bdb8d4827d",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "79401a61-eef3-4e8a-94fa-72b5fbc9049b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 308,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "995533ce-92f2-417c-9722-53517262707a",
        "cursor": {
          "ref": "132e804c-a9dc-412a-bfa1-ca1366b99172",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "c06ed867-f1ab-4420-9675-41ef7e69016b"
        },
        "item": {
          "id": "995533ce-92f2-417c-9722-53517262707a",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "75fc5de4-8b71-4328-b3f8-0c691672f81c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 289,
          "responseSize": 594
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "695340a7-1ffc-4e0a-a771-11064727f037",
        "cursor": {
          "ref": "210db92f-6e9f-46fa-8738-8a6819172ca9",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "c125d994-e29c-4484-9d81-ee99791df319"
        },
        "item": {
          "id": "695340a7-1ffc-4e0a-a771-11064727f037",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "55fed6ea-7991-47fe-86ad-c7a3d291c37c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 299,
          "responseSize": 575
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5781f1b2-48c6-479f-9214-984f94042a4f",
        "cursor": {
          "ref": "f58122b7-5e78-4799-bde2-c748e17c7817",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "7f321710-9b8d-4b9c-b875-420497dc7fda"
        },
        "item": {
          "id": "5781f1b2-48c6-479f-9214-984f94042a4f",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "c6bb6de2-f014-4ba7-b353-cf2848507408",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 294,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0796af1-a460-4b39-b4e7-8f6638c25101",
        "cursor": {
          "ref": "c391f51b-1259-43f4-9656-89d723058657",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "a8d1f246-f8ef-43e7-8a89-4709051ed730"
        },
        "item": {
          "id": "f0796af1-a460-4b39-b4e7-8f6638c25101",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "0da7d61f-cc43-4bb0-9e35-7951e60e43fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 320,
          "responseSize": 574
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccb1fecd-7970-4a12-87d3-dd1f7f45c67f",
        "cursor": {
          "ref": "5c4d1767-4752-482b-9982-514f2e9105d3",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "57725c31-0d57-4c9c-b8a4-164adf912f2e"
        },
        "item": {
          "id": "ccb1fecd-7970-4a12-87d3-dd1f7f45c67f",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "c9be9b1a-9b00-4580-9808-bcd7493ffd35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 287,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed977c12-6257-4151-bc1c-e2eedca354f6",
        "cursor": {
          "ref": "3191adcd-62b9-4e0f-b2b5-79128a6d54b6",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "b202f846-02bb-40f2-9df4-8d5e8829bc39"
        },
        "item": {
          "id": "ed977c12-6257-4151-bc1c-e2eedca354f6",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "3e9b9bf3-766a-40ad-9118-c11a97e38376",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 294,
          "responseSize": 625
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36f84452-c908-438a-b693-addfea0bbf84",
        "cursor": {
          "ref": "e37f9e50-eaff-4527-ab29-23ca7a17fda3",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "f449949d-2e57-4091-8dc1-67ebd5292435"
        },
        "item": {
          "id": "36f84452-c908-438a-b693-addfea0bbf84",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "98154d33-d032-4090-9212-8195f5a176bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 283,
          "responseSize": 584
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f0c4a8d-4c75-4337-8b56-1ed3934eb620",
        "cursor": {
          "ref": "1aff440b-070c-4244-b7a3-5c1094acd274",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "9057614d-6eea-4a99-accf-eb355e7c0543"
        },
        "item": {
          "id": "0f0c4a8d-4c75-4337-8b56-1ed3934eb620",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "68ec18aa-8336-476c-b2fc-8ca53846acec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 298,
          "responseSize": 1055
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d067a506-411a-4961-8af8-3926e4746b88",
        "cursor": {
          "ref": "c553d421-230b-44e2-91a9-7400e59bb0f4",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "903de81a-54ef-4c25-8d0d-d9ff8812c44b"
        },
        "item": {
          "id": "d067a506-411a-4961-8af8-3926e4746b88",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "44ade4be-39e3-4f1c-a316-62087d854230",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 312,
          "responseSize": 864
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69585a04-4c41-4194-aadb-fc175b62e2f9",
        "cursor": {
          "ref": "0c3ec0a7-3f69-4351-bcc0-5fef486787b4",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "b4974cc7-1982-43a0-96ed-c2ca0f673e3e"
        },
        "item": {
          "id": "69585a04-4c41-4194-aadb-fc175b62e2f9",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "3e1e6517-c0a6-4bef-8285-1d951f4e1f57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 297,
          "responseSize": 861
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4204fef3-954d-4e28-baeb-ae24c54962a0",
        "cursor": {
          "ref": "29a4dc55-7184-41ca-a1de-108b8b6274dd",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "3326d6aa-3ebd-4662-aa26-11fc74f5b4c6"
        },
        "item": {
          "id": "4204fef3-954d-4e28-baeb-ae24c54962a0",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "26bd2ecf-0f3a-4cf0-94bf-30f93637d151",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 293,
          "responseSize": 863
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "521c5051-33d2-43cc-9ea4-b089094ae158",
        "cursor": {
          "ref": "3b643145-53a1-4b7d-9762-ba90de5f07de",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "d0892066-56ba-4b14-8a9c-d9bba2beaa7e"
        },
        "item": {
          "id": "521c5051-33d2-43cc-9ea4-b089094ae158",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "518b6c65-b81e-4280-be8a-6e00673e09a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 297,
          "responseSize": 876
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c7b2923-5f0c-4d4b-8928-4a9189f4bcaa",
        "cursor": {
          "ref": "501ee7f1-b8fe-4650-9d57-143ab53d9903",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "54a0ad0a-cc32-481d-a3d3-409fa4eed37e"
        },
        "item": {
          "id": "3c7b2923-5f0c-4d4b-8928-4a9189f4bcaa",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "fc2cbafb-1641-4bc4-b1ae-31cc320b4c4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 286,
          "responseSize": 1370
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ce02e08-aa62-4079-b80c-f8611e91f25d",
        "cursor": {
          "ref": "19b48e8a-18c9-4434-8993-f4db0745ebaa",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "c0cf4b85-2d36-43fb-845c-9c51a5167c14"
        },
        "item": {
          "id": "2ce02e08-aa62-4079-b80c-f8611e91f25d",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "a01d8515-9b37-4af8-9870-a53c8cd8803c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 296,
          "responseSize": 1356
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "067e3df6-6a51-4133-94a8-690ca1029a0b",
        "cursor": {
          "ref": "d669a796-b935-49ee-88e8-335589781fbb",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "2bb539b0-40d4-4f06-b564-48fcc69760d7"
        },
        "item": {
          "id": "067e3df6-6a51-4133-94a8-690ca1029a0b",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "13bad3a8-d278-4982-92d9-fade5a2ee6e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 302,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2557cd4c-4684-469b-af21-c338d4ac9dfc",
        "cursor": {
          "ref": "9536d1bb-0f1f-44ac-b4e8-1e1a7ce4c6bb",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "322e1352-eaf9-491b-a91a-443003fbd1c2"
        },
        "item": {
          "id": "2557cd4c-4684-469b-af21-c338d4ac9dfc",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "965c71ea-92df-4841-ac42-94f3149ec347",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 288,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdafc0bf-7357-48d3-929c-26b6934ed5ed",
        "cursor": {
          "ref": "78972383-dcfd-4a4b-a5fe-49d7d184d5bc",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "76d305db-bc8a-4cc2-b9ea-3972ec864d6f"
        },
        "item": {
          "id": "cdafc0bf-7357-48d3-929c-26b6934ed5ed",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "cb7e3bb4-5c73-4d81-ba63-fb73c3e35312",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 302,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46056dda-e740-42c0-8e18-4473f80d4dd0",
        "cursor": {
          "ref": "863daed1-4061-41b1-9e6c-2a087619a8d8",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "a238effd-7cd1-4fcd-acaf-fd39d7583bb5"
        },
        "item": {
          "id": "46056dda-e740-42c0-8e18-4473f80d4dd0",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "00841845-6f2c-4d4b-8244-21f3191e7649",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 280,
          "responseSize": 545
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "debc5182-3d2e-44cb-a7b6-e391b812e3ae",
        "cursor": {
          "ref": "1db3f2fb-7241-4673-b5c4-28f370a5a7f6",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "01033dfc-09eb-407a-945d-92b26ca0f497"
        },
        "item": {
          "id": "debc5182-3d2e-44cb-a7b6-e391b812e3ae",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "d9aace4a-d82a-4048-89ec-c15a3d7d7615",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 322,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1247f2b1-d289-4e3d-835e-4c272d8ff14e",
        "cursor": {
          "ref": "763ee57c-713a-44b4-b31a-b41d44db0606",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "768ea863-ddc5-4ae8-8d6b-b00d2dc2e3b6"
        },
        "item": {
          "id": "1247f2b1-d289-4e3d-835e-4c272d8ff14e",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "75f2835a-f9ff-4a96-8d5c-1c7181609954",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 312,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48fec4b0-4e14-4fee-8ecc-eec9c0bc060a",
        "cursor": {
          "ref": "48d072b5-4e73-4ed7-9c22-0e646dac0f21",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "d238dc85-f7c3-499f-87b9-3095b1441b38"
        },
        "item": {
          "id": "48fec4b0-4e14-4fee-8ecc-eec9c0bc060a",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "ac991f7d-6d97-4347-955d-98e034d59eb8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 306,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94d4e883-9930-4027-8651-0abef133d72c",
        "cursor": {
          "ref": "eea833f3-89f0-4b5d-ad96-0be720e081c3",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "bb93c02c-96df-43db-8aab-29be187344ec"
        },
        "item": {
          "id": "94d4e883-9930-4027-8651-0abef133d72c",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "b7b21ef1-776d-4527-b5f6-87eaa3acb959",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 279,
          "responseSize": 525
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "124fbc48-55c3-4591-aae0-c6cfc0ae7130",
        "cursor": {
          "ref": "01113498-0a48-4c67-83a6-a82a6b394071",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "b92cceed-12b1-4947-b291-8ce60c77616b"
        },
        "item": {
          "id": "124fbc48-55c3-4591-aae0-c6cfc0ae7130",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "96f9d21b-3560-45bf-8ece-058b6d07d666",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 296,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0392880-a753-456c-9803-ce6c730eb469",
        "cursor": {
          "ref": "7dec99af-d062-4ad3-91e1-9cbf9025ca6a",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "74cdc37f-0091-415a-99e0-88fb69461451"
        },
        "item": {
          "id": "f0392880-a753-456c-9803-ce6c730eb469",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "30ef0dfe-da45-47e2-af7f-44c8459cb664",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 281,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bec665d-00e4-45d0-b4e9-78ac29f733fd",
        "cursor": {
          "ref": "5c7510b9-5e2c-45c9-b3b3-5a2998bbfd43",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "603c3c4e-19ab-45c6-8c47-3c2551d78ea4"
        },
        "item": {
          "id": "5bec665d-00e4-45d0-b4e9-78ac29f733fd",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "b08b5a55-b08f-4324-bd84-b1440bd91cf9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 293,
          "responseSize": 802
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "073cc8a1-b8d5-483c-82e0-1eb943761432",
        "cursor": {
          "ref": "ea368e2e-06fd-4f72-b715-417cb2c63ee4",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "799a7dce-4cdb-49e4-9aea-633af301dc7d"
        },
        "item": {
          "id": "073cc8a1-b8d5-483c-82e0-1eb943761432",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "b7307569-355d-4f92-a68b-1078e7600c33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 293,
          "responseSize": 783
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98f5daf3-4513-4a41-88c8-d4790e820434",
        "cursor": {
          "ref": "db7504e2-072c-4519-80e0-7cd38ed1148f",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "f807c554-0ab8-4545-8c0f-34ac40087eb0"
        },
        "item": {
          "id": "98f5daf3-4513-4a41-88c8-d4790e820434",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "09ebd128-357c-4c3f-9cc2-b6482d31e999",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 308,
          "responseSize": 780
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5d8045a-d367-49a1-83da-8bae5200336d",
        "cursor": {
          "ref": "2c5d565d-e88e-4aaf-983e-ff1397457250",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "f3dddcc2-a948-466c-8972-18ed075332e4"
        },
        "item": {
          "id": "f5d8045a-d367-49a1-83da-8bae5200336d",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "ef5e4c68-41e3-43e1-aaf8-f3fb528d80d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 295,
          "responseSize": 782
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ceb1dba4-38e1-4519-b08d-5783fbc72da8",
        "cursor": {
          "ref": "d5cb5ae8-7200-4764-be6c-4c8c5a3a5c6c",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "a10a571c-8cbb-4df0-86be-3d9886b85a77"
        },
        "item": {
          "id": "ceb1dba4-38e1-4519-b08d-5783fbc72da8",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "48d04719-ba74-49cb-b7f1-1af5d75efa44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 304,
          "responseSize": 780
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d3a6cb0-671f-4a2f-9e4b-7d85d154cbea",
        "cursor": {
          "ref": "aee129b1-03c4-4dc0-ae17-12f0a14a08fe",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "80181f68-4371-4629-b41b-67b673c6db3b"
        },
        "item": {
          "id": "5d3a6cb0-671f-4a2f-9e4b-7d85d154cbea",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "8010c197-0d1b-41b1-b7ea-83b7067100e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 295,
          "responseSize": 651
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5a261a7-ae08-4ec4-aea6-fe26722d6910",
        "cursor": {
          "ref": "15e9ea2f-dea8-4a79-9fa1-140064aa4a1b",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "d6684869-1992-4965-9541-25b5d2eea5bd"
        },
        "item": {
          "id": "e5a261a7-ae08-4ec4-aea6-fe26722d6910",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "bcaf720f-9dc9-4621-8657-d0c2bf524d26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 286,
          "responseSize": 619
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ba39fa0-c270-42de-a93f-5d88b93c8b1c",
        "cursor": {
          "ref": "7d5b065a-bbc5-4c9e-b452-078ea26ca026",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "7f0df84b-ff72-4737-8abe-cbd778380d24"
        },
        "item": {
          "id": "1ba39fa0-c270-42de-a93f-5d88b93c8b1c",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "3ca77409-a161-4742-b986-b02db29a9c79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 291,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c77a850d-62f3-48ff-b544-c36522410c2a",
        "cursor": {
          "ref": "5011c100-1ce6-4f1a-9cce-4c5ef8193c85",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "bc6c5a24-96c0-45db-bfa4-e051d70f8032"
        },
        "item": {
          "id": "c77a850d-62f3-48ff-b544-c36522410c2a",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "5ce248f9-eae4-4881-91b4-0557b7a9471e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 290,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d37ee531-f282-464a-938d-27af94417b4e",
        "cursor": {
          "ref": "bf41f7dc-5c68-401a-9994-d5d3e5dfd7f3",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "380fa6d2-491c-49f2-b076-73b5442204a3"
        },
        "item": {
          "id": "d37ee531-f282-464a-938d-27af94417b4e",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "27e40e57-2d9b-40b5-9daf-22919ca367a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 279,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0e0310d-f6e1-4006-92a3-5087a8b494d7",
        "cursor": {
          "ref": "0cc6c9b0-199c-41d9-9990-8b557e178f55",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "1cb4b013-b72c-405c-9472-c358b4947bdb"
        },
        "item": {
          "id": "d0e0310d-f6e1-4006-92a3-5087a8b494d7",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "a1e79991-a8b7-4aaf-9aad-a82249b296c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 286,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22d0f300-2317-496a-80a0-314e32d7a986",
        "cursor": {
          "ref": "283036cc-b79f-4c94-82d3-dc269b793f85",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "fc76040e-7996-4959-b735-1e3807d9e0e1"
        },
        "item": {
          "id": "22d0f300-2317-496a-80a0-314e32d7a986",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "6b557334-227a-4cad-91e6-0db4386691eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 281,
          "responseSize": 650
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8f9e0c6-c11d-4e1c-991f-95cd39848480",
        "cursor": {
          "ref": "e7ae6ddb-f1d4-4c87-9dc0-b71379158478",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "9ebb05bf-ee7b-41e5-89c4-4db0f53d75c6"
        },
        "item": {
          "id": "d8f9e0c6-c11d-4e1c-991f-95cd39848480",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "bf021da5-2eb9-419b-8536-4c9b788e0faf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 291,
          "responseSize": 640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d14566f-996d-4087-8999-016c7c69f539",
        "cursor": {
          "ref": "6ed2a35e-1785-4855-b342-db7fdc08ce4e",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "beb2469f-3503-4913-8fd3-d837fdc350b6"
        },
        "item": {
          "id": "6d14566f-996d-4087-8999-016c7c69f539",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "9c1a2d9f-175e-4343-aa13-2bf541e88452",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 282,
          "responseSize": 622
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3504c464-d397-4065-9cd3-51bbfb1c765a",
        "cursor": {
          "ref": "d3ea1300-b2b0-4ed3-aaf3-5b29e575eb79",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "79e6925b-482c-4a75-9afe-03b2e031531d"
        },
        "item": {
          "id": "3504c464-d397-4065-9cd3-51bbfb1c765a",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "54563acc-3bf6-4748-8976-90a093c6dd90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 296,
          "responseSize": 619
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9003ffaa-6464-481a-ac0d-344ad1f8d8af",
        "cursor": {
          "ref": "aede1cf7-c239-4c97-99cf-37c0c000c8ca",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "634cd526-8415-4a49-bffe-fbdc3b9ce893"
        },
        "item": {
          "id": "9003ffaa-6464-481a-ac0d-344ad1f8d8af",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "b51a481a-cdc1-4b93-9074-92e0a758e5df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 282,
          "responseSize": 621
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3fdc2da9-dfc7-4081-b1eb-1e451f3bd89c",
        "cursor": {
          "ref": "e074cf6c-29dc-4bdb-b8d3-8feb7e153bfb",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "6cc17c49-a2a9-412f-a438-b13458370327"
        },
        "item": {
          "id": "3fdc2da9-dfc7-4081-b1eb-1e451f3bd89c",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "21d871a0-74b7-4b48-9a61-2ce4cf16fc3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 297,
          "responseSize": 638
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4091d345-3b9c-4811-b610-e8b1e9e20c86",
        "cursor": {
          "ref": "4d33f063-4049-4b00-b0f1-d14f35c93f3e",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "1ec005cd-7dc9-495a-bc09-521ddbf90e8d"
        },
        "item": {
          "id": "4091d345-3b9c-4811-b610-e8b1e9e20c86",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "7329865f-2bdd-4ca9-a420-920aac4f0b35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 293,
          "responseSize": 656
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5cf18511-d291-4627-a84c-09653961aeca",
        "cursor": {
          "ref": "7e80993c-7058-4163-9d4d-189d2ada0b24",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "f236fede-68ae-4465-974c-bb0ed6bbe066"
        },
        "item": {
          "id": "5cf18511-d291-4627-a84c-09653961aeca",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "03fa4556-0b50-4156-b7dc-c3c73ef2cc74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 303,
          "responseSize": 914
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8540896-37b8-4777-90d2-9b1b00289eb4",
        "cursor": {
          "ref": "503aea87-a483-4f9e-92b0-c6944db35050",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "4849b083-1082-458a-abe3-a677106905e2"
        },
        "item": {
          "id": "a8540896-37b8-4777-90d2-9b1b00289eb4",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "71e19a44-b67b-4886-8094-5abadd55acb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 286,
          "responseSize": 896
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67b88896-bb27-4cff-9050-36223f9b2d1c",
        "cursor": {
          "ref": "de48810c-3453-4fec-b697-ad434f0574b5",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "eb2d96a7-4d7b-4fd4-af4d-5c818def8ec3"
        },
        "item": {
          "id": "67b88896-bb27-4cff-9050-36223f9b2d1c",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "2ea7fd8c-0fa8-4a90-a7a1-80f40819b1f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 287,
          "responseSize": 893
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9007a5f-7f63-40fd-9504-bf9f7f19bc3e",
        "cursor": {
          "ref": "759203d7-3f4d-4e35-9117-65f99e614897",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "05a1d3c3-4e4f-4ced-a11c-63b62fa533fc"
        },
        "item": {
          "id": "d9007a5f-7f63-40fd-9504-bf9f7f19bc3e",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "a84ac9dc-1253-4474-9fa1-938c979eea47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 281,
          "responseSize": 895
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bb181ca-4379-47cb-9678-0db0177a421a",
        "cursor": {
          "ref": "0d9c9772-bc9a-4b92-954a-bb0a8b9a95b4",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "25416aad-f108-4567-9209-ee1c3dd45ac8"
        },
        "item": {
          "id": "5bb181ca-4379-47cb-9678-0db0177a421a",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "6811e296-8dde-4840-9f95-c19c10533de6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 287,
          "responseSize": 893
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21c04d07-7949-44a3-aa58-c9591c8cc66b",
        "cursor": {
          "ref": "98ae3148-3a3d-4ca8-bfca-dd216e026f4d",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "965046a6-9db2-42b6-8e6f-925bc142070f"
        },
        "item": {
          "id": "21c04d07-7949-44a3-aa58-c9591c8cc66b",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "f6c12621-e412-449a-9497-a7e7b45124fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 283,
          "responseSize": 719
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37e84e96-a542-4b26-b40f-33c5af2bb324",
        "cursor": {
          "ref": "1792fc8d-9774-464b-8b28-5173a3f3c961",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "c0e272d1-c5a7-4052-b09e-2c3b65e6fa59"
        },
        "item": {
          "id": "37e84e96-a542-4b26-b40f-33c5af2bb324",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "1dbdd460-ec78-4c61-b963-4adf6287560b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 76,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fec63a3f-b1ef-499c-a2c4-834421ddb522",
        "cursor": {
          "ref": "8389dc88-eaef-4f0d-9de8-558b85024219",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "17be406e-2bd9-466d-a952-aa3e008afb83"
        },
        "item": {
          "id": "fec63a3f-b1ef-499c-a2c4-834421ddb522",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "b5fda123-2ad3-48a6-8fcd-85dd6e757dd2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 281,
          "responseSize": 842
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "a0f4b5ce-638d-4a0a-a997-fbb7ece2c23a",
        "cursor": {
          "ref": "b216d60e-cc18-4d80-ae86-96e17653a762",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "a59cb65c-1973-460c-89c4-42bd5f7a6beb"
        },
        "item": {
          "id": "a0f4b5ce-638d-4a0a-a997-fbb7ece2c23a",
          "name": "credentials_issue"
        },
        "response": {
          "id": "ead0fbe7-fcce-4afd-aa49-897a8d45ff3b",
          "status": "Created",
          "code": 201,
          "responseTime": 11586,
          "responseSize": 707
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d6bcaca-d2d9-4feb-b851-2c2a659a5e9e",
        "cursor": {
          "ref": "4afd5db9-ae2a-4b88-8ab6-81c84b09c851",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "e24cca31-e3a9-4cf1-abe9-23211c96a56a"
        },
        "item": {
          "id": "4d6bcaca-d2d9-4feb-b851-2c2a659a5e9e",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "34e02879-fa1d-4644-8650-348b113951ce",
          "status": "Created",
          "code": 201,
          "responseTime": 12449,
          "responseSize": 760
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "119d506d-bb94-4af8-a678-aea12c9b3999",
        "cursor": {
          "ref": "ece6e1b8-f3c7-48a9-8143-247bd2584cfe",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "d50182b5-7d9d-46ad-9f97-b28cb29e3915"
        },
        "item": {
          "id": "119d506d-bb94-4af8-a678-aea12c9b3999",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "b1dd0f9a-e9bc-4cbf-8391-59e1b7f0f6da",
          "status": "Created",
          "code": 201,
          "responseTime": 10713,
          "responseSize": 714
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d9b00a5-3829-494a-a915-90d5d2f2125c",
        "cursor": {
          "ref": "1a2d7dc0-fb46-4f40-91cd-f64fe480e10f",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "8afecc07-5ccb-46e2-92ff-dc22d894b700"
        },
        "item": {
          "id": "2d9b00a5-3829-494a-a915-90d5d2f2125c",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "ade09b37-8eb7-4e53-b99b-81601b702c89",
          "status": "Created",
          "code": 201,
          "responseTime": 11063,
          "responseSize": 718
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcecd03e-c48c-449f-8b0d-b4af740f627b",
        "cursor": {
          "ref": "51587d21-7f2b-4971-8be3-725c3bbe43a6",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "7c40303b-f050-4ee1-a819-43f29273deff"
        },
        "item": {
          "id": "dcecd03e-c48c-449f-8b0d-b4af740f627b",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "ed03d4f0-c347-4301-8b0e-51cba672ab39",
          "status": "Created",
          "code": 201,
          "responseTime": 10644,
          "responseSize": 707
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "b396893c-b96c-4e4b-8f60-acf80be74e3b",
        "cursor": {
          "ref": "516b1535-48c3-4938-ba1c-1fa736779f41",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "c52e628a-094d-4add-a8b5-e45347a9d8ea"
        },
        "item": {
          "id": "b396893c-b96c-4e4b-8f60-acf80be74e3b",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "9b760690-dc39-46af-a163-4b1713969575",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 338,
          "responseSize": 725
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "c0b9661b-e577-4f40-9946-50f2dc5e202c",
        "cursor": {
          "ref": "28fedb5f-4460-48fa-bdf9-7a9f2c6ae758",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "dec35a09-b1a1-44f7-beb9-9d706a963259"
        },
        "item": {
          "id": "c0b9661b-e577-4f40-9946-50f2dc5e202c",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "1135599c-e84e-4950-b20f-24a320c7951a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 287,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aca3e2f2-80e7-4c5d-961f-6f6240d13481",
        "cursor": {
          "ref": "4c60f275-a8f1-47fb-b949-7874f6b77e24",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "d37a9964-ee9c-4f81-87c0-221e6afa0038"
        },
        "item": {
          "id": "aca3e2f2-80e7-4c5d-961f-6f6240d13481",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "829b6ff0-f915-4be0-b42d-90423ce9cc75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 310,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c70dcfb-903f-4d4d-8256-86b6ad82637b",
        "cursor": {
          "ref": "7186d559-2aea-4a18-8950-c75f1700915b",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "3de02ae4-6611-4749-83ad-9af7b1d01eca"
        },
        "item": {
          "id": "7c70dcfb-903f-4d4d-8256-86b6ad82637b",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "3f04436b-89cc-49ee-ad1c-2a6f2580cb4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 316,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "162ce2d6-9023-4290-8b5f-5074c01944cf",
        "cursor": {
          "ref": "ae444c3f-7795-40b0-a008-5764e822b30d",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "e5018d28-cf24-4d62-919e-616f29e639d3"
        },
        "item": {
          "id": "162ce2d6-9023-4290-8b5f-5074c01944cf",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "e45367e6-689b-4f34-bb22-7f87afc7f0f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 299,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bf4f708-e180-4c19-ab5b-59ff923c62cd",
        "cursor": {
          "ref": "645c900b-fd13-439b-a985-044441a34b8c",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "d35813a1-d88b-4ffa-8d47-90f61210c552"
        },
        "item": {
          "id": "7bf4f708-e180-4c19-ab5b-59ff923c62cd",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "fb13ae16-05e2-48bb-9744-d7072d619495",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 284,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28534880-47a0-4b7a-ade7-68a904d24394",
        "cursor": {
          "ref": "56ba23f1-63ec-4979-9c41-155cdec5190c",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "33ac2c44-943c-4029-b6ba-fb3961770f7e"
        },
        "item": {
          "id": "28534880-47a0-4b7a-ade7-68a904d24394",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "30177873-c1ea-4459-9e2d-a1104b7c2fb4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 298,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ef786e6-92a3-4ed2-993c-da65c2745a27",
        "cursor": {
          "ref": "a965ef42-3fe4-4624-893f-cb0e89e1c059",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "99931660-2b45-4a64-bbb1-d96a69322e97"
        },
        "item": {
          "id": "9ef786e6-92a3-4ed2-993c-da65c2745a27",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "5a29f2a7-b142-4820-a3a2-24c08cfec95d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 294,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d950b42b-02ee-4105-9cd9-0abfc30703f1",
        "cursor": {
          "ref": "3b595f2c-75bc-479a-964c-a0e2b2cf686f",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "61a4e979-d3c4-4a08-b628-d6b35d35ab37"
        },
        "item": {
          "id": "d950b42b-02ee-4105-9cd9-0abfc30703f1",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "3b599832-49bc-4cdc-9909-efc8e3185374",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 288,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fdb2720-689e-4ce4-b13b-16ab6fca6079",
        "cursor": {
          "ref": "07fbab52-cdbb-467e-b6e4-e86d9972d141",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "65c316cc-eaf4-449e-b2ac-1e9b663f6f2a"
        },
        "item": {
          "id": "8fdb2720-689e-4ce4-b13b-16ab6fca6079",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "52889f9e-62df-466f-b928-95d2f6dc5b09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 307,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4aacc1f-ec9d-4d84-9b67-e95497253c4f",
        "cursor": {
          "ref": "2c8b9ad0-c89d-4149-9015-69042c1331eb",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "ce91b23f-0f3a-44fb-9c4b-bf00830d8bbe"
        },
        "item": {
          "id": "b4aacc1f-ec9d-4d84-9b67-e95497253c4f",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "e9e94c86-7ced-4e01-b62f-7625328b9eea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 282,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76202767-3db4-412c-b696-0055171fb0c9",
        "cursor": {
          "ref": "2696ec23-69f7-43b7-a3d1-cb6464c7d647",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "c3898baf-897b-466c-853a-db5d0702848e"
        },
        "item": {
          "id": "76202767-3db4-412c-b696-0055171fb0c9",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "6f8787fb-1d7c-4f0b-984c-64acc47f6dd1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 338,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3b1b7c5-c086-41ff-a6f4-f44f1fa46461",
        "cursor": {
          "ref": "782f0916-3a1f-406f-905d-68b200df360b",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "a8ba4d84-0888-4a9d-bcd8-bbe2b81d5e4b"
        },
        "item": {
          "id": "e3b1b7c5-c086-41ff-a6f4-f44f1fa46461",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "ab80b9cc-8565-40ab-9dd2-fe80b28161a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 280,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39fc2671-abe5-497b-b8ce-55538bacd040",
        "cursor": {
          "ref": "e8d7a198-98de-41bb-8e89-d8afa4f4d5c8",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "39a3d07a-9c2e-444c-a291-7001252fa98b"
        },
        "item": {
          "id": "39fc2671-abe5-497b-b8ce-55538bacd040",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "6b3d1542-51f8-4840-8293-6ab517b65839",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 286,
          "responseSize": 531
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a20a5041-b1c4-46ae-889b-e6278f4f8c78",
        "cursor": {
          "ref": "65eb9559-aee0-481b-88e2-344b0414987c",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "fd1ae19e-6040-4623-b603-a30fc68549a1"
        },
        "item": {
          "id": "a20a5041-b1c4-46ae-889b-e6278f4f8c78",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "b2e199dd-3d36-4b63-9974-0cea720e83f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 292,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6ec76c3-53b2-456b-b31f-cee531736332",
        "cursor": {
          "ref": "b93fe0e4-e15d-4240-be41-e0099b3b55a1",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "425c413f-a15d-42df-a47c-457e59c5a2c9"
        },
        "item": {
          "id": "a6ec76c3-53b2-456b-b31f-cee531736332",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "4b9a11c2-397e-408e-bb23-140abf142906",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 292,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d01e5a0-e01f-4afe-b006-6ea9d9f04e3b",
        "cursor": {
          "ref": "bc789d8a-54e9-4e0b-86e1-73cc9094659b",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "939da8ce-938e-4b36-98a8-40d07f8d6148"
        },
        "item": {
          "id": "1d01e5a0-e01f-4afe-b006-6ea9d9f04e3b",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "a58b0d21-20c4-4dca-ab16-d018e35143b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 335,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9f09d52-857a-4669-bdf2-bc971b9d80f1",
        "cursor": {
          "ref": "fa9930d8-e82b-4d55-be86-cb82b7ca35b3",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "f1059b65-3e2a-4429-ad11-6416da2fed43"
        },
        "item": {
          "id": "a9f09d52-857a-4669-bdf2-bc971b9d80f1",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "9505d772-b957-43b5-af91-89801e6f6ceb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 288,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecfa563c-f2bc-4c29-b074-fece25b4fca6",
        "cursor": {
          "ref": "d0d896db-3497-4cb3-abe9-15497b8f6327",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "eb367124-9521-47e4-a4ee-82347e818d72"
        },
        "item": {
          "id": "ecfa563c-f2bc-4c29-b074-fece25b4fca6",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "3e6814b1-4363-4c33-b9eb-0bc376c0bc21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 288,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8e2f602-add3-49ec-aef1-32658042515c",
        "cursor": {
          "ref": "3673d6d9-93b7-4ee2-bb6c-f6491a0b99c9",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "29621542-5ede-4d4d-84e6-29bdb13270db"
        },
        "item": {
          "id": "a8e2f602-add3-49ec-aef1-32658042515c",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "b4903bb8-be2b-43b0-a15e-b638cb3e3c46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 302,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "460e1f4e-efaa-4ff3-a58b-d5355fb643f4",
        "cursor": {
          "ref": "6f6b920c-6112-417f-8c18-563527fe1e62",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "0cbe1884-1b1e-445f-8b0b-e3fff281944d"
        },
        "item": {
          "id": "460e1f4e-efaa-4ff3-a58b-d5355fb643f4",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "b7626231-a7f5-42d3-b7c0-6135f233b0bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 290,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7c4b361-602a-4aac-afb4-b8b0718904cb",
        "cursor": {
          "ref": "f3fa7aec-8073-4364-b2cf-7f86e1c12da5",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "a99a29df-0797-4788-af6d-1f2185228106"
        },
        "item": {
          "id": "d7c4b361-602a-4aac-afb4-b8b0718904cb",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "e796dd3d-95c7-464e-a4b8-e47f2adb364e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 296,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95d8c1a4-0fd1-43e7-81fa-6a79d0cb402e",
        "cursor": {
          "ref": "313a379c-580e-4aaa-9f72-6058da85c8d3",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "bf7c11ed-19c4-4eac-a98b-1e8af3c5295f"
        },
        "item": {
          "id": "95d8c1a4-0fd1-43e7-81fa-6a79d0cb402e",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "d7282bed-2ced-434c-a872-5773ef550fc9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 279,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcf3ad31-3fcf-4606-8c24-2cbe06f4fce7",
        "cursor": {
          "ref": "e3cd35f7-4811-4696-b30e-3ff8f2cd8be6",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "2d259fcb-ed5b-4feb-aea2-b16a000c06c7"
        },
        "item": {
          "id": "dcf3ad31-3fcf-4606-8c24-2cbe06f4fce7",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "966f66c3-a5f0-48a9-b705-c047b2c8aca3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 276,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82c9567f-055f-4bdd-9f59-ede9580dc9f8",
        "cursor": {
          "ref": "9fba3d7d-2828-44dc-a7c7-fb1a90b78335",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "d7541db1-e9c2-4ad5-aff4-6ac35fb968e9"
        },
        "item": {
          "id": "82c9567f-055f-4bdd-9f59-ede9580dc9f8",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "52f88bcb-ae18-4ff2-b723-b9ec3b8d4c30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 296,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa8fed34-4da2-4eaa-a7ef-aa5254cb3d40",
        "cursor": {
          "ref": "1d603fde-af4a-4c1b-aad7-dbbe11a4158d",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "bd78c13e-d9fe-49d3-a191-7f077f8dfd8a"
        },
        "item": {
          "id": "fa8fed34-4da2-4eaa-a7ef-aa5254cb3d40",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "27f2fb2c-e5b7-41b8-9a8b-7bea4108bc2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 288,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "199b7794-e934-4c03-a20a-9f6ab13043f2",
        "cursor": {
          "ref": "eef7eb0b-3755-4864-8616-60c879f5b8db",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "dee46e4c-061f-48d5-b135-6f67d2ea2023"
        },
        "item": {
          "id": "199b7794-e934-4c03-a20a-9f6ab13043f2",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "892e9f55-b4c8-4251-8221-a8183efaf337",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 290,
          "responseSize": 469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bc1774d-21f0-45b4-aa18-dee7b04f8ffe",
        "cursor": {
          "ref": "89524d8b-334b-4caf-a2d5-ca65bb345997",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "977b6766-21be-4123-9cab-2ce2465a88ec"
        },
        "item": {
          "id": "8bc1774d-21f0-45b4-aa18-dee7b04f8ffe",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "6e4dc56c-e335-4150-a1b7-ea9793ddaf5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 287,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3e8a97e-862d-494e-886e-efec833caf60",
        "cursor": {
          "ref": "f544ddd4-2ff5-45d4-aa65-c9a4efaff123",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "3e525d4a-47b1-424a-bf09-b602731271a8"
        },
        "item": {
          "id": "e3e8a97e-862d-494e-886e-efec833caf60",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "092783d8-5b9f-4b32-a5c5-9b8bee35f52c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 282,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40f74e4c-f6fc-406b-8bba-82696ab3dbdf",
        "cursor": {
          "ref": "98b4c5bb-0b27-42e8-9454-3bc28182da5e",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "66ca30a7-3df7-4c5d-b4c1-57a0fb666db4"
        },
        "item": {
          "id": "40f74e4c-f6fc-406b-8bba-82696ab3dbdf",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "53e081ad-27c7-49a5-8112-8e8e7d1abace",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 287,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5d66249-7c0b-4d5d-858e-0b7d31340212",
        "cursor": {
          "ref": "f81b14be-630d-4213-b133-e3617b02c128",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "7ebde6db-d956-4392-bfc1-83c5244cd72f"
        },
        "item": {
          "id": "e5d66249-7c0b-4d5d-858e-0b7d31340212",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "d0cd1136-0d70-4001-bcc4-7ca12cc256ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 308,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79de881d-9b69-488a-87eb-52205ed35aae",
        "cursor": {
          "ref": "e8828d60-2eed-4b6d-b0f9-2e08c4a464e0",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "3499c00d-62a6-486b-917e-451744aca253"
        },
        "item": {
          "id": "79de881d-9b69-488a-87eb-52205ed35aae",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "b4929766-b113-41ed-95a0-4f351c0eb566",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 291,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6df8482b-f73d-4d5f-a66e-7f41ea916b75",
        "cursor": {
          "ref": "c17fe948-b921-431d-af4d-dccba365755a",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "55934ad0-953d-4b6a-b6d0-505682824ed6"
        },
        "item": {
          "id": "6df8482b-f73d-4d5f-a66e-7f41ea916b75",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "947226f6-8ccf-4a6f-bfb5-6401d7f78097",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 293,
          "responseSize": 494
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "814822f8-035a-4d20-b347-36fe63d8e993",
        "cursor": {
          "ref": "b7c62f6b-a4b8-4ac5-bfa6-f7d9820cdab1",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "8bd31453-9c42-41f6-bb40-f0ab75296d67"
        },
        "item": {
          "id": "814822f8-035a-4d20-b347-36fe63d8e993",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "6ae088ac-3ebb-478a-9974-a0f50bebefba",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 78,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee84f6b1-f776-4664-ba6c-a56780856a87",
        "cursor": {
          "ref": "69444029-5d69-453e-9bad-24511bd641d9",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "d3f7b88a-dc41-4576-a6fc-1a90e054250a"
        },
        "item": {
          "id": "ee84f6b1-f776-4664-ba6c-a56780856a87",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "9015d0b6-1a8b-4cad-89be-7de77f45e995",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 292,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e176f493-edab-4f19-b43c-c0e51a1411ae",
        "cursor": {
          "ref": "1fad2606-bf8e-43e4-abcc-8f2b8ae1395b",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "97648be2-9d21-4a4c-9572-fec8fcd67e07"
        },
        "item": {
          "id": "e176f493-edab-4f19-b43c-c0e51a1411ae",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "985f2c56-dbe7-4c11-ae2b-e9171dde0506",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 291,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dca12064-0768-45c9-820c-483cf856d1c0",
        "cursor": {
          "ref": "349f6039-8153-4d06-9cac-976ffd2afcf0",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "853ea9f2-3859-44fc-ab37-6fde02f57dfe"
        },
        "item": {
          "id": "dca12064-0768-45c9-820c-483cf856d1c0",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "06cece1f-c7ee-43fd-94da-2ec637f803aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 294,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "663f4543-c467-455b-b1b8-8ff671de564f",
        "cursor": {
          "ref": "a81a0cc0-7ba4-499d-8ef8-865e5e7364b8",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "e8f3c61d-9ee7-430e-8c4e-95cad0f79e85"
        },
        "item": {
          "id": "663f4543-c467-455b-b1b8-8ff671de564f",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "ff656667-9784-4a96-a15b-3d113fbaf659",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 290,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b965a503-5c50-44f2-b4d9-dc962f64af32",
        "cursor": {
          "ref": "a8269bd9-1323-4c4c-85f4-738e059717eb",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "d352e758-53fa-4914-860f-be616050428e"
        },
        "item": {
          "id": "b965a503-5c50-44f2-b4d9-dc962f64af32",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "828f7944-d840-4c8d-b716-8e0a92e1fa11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 295,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07af1212-c78f-4899-aefc-45270b655927",
        "cursor": {
          "ref": "1d3431bf-3ba8-47f3-96ee-708043ac230c",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "268b4f1a-85cd-48c6-ab70-74d0b3f6ae7c"
        },
        "item": {
          "id": "07af1212-c78f-4899-aefc-45270b655927",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "89383586-d75b-4eba-b11c-efb9a8a08d3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 284,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fee1ee9-797a-45cb-903e-faa574d68eb4",
        "cursor": {
          "ref": "bd5ad2ac-b1eb-48a9-9bdd-2ed46f7d4141",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "826941b2-0971-4214-9dbb-ef3cf93936f3"
        },
        "item": {
          "id": "7fee1ee9-797a-45cb-903e-faa574d68eb4",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "936efcb6-0525-48bb-9c00-aa3c713dc97a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 315,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b93369ca-7200-441a-9c13-23ac4e0a3431",
        "cursor": {
          "ref": "6d691bba-a3e9-447c-ab99-2a27541d1e09",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "4b2ffe18-b9ca-46fb-b8f4-b4109cae647a"
        },
        "item": {
          "id": "b93369ca-7200-441a-9c13-23ac4e0a3431",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "a1726fb9-81be-49af-ac0d-861d6e81b9a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 288,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59eadadf-4b5e-431e-9630-d227a859407c",
        "cursor": {
          "ref": "4fa9b5b8-297d-4f06-a65d-5e52bf285028",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "04237107-4842-4858-85bb-386bb8a12efa"
        },
        "item": {
          "id": "59eadadf-4b5e-431e-9630-d227a859407c",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "a2241b98-2415-46f1-8e5d-748295d5a92e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 296,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e28b147f-ac22-4de7-9b7a-71e126fbcbb3",
        "cursor": {
          "ref": "ee42fd7d-c66d-4b74-bf69-00691e3f7c44",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "3b2c905a-cbfb-40c5-8114-972b1eea6ea1"
        },
        "item": {
          "id": "e28b147f-ac22-4de7-9b7a-71e126fbcbb3",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "768fc599-5168-47cb-a25f-e8543df1b3b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 288,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c4198d7-2d7a-404a-8cb5-31a0399e584e",
        "cursor": {
          "ref": "88cea74e-f52b-4260-907e-d62eee449945",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "0bb7417a-c69e-4a2d-81f2-bae8ca052f44"
        },
        "item": {
          "id": "2c4198d7-2d7a-404a-8cb5-31a0399e584e",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "ed6ae1cd-2c88-4aa7-abd1-0d4fed779f48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 277,
          "responseSize": 504
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f0ceb2d-7621-4b6c-9bf1-b6189c5fe3b5",
        "cursor": {
          "ref": "cf248a92-cdfa-494e-a4b5-42d214b982f5",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "18bbbc69-305d-43d2-8b48-9bb76b3e78a5"
        },
        "item": {
          "id": "8f0ceb2d-7621-4b6c-9bf1-b6189c5fe3b5",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "c72771fd-2116-412a-ad25-132bbdacf65e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 276,
          "responseSize": 453
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2f16417-e19d-4dab-bb40-4f0e63ccf2f2",
        "cursor": {
          "ref": "11246f82-c0cd-484c-a2e6-69432a75d4ec",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "e2a7601f-ba02-4d4b-a39f-be2f0edf493e"
        },
        "item": {
          "id": "c2f16417-e19d-4dab-bb40-4f0e63ccf2f2",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "f863d1e1-6e19-472b-91c3-63502446636e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 285,
          "responseSize": 579
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbff75e3-f729-4afe-a078-f3e8a081da81",
        "cursor": {
          "ref": "e696814a-b7d9-404d-8af8-e09fc2f3cf4b",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "e3f1467c-0ba2-4822-a586-a46033b8e845"
        },
        "item": {
          "id": "dbff75e3-f729-4afe-a078-f3e8a081da81",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "bf559cf5-bd30-47c6-9570-ce9e16b5bb61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 288,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d5562ea-092e-438e-bfab-6c744f80973a",
        "cursor": {
          "ref": "31366793-51c2-424e-b4aa-22afbb8bd174",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "20777dfc-1e8e-4eec-b6f6-ec8fb3febd54"
        },
        "item": {
          "id": "8d5562ea-092e-438e-bfab-6c744f80973a",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "97eb1311-eea6-4b67-bc14-26f791611ead",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 287,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "918474bb-b836-462a-b38f-cb458d3b2552",
        "cursor": {
          "ref": "7b8869e8-1376-4c5f-bf6b-4760125b922b",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "37af6c4f-e5f6-493b-94b9-1ae05ddd1e07"
        },
        "item": {
          "id": "918474bb-b836-462a-b38f-cb458d3b2552",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "4d85228a-6875-4af7-8e23-285ee5eb93b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 289,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2dac0da8-491c-4113-bfee-b3ffa0de2e0b",
        "cursor": {
          "ref": "1f8996bc-d69d-4d32-a17a-64aa0c5bc1ef",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "6d385dbf-013e-408e-b93f-32c268b3bb68"
        },
        "item": {
          "id": "2dac0da8-491c-4113-bfee-b3ffa0de2e0b",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "fd9c926c-f58f-4b57-bd55-699911ca96c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 283,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c21fa83e-58ee-46bd-9594-0aed771e3df8",
        "cursor": {
          "ref": "e8804a27-8dcf-4f50-b4d2-16c8f676f2b6",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "2154d6a8-8225-42d9-b40f-603552fc9e9d"
        },
        "item": {
          "id": "c21fa83e-58ee-46bd-9594-0aed771e3df8",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "fc160506-348a-4438-88fd-a6f2395a40c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 293,
          "responseSize": 455
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f85036c-d488-4e63-a8bd-6300ef3f75cf",
        "cursor": {
          "ref": "840dc47a-07bd-4b87-9df2-7920cc233bb5",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "26399b47-279b-45a1-abc8-5b9d9ba202c6"
        },
        "item": {
          "id": "1f85036c-d488-4e63-a8bd-6300ef3f75cf",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "8e56dd09-e2f2-45b5-b333-bfd7ad4be80b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 284,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "336e0a23-9753-4eb9-a653-10323d26cf55",
        "cursor": {
          "ref": "de6ef561-9771-41fe-be3d-81989d954a35",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "04fbc9ae-1550-4f03-a152-b71b2cf3bb19"
        },
        "item": {
          "id": "336e0a23-9753-4eb9-a653-10323d26cf55",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "ecda8967-2df9-4026-aa94-86fac6b3b9ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 290,
          "responseSize": 508
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb56b266-d752-48b0-979c-a001ff917741",
        "cursor": {
          "ref": "03c851eb-ffba-4538-9f8c-1306554b7781",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "bac55fdb-62b8-4d7e-9b92-13916e7070b4"
        },
        "item": {
          "id": "cb56b266-d752-48b0-979c-a001ff917741",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "205e6b9b-05c8-45e8-9d6d-0059ff693110",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 301,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "779a3ad8-11b8-42de-9094-a7484b351937",
        "cursor": {
          "ref": "62f3f9af-62fd-46f3-8882-be304e57e20a",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "f9cefd2b-0502-403b-b68c-b21f6b47ee24"
        },
        "item": {
          "id": "779a3ad8-11b8-42de-9094-a7484b351937",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "254ba9b2-41af-4ea4-82d0-b79b3d809394",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 289,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48ee4066-d34c-4ef4-b124-a06554dc4f0d",
        "cursor": {
          "ref": "d03f8ffe-6122-48cb-b661-77b57562356a",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "fc5210b4-6c5f-421b-82e9-2183d6b29edf"
        },
        "item": {
          "id": "48ee4066-d34c-4ef4-b124-a06554dc4f0d",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "18816732-84b3-4b7a-8496-ed11419bebc2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 282,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a17e5a82-2ded-4711-af6c-3cbd64841a35",
        "cursor": {
          "ref": "8fe0440a-ab2e-4df7-9ba6-507f2870d0e2",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "1f71df1a-925a-40bc-98d4-1791c8ea67a5"
        },
        "item": {
          "id": "a17e5a82-2ded-4711-af6c-3cbd64841a35",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "b60c64e9-605a-4f87-ac77-cd86c5f67874",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 279,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5348896d-5636-44b2-b64a-33f689cf9084",
        "cursor": {
          "ref": "6b9b5083-4f3e-43ed-8673-0f790fc14329",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "be586122-da7e-44a2-b528-a398a695052a"
        },
        "item": {
          "id": "5348896d-5636-44b2-b64a-33f689cf9084",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "74cf4c97-6281-4b2f-904b-d0d420cbb4a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 286,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a59b1d6-9087-42b2-a07a-1dbef1086661",
        "cursor": {
          "ref": "ec8cdb65-7fd4-47ac-aed4-cdbb0ff7eda1",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "222de927-9c48-4b13-a6e8-8ab1a20e3bc2"
        },
        "item": {
          "id": "2a59b1d6-9087-42b2-a07a-1dbef1086661",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "cafdf96e-9919-4fbb-9cea-56a682b89d29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 299,
          "responseSize": 487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7167e579-c5dd-455f-a73e-3cb0514d1e56",
        "cursor": {
          "ref": "bb67ee77-a773-4e12-91d2-578284879e4b",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "ae8952ab-093a-4abb-948e-85c20fb7505f"
        },
        "item": {
          "id": "7167e579-c5dd-455f-a73e-3cb0514d1e56",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "cc66d12b-3b74-471e-b759-94047ec2b072",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 283,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c06ae8d-6b8e-49cc-a48d-082ac7590b64",
        "cursor": {
          "ref": "8764f08c-94d3-40cb-b07b-08fb1da1721a",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "49722078-1c6e-4f64-a402-7bea2a5519c8"
        },
        "item": {
          "id": "1c06ae8d-6b8e-49cc-a48d-082ac7590b64",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "df8feca1-4c1f-4c20-8b20-a2d63aeb9622",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 287,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf21453e-580d-406f-8e63-5667285fabed",
        "cursor": {
          "ref": "25b3fd35-c2fd-4dca-a330-392bc4ed9cfb",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "321c0f56-c3cc-4723-9b03-d79726e84229"
        },
        "item": {
          "id": "cf21453e-580d-406f-8e63-5667285fabed",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "4bedd8f4-ea9e-468a-8127-b30b8dc03dc6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 286,
          "responseSize": 498
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "028d6d49-e3f8-4c28-957d-7c3dbd18699d",
        "cursor": {
          "ref": "43481734-d1ee-4606-8fe4-1d60c15830c6",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "2d1c5e32-0f19-4d67-bc7a-92dda5308559"
        },
        "item": {
          "id": "028d6d49-e3f8-4c28-957d-7c3dbd18699d",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "cf0fab67-a412-4fb3-b8c9-ce440b26fe48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 299,
          "responseSize": 501
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "052ae050-24e6-45fe-a1bc-f64569fa7ed2",
        "cursor": {
          "ref": "6fe6bf7d-7daa-4486-b38d-8155ff320532",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "0c598926-7a88-426a-82b0-6293b19aa1dd"
        },
        "item": {
          "id": "052ae050-24e6-45fe-a1bc-f64569fa7ed2",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "970cf28a-7ece-4f24-b545-92091bfe1951",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 298,
          "responseSize": 499
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "834176ed-1ac0-4495-a63f-536f1dfc8e2d",
        "cursor": {
          "ref": "46e37968-7123-4cd9-84c5-ae17609ccfbd",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "4cc17216-9547-485c-881e-4ff9cf5a3226"
        },
        "item": {
          "id": "834176ed-1ac0-4495-a63f-536f1dfc8e2d",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "1411008b-4651-4970-beb7-3b26d79b76c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 290,
          "responseSize": 477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f082150d-54cc-4d94-8f30-6bf1beeed391",
        "cursor": {
          "ref": "52d2d627-3b18-4a1d-81c0-62b5a210eeff",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "925326fa-5d0d-40ed-a6ac-00e8504b933b"
        },
        "item": {
          "id": "f082150d-54cc-4d94-8f30-6bf1beeed391",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "6b8567e0-a3a3-4bbd-b456-6cbbfcef7eb8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 311,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8879c357-fc7d-401b-8534-2e32ec79e93e",
        "cursor": {
          "ref": "3d89933b-c552-4c39-ba8d-bfd8a93cad99",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "67462e1f-2af5-4337-81ba-684fcf0f044f"
        },
        "item": {
          "id": "8879c357-fc7d-401b-8534-2e32ec79e93e",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "40d486a6-10e8-4369-937c-5459fd0c9ee1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 272,
          "responseSize": 493
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f909a5f-00cd-4fa2-83fd-54b6d9b5e9b3",
        "cursor": {
          "ref": "cd3f0e55-8819-4d3d-81e5-2203a7be2e85",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "a07eaebd-7734-4438-9308-f497d776a7f0"
        },
        "item": {
          "id": "6f909a5f-00cd-4fa2-83fd-54b6d9b5e9b3",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "3a5db39b-2b43-4e88-bc02-4a35f0d75997",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 290,
          "responseSize": 490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03d69ddb-3a6a-4b76-8fe6-b6cca6d8943c",
        "cursor": {
          "ref": "57fb8662-604f-40c1-8503-90728cbfca48",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "45c5b97b-cbeb-4b1a-8de8-de50d2eb7938"
        },
        "item": {
          "id": "03d69ddb-3a6a-4b76-8fe6-b6cca6d8943c",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "a18d5ff9-0748-48a4-b701-1a30d0f2115c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 299,
          "responseSize": 492
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "190cfb2e-cd1c-46b4-8b24-82eff6b8469c",
        "cursor": {
          "ref": "f64e31ea-0540-490e-9f34-94805c1faa1e",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "715b2954-2a7f-4319-beb2-cc1c2ccff3eb"
        },
        "item": {
          "id": "190cfb2e-cd1c-46b4-8b24-82eff6b8469c",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "116c060e-1ce6-4acb-a7a0-33219422ad29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 309,
          "responseSize": 490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8eeb4149-707b-4666-9817-81e22adaf19e",
        "cursor": {
          "ref": "1e79df32-3455-4721-b6cd-8acbf9f451d1",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "a32660da-8844-4def-8da5-83879d5907c5"
        },
        "item": {
          "id": "8eeb4149-707b-4666-9817-81e22adaf19e",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "aca76922-6da8-415b-8fe2-c91f0a05240f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 80,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c85d6078-b3bf-4def-bf45-3cb8e7641825",
        "cursor": {
          "ref": "1242bb0a-b33a-459e-a74e-f77435217e0c",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "4197ac65-0242-41e2-9d93-14112ebc68e3"
        },
        "item": {
          "id": "c85d6078-b3bf-4def-bf45-3cb8e7641825",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "544ac0dc-9771-4410-b46c-0546a2b3a7fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f55f5d9c-96a6-4584-afbf-ad4ea58cf4fb",
        "cursor": {
          "ref": "6c729122-cef4-415b-9db3-d2a6e31c2927",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "ec80c6d8-5310-4435-836f-f7561b79d264"
        },
        "item": {
          "id": "f55f5d9c-96a6-4584-afbf-ad4ea58cf4fb",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "49297730-8d60-41f7-88c1-a858634cae42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 96
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3def094b-a503-4b65-adf5-0851fbe12f4c",
        "cursor": {
          "ref": "d10510a1-41d2-472e-9ec8-8cac1475527f",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "47fe8709-030c-4f2a-aa23-37e1901f2848"
        },
        "item": {
          "id": "3def094b-a503-4b65-adf5-0851fbe12f4c",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "5c19f3c4-ee36-4575-81aa-fa5e1cc4a57e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b33ef91f-5f79-48de-a590-fa69748e4cc9",
        "cursor": {
          "ref": "936e6754-1cb6-4d0f-82a8-1a4332942c38",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "fcf59d72-3c2f-42b7-95e1-ce9dc4beedf2"
        },
        "item": {
          "id": "b33ef91f-5f79-48de-a590-fa69748e4cc9",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "a6acc04d-3bac-4d3d-aaad-b224f71875e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a004137-d1ef-4f71-9ddf-01dea31a0bc7",
        "cursor": {
          "ref": "06da2f46-1ec2-482b-b424-b207acaee374",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "6f3954f3-f653-4b88-a0c8-17185b493e9f"
        },
        "item": {
          "id": "5a004137-d1ef-4f71-9ddf-01dea31a0bc7",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "65f8cf2d-e723-4cc9-b3ce-b60796bb47fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9760dc4-eab1-471d-a701-ad4dbdc4ac1a",
        "cursor": {
          "ref": "74a7c286-3353-4144-bb85-6cebf1bf37a2",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "d9cd418f-7571-45c0-b83c-79255ed7d636"
        },
        "item": {
          "id": "e9760dc4-eab1-471d-a701-ad4dbdc4ac1a",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "ac06f62a-ab8c-4f22-ab5b-d95d42fb720c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ae87840-21b9-44de-b482-3ce44cb19ea5",
        "cursor": {
          "ref": "25dc9b63-9f01-4da2-adf2-104707d1b3b9",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "f0111018-9816-4d8b-ab36-dbd749fe03da"
        },
        "item": {
          "id": "0ae87840-21b9-44de-b482-3ce44cb19ea5",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "6d09204a-5029-47d7-9fea-12bc5693537e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 1266
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7694e23-ee0b-4771-b945-663ff72f6acc",
        "cursor": {
          "ref": "764b404f-97b3-4bd9-92ea-c6bde6812895",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "b9b7d93e-7edd-406e-acb9-600efa1450d9"
        },
        "item": {
          "id": "a7694e23-ee0b-4771-b945-663ff72f6acc",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "ef78a50b-603e-4ef1-ac63-6d513a5905ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6534a041-a2a5-45c9-b680-164e5eba7d31",
        "cursor": {
          "ref": "04f04618-c419-48ce-9b05-997cc1bb0461",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "2a9a29f8-8df8-4ec0-a05d-8b093e864a7d"
        },
        "item": {
          "id": "6534a041-a2a5-45c9-b680-164e5eba7d31",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "40188cdc-09cb-4b66-a353-4eb448199786",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 1423
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "700ac379-dee0-42d3-93a9-e9e7ad90f2ce",
        "cursor": {
          "ref": "6c835bfa-e6e2-4efe-b146-a96e906d7557",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "57d8998b-b30b-402e-a252-f7e2e2de7e7f"
        },
        "item": {
          "id": "700ac379-dee0-42d3-93a9-e9e7ad90f2ce",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "0a090964-f45b-4b68-af49-f060d923c45a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65c34e5c-bb21-4df2-b1fb-bb7c3bdc20b4",
        "cursor": {
          "ref": "bab466f7-b43d-4537-93ad-4f73de37b698",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "f81566a3-f5d8-41f7-bd5c-982380388ded"
        },
        "item": {
          "id": "65c34e5c-bb21-4df2-b1fb-bb7c3bdc20b4",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "5bfa9869-13e8-4cdb-aab3-0cfa10bde363",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 1322
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69032f3e-108f-47e4-85c6-cfb5d758874a",
        "cursor": {
          "ref": "b9e0b832-b04b-46cf-b554-eb7fbfacaf4f",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "93695c8a-eaa7-4452-97ea-fbc984c5be11"
        },
        "item": {
          "id": "69032f3e-108f-47e4-85c6-cfb5d758874a",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "5786c487-9f71-420b-bf05-80e85f8c49a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd18c662-3478-486b-88a6-bb29724b5c23",
        "cursor": {
          "ref": "7a74b7a3-5798-47cb-8f88-6d45fdd629ea",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "3775eae6-60fb-4cc0-a9f0-e9f7b9473bb9"
        },
        "item": {
          "id": "cd18c662-3478-486b-88a6-bb29724b5c23",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "218a580c-a700-4070-bf43-7086f5cc1948",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 1487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5528a6e0-0d6f-4cc2-aec1-2658156b1ea3",
        "cursor": {
          "ref": "360d6a2b-d4f9-4369-a33f-fb974e6bc1cc",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "1ed63c4d-916c-4b0b-94e8-de9e8427a52d"
        },
        "item": {
          "id": "5528a6e0-0d6f-4cc2-aec1-2658156b1ea3",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "d99988b7-9c48-41e6-8551-3fdb11cd050e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b49b5963-e164-45ba-9697-800af0cf6fe3",
        "cursor": {
          "ref": "fc2381d8-ae69-4fc0-806c-6f8d79b528d5",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "7eb7117d-b837-4ccb-8ef8-53f2a1f6054b"
        },
        "item": {
          "id": "b49b5963-e164-45ba-9697-800af0cf6fe3",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "d63312a8-34e6-4b7c-85a2-8dc8b2805741",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 1476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c17b7d7c-e9ba-47f9-9948-07ffb6086469",
        "cursor": {
          "ref": "0298d4f2-d831-4c95-985e-22c00d8f2521",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "3ca2f41e-4265-4451-9bf7-f3b79d55552d"
        },
        "item": {
          "id": "c17b7d7c-e9ba-47f9-9948-07ffb6086469",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "8a9e8038-f9d8-4ae8-95f6-b8feb9da2b1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70e87986-75f4-464b-a0ac-e973e5954a9b",
        "cursor": {
          "ref": "47c44abb-6bfe-4e04-adc5-e1527e48f845",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "67c9e824-4ded-4de5-85df-47d2ef2f01c0"
        },
        "item": {
          "id": "70e87986-75f4-464b-a0ac-e973e5954a9b",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "839b1e90-9e0d-4515-8213-5bdfed085368",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 91,
          "responseSize": 1375
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9efe405d-42ba-42cd-b62a-e39401747cad",
        "cursor": {
          "ref": "fd6b7926-5219-4d28-aa1c-900420b7fe26",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "c2903128-e691-493d-86c3-eb8ec35f5073"
        },
        "item": {
          "id": "9efe405d-42ba-42cd-b62a-e39401747cad",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "bd3be93b-c451-468a-8e77-ec3b11f1f4c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76f7803b-a6de-4d57-80b7-f6576e878257",
        "cursor": {
          "ref": "4ec286d2-fa4b-476a-9dfe-4049a0dfb5de",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "48e0ec88-6c32-45dc-97e0-c9c933be95df"
        },
        "item": {
          "id": "76f7803b-a6de-4d57-80b7-f6576e878257",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "8513b323-3a9e-4dc0-8221-acee744a9604",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 1285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "896ea5d6-521f-483e-b516-ef788f12278c",
        "cursor": {
          "ref": "1a20c8cb-6d20-46d3-b0e2-a9052bfbc9fd",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "418b8187-9c1f-439f-9d28-5049176c5a7c"
        },
        "item": {
          "id": "896ea5d6-521f-483e-b516-ef788f12278c",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "8bf1c272-83fb-4902-bd1e-7bda6cda9760",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 103,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8da4f7e7-25db-4457-b503-0999a7ffba14",
        "cursor": {
          "ref": "2f232992-f8ed-467b-a7c9-89885dcb5e97",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "3df566a5-402e-437a-a73f-81a11d28d9bb"
        },
        "item": {
          "id": "8da4f7e7-25db-4457-b503-0999a7ffba14",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "8fbb03e2-378e-4210-8279-b8fa105a9ff2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 1284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c77bce3c-9ff9-45b2-bad0-ecb413abc0ef",
        "cursor": {
          "ref": "f896559d-333c-4fee-ba22-9c8d23b8cf40",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "ef14aee0-a1fc-4f47-a619-cdf1034ecbbf"
        },
        "item": {
          "id": "c77bce3c-9ff9-45b2-bad0-ecb413abc0ef",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "9e24f0ce-c8e6-4518-bf52-235f82b1d3b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47f614da-e4cd-43ab-a225-e5be6abdc8f1",
        "cursor": {
          "ref": "112249d7-a5fe-401b-86cc-4c81f4c6dc0b",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "1f266c75-9ac2-49fb-b1fd-dc2ada90b1a8"
        },
        "item": {
          "id": "47f614da-e4cd-43ab-a225-e5be6abdc8f1",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "22cfbb2f-cb7c-4672-9969-53d7ef9bd587",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 1315
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27a901d3-6866-4c80-acf3-c3f546b96633",
        "cursor": {
          "ref": "c0eac119-132e-41a6-b985-5e498ddea63b",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "59e3c2fd-a6f6-42fb-b993-92b58916d62d"
        },
        "item": {
          "id": "27a901d3-6866-4c80-acf3-c3f546b96633",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "1e8574db-5265-4172-b6fa-10795961ca57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "182d8507-2583-42d0-b4e6-17b7366f020a",
        "cursor": {
          "ref": "d72dcc2d-da01-4226-bad2-49957f72478b",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "5dd19540-5660-4298-8478-b686cfa23db1"
        },
        "item": {
          "id": "182d8507-2583-42d0-b4e6-17b7366f020a",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "247a545b-252c-4cc9-b7e4-fd2527e75d13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24faf362-ceef-461e-9d1b-4cc78265eee3",
        "cursor": {
          "ref": "e14706ce-428c-479c-8500-16f1fc2d54ba",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "278d41cb-64f8-44d6-a383-04205fd685d6"
        },
        "item": {
          "id": "24faf362-ceef-461e-9d1b-4cc78265eee3",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "bbb19f7a-2096-4eae-a8aa-419c14553efd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "851afbd6-74c6-47e9-90fb-16b00b615520",
        "cursor": {
          "ref": "40219f30-b529-40f4-9f12-b9e1300de2bb",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "53faa938-a1b9-4e82-a0f8-d8ff10b63108"
        },
        "item": {
          "id": "851afbd6-74c6-47e9-90fb-16b00b615520",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "a830133b-21f1-4c6f-a307-845ae1a95fe1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40411843-a66a-477a-afc5-4d28542905cc",
        "cursor": {
          "ref": "4a8b37a2-6232-48a5-9c5d-9db80c014ecc",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "10d35fe8-4398-4baf-b9fa-ef1651899bd0"
        },
        "item": {
          "id": "40411843-a66a-477a-afc5-4d28542905cc",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "8e6eb699-1c2e-4f3b-bc00-1d1b3a81e004",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 1327
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "deb90b82-517d-43b3-9cd9-2460c9babcff",
        "cursor": {
          "ref": "8bb48730-5c71-49d1-a3a6-73cbf8c43fab",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "3614b574-99db-4475-a66c-45f9ebc1b2e6"
        },
        "item": {
          "id": "deb90b82-517d-43b3-9cd9-2460c9babcff",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "469c020a-5ad2-4ccd-a8ce-296596a294bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d89a98e-6aa9-4ea0-9140-138572e671f7",
        "cursor": {
          "ref": "27e19bca-2543-4023-97ee-b0be1ecabaef",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "38c9c686-3677-405a-a3e2-5041dca998cf"
        },
        "item": {
          "id": "1d89a98e-6aa9-4ea0-9140-138572e671f7",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "a2ff3433-aa04-47cd-9f0f-92b56bb44a82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9892ea06-256d-4206-9514-752166b1c50e",
        "cursor": {
          "ref": "6d353d30-8445-4a0e-aac5-31cefccb5ecc",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "2be88095-6726-4363-a1a6-9982c93e9d98"
        },
        "item": {
          "id": "9892ea06-256d-4206-9514-752166b1c50e",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "86fbf51f-1c79-4043-80b5-5b270097a8ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09635b73-1a7a-4d58-aabc-cde4f3bfc90a",
        "cursor": {
          "ref": "f4aabb52-77eb-42ae-9cc4-3d96f582b6d5",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "28e498f4-9a8a-46c6-9a34-058aab92bcc1"
        },
        "item": {
          "id": "09635b73-1a7a-4d58-aabc-cde4f3bfc90a",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "87e9fa71-4291-4d5f-9b38-8903ff327a3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 1308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0bda7c03-a850-4925-b3dc-9d6ca82b6680",
        "cursor": {
          "ref": "e4379616-dcd2-4179-9339-082bff58d934",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "4589d6d7-976d-415f-808b-fe5668b8c0c4"
        },
        "item": {
          "id": "0bda7c03-a850-4925-b3dc-9d6ca82b6680",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "c9ee094d-4336-4392-a3d8-225da9730289",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 91,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5278650d-3cbf-4808-bcb1-7f1010495cb2",
        "cursor": {
          "ref": "59b47406-161a-46b4-aabd-3cdb45f4f23c",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "e31c0a25-30a6-4b99-99f3-20a501e00a69"
        },
        "item": {
          "id": "5278650d-3cbf-4808-bcb1-7f1010495cb2",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "1554330a-0a28-47c7-87c7-f91f6029d8d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fef93c3d-8066-4df6-8844-a63d17be14ca",
        "cursor": {
          "ref": "92aa49a3-e491-43f8-93c5-62236ba22672",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "52fc1131-7667-468f-8eff-7d4f0a6fb0e2"
        },
        "item": {
          "id": "fef93c3d-8066-4df6-8844-a63d17be14ca",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "372ec8e2-89f9-4ba2-8efa-5d8ca6de4442",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f5ead09-ef8c-41c5-9533-40c047ed4c7c",
        "cursor": {
          "ref": "0c216663-cbed-43f6-bb94-b213a53b3899",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "e3b1afad-75ea-433e-b2fd-d5011329ab15"
        },
        "item": {
          "id": "9f5ead09-ef8c-41c5-9533-40c047ed4c7c",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "3bfa11a8-d1a4-4c6f-b989-c89e3625a6fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 1756
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c471f1a-d009-4ce6-a0ae-eed8c21ca86a",
        "cursor": {
          "ref": "7e7b2ccb-014e-410b-a2d1-09d2c24413ec",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "77ce9930-1c16-4d84-9b94-ddee900f24ec"
        },
        "item": {
          "id": "0c471f1a-d009-4ce6-a0ae-eed8c21ca86a",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "14168057-eb25-4559-8948-84f42191a00a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 1742
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cde95a7f-d101-4080-9d96-f4af5c66c936",
        "cursor": {
          "ref": "66c5536e-40f0-4596-b727-f8b2cd364a7a",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "8360d178-4fb2-432f-8a1a-814da0e81b97"
        },
        "item": {
          "id": "cde95a7f-d101-4080-9d96-f4af5c66c936",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "021ea892-a47e-4ac3-9f6a-ac5e338fe4dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 1740
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbf1e8bb-b705-4eaf-8372-75d99e094fb2",
        "cursor": {
          "ref": "4ae6e8a3-bbb5-423e-b379-f41b6a82b4d5",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "1a6cb9ec-608a-432e-b08e-f4240fc7249d"
        },
        "item": {
          "id": "bbf1e8bb-b705-4eaf-8372-75d99e094fb2",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "c590aa77-0585-4ffb-91fe-1c043a9316bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 1741
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e894aef-faf8-4a02-bcc2-faba6e3f2e7f",
        "cursor": {
          "ref": "88167e55-dd71-4291-85aa-0eb5944e5b25",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "a2b18d0d-f186-4a9b-a4a4-afd8fbce45d8"
        },
        "item": {
          "id": "4e894aef-faf8-4a02-bcc2-faba6e3f2e7f",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "edca2957-72cd-47f3-bb6f-ca19252f03c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 1772
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86a36a50-d5ed-4c35-a80f-ab51008f2aed",
        "cursor": {
          "ref": "3b590d6f-63bf-4628-81b8-e114e482e0de",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "12d5d783-fd75-4dae-aad7-3e33fcc18a17"
        },
        "item": {
          "id": "86a36a50-d5ed-4c35-a80f-ab51008f2aed",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "3c2bb743-d6f6-422b-8c73-ccb32088f9e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 2115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ca56afc-8d13-4324-b703-9e701429c70f",
        "cursor": {
          "ref": "2f9ea465-2c06-489a-ae22-efa919ace884",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "f5d24604-db3b-48b3-94ca-323b075ffb7c"
        },
        "item": {
          "id": "0ca56afc-8d13-4324-b703-9e701429c70f",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "b6544764-9d66-45ac-bb90-6b09de66c576",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 2101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d6a7bb0-820a-4c94-b79d-a52428fa1297",
        "cursor": {
          "ref": "da85ef26-9ecc-4b58-89b6-b55e2cec79a1",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "7bfbbf66-ffc4-40fc-99b4-41e2b987cbfb"
        },
        "item": {
          "id": "8d6a7bb0-820a-4c94-b79d-a52428fa1297",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "aee8913b-7114-49a4-b968-7722c9315c45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 2099
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "295c0c1f-8a33-4dc6-b9dc-3393fdd2eed7",
        "cursor": {
          "ref": "366383bf-9311-4786-a030-50ce33610a42",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "1802e5d7-59cf-4517-ad03-76c89b87ccaa"
        },
        "item": {
          "id": "295c0c1f-8a33-4dc6-b9dc-3393fdd2eed7",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "d1a2dda7-fad6-4415-801b-8f44fac83316",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 2100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "117898aa-f222-478a-9cee-7bb779ea37c1",
        "cursor": {
          "ref": "22c84221-7d7e-48ee-a0ec-777155ea5496",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "325d6c61-e111-4320-b59e-865f478927bd"
        },
        "item": {
          "id": "117898aa-f222-478a-9cee-7bb779ea37c1",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "b24d73a5-fc1b-4405-89a6-df027bbba6cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 2121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1ce47df-8701-464c-bef2-ea254be673ac",
        "cursor": {
          "ref": "b8589702-5ac1-448f-b83c-7952231195be",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "90efcce7-9af7-4bdc-9e26-03570e7f1aa3"
        },
        "item": {
          "id": "f1ce47df-8701-464c-bef2-ea254be673ac",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "ce4e953d-5409-456e-9d2d-04d4a0b9ef8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 1325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2edbe1c-8f29-411d-9195-113c7fa3e6ed",
        "cursor": {
          "ref": "76a8cddb-f6d6-41a7-befd-6466f01df791",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "bcbb71ee-19c6-4020-a437-41a37e890a6e"
        },
        "item": {
          "id": "c2edbe1c-8f29-411d-9195-113c7fa3e6ed",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "3413a30c-530b-47b9-baa9-b7e3f3785f3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 1349
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45c5d2cc-1c27-4f05-bd63-9d53296315cf",
        "cursor": {
          "ref": "c3e76799-c68f-4aa5-b309-4c716a465644",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "4dff9217-679e-4688-a8da-95a10df25354"
        },
        "item": {
          "id": "45c5d2cc-1c27-4f05-bd63-9d53296315cf",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "8218a0d1-5ea2-45e5-8077-acde25b3e9c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 1330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecdadfcb-6c29-475e-9cef-eda5cc9eb89c",
        "cursor": {
          "ref": "f0cf073a-2480-40c6-90f6-ff8f02c26f54",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "138b4492-5db7-40db-a73c-72dc7d1c2e4a"
        },
        "item": {
          "id": "ecdadfcb-6c29-475e-9cef-eda5cc9eb89c",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "295686f9-53c9-4ff9-b615-35a5c22829eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b90bcf9f-827b-4cdc-a6bc-46d59409539c",
        "cursor": {
          "ref": "216f7029-a72e-4dba-8cd5-a6a1e4138fea",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "9c62e91f-1dd7-4413-9ab7-d6efd3e9ddee"
        },
        "item": {
          "id": "b90bcf9f-827b-4cdc-a6bc-46d59409539c",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "c723d5d0-9719-451d-9936-3b9170a26f0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a37b99a5-98ee-4470-a3bc-b702edfa5e39",
        "cursor": {
          "ref": "896f723c-d03c-4749-8cf9-db31056c6610",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "f8abb3f9-39dd-448e-bf3b-82757088dda9"
        },
        "item": {
          "id": "a37b99a5-98ee-4470-a3bc-b702edfa5e39",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "a8a79f32-60d4-4e2f-9070-3de653ce8f0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "986a4f79-e4ad-4c19-9f8f-a168a091b93b",
        "cursor": {
          "ref": "514d467e-1c29-4206-ae26-2074ed27c580",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "8f89a85b-c6e2-450e-a06c-a38a95d81c2e"
        },
        "item": {
          "id": "986a4f79-e4ad-4c19-9f8f-a168a091b93b",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "18fc7f42-71fd-401e-8207-13f9c629d777",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 1385
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "601d9e6f-f2b0-4a4a-a4a4-f69979609339",
        "cursor": {
          "ref": "2ee86f2f-a045-4b1e-8c15-8102cfc6ea05",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "dcad6826-b002-4fbc-879d-e61ca4e3085c"
        },
        "item": {
          "id": "601d9e6f-f2b0-4a4a-a4a4-f69979609339",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "6e3da5f6-4068-4ec9-bff1-4a3fff49e864",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa28438d-fb04-4340-9256-f7f77bd57f1f",
        "cursor": {
          "ref": "1b75acd9-6919-468e-b5c4-0989d572181d",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "fee6c27c-c0f5-445e-8bcc-5c636e23b886"
        },
        "item": {
          "id": "aa28438d-fb04-4340-9256-f7f77bd57f1f",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "552e4a13-e789-4971-a9fb-405232dbefaa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 91,
          "responseSize": 1829
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6f31e0a-4a29-4c75-851d-e3835f56dc9f",
        "cursor": {
          "ref": "48c602b2-69e5-4a2b-9368-080420db1c2a",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "fa05aa43-2487-454d-b209-3d4da87eaf95"
        },
        "item": {
          "id": "a6f31e0a-4a29-4c75-851d-e3835f56dc9f",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "4e6457c8-9e62-4e8a-b1de-fdd0e44c3f0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 1628
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5e7e144-be2a-4f68-910e-6f11ccf8239b",
        "cursor": {
          "ref": "be719ce5-377b-4080-8a10-45da4fed3414",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "9461e1e8-4fd5-45ff-84b7-d2bd44b9ba3b"
        },
        "item": {
          "id": "d5e7e144-be2a-4f68-910e-6f11ccf8239b",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "8985c312-2691-4e62-89aa-68a44f42fe53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 1626
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9d52e26-f2e9-4151-81ad-872e4c0cbaee",
        "cursor": {
          "ref": "27717a97-5034-4d37-8c19-978af9b0fdb5",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "71beb7d7-a76f-459c-af40-2a48704277d9"
        },
        "item": {
          "id": "e9d52e26-f2e9-4151-81ad-872e4c0cbaee",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "3f3f49f7-ecbb-4351-87b2-0c8be02fa32e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 1627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88e788ee-1dd0-4ec0-9f38-8cf7bae2f907",
        "cursor": {
          "ref": "7e85aea3-1f7b-4f6b-954c-b4912b852c1a",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "7266e6a8-0758-4c99-813d-0c33ab919774"
        },
        "item": {
          "id": "88e788ee-1dd0-4ec0-9f38-8cf7bae2f907",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "842da231-0ff2-4ff2-8a1f-d4aecbc5d2e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05bc92b0-8422-4736-98b0-e6708853be76",
        "cursor": {
          "ref": "bb84c85c-839b-4b86-8d49-109faf484a7f",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "44637529-5405-4862-b7c4-03d47cf9d491"
        },
        "item": {
          "id": "05bc92b0-8422-4736-98b0-e6708853be76",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "314ae4bd-1e63-4471-b3a5-99d7549423d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 2164
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a08a927-8349-4290-8ea7-0bb271fa9e13",
        "cursor": {
          "ref": "fde26af7-007a-40d6-8010-eff1a2115ac5",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "b697e5db-61ac-4eb6-bfed-1f3225ebd41c"
        },
        "item": {
          "id": "9a08a927-8349-4290-8ea7-0bb271fa9e13",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "6a9c777d-9b64-47da-b162-de9879ff7715",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 2150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28474bf5-5800-4f08-8387-5d14cb015a8b",
        "cursor": {
          "ref": "184de96c-8f9e-4019-8352-5101db5f2a20",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "17b857ee-f65c-4022-abc5-325222edd8cb"
        },
        "item": {
          "id": "28474bf5-5800-4f08-8387-5d14cb015a8b",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "3d7b86b6-806f-4d93-a618-4bc53b7a0c44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 2148
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0e6822f-3ed7-4413-9390-0609ee7f58e2",
        "cursor": {
          "ref": "0f40926e-dd56-46f3-bbae-de519dc5ce13",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "a59d734a-6a3b-47f6-8b4e-fda8012bef92"
        },
        "item": {
          "id": "a0e6822f-3ed7-4413-9390-0609ee7f58e2",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "88a82bef-ea4b-459b-ac4d-222700368238",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 2149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6783751-13a9-4217-bdb0-3a42a5cf3563",
        "cursor": {
          "ref": "bcddb3c2-75d9-462f-affd-5783a3055741",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "64c511e6-84c1-4d6a-8843-baa2047de6ba"
        },
        "item": {
          "id": "a6783751-13a9-4217-bdb0-3a42a5cf3563",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "0c7b942e-5109-40ce-9a87-ed6a5e9a1614",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 2170
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a09a783-2737-414c-a284-5cc225c0e5f8",
        "cursor": {
          "ref": "c53cd990-af5f-4238-b615-e61b80eb85aa",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "41affce9-ef76-4707-8688-69d3aa67b137"
        },
        "item": {
          "id": "4a09a783-2737-414c-a284-5cc225c0e5f8",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "4e8066f1-e96e-4efd-97c4-d965d5344379",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 904
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5b143cd-e2ea-4a72-a9fc-f63a57e38bee",
        "cursor": {
          "ref": "a983b2bc-5953-4ffb-9ffc-883445664849",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "12b32dc4-4d87-4043-b2cd-971fdb223428"
        },
        "item": {
          "id": "d5b143cd-e2ea-4a72-a9fc-f63a57e38bee",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "90a30e0a-efe3-4ce6-97a1-0dcf89e4aa62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "664b8fd3-bc6e-42e0-92d4-c361c5215d63",
        "cursor": {
          "ref": "951136d9-b35f-4fc4-a518-92dacdf08997",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "5823de2a-38a8-41a2-b588-d457782609df"
        },
        "item": {
          "id": "664b8fd3-bc6e-42e0-92d4-c361c5215d63",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "89603cce-6b9c-456c-a7bc-27ddabe9a741",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca174ee5-5e2b-4e71-bfac-e710557c6c76",
        "cursor": {
          "ref": "36409cdd-9c53-4857-937c-718acffc7368",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "24e3ab73-d5df-4d51-9538-65ec4cade7dd"
        },
        "item": {
          "id": "ca174ee5-5e2b-4e71-bfac-e710557c6c76",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "fe52ec36-d4a9-4006-8a79-f33c462a808d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "403a2f33-918b-4e4f-a21a-ba33b79fc80d",
        "cursor": {
          "ref": "7ed669e9-678d-4f29-853b-4bf4ae06fb7b",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "4dcb3c56-b670-462b-b712-84b606bce725"
        },
        "item": {
          "id": "403a2f33-918b-4e4f-a21a-ba33b79fc80d",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "85b405a5-a66f-43ae-b2a5-56ab5577b047",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "222822de-f42c-4af3-adab-a8d1b8852669",
        "cursor": {
          "ref": "49a23d63-1799-4f12-829a-9fbde961759d",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "1ce51117-4c21-4f0b-adc3-2c4c496b6402"
        },
        "item": {
          "id": "222822de-f42c-4af3-adab-a8d1b8852669",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "d8577a6a-8eb7-4379-89a8-12f7b645977d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 921
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "faed00ca-cb29-49fb-8d46-e916528e1ff9",
        "cursor": {
          "ref": "8f7aa0b4-98d9-41bb-b041-455f1ba915dd",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "42c7fe1e-f41c-411b-8e12-703db81c0ed4"
        },
        "item": {
          "id": "faed00ca-cb29-49fb-8d46-e916528e1ff9",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "c7840126-34bc-49b3-94c1-6223d05ab6db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 1262
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8be01f22-1736-443f-80a3-1e6300e5ffbd",
        "cursor": {
          "ref": "6a379df9-5b30-4a6f-9c2d-00e92c453cf9",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "cd51b367-5dec-4b01-b05a-f86c603c301e"
        },
        "item": {
          "id": "8be01f22-1736-443f-80a3-1e6300e5ffbd",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "9cfbfbfd-1716-428e-b40a-fa64350e3210",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2ab5e7a-6026-4ceb-a381-4cef7d6c2beb",
        "cursor": {
          "ref": "222029c3-af92-4b39-8b17-6f0b345c1ded",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "da32d027-f419-4699-b29c-2bc99d78a15f"
        },
        "item": {
          "id": "f2ab5e7a-6026-4ceb-a381-4cef7d6c2beb",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "13ac783f-733d-46ea-ab4d-ade8f0c18aee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eba401a1-287b-4b68-9a19-b1657f3e8588",
        "cursor": {
          "ref": "b7a66ae8-12cf-4966-be2e-eb7e90b37802",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "1b41c9a2-c884-4bef-a602-f8e663261179"
        },
        "item": {
          "id": "eba401a1-287b-4b68-9a19-b1657f3e8588",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "cc5625cc-68b0-4322-bb7b-a630b98a9469",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee09ec99-2d86-481d-ba11-a57106503297",
        "cursor": {
          "ref": "53901dac-032e-4fb7-b624-c70647ba9498",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "9f7bef15-1655-4523-b1af-09b112f13374"
        },
        "item": {
          "id": "ee09ec99-2d86-481d-ba11-a57106503297",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "b80b249d-b053-4345-a7b9-8c89b51b9d12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b627e0eb-d21f-41a5-a821-53c94f5e241c",
        "cursor": {
          "ref": "e65cd93a-c9d1-4c8f-914b-4a77c76cdf49",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "fe2b63d3-e3d0-44fe-834a-33caaf2acdfe"
        },
        "item": {
          "id": "b627e0eb-d21f-41a5-a821-53c94f5e241c",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "85a69179-41b9-4cee-a3ce-af9ca5376321",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3eccce29-d790-47d2-9bc1-f6d061a53507",
        "cursor": {
          "ref": "16f894b2-1e6e-4402-b542-c42b60d949fd",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "cf1fb8b1-beb6-46a2-bd2a-fcedbb553236"
        },
        "item": {
          "id": "3eccce29-d790-47d2-9bc1-f6d061a53507",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "7dab449c-643d-4ae8-bf7b-3f1b3725a5fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 1299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd809eb8-3e55-45c7-9524-05ba07a92076",
        "cursor": {
          "ref": "dc1366b9-db89-4a20-bb2f-9013c32f020b",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "eab6cebd-dc32-496c-a77e-2d7a0b6cfd22"
        },
        "item": {
          "id": "cd809eb8-3e55-45c7-9524-05ba07a92076",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "d8e3573f-a93a-4f5d-a299-63f4e2c74459",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "634395d9-76c3-4ae1-be8c-65ad3441d175",
        "cursor": {
          "ref": "0b12b110-1345-4f21-96f8-70efa4f06916",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "b854c69e-26a1-400c-a9c8-14fca5d257e7"
        },
        "item": {
          "id": "634395d9-76c3-4ae1-be8c-65ad3441d175",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "b9507958-3240-4c8a-8424-c2f13bd8dc84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd4a2c85-211f-4a50-98ff-0982c32913c1",
        "cursor": {
          "ref": "5fd68d09-7ad7-4495-9bf2-690b6141726a",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "a98b2c85-ca27-41d5-9ff5-7943469acf2a"
        },
        "item": {
          "id": "fd4a2c85-211f-4a50-98ff-0982c32913c1",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "3dff2982-7915-4d65-8992-8a82b71fd352",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd2bef9e-3346-4b88-9a60-22ac5386fed6",
        "cursor": {
          "ref": "224791a0-51e2-4e6d-b10c-4169fc058f0e",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "46a29a5e-c3a2-4dbf-8144-483df506352a"
        },
        "item": {
          "id": "bd2bef9e-3346-4b88-9a60-22ac5386fed6",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "c7e0f866-ccfc-4c04-8f23-876f36c4f1a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a679f67-7588-40d9-bc82-3b2143f3da32",
        "cursor": {
          "ref": "b7d3c544-16a2-448b-81b8-809eb9d30efb",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "15a5e378-a2a2-4032-b30b-9f1b878ae59c"
        },
        "item": {
          "id": "9a679f67-7588-40d9-bc82-3b2143f3da32",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "b9c1d050-2623-4e4e-a3da-c4e33d3ddcc6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 107,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae49cfd7-8951-42d0-b9ba-59f22bf46091",
        "cursor": {
          "ref": "82426a29-e885-4056-96b4-c68de80ebcc5",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "433fe579-cf4d-49b3-a882-5111dab57994"
        },
        "item": {
          "id": "ae49cfd7-8951-42d0-b9ba-59f22bf46091",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "64d96f79-a99f-4d87-a943-2f6e11ae042b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 1253
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f12c615f-3432-413e-912f-58645e542929",
        "cursor": {
          "ref": "39dabfd3-3391-49d3-bf65-53a3428e504e",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "074cbc5a-cfc6-450a-9521-eca1ae38045c"
        },
        "item": {
          "id": "f12c615f-3432-413e-912f-58645e542929",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "e18961e8-bd10-45c7-a22e-fe0a347083ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbb32706-8d70-4952-a056-5f30fefd17fa",
        "cursor": {
          "ref": "b21df06c-aee8-4114-b83b-30bb0d31b544",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "2b9a0a6b-8e41-4afa-83f4-6ba012f27182"
        },
        "item": {
          "id": "fbb32706-8d70-4952-a056-5f30fefd17fa",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "e5910002-04f7-4e23-ab8b-a7872d4cc267",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 1188
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0c4a4a8-2dae-41a3-8aa4-c40665574249",
        "cursor": {
          "ref": "beb3fe21-91b5-4f3a-b49d-b8b410358994",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "0e2bbdea-d51f-428c-a9df-dc59c28d864c"
        },
        "item": {
          "id": "c0c4a4a8-2dae-41a3-8aa4-c40665574249",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "e5f4adfa-b5a2-4734-b3bf-bf6cf9b81bac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d7d7e87-788c-424b-be3e-fdbc2eca0907",
        "cursor": {
          "ref": "821644f8-e92e-4671-9924-bc6a7fe1ba34",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "525fcc49-a413-4e4a-852a-3c2f379951cf"
        },
        "item": {
          "id": "4d7d7e87-788c-424b-be3e-fdbc2eca0907",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "630fe658-d2c3-4a5b-8c2d-b842a99ba077",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 112,
          "responseSize": 1259
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0a94c94-affb-451b-9153-aac72d988f48",
        "cursor": {
          "ref": "516d70fb-2456-4943-9937-c6b9ff4b06f0",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "a4695498-ab78-40e8-9bc2-592b5128de37"
        },
        "item": {
          "id": "e0a94c94-affb-451b-9153-aac72d988f48",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "82da70f2-a2cb-4f65-888e-15ff40afcfae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e37b9c5-32ab-4050-9a0f-99ce819361c1",
        "cursor": {
          "ref": "17bcc146-62f4-4b41-add5-b6a15dea45be",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "5de92561-65a6-4bf5-8856-22d516e7fd6d"
        },
        "item": {
          "id": "1e37b9c5-32ab-4050-9a0f-99ce819361c1",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "138109c1-2cb4-4492-9df3-01fb17ae2503",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35695e1c-171a-4c4f-9a37-ed4a5a5f77d0",
        "cursor": {
          "ref": "1d173847-3034-4b5d-a627-355d607f0b72",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "beec64ab-3c5a-42ba-b917-82fe5905ed12"
        },
        "item": {
          "id": "35695e1c-171a-4c4f-9a37-ed4a5a5f77d0",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "df5538f0-c1b4-4287-952b-2cd099c680c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 1149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38b26cc1-feba-4ceb-8da4-46a98c56c28d",
        "cursor": {
          "ref": "4a727afa-d79b-4475-87d6-b2ab9a9a15e7",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "d7871c45-fc6d-438e-8ad6-12bdf4109da7"
        },
        "item": {
          "id": "38b26cc1-feba-4ceb-8da4-46a98c56c28d",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "ce325c8a-108f-46a3-8911-cfc066f1bc44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eebffc6b-a05a-433d-bcae-3b8b5fb1e20e",
        "cursor": {
          "ref": "7a0cc244-73de-4a71-a9c6-66efc15b3b13",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "d3a614e4-35fd-4cd5-9741-dd6c3aac97b4"
        },
        "item": {
          "id": "eebffc6b-a05a-433d-bcae-3b8b5fb1e20e",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "2b61f517-c860-46a8-98c2-f5123ce76660",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13001752-01c1-4b28-8f9e-44072fd95a58",
        "cursor": {
          "ref": "842043cf-e41f-4738-80b9-88f05ec6e2bb",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "f4195ff5-8110-4be4-9979-1f271069860c"
        },
        "item": {
          "id": "13001752-01c1-4b28-8f9e-44072fd95a58",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "67cc4cc3-3d29-478c-9d38-7c71cde5098f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f9902d6-6503-48cc-9b42-44be4ab3ef91",
        "cursor": {
          "ref": "a4b3794d-596f-4fd3-a3e1-0c5e2c2120a8",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "89698561-e72b-41fd-8477-3f1b031d0c91"
        },
        "item": {
          "id": "8f9902d6-6503-48cc-9b42-44be4ab3ef91",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "ee0b1e69-dfec-4a35-ac15-45650c1191d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0de5c30d-e950-45d1-b9b0-9c73b70b53a5",
        "cursor": {
          "ref": "a5d73c60-d0fb-4064-928e-e1d8772dfd38",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "9a476837-f301-47b2-8170-8bc8727e8128"
        },
        "item": {
          "id": "0de5c30d-e950-45d1-b9b0-9c73b70b53a5",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "04408776-7dd6-47de-bb74-2b626f6a6ffe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 1278
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f260606-d38d-4cbb-934f-0656f06731fe",
        "cursor": {
          "ref": "4fc9aaf4-7ab6-4ca5-9bf8-a6b80856957e",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "136d1367-8648-4917-8f72-eb81f60a95ac"
        },
        "item": {
          "id": "3f260606-d38d-4cbb-934f-0656f06731fe",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "f32970f6-c3bf-4295-bf98-26ce4ba76392",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "308838f2-9270-4530-974d-4e17ae1590cc",
        "cursor": {
          "ref": "f014b110-28b0-4335-9834-c377d42fdb3b",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "3c4b5cbe-b79c-48d1-a250-3da579dff224"
        },
        "item": {
          "id": "308838f2-9270-4530-974d-4e17ae1590cc",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "59751a31-a610-4031-bfaa-3620cfda3a60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70c54868-eb5a-48fa-9a57-23101e10cacf",
        "cursor": {
          "ref": "743b274f-eb14-4299-a4d3-f0dc312c9805",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "f9a6a7a7-0281-4122-95b9-07954f9aea29"
        },
        "item": {
          "id": "70c54868-eb5a-48fa-9a57-23101e10cacf",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "54e9ef95-ca89-4972-898f-569701bddd8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54ce2546-c904-418d-a830-8cd49f032c3c",
        "cursor": {
          "ref": "677cd872-552a-4359-bd56-bfc350becaeb",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "aaf3e833-9d0a-42a2-a0bd-2e21cc04aa47"
        },
        "item": {
          "id": "54ce2546-c904-418d-a830-8cd49f032c3c",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "98e1ba71-67b3-412c-8c7c-06108143738a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 80,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1177f13-d58a-41df-8c81-1c9649018549",
        "cursor": {
          "ref": "616d771f-36dc-4c6f-a6dd-179dcd31b18f",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "3742dba9-253f-40e3-bf35-f648592c01d3"
        },
        "item": {
          "id": "f1177f13-d58a-41df-8c81-1c9649018549",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "ac57e5e6-4aaf-4685-a310-e516f2ff36ae",
          "status": "OK",
          "code": 200,
          "responseTime": 162,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "70449db7-e98d-4be3-8aaf-575ca6cbced4",
        "cursor": {
          "ref": "0e4f9dbc-4dd1-474a-b7b5-50df56f6d703",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "a5ba8e57-c5d6-4010-a87c-8d2ebf0492d2"
        },
        "item": {
          "id": "70449db7-e98d-4be3-8aaf-575ca6cbced4",
          "name": "credentials_verify"
        },
        "response": {
          "id": "1d8b3ce3-d726-4267-afd3-d19529a1c033",
          "status": "OK",
          "code": 200,
          "responseTime": 1452,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "5145329a-3729-40ce-a5c1-b1d14aeed44a",
        "cursor": {
          "ref": "1ea2874b-5707-45aa-b1b4-020e97d505ed",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "28e60013-d227-448d-838c-4dfc4f5b2dd3"
        },
        "item": {
          "id": "5145329a-3729-40ce-a5c1-b1d14aeed44a",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "8b6ce504-4841-445f-8009-39c411ba9735",
          "status": "OK",
          "code": 200,
          "responseTime": 1679,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e5a0041-1571-4179-8138-c0d6ca73bb38",
        "cursor": {
          "ref": "9d288ecf-83f3-46b5-9d8e-48076f45d0d3",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "b5920415-aef9-4d48-ae58-f48501273a4d"
        },
        "item": {
          "id": "1e5a0041-1571-4179-8138-c0d6ca73bb38",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "a83115c3-5add-4f0f-b1ad-06578c986aef",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 74,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e5a0041-1571-4179-8138-c0d6ca73bb38",
        "cursor": {
          "ref": "9d288ecf-83f3-46b5-9d8e-48076f45d0d3",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "b5920415-aef9-4d48-ae58-f48501273a4d"
        },
        "item": {
          "id": "1e5a0041-1571-4179-8138-c0d6ca73bb38",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "a83115c3-5add-4f0f-b1ad-06578c986aef",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 74,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5a0176b-7994-46e9-b05a-5d91ab6f5edb",
        "cursor": {
          "ref": "66b957af-daed-4651-a9a9-49f1ba94e978",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "f6cd06cc-e603-4762-b9bc-9843fb5e5262"
        },
        "item": {
          "id": "a5a0176b-7994-46e9-b05a-5d91ab6f5edb",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "c700d40f-7666-4104-a01b-fee3322487e8",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 77,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba227362-629e-436d-b04a-0c3ec2fac90e",
        "cursor": {
          "ref": "acf4b6c1-1a2e-418f-b38d-187bbe33abc7",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "2b11afef-bd5f-4b19-a5e1-caeac78908a0"
        },
        "item": {
          "id": "ba227362-629e-436d-b04a-0c3ec2fac90e",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "b10cdbf5-b35b-456d-bd53-e3912bea829c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 81,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}