{
  "collection": {
    "info": {
      "_postman_id": "4bd78d4a-8f35-432a-a4e9-9e5a47c7c93c",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "01d92c94-79b5-44b7-9624-074b503991e1",
        "name": "Clear Cache",
        "item": [
          {
            "id": "e5c64cbb-d028-4cd2-86f2-c48e82a8a46e",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "f4c293c5-9908-48cd-acfd-2afff61547ce",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "9846216a-6a06-4cf0-84ca-bfe808912e7d"
                }
              }
            ]
          },
          {
            "id": "26a9ec13-0fde-48e4-b030-0c589f4cd5e6",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "e27234f6-cfff-487f-8ce5-224cf1cf05cc",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "41f346a7-4c6b-4982-b630-812bc945f286"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "9c582c8e-3bd5-4b35-938b-ca5662426902",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "478f001f-3711-4ac3-9ff3-0b5e3397bef5",
            "name": "Positive Testing",
            "item": [
              {
                "id": "4c3e2850-8bb5-466f-a634-c6419bad3689",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "bbbdc214-b0a0-471e-8a5f-6bb82dfe9c33",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f65c45b6-1d7c-4652-ad95-cc5ad9d69356"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "612441e6-464a-44fc-bb76-ce598f354474",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "44ae8444-6e44-4639-a3f4-8a2053834f54"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "4ee4f7aa-ba9c-4c4b-b35e-24dc0f3ca1ca",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "24bea7f1-5725-406d-bba0-9d72fb5a250a"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "580902e3-6259-43ae-b364-bc10ee1cf13f",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "a2245b90-17e5-4db6-b3d7-e5db17f2aae4"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "dafda228-1788-41bf-ae7a-d8df11da05f2",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ebdae189-a6c3-4efb-8fbe-c69494ad9fe0"
            }
          }
        ]
      },
      {
        "id": "e5a1b85f-8c45-4a61-a22c-81a46cdc9c54",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "3d4d2a0f-0dd3-4132-a0e6-f7382d1a441b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f9090450-365e-46a9-a041-020b5f0ea7fb",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "0e61c5de-8370-426f-a80c-de30db4204dd",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "774850c6-b6b7-4bfe-b7a1-91f54b36f24b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1f9a945b-3661-4806-98c6-1c87331fe2b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7eccb678-e329-47ef-8467-83a05deacc1e",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86476b70-ecf6-4007-a404-3fb03aa07623",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c3254e0b-a474-41d7-8894-128ed32b0c15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25e36923-89f0-4f20-9b4e-b28005e55052",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f7be829-47ed-4d18-874f-2b3368566134",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "81dce51b-f9ff-48f8-9693-9bb961f94100"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "19274b2c-4386-457b-9f90-44947b5fe2d1",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a96a9c5a-a7a8-4003-afbb-7e6e23e81329",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ad0da91-d637-4ea3-9799-69fe014359b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "12e8ead6-28e3-46ad-bbe5-d54773c04046"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "607733bf-07f9-4f49-844f-2817c004718b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7aae47eb-13d9-4bdb-b8a0-518f43f32348"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "3f4ac9cd-04f7-4913-9479-a2b953829d27",
            "name": "Positive Testing",
            "item": [
              {
                "id": "50fa44b4-15f7-4881-8f9e-c92357adde6e",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6bd5a159-46a8-4348-a5a6-70b1a1f782e2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "daa3cffb-1031-495d-ae1d-fa269718c4f9"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2cfe20e7-8e71-4c0f-afe4-184b032b38a9",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "ae172147-5b26-4040-bac3-89d10ff38750"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8d490b58-fbdf-4bfb-aaa3-f48820745f36",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ee040317-6d33-4cf5-a989-2fd7ff399f5b"
            }
          }
        ]
      },
      {
        "id": "5f39c5aa-d577-4214-9fba-e0977d01bf0a",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "3587d796-1eb3-4b58-9468-3b2436d0763d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "73794dd3-5fb9-489d-afbb-d701e446ea71",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "ad3101b6-b556-45ac-a6c1-6c9bbdf03255",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9eb949d-8841-4925-ac87-a28750a84982",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b73f02c7-1174-44c5-9522-25bf520336a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e561533b-a6af-409f-bf18-cbdb6f815841",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "974cf080-5c84-4715-9fd4-928faeca1313"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1d0e266-2ea8-4823-afd6-9f6964aabcd4",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03ed78df-45af-4f7f-b6c7-f0a3f2d3b522",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "227060d0-f886-4cf2-b6f0-dcc4496d8976"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2153fe66-3d12-4c66-92a5-5b69de8a7095",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4d1a9d1e-ea27-4344-8908-a8e23a23a3db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d3410e1-c36d-4261-a667-8e92aa3d89e7",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0934d7b-064c-42f3-b482-5db4570ce551",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4082fd53-0e17-43f7-8546-190e3084418d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9dee663d-461e-4a46-a036-972482516d42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ace0b3eb-fe8c-437f-8d27-fd9a18d8d960"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3dab919b-49e2-4f90-b8ff-50610309b8ef",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39dda6bc-3c0a-4e19-9eeb-2336f49f1c59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0951bd36-0f61-41af-bcc9-996dc2fd592d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56bdbc91-b3dc-4a50-b7a3-2393d53ad3bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6f9d958d-a28d-4ba8-93ba-8cd6e3314d83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aebad15d-4da2-4bd0-b17d-2f54d3ac88af",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e94bd85d-0ecb-4caa-81da-18603a6e26dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b5cc8c2-5d2c-44cd-94b1-020b049385f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6d483e6-0ff7-4b4b-800e-7f374f4dc0ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "89ed558f-fb33-4338-90c7-4e6deb35742d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9656eaf2-9892-462b-9abe-127ab74bad04",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be44b57f-9295-4ead-a122-bf93f5dd8d21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10bfcd7b-317c-4668-8bee-325196ace4c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13af2fd6-2fc4-4af1-963b-ba5688368108",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "89cc9485-f2bc-4fca-aca4-98bddad32e15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3770144b-c643-4b95-a954-da6a0e8768db",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd876e32-6120-4c60-af1a-8e0cc324b540",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "627cfd67-98ce-4708-86b3-11247826e0bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a06364a8-05e9-4244-81d3-c09d581cd1a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6f7d365e-aaa1-44a2-b9d7-68c361f8b1f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afa56c06-c46f-43ae-a02d-0aa9383334a1",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47c3272b-19ad-49c5-91d7-48c2700759f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "211d5f12-4443-4bac-b70c-3ec3bce7d85e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fbe4e90-132a-48bd-aa5a-5a5c86710cb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "59c02e17-d958-4594-b31c-8695885c5f3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "225125f5-f09f-4efa-9079-68308728a33b",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "935bdfec-4898-47b0-b02c-8eab63ba2f2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "044f2b12-d204-41d0-8255-959fcc7f3a9e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94a8bac7-b1e1-462a-8cb2-2fd582254aca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "dc60c6b8-88e7-4f92-a4b7-68580660546d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3a63c59-e393-46c1-ad0b-485d294f360d",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38b2b274-cffb-4e5f-9fa7-8a683e4f3caa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc697541-b498-48f8-ad6f-767649fd241b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e885cc5-16df-4dd0-8adb-5d0537094d85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d35bc467-8441-4bec-9a5d-bee572bc7c80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f004e28-b593-46f3-8828-bda2527391da",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "727be230-2665-4233-b487-9b6afcb83e2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd72a9e6-4421-41fa-a16f-188e5bdc14b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "104884fe-c5a4-4223-bff4-fba70ddfe538",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1f449ec8-a042-4a34-aad8-ea9071c767e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14e7428c-ca16-41c6-bfc1-82717d3746a6",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5cd84078-b5b8-4ced-910d-5272d40609a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93fb8dd2-f92a-4e82-8546-12b88bd0efec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3636e48-9a2e-466b-9e19-74d8f6f65539",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4fed51a8-59ea-4bff-b2dd-e03d343d427f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "400f7326-88d1-4f9c-b406-b97bbd6b4bac",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbc23934-57e2-4d16-86e7-58be99d6b462",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de83f3b4-d19c-4819-9c9a-e4fa3bba7d59"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "468b1f13-d6e7-4d83-8094-994fe11fc6b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "23e9d8a1-030a-4db9-a71e-996083bd9dd6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cab793f0-ab3e-462c-8fd8-6c79a7150822",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4bedf8d-ad20-4373-8215-46c07cc4e464",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fce0a216-5317-4471-a931-e1757e139b07"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d84c927-e032-4d52-bbd1-9dd89789ac6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "757b1fbe-62cb-40b7-9bf6-fc26cfc54ec3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65d98b4f-e745-46dc-a57c-532af2d87ec6",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be6b2fd5-765e-4803-880e-065be151de8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20f49fb9-ffd3-4f95-a612-8c9c61afd3c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45dff86a-5f4d-44cf-bbd0-34dfacfb079a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b6c7e80f-5865-48a9-a804-d1f1ad92fab1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f96618cb-7671-4a9f-9794-9084badd2f4e",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d700d634-5128-4af5-a103-eee397a49ac4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab64885d-ca3c-4be1-83e3-9e0cd2ff9c89"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "385b859a-53c6-492a-a113-5d0bfa1fe936",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a105b62e-5c30-4d09-9494-1697dc8c2e3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc2cc0b7-7792-44a8-be68-abc680746c1d",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "909d55a5-9d6c-4439-a5cd-77b1c52b05c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dcc8d4ff-557d-4b29-ac3b-7df51e01267a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "169bf44f-0b80-4ebb-b914-0cbff4799e27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0a070f46-d276-48a7-8a5d-413acc5f9fc5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d25ef45-610a-4ed1-a0f0-87150e8a685a",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "627d7da6-caba-42d9-bd64-f0e8871885ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee8552d2-3b4d-4f6b-95fd-154bcc37b654"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1713868b-9adf-48ed-993e-d3ca251fcfa7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "21e19a91-6197-4739-b8fb-0fb238cbbd5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0007db04-32b8-4b6b-b5f6-210e80e92c38",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b2e85ad-0d1f-4d80-8a38-b46bcf7527a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32b6387d-464b-4811-8a8f-81a679baf852"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "238b2873-e4e5-416f-b18b-a8c961e5323b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "15882c21-99b3-4865-ba3e-96efca2ff162"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd1b8421-8384-4c88-adb1-5c92c00884ed",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0b34112-1947-4a56-986e-1d12e033824f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6c676b7-0735-4052-8ade-c5cbe7edde8f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a29c94e1-7117-49cf-adea-f7ce056735f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6d0f6454-e544-4885-9d5d-23fec3b35bc6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a969a9c-caae-40e8-b542-cd3849be17a4",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b997aec0-b17a-4a72-9d4a-609945a74de2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9e6dd6d-25f8-40b6-a505-b87235dc7905"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54d7006c-5c8a-4089-9c84-6362d0c64e07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7fdfed3e-a430-4d52-9bad-b6cb13971bc4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd5a87cf-d356-432d-adf5-24ece5bb10ff",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d44b2fec-3316-4276-9264-51082beaaaac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "323ddf30-a5f4-45c3-a3c3-673bb2f7f901"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd579db6-0abb-478b-b54d-cb81642ababe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a8c92ecd-6d4c-4be9-9dd4-ef249a4850e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d38aee8-f40e-4f06-9a40-20e5c61389a7",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "519f5a74-edff-422d-82ce-6cd4d7fb09e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f758544f-b40b-4a12-b3ff-94a3fe38e521"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9c2eeeb-638e-4bad-906f-ba3670311d70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0895bdf3-116a-4157-b270-93773e1ac92a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32820dfb-7d8d-48a5-8b2e-0c710558c3df",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4db73f1-7f8c-4a75-ab04-e81bb02c19f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18a230e2-40d1-4ae3-b0bf-9dc2f8e16cc5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c042b5e0-72c1-4433-bbba-ead32482f478",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "5775ede6-3a56-48d1-92f3-cda9ccf882b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39d96e38-f567-47d6-b66e-892115e974fa",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b33b3b3-85f8-44a1-82a2-80a159bf7b6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4357d88b-84bc-4d11-97eb-f32266d59c2e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc2dc4d7-f99e-4b34-ab04-d616c2269de6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "b202c852-f071-46a9-906a-504f743335f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6eb84c24-7244-43bc-a3f9-29eb3a8bdad6",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8894a4d3-e704-4ef4-bb8b-2fbdd46cad29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae8bc63f-c1b0-4434-8319-e5354ab3a350"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a6e123c-784b-4087-8b79-b15a78e40e22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "e7baf09c-05f7-48aa-9a31-d0a709c15736"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b157c430-4f22-47d7-a976-d639a0ef1f64",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51b01ad4-8fd7-469f-aa40-8d4798b3de44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b49782f-0b03-4b80-a0e4-e81b92740fce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b237604-dc06-433b-abd7-d6bc7b506a29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "fa55bfcf-46d0-438f-bdce-05b61b9de71b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77451179-9c56-4518-baa7-6697f0999ce8",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b4a30fa-d960-488a-b015-faa96f9c3dee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c030c8d5-e959-4261-a5de-17c74fb239d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0262705-fbb1-4126-bc8c-3b7cd581f4bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "e24e1e1b-7d7a-49b4-b2d7-99a811593b6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bfa2e5e-2581-4315-9b4c-7740fbcae88e",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5319659b-74d1-435f-b1f7-b9fdba26ebf9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "baf6d754-6f8d-4c18-9f0a-39d49e4b553b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b563e06f-587b-465e-ba51-235771b90560",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "870ed9af-c416-419c-b876-4d2cfe3204bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa95e9fa-f079-4860-9525-916e3454e647",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4be692d6-1196-4dff-a641-f2974eee0eb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3b5d236-0c0c-4223-a3f9-4817a25a50a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fb739be-3750-49cd-b824-1b49638f82f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "b03710c1-47f1-47ba-a627-a1a8c7f079c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8817c1be-2de8-48ed-bb61-ef75cc95009c",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15a6c98a-815e-4e19-a509-d323be5e64b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab6579c3-d989-4589-b8b4-893331a8b532"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e923308f-4409-4d7d-b649-cd1cecf9f334",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "0e185812-1c9c-4775-be71-fef0056b6373"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5eac2c7c-79f6-47e0-a8ed-2de662da0b54",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0dab7ea3-ec30-450e-84fd-00dbf96a535f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e2f3a2d-3ea5-408e-b119-1b6594592670"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c020735-7c8c-484d-90ed-ec952cf6c9f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4d44b162-6917-46eb-869c-43ff459052e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "104c66d0-ca6e-417f-a877-ca429270ee09",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa43f093-25dc-4c6b-b375-52aad9183516",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "897967c4-f730-4442-b453-9fdcf194f93a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7528c24-344d-454b-a5f7-556c7fe94f3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a1edfe15-2959-4a34-86e1-28c369c03ec4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da4cc6df-7b8b-4d6c-80b9-b7e799b9cb36",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "027368ec-b5ca-42c1-ae92-a9f67492ab01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "539ae2ca-3ddb-4b95-81f2-6f01f197f904"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e2a0fce-36df-4cd0-8a3e-485826485071",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "94782dae-77f4-439f-b813-75dc3b296fea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8cee319-e448-4baf-851b-c7dc7ee0192b",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b52ece16-bbaf-4b72-9cf1-0fb6f387b7b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6655f6e3-8ec5-4196-9ebf-05d19dfd0d80"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce623422-6c38-4b37-abbb-6cd2450599f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "ce9b5a12-0d33-49fa-aff3-05a0447d5428"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6638adbb-0d04-4956-af64-d39d247d152f",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29bca479-fe17-4413-a228-90bec5aee43a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "bc89b375-e839-4b6b-aab4-b2d402298944"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8779b2ed-3d4f-4cfc-bab3-7cfba5fff138",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "be693841-391d-4f85-a544-68a385718bf3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cff67560-649b-4f75-b856-29fdb4b9ad25",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb854776-8943-4f5e-b4b2-fc399462c69c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "faae1a59-4bb1-4bf1-b606-487f32454466"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9ee118a-baf3-4173-a5c9-ace9e55000f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d5ef989b-21ee-4a87-a87a-a016ecb987d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2612435-36ff-4dbb-b6ee-fb78667d5e7a",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5a1d546-da8f-48f4-be0c-adc34c93ab66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b852b668-3354-47ff-8ba8-ef3ac016b1da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d56a24a-2feb-4040-bf3d-88f4fc1db1c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "b1630cd9-c06b-4b57-b488-765f5b1a5d54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f45092d-23c1-40c8-83cd-93105e625bc2",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1818bcb-fefa-4991-93f7-474510a8b670",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44e45015-2302-4663-8db3-282680305b82"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6ad92fa-6dbe-47b9-a49e-d26018ea953c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "c8963de7-f730-494f-ac08-32a297cc9736"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e710744-8d83-4032-af6c-2c9753fb5c61",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db6d4a27-b154-4e7c-b45f-cf69fcf305ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2f10fb6-b797-428f-ad19-005cc3dd5dae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eaa3ce86-7f7d-4818-96bf-70a03b222e15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "07efb826-28f8-400f-8f27-64043abb3f4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "547dcf66-2488-4b65-a957-2a9837855313",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e278dd1a-8bf5-40b6-8d30-c6fcfb8e081d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8db416c3-bcd9-4a0c-aff4-3590cfc81e6a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99591212-3705-46eb-b5a5-95d4da464e04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "098c70a9-4c20-499d-b1c8-434a361265d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed321c46-9e58-4293-9c4b-d9c7a7a07c6c",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77e99542-d2ef-4ecc-a9ff-eaa2cb823370",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca7e5fea-2200-497c-8f61-31183cfcbf25"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6d4988b-461c-4764-8405-9b06a5eb56f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "79d28862-9268-4146-b4bf-b6c338b49944"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f938937c-a906-4a93-b836-f3694f2de33d",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ba15870-88b2-4927-96c8-64559bfbe721",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd6a0d22-fc2b-491a-bafd-420b798c48ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3bd49c4-b660-464f-a42e-d57251ab12d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "6d266013-49bc-4619-bd5a-1da8cc233ab2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4201e466-688b-4b7b-9ee3-ff62f6abf9a4",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95a65a31-c944-4c25-a298-af5f38c0fbdc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6050d8d8-a3cd-43b8-a8f7-88d97690002d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a69c9ab1-de90-4060-91d3-21b6ddc9f6c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "c4604ef6-9473-4f8f-a301-14f672a45b04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f79e97b-f5d1-4637-a9fc-14c678197b2e",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc9067ac-d8e8-4928-b23d-c1e8166adc7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c83bd18-99b9-4384-a1cb-c1c9f9f4d280"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c31a0bb9-8fd1-4275-9656-09374c3c1fb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "4d0db520-9e37-4e66-ad1f-88cda04875db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "706e395b-e96c-4fb7-95d5-9a64804cae7c",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6617e40-68a1-4799-95e3-3dec8be05256",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d91f3b94-9142-493c-a4ce-942660f45670"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4eb090b-2eb5-404f-a0e5-fc7d03a99734",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "198f23be-5415-4909-9647-2fd2a726f3e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d310ce6-808f-48a1-9a24-8721e3b4db90",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bca4596d-58ac-4fb4-a30c-8be8c3a73ac0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4fddff08-6f37-4d03-99df-939d7089fd40"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b1e79a7-be49-4b68-9c8e-496a193b62c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "589231af-e1ce-4a30-ad80-cb144f4207f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9afad32c-e423-44ac-9332-19c9450f0f55",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39eca857-4058-4b56-a84c-7d1595ecddf2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7964c63-de11-42f7-ab44-e510ac9d6e96"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77933fdf-604c-465e-abf7-88348c383d6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "20b24986-15c3-409d-afd3-15c79450ed45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44e48245-b476-4183-ad55-13ad251788ef",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9cf67e4-0c5b-4ae1-925e-abb9b80d1d5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef6ab8a3-3cf0-4523-8008-97b486f9e39d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dcf1b9f4-0662-4e09-8f86-6363f337955c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "3b4d4c75-213b-476e-8944-5e1468741b5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49c3a9d2-f4d5-4ffd-aa09-55ab8a3b9c65",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52940e79-8ba9-412f-a015-c38d0466ae8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20670afd-ebac-433b-b76e-96a69de65489"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26cbaf4a-af7a-475e-b23f-f0ac75efa7d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f0b230fb-6cf6-4483-ad29-11da759d4db1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e0b6a03-b0d5-4326-b289-d2b81458ce5b",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb7f7fb5-1808-44a6-929e-d562841dfcf0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "699e3204-5731-4f2f-ba3e-96c93273da1e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "881dbb19-ae0a-4956-b3b1-a3093e9e1a5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "e6e173e1-750b-466e-9a1f-8e89b33d9238"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afbbc104-5ea9-4e18-8ae5-482ad4e9b2a1",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60a5cc59-8b09-46f6-b726-a1793e87e2ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42698b6e-0d36-4737-8c31-32c24f574238"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2753d138-7dec-4975-8e35-79c02ab50e1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "c208e993-02af-4e12-81a3-7a2c0767218d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e04c65f9-2033-4d01-b886-72beba673276",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9179e1e6-11de-4227-bf76-c3b6a739e132",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "044c390e-20a3-41f8-9946-bb1676d3591a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c1296c1-a0ee-43fd-bc42-e157d4c97181",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1bd9f707-d581-4414-ad10-860bb787f078"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7337a92-3ae6-489b-9e6c-ee7575fdf301",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31de6c84-7c95-4d97-abe5-7d31931d3b2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c109a1bd-c530-4c26-b578-34d8aca07a40"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d46c00b4-2294-48bb-bd8c-306ee90f70d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "09c15115-b823-4733-89d7-39df3b0b6806"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1c2e3ca-1337-4c06-b220-b32494bb0605",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fd5a4db-884b-48c5-ab8b-5a0129bb0e3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09c88947-c3b4-43d7-b51a-d7bb6d69b105"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38d1490f-6b30-4d29-84c2-1e4e205d6662",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2810bbc6-753d-4189-a8e0-c1dd86f2d2a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eec2eb61-d751-4ef5-a12b-c85bfbb1ff54",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f32af020-c652-489e-a19e-4762215e0087",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01b1a2b6-b3ba-44af-b48a-0d9563801c74"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e3fa537-c17b-4a84-ad2a-ccb1f0eee603",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "5ee69fdb-9432-4afc-8d36-e3cc116c59e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b16e9ee0-0604-4bd9-b57e-d04b85c23fae",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4782091b-13a0-405a-b506-815f5ea9e701",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7605c19f-e988-4bdd-8a6e-141da2e0be8c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "546c4967-a054-449a-83ad-410a65df87a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "d212892a-997b-47ff-bc9b-a388119c3004"
                        }
                      }
                    ]
                  },
                  {
                    "id": "775a9840-2a66-4492-8084-5bccf1874e95",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ae62e60-3e54-4e4a-9c03-2c58c8209d8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca0a2d05-5f46-4b23-8030-36d7315f27f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9224cb8d-a38c-4898-a934-6362fc6406b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "fb33a23e-c724-4606-b6e1-8ec0ea77e434"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5bac702e-6226-4680-b926-d8002209281b",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5bc2ebc-e569-4733-a964-a7822eff6d8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7108a0d2-ce7b-4685-abf1-c14484bd502c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fc8354d-e7ca-4569-898c-28aad074bf50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "dc615fc1-b95b-4988-963f-db08da65056a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c832646-b3d3-417e-9d14-ec48fc95ad76",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8116d78-f1ad-4325-940c-5ebf590a8d8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46e0a7c6-7985-4d80-96f0-d858d0db9cd9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ec25302-e65f-4eda-a858-1776dc6868a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "f95718cb-8756-4345-8738-a9315ce851fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "343de4c8-497f-48b8-b198-88bffbabb602",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed11f50f-89c2-4eed-afc1-bca3e780c4b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa0918af-c5b8-4fad-9f07-14f7a7242dd8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90f8b322-a8e7-4403-b23f-2612ed69b878",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "40abdd4a-e5cf-4a11-92ca-ce12a1afb463"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1477b74-d2e8-43be-b0ec-da95370e2543",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed6af009-2745-4f39-9654-5c18687a110d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24118d4d-a643-4db6-b449-e5a344061042"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b4c0cad-a3c3-4d4e-b08a-591c12f57fec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "45a40fb8-d777-4ece-b4aa-d792227ba898"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fc7208e-c281-49ee-99fa-a0c81507a017",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7867cb8c-685c-4a0a-8522-97cdf9e5e4c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8bf1a2ff-7190-4fec-80fa-cd16bf0a5ebd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "782dfc64-5641-4236-af8f-ec0ccc249e1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "086ba9e8-ee4b-43e5-aa41-604bca544db2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b45bbfa-e3a4-403c-a8ad-4044dc7779dc",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "330a5dd1-c1b6-49fc-82d9-a0b2437773d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "216891c5-ac1b-4d0f-9cd4-993a0b9faaa6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "160cc20a-31e9-411c-a977-48850890b9d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ad6fc2c5-0862-4124-bcf4-20e74ed7cf26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "848c8f4c-10db-4c72-a5c8-66aa85640c32",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51b3b79b-fba7-4b87-9d3e-482f0238785f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7af054f8-76e6-4bee-b46d-fd71d99d3b4a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "311d9b76-9782-4a5e-aab2-4eeafdc3580a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9bd93dc8-07e3-468a-8b1b-5cecf2609f6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b08b596c-e21e-44c9-9e3b-b0c0a1e86613",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aaf4c810-0456-4386-ba99-412b85ca3789",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e917840-9b6d-498c-9dd1-ca1b8cb1269d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b46d787-ee08-4b4b-8b5e-380c07566c98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "52731c7d-a8ae-4901-ae90-a22e56efaef5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fb0008e-420e-4119-a2d3-000b180b3536",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df6a0d99-1990-40e5-8df3-95beb19845ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc8e6694-e451-4c91-8324-a5543ab9f5df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7902aa5b-3100-46af-9fa8-bfa04ceab5ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a944db69-d2f5-430d-9502-e036bb5e4a28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d1cb77d-d312-44e0-8de9-7f3eb3ec9518",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07639291-18ef-4d8f-be99-eb6ff5f275f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39182b27-1486-4053-a5a5-d1e4ba59126e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52813959-1d4a-40f8-ba4e-9d169db1751f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "6817f838-37ab-4ce9-87e7-9a2d76ddc350"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90205d90-650c-4f12-adb1-62aebed302a8",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0c5b9af-f1d7-41ab-8ee5-5eb73c628db8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b7235256-e31d-4423-b0bb-4ee61d0cf6a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6bce8cf1-620c-40e3-b183-8a29fbddcdf1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "a67e7153-0460-431b-ab76-c140115b74f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a3875e0-d756-4a4a-b45c-988951ab4a48",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "933ab622-705e-476a-a1ac-37bc9317e600",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2995d00a-8f8d-44c2-8fd3-80a17eea349e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb410129-6376-444f-a42f-41ad7419ecf1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "302a8076-c593-4d44-994a-6ac103625899"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79b5a123-cdbf-4fc0-b0b4-a57d3ecf0c14",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff5b8816-434e-4705-8475-b44d5187bcf9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a51072b8-43e4-43a9-ae93-5d8c8cb8bb50"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9b1b8c5-9a36-4460-aff1-d33cc67e97f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3844a544-108e-479b-be51-4f382e25e32e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c2c9294-8cb4-42b4-b8c7-bee20c0126ba",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81fb9ddb-e27a-48a0-9156-bb06613c2bd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2f41157-cb65-4831-81bf-7df1002f6b39"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "500fedff-a61f-44ae-91fd-3066c23c2b4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "68f8c418-0bf7-43d4-aa60-78b4beade845"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8efc43e-c4e9-4867-9bf1-cba2bb98e631",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5d6d002-d612-4d09-8e5b-45171554ac51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1b94c26-36a1-4bcd-8147-e3c86a0ac329"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28b1a712-71f5-47d8-876f-0c9bb3a331f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a3a8603f-0943-4e44-adff-6a783cf11a88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afc67bbd-5a40-4c43-8554-dd046537a0c3",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a01c6e4-3650-4c50-a29e-2ae110e54cbf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "663e5884-0349-4653-aca3-bf58feab6b28"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b81f8d3-60ce-4b04-ab07-2bea4a1c4bb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "46882868-51da-4b1d-8e1f-de8a6b577ded"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba00b3bd-79ed-4d2f-876a-bc1ef5933076",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f524d2e7-afe9-48f0-ad29-741dbed59e0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d7a1e08-1b75-4182-b660-d67928022013"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59ce3144-e6d0-4142-8661-7644fb1dab57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "8e02748f-499b-4e5b-aca0-3687131dc5cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec4dda8f-ce77-4c05-a01d-a43f008a38ed",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dcd435fb-adc4-4518-b9c3-9d98517aefa7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20ae593f-631b-4f74-852f-1ac38ede7744"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc9306d1-6899-43a0-89e3-4f67823b44f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "539b2aba-8400-4479-83f9-e8f60e9869a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a43bb6c9-49e2-42df-b233-ab491b4b180c",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b997326-f1fc-4d8f-bcf3-e9228a3122ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc4706eb-90dd-4a9a-8d29-7ced763cce0c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34917ea9-e2fd-47c1-862c-5af4e4d714da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "165c73e3-a5cb-4b60-bbc8-3087b84b0c71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21312c10-ab51-4f77-9eb5-30f3da84e578",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9cd9266c-e89c-40f6-a6d5-4a291e1509b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea869f27-8927-42a9-9841-9bba567eaea9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58bde1ad-e523-4b22-897c-9940bea57148",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "bce22fb7-f013-46be-ba9c-fd596271ae61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "627f9030-c61f-4c3d-9eab-edf50d3123c7",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aee67682-e491-4b42-8cd1-70208a5aac4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "703e8913-0b45-497b-aa18-dae8bb9fb905"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f2460e8-1173-4877-9c1a-ee67bbac8218",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ad1c982b-546a-43c6-a2d6-455de1869e11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93d38c35-483d-4565-b0bd-27415029e363",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de6d346c-d792-4573-9450-406df190f67a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1182b240-9d77-4c62-8a05-e548b2832e8b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0dabe152-11ec-4fae-9094-5ce3c7e3dfd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "42789097-e458-46e1-9512-c69d169710f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11cf9a63-1fbe-460d-99aa-88d9e57d82f6",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe674f7f-e873-4962-ac86-7389c3888a78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d166279-2a47-4312-92db-bd026f603c63"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8988780-ecca-465d-8377-24b00376b005",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "f2161b96-f71d-415a-81bc-2b9d1823dda2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "717d76dc-fd50-487b-8c95-3cc843641d4b",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebb536d9-424a-44f2-9a93-d44e3520986b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "abd8f4ee-e4e8-40ca-aaa9-295fc0057b0a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b61d0656-cca3-4b80-aabf-a30a9b02a3cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f9250ef1-9d60-406d-8cd2-fd6a69215352"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10522f86-676c-47dd-9243-113dbcadd44b",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1e78409-ea8e-49e6-923f-c81e7e4a504b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "edb85b6c-7b3c-464d-8d26-d403ac5d6f6d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2459c30-4f60-4e22-b29c-0c24186dc09f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2b8ab8ac-ae2a-421b-b5b7-930663460cae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a30d136-3cac-42da-a154-8b563252c362",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "743b5cf4-9e01-40c1-961d-9863c7639646",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e41c2cdb-2873-41f1-a60f-22225d69400a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cad592e0-693c-43d9-9d7e-702c5092d369",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "92261f7b-bd33-4dda-848f-dee61d908f70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ce65f74-5474-43ab-8adb-57444f19a9a7",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3436c76f-5265-4c7f-8a3f-653d9cb031a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "77d208f3-9ab6-407a-b865-c9df3fe87f4e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a1a2ea5-694d-4a03-893f-39cb998f2e94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a20e9aef-9daf-4a2c-87c7-2f244625ff5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ea3f870-1f15-4a43-9023-29be4ef211f9",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85894834-b57b-416f-9252-b5f3bec5f109",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab681d5b-23f8-4a69-9d71-72465df86994"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ccc3eaea-b162-4855-ab90-74ca54509fe5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f033eea0-fa79-43a0-8dca-1bf59e2e881d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "886dce4b-cfd4-4eda-b9c1-be62a68431e2",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44292577-278e-4537-97b5-898416c6b205",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34a4d599-7902-4833-884f-95e22549bf9e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cec043d3-f80a-4577-aa28-aa80502eac93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "87593149-4c59-4d96-bfd3-f4cb774d1c4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17984316-babb-4bc9-998d-77842107e4b8",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ee2067a-d4a4-4044-8797-9638c3dc459a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e320b212-862c-4e51-8f59-2e22fdaafb56"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2259ded8-1759-4ea0-8149-eb972976d79a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "a8e5359f-d029-4c62-a9b8-03dcf9d074f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9f41fe5-0f42-4885-8a39-9d9591effc74",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f41379d4-b667-4d1d-a4c9-e1ced14874dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c3396f9-9603-44b8-a178-02cd94e05a5b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6012af36-ed8d-4b63-bf87-27d5520dba5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "fbd67bba-293c-497c-a75a-5be4d5260f8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b527add6-9e48-466d-93e4-98ae144f6b0d",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b322a1f1-fe1e-4196-961b-e32310c023a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d225bb62-83f5-442c-b2b8-2cfd6b1c6944"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5af44689-4521-49d2-bbe6-f6a57bb9166f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "ce3454b2-393f-45bb-94c5-08af7a692a9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8034ef75-ff04-4864-9ffa-6e922859d387",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "925f1a57-39ae-490f-9318-88e9714e292b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ddca2a83-7d88-4c20-96d2-654952e21a68"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67ef62d5-b83d-47ef-96b3-e94f7954f135",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "790e67cb-f430-46a8-a5fe-84d5933e267f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f72e28e-c1b7-4328-95e0-ff46d90cf92d",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5feaf2fd-20a0-4c02-b6f0-adfc7d0ab6a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "e01cf461-f415-41bf-a2a9-ab5dcac3cc3c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2437dd9c-ad85-477c-af05-ae6a43091204",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "e3149b2e-fa9c-49b1-a65c-cbe691baecd7"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "15b88b66-c8b4-409a-9334-2e8e22029791",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c11808c1-26a4-4db3-80dc-ea6d5c62676e",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d71ba94d-7265-4c38-a50b-73907a45810a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "99da9d34-e9f4-4248-9aed-b9246fda577d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6cd72ce1-1d92-4334-bfbb-19332f2d5c6c",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9f53d9d1-788b-4e90-9b48-533d0fe599df"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "cee77721-18d3-4300-8544-5c6ce7e676df",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b029d264-21f4-42a5-acb8-383ac08447a9"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "38a62913-be90-4047-a206-e4b2a4ea3aa2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ef3445c1-c03b-4f0a-a7aa-baaf438479aa"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "f9718696-d736-40ba-b4e7-268d4b4d087c",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "5ba84027-b3cd-48f9-9475-1375328d186e"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "ae959380-95d7-493e-872c-d3fedb6abc94",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "9489735c-f512-4b67-8ba5-88e7ae314c76"
                }
              }
            ]
          },
          {
            "id": "dd34e03a-d813-4bf9-a915-cf06fe1fe633",
            "name": "Positive Testing",
            "item": [
              {
                "id": "73169541-00d0-4580-8c3a-4632e0e948e1",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "167c88aa-d306-41c6-a12c-49837fc40b1b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "56a45678-24d8-4e6d-8110-bca16ee8da02"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2dc77739-e1f4-4e06-b250-4f0a2d103ac6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "6b7b7bba-ec86-46d5-9d0b-a91bd8af8d6b"
                    }
                  }
                ]
              },
              {
                "id": "cfe14408-1696-4542-82c7-a1d2d2fa6628",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "66fb27a8-da03-45d7-b4f4-1d3d5a5b355c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b4f62deb-5e3d-45e4-9e10-84273c1988f5"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "09679a11-48e7-40a0-af2c-d01e988af91a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "a5c19626-098d-4544-986e-a49f2cc1f30c"
                    }
                  }
                ]
              },
              {
                "id": "f9798092-0e93-4d75-949e-65834cf03b44",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "00d2b872-e658-4d22-95e6-7892e2703333",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "949ee921-82a5-4934-b57a-10d1f9a8418f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e96205fc-1fb9-479f-b48d-15dca81f0006",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "5611759d-e80d-4f64-a299-de6d73d64f15"
                    }
                  }
                ]
              },
              {
                "id": "0d60d7fa-4a33-42b7-b60e-036f47e9a082",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d4c6dcf9-2728-4ab4-a51c-cacf0da2e30b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "89ed0a22-0bbd-4f80-84c1-c58d7eac55a2"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9bf953b5-e9ff-4d1d-80bf-b86ca7c66d77",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "e3d4dbb7-ac6e-4b57-98ff-a75e385909ca"
                    }
                  }
                ]
              },
              {
                "id": "6bc470ab-fee3-476c-b47a-f404d0d35af1",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "34d869b6-7f0c-4f17-ab7c-a0982ea2b882",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "2eb03a1b-5f78-4e47-9328-df6b53da9859"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d39faf3d-eafb-4233-b5ce-6454e536f893",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "0f901c6b-f943-4f6c-95c5-c3b82531f0f4"
                    }
                  }
                ]
              },
              {
                "id": "07506beb-b1aa-4f17-9030-d8191cd89f6d",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3fa28ead-34ba-49e4-9956-ea1993836462",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "4872fe4a-d7b7-41cc-992c-d33bbc511ceb"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e50deb29-4381-4791-9bef-541ab83d5a13",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "e9810748-e9ff-48d7-8514-4ae9dcf98601"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "abdd43a2-4b37-469e-8683-6c3f193435c2",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "b1efff90-66eb-4cee-8942-067434c49b6b"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "9381c0c0-c63e-4cc2-ba77-0389da11664c",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "5232a8a5-045b-43d1-a1a7-d281776f4600"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9070fad5-c82e-47de-933d-3700d4707569",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "a83b0fba-b619-41de-ac32-f12cffdcd00e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "da547200-5527-42b3-9497-c68436c5feff",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "95abbba7-cc58-4fa1-b674-3498d7d51193"
            }
          }
        ]
      },
      {
        "id": "446ad8ba-ba31-483a-8083-939f2152d98a",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "560cb143-02ab-48c2-86ba-6e74d06c7479",
            "name": "Negative Testing",
            "item": [
              {
                "id": "36516e88-4b7a-4e23-a012-4483dc321f04",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "c42e4fa9-5c00-4011-8142-823543f5a152",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2a08ebb-0d6a-4be0-bc5e-7a266a880ff3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3b6cc52-53e7-45f1-83db-e0381a6af67a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "708412fa-4315-42ee-8515-1c24e8a3896f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "c1371be4-ea20-4647-beff-2c805d140658"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0af9ce4-65ff-411e-ade7-290087b27a37",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14dfd54a-48ec-419f-a1b3-e27c47b856d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "521c5856-8c18-4993-b6d9-6b059420c339"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c61c4c33-33b5-469f-b5e5-9d158afe5dde",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "b2c03220-3297-4c8f-ba6d-2da17019a657"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8934c6e4-8829-42c8-aa50-d3dfded5a4f5",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2bae361-4a28-4524-b4b8-26eba191cd22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba80b3e4-968c-4cee-b399-21329ef0b437"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "195ac9c0-30db-4f8e-a6a9-0e0c6392da7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "502dc954-3c99-4e9f-aeb8-97225b86b522"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9484fac1-ab2c-4fad-94fc-db8b6f33d238",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82c08925-47c5-4d29-833a-df826d481de0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "77baabfa-38f6-4c7b-b26e-ca2150175025"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c5dc04d-2296-4174-903b-95a9ba0a6ba0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ef1af842-77d2-48af-88ff-efaf947e527e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5bbf35ae-454f-479e-b668-5fc95c304a71",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f27879d-1f96-47fa-a1d0-850176c36c02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82cc9a2c-8391-4d19-a207-b6012ecc4b15"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f83fa758-f9e0-4832-99e4-40b6e46fa245",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "31108cbe-7c57-452f-b00e-cc5c445834cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79d109d2-c165-4e1c-bcbf-1178e8f0da9c",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c44974b9-8f7f-4901-9074-8bb098d974b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "15e86fde-3557-4150-a396-81206ce1a0aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e570264d-b5ea-4e8e-88c7-3468357d6835",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b3ed1f06-fa00-462d-9b34-2375b059a647"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc5c8573-271f-41b1-a680-2917cb23f062",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eab94e23-4df2-4ffd-a710-2fe05d6f198a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "657ebe72-8ba7-4f4a-a92b-9916416e1dcb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92338556-8f51-4cd4-ae6d-694f1b863763",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "661486f8-3031-4601-adfb-c597fa7918b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89a1bf09-4149-459a-be44-385b80ee2286",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "311c8598-6fff-413e-9167-af0bc48e0695",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45abbed5-ff3b-4c6a-bcfa-38ef99e58448"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc486f9e-b9e3-4dbf-909b-2fe848fb5bf1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2a44c8dd-4288-4eba-a5eb-7e94b303cf8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "953b3ee7-5b2d-4cb9-bfbc-66b8f46b7bda",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b063006-a999-4c64-9c5b-a8b502276a10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26726458-795b-44e8-90e2-fd689683cb62"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cdb5ce68-6d6f-4894-989c-b517b6d0ab55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "43df2bc0-b0af-408a-a7f8-a1143337634a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebe44965-4087-4319-a718-d37fe0b65449",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3831b45c-a812-4bd4-8623-7dc2a0ed7cb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa3f4ca6-bccf-49e8-a929-17109214f873"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86116123-e2c1-4045-ac72-233d5b07a0f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2135454e-4102-4ba9-87f2-3dec91d87a4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd63d07d-b593-4b29-af33-b3383d73df02",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15477316-0af2-44c1-8e5c-d5fc0582a0c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3bcf08b-08c6-4da7-a75d-9a2ab0830a6e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a588ea0-5a54-41fb-b5df-16014405780a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "8c690e31-ddb6-484b-bc96-e5eca3593b93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fef225a3-880d-4d3e-bf71-c86cae583207",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b151b38-2677-4bd6-9712-babc5f5c6ab2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e5c5b52-4a8a-4253-8e34-43ee8c00a278"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57c0088e-1fb9-4006-bf93-0aa1d8276398",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "94d10da1-d88c-4710-b38e-6b062ae6cfe7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76b0758f-760c-4600-ac48-27bd11098fd2",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12d65328-de6a-49f7-b516-9bc2ee27394f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5890b6dd-25c7-4698-9fce-f1a69f56eeff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d20cef7-0545-4d8b-a65a-d274f254c53d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "15d82a71-961c-453b-96f8-3e93af0e217e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9bc538c4-c25e-462f-afc7-e0e1bbc58b3e",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd426f68-9546-4c32-8f9f-532d31a97b90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab68b214-237b-4389-bb4c-3ad78844cf51"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2bdf1809-7417-49c7-bb20-fd53888176d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "347ec022-ef9f-426f-b98c-04100c125599"
                        }
                      }
                    ]
                  },
                  {
                    "id": "526d0997-4f9b-4b69-a778-f1ec8531d7f0",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f342962-16a7-439f-969a-07b5ebf30f81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40965b88-216c-42d0-af67-1edd9fdec12a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3925a41-24a8-4c2c-9ae4-1e6ac08c1172",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "ccd672bb-2a06-481e-8653-fd304d0e957c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c8c5b22-c91b-4d7a-a5d5-43c4bc815004",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2506108-8a04-4fcc-a79e-ce291524c15c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "911ca634-fddc-4b16-91fe-ad66d697ab75"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "519257fe-bf7c-4b28-b8dd-ea142673b2e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "69e3a3a6-9469-470a-b9da-e745aa564135"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b3fc830-483a-4062-be26-d9f5843afcdf",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03e1e5e7-cd82-4cf0-b84f-4e4a4c0d9964",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f011097d-7b20-408b-8c94-dc26d8ed7377"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5201b06-d121-4223-bb10-0491ec468c21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "b18ff3f8-4506-463b-bfed-39cc77d6d208"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c77945d5-8cd6-4fbb-a7c7-50ac41ff3f4b",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75bcdae9-5d70-4400-a562-e339ed22731a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bba4d46a-3c60-48f4-8d09-1699268b2f5c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dea2d1b4-ee33-476b-9d52-e8feed430bfc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "10924314-999f-48b3-a489-346d57437ce7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e45db043-70ef-4733-b4a4-7fa55e9fc72f",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ba3505b-ba55-495f-be33-81fd1506f0c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "87ac4222-b324-4927-8d47-bf5fb9c08875"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f62bf3af-c17b-4032-a5ef-bd73d5d91eb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e0054c64-4768-4466-bbbc-733a2a7e8a49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b5c6dcb-e4da-4e57-84f8-2b7cab6b74d7",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d70c243-3225-4dda-a8f9-39e34a18cc4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09dade08-1881-494c-9250-9fa85d952a04"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "077f01e4-7ab8-41ca-a472-bc0e0dac72cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "68b6a08a-27a3-41cc-8b54-356d3a85c4f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b96bc07b-81e9-496f-8972-f00165f5226b",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "adbe177c-bfcd-4869-b8ce-846cb4cffef1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e18ca849-d1b3-4f0b-a589-a6c000dd989f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4985cf8f-b782-45e0-ba0e-1097b208a834",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2bdb8174-7011-4011-aebb-c91bcc4eed33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a8498cc-75ec-41cc-89b6-d49512048abc",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "532a8ea2-2aa7-4092-a7b0-e735d934d3ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c1c590d-6e7a-4345-9dd4-cb61052efcb5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c56c2ee-8347-4b0f-9145-9d2dcae6d635",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e4b0dceb-83ee-458b-81bc-5c5f2ca244de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e14c81f8-c8d7-4ea0-9b93-7d90ad0ec7bf",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57cdfa89-a834-4efb-be4e-6354ff0abb87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8f0975e-ad48-4a3d-8b11-e158c136a846"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4995198f-a09b-4d4a-8152-d45616c72155",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0413bcc0-2c69-4f63-8e0c-04e407369eb0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "801fe097-a7d7-4fcb-860e-0430426b2f19",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fbf46be-f205-44b0-b56c-f0fdfe98cfc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee8caec7-c301-4430-b307-520ce2dc5545"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5996130a-8526-497c-b70a-30a88c261f90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d0b0a4b5-fa40-46eb-8d14-4145e2c13371"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c694414f-e483-4ffc-a8c6-09e29940526c",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc3f944c-bcde-425f-a55c-fa289fbe826a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e26cbfac-e720-4e0e-833e-3f41788bd4e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e52bca8d-1d52-41bb-b6f7-f12a7eecc8b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ac098ca7-dc95-40a3-b1bc-b302423f2f00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db5e582b-bb38-49bb-8d0c-4bed4c888f5c",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8dfbaf3-725d-41bf-b1f8-76d710bff1f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7be604e5-6ae9-4d6b-9a3f-b5ed974ba467"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73b737e8-d1bd-48f1-92d5-e34d7d0d0c30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9eaff72a-6834-4efa-8cf3-2fc8fea52ab6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93503742-19aa-4a2d-a469-2be6ad7a0235",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1aaba0b7-9701-4d46-92a0-f7521ef8ee1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c392a073-c9b7-4af2-834f-8fe2fe548640"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64cf10b5-4d45-4f37-ab1b-61df2dc43fe2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "13177442-0c9f-4af4-988a-afa5f4f82117"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6bb26f2-685c-4d70-b0b4-020b20568ddc",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1cd1b66-c984-4446-b25a-e9b33de57bfc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2cbe67e-60e8-41fb-a943-6d156c9da2bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77362e23-e001-447a-a57e-a3ae3c51accb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "76e06151-5245-472a-a162-aa4787a4b816"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43512ea4-e1f0-48d9-b31e-75ccc5c670e6",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "044a0b37-4796-4e3a-a1c3-80aa975fe1ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fbf3df1f-011e-49b6-ae8b-6063928619db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5710283c-5106-4ec9-aa5e-ed25c39886ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e774c224-9023-4560-b23f-353183b9275d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f807aa8-c3b8-4384-ae62-9dff2e56b8f4",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf657872-0bdd-43fa-bf81-7755ec273998",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5578a885-5dbc-4d7b-b996-f48dc8c3bab1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfe332e7-5fb2-4c1c-a54e-2b5ad0a2d40a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "44996be9-f457-4fd2-8f83-981bda5cd214"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca2add3f-58dc-4c78-b582-63c9ad18f0cd",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9bd5225-1b3e-4d44-9a42-b6b4a8bde832",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80058c21-0b13-47b3-9106-c13b7bcb48fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61f947ed-e619-4d9d-9394-a0268649e356",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b9205917-3649-455b-8011-22d411a36a0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9735f9c-8ecb-4f77-b988-346bf1e90ad0",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45b66673-8391-4e35-8021-0d6e0c05268d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f8a3d2e-39a4-4fd7-9067-2c59a1c368a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0257d6c2-d0ec-4720-af48-0297620cbda3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "66ad0c05-f77e-46c6-9c12-b3c16aaa7c8c"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "96443808-6845-4f06-83b0-b655ce68b416",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ba7ad94c-0566-44d5-bdb7-a71e5978ded7",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36ecf03e-9d5d-47e4-8d08-cc33ad553b78",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "d0a3de01-1404-4a40-8cbb-49275d433814"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f517a13-c2c8-4327-ab29-4c2e74c7fac4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a5952e9c-6423-4fd0-8365-fd0d07306cdc"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "73d6b1c3-71d4-42c1-93e8-8d301749c5a0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2e661f38-faa2-4353-89d3-13caea19ce5f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "6eca83be-3774-4116-b99d-da1d66d44eb4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6d4b357e-8afd-4c9e-9816-1d864ec61183"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "63d5d913-c969-496a-92f5-dfdcdb3bb74c",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "c6cdc0e6-b772-4072-8300-0ca469aa5c2e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7b4bb93f-6e5e-49c3-9664-27d44afdb626",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ca293a51-15fe-4cff-9c29-c4ff4326c1a2"
            }
          }
        ]
      },
      {
        "id": "5df7234a-41a7-4237-80a6-436f712446d1",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "8d22f838-d9dd-4676-ba5d-9e255a0ab13a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "88d0c262-26a7-4a74-9437-76756f1800c5",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "46b98739-d9c6-404e-993a-f862612b50fb",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91d59d41-40e3-45b3-993b-049f2acb986f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1cbed061-a5fb-47d1-9c5a-6cb129b41a20"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "698c8751-302a-48fd-a4ad-500730d90e32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "fd1b042d-4d07-45bd-b57d-1205920e8f7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2604eb3-93cb-4351-b593-ffa615af0cad",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a381c02b-436d-4dcf-ac96-6bc78c278db4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89e58610-e628-4020-a839-1dbb4b14ff82"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48fc9128-5e35-4d4a-ae04-dca6bf1501c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "0fbdf49a-e37c-476c-8c73-de1b54245d59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98cf0b1c-4964-4001-a27d-e467525b7528",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a4178ac-28f8-4b3a-bed9-c6db00e44648",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a84ac99-96ba-4d82-81ce-f8f476bc0099"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc304dc5-3cbd-464a-89f0-f79a323c1075",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1f213ffb-41f5-4016-8fc0-9dc0e06ebe55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c9c371e-63b6-4c5e-a1cd-2e81d56af384",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0817b2b9-3441-4322-9be7-f2939c5a2581",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78959a32-833f-4362-9ff7-6afdec68db3f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fe2f2dc-1f38-4608-b029-1de4ab31059e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "264a521e-de98-45ff-9f7e-5458e38d6c99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98bb27f3-4b36-4f69-83f6-8d3ef111275a",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4000ffa-71c5-4c29-b469-1f0473795e9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78e25a18-19fe-41cf-b62b-48edae23c3d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97ddc894-fc69-4020-8293-695b8044dc1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0952201c-6539-492e-84e6-d517b7c944ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c0cdb25-6bff-4c1d-befb-24c7fc8cb5ba",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70f4ff37-95d3-4626-8ebf-68624d778a35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44695cf6-0977-4620-a0ad-3b91f175d226"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50b3e1f6-9c17-4d21-937e-3e2c6ed3d5f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d3cfa0c8-1b8b-48e3-8607-fd22243fcf6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51c50a5a-357c-45a0-a0d2-7013b3756935",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f0587ed-6cb5-4572-a092-684dbe2bc78a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ad334b1-4c74-4dca-8b08-b7bcc5582369"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e27a333c-3644-4b9a-9efa-53915ee13e01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "02c0bd88-f17c-4de1-bf72-74c97b884128"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da96ec9c-fcfb-426a-9cac-331d12946b6a",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c118270-15ff-40e0-b66e-763161bf882c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "252b01ee-13b8-43fd-9b07-08c8d13de595"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee551359-461d-4841-b1a8-af40dbddeab2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "67e10c4c-2a18-486d-805c-beaddfa41dc8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06d01e0b-a580-4cb8-9923-9030b075c1d2",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c59e733-73b5-4243-b592-66f9b6c9c6cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc628b24-7d26-41d7-b8ef-b587fcdce66e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce81067d-d251-4be9-932e-3babdf0fe22c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f468387e-0adf-46ff-bfff-d5871c6f7c96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e49d0862-e6ba-425d-b088-d936f0ea5af1",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5b34b1c-935a-4a96-91ca-7130a30242e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e1180ad-0bc2-4317-9f0f-a99e1b53e755"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "700046ae-9709-48a0-a41a-396bc1878cd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c722883d-fc16-40a6-9c08-e1f82d8c739a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b4764a1-b39e-4dbc-8fcf-081208246477",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0e26e3e-dff1-42b4-a184-a17abbbcb47b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ed99e82-2840-498b-97c0-437001e7d6f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00b7ec99-be31-40bd-99bf-77e1987064f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "00f2bf33-5e18-40ac-a0bc-a73569018ce5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6032d117-4f0c-45a0-a29d-df9a063b6f83",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3c1ba0e-d5d9-4318-8398-5d47510d00b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d145ee8-5423-40fb-9366-62f4a4889a0c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c275301-08a1-4ec6-afdd-903af2c628d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "6f44ee7e-8a46-441f-886a-df4a544dafa9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e61efe0-1c9a-4419-8ebf-00274c204114",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d4e6c0e-0c86-442a-bf54-600726589a83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6bcd263-557d-4350-9324-1d8ed8d1a9e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5322ef27-f166-4e83-97ed-38d00db3bc2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "6fd75250-b38c-4af2-9ea8-688d3198b516"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2abffc5-538e-4dda-ad6c-c4d24bb27507",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be57cc2c-f159-4715-ae47-d5f671292a34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8c1107c-756c-4829-88ab-c35e0d57f034"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7812bad3-202c-45e6-92de-dce3c9687a6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "9470c4b7-4580-4645-9cc7-19d05fef5406"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f259ef56-aadb-4d98-be41-d007e002a749",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3ebd64f-dabe-4552-8ad9-7e5ddf5a1d3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b008fb4d-7ba0-4d3d-b357-13ae8f6586b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92c6dc30-4f20-4d61-80be-db8ba91bcad1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "30826bea-c58d-4919-a830-d9ab7a6dbf19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eefaec62-de3a-4a3b-8ce0-e3df237b9f1e",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df818189-b96f-4592-9d0e-570b40b2fe09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d4b3774-ec48-439b-855e-b427a9248187"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca44f50f-03ea-4985-b8ad-9645c1c2b6d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "94c66799-351e-4502-be3c-03d1b60055bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "729afae4-97ed-4d8d-8927-b5ef3fb3478e",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39329ff2-f828-44a6-b675-bf161fecae83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0b6a78e-87cf-41d4-9e2f-71b88acbeb97"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57be6d2b-ab6b-49b9-a7cc-f36d2af4d095",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "a86406ca-b947-4d8f-afcb-aebff154456f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a2134e1-992f-4d56-a078-79f5ab016e87",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4496a797-4d9a-48b0-9b60-de9ed86cb44f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35222140-bd3e-4c71-99a3-6cb95711144d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c6a5e15-7be4-480e-93e9-40962828851d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "71d40e46-72d0-4b30-8d75-9b054ebf05cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aef4b5e2-189c-46c2-bbb9-02b14fdcca18",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07281789-779f-4896-8add-40df93608773",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e969549-263b-4748-9f4a-d85af0a8f5fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b953affd-b01f-4cee-9195-9249df44cd28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f3ebec6a-125a-4cad-8069-c29041ea3051"
                        }
                      }
                    ]
                  },
                  {
                    "id": "798aacfe-aea4-430a-a396-acbb2563c22e",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00878306-4259-47e9-ae98-bfb34c07e251",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47d3461c-e0bd-4c1c-b2d7-d18ed49e774f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df721b4b-e91c-43aa-8d50-296d86dab563",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5e566f55-e3f9-4dc6-98f9-f325c0636b38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ef3b3e4-ab93-4cb0-8e6b-5e5dffe0775e",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19863a5a-85f6-4f58-93c6-e9a9a37ffb19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cfe50302-dc68-4112-b045-416fe4e13abf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ea20404-057c-40e8-9b1b-f63241e5e049",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "47fa765b-c87d-4d42-b911-38aad7b0094c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2174e7cc-c7b7-4f39-be7c-3c6e562655e1",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a81a056e-6b22-4dbc-98dc-b6de7136a905",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "189bf9e0-5f4e-4337-b5be-042ffbe33ca4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0adbab0-e598-4530-bb88-8d20bff71468",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8873435b-9c38-4457-8af3-d68ab5ab1dbf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e97b1364-fd29-43ca-b42e-ecb532c825bd",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "902a03d9-8c99-4429-8fed-25a1c1ad2fc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d41934b5-ae6d-4025-8026-155e0f61c572"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23da5e13-69ea-4885-93c6-48272ff71b0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e6d8dfb4-d5bf-4422-bc32-4320578bddb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14b67b62-a6a5-4558-8f5a-af8ee5367a3c",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99b62aa6-305f-4953-b48f-0cd6fcb1fc3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d2629f3-6372-419f-835c-1293a135080b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16439ab6-2ebf-43fb-81c4-93533054b40d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "36779121-dec4-4f44-a57d-ef54ae997c4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff0f7625-c131-48bb-9f1a-6c1baa19e9af",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ce24adc-84bb-48af-83d4-b1221959ee4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29b65cc9-05dd-4609-b5e4-406dee1e2da5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79488ab6-485e-41f6-b9a6-711ec2ef729a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "237fbbbf-8c2d-485a-b86c-66b52f64be80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74044c02-9a93-4fb7-b0a4-c638ad11532c",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1e42864-6db6-419b-963a-aeab0ac199e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a0c2fc4-29f3-49bc-8bb9-2bc34c8756b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c708e018-0129-46e8-8655-d0f01ad83454",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6f642d8d-b691-4b2b-831f-60562977a6e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32a0aee3-75d6-49a6-91e1-a9c82e158802",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff9db954-e0e8-4044-85c6-4d5162f65e57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37d55e32-ad68-45d4-a957-2265871b664f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5764e93-a779-47c9-9f1b-c1e1de4c3c05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b1ea8d18-a1f5-4ec3-be4a-5344055b064a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64b9147b-1bbc-47fb-b8b8-317cea32a183",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a587fa5-cd62-4a8e-a32b-594e956ce05f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8b57283-523c-437c-9d2c-367dd2fa4d7e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c6e6cba-86bb-4918-8856-a2e398bfbcfa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6e9271de-308e-482e-9a65-075778ada323"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a97d0b85-dfb4-49c3-90f9-18d8a3fe42d7",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75921138-87dc-4ddc-9885-06002d762a55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c074e5f-a814-40de-963e-c9f1ffe14d8a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10d10bde-d9a9-425b-9762-3647b2b4f735",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ff54fac2-df41-4890-8740-d5427a93e043"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39391cb7-ef42-4c85-934c-5aaca237d3f5",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9193ee6f-b4af-490b-a8f1-b269f1da411d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ba9ccd7-72ca-43c4-b8f9-a6a81d7192ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c99d3241-2f46-4a34-8720-2371c95e9490",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fe663ca1-c53b-49af-9856-6a0a805f0e59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "658b2a37-2323-42d3-a457-797e0da01b00",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c06a9613-e9b1-47ea-b25b-2cc01f9457b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "060efdce-e34c-4d51-9bef-96bc0fb096a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1bd04393-6b0c-44d9-8914-8ebaf4a1a7e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c0b2c339-1687-488d-a630-192bac610615"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ef16ff6-fe83-4d0e-bd29-5dc2955a3375",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb0f48a2-c39d-43ea-a8cb-2afc95bfe111",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b79ccbe7-0bf4-4a96-afd1-2e7e2dd8d110"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46477bda-5c11-4ccb-8014-fe57b2e14547",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f7c77680-f106-404f-96e3-fd2bd33e8545"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b80a217b-1d87-4643-ba5b-76a433f1a02a",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f8d6986-234b-4711-a074-9851de463be4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bfa815a9-e6a0-4243-8113-915fb9690bc7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0b3465a-e844-439d-9dbe-d6d4eefab2c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e79958fa-3676-4fee-9eb3-642d260adfcb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0d9fedc-383e-4ae2-9db5-cc5fb0b92a40",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f45e3970-9f1f-487e-b256-d294c9a467fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8f7a50f-a8e4-40e0-bbec-aa465bc665f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e53ead01-5021-4a46-a01f-c1a69269fd5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "391a1c3f-e9e0-40a9-9c69-460c539245ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3870fd5c-156f-4ec7-8a1b-b1e4aaff0f91",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "efe93262-dd23-4a4c-b27e-6c7632cc62b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "550453bc-7c05-42c3-990e-7373c5b7be59"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a61a2911-acf1-4c9f-8191-b63c85d3aedc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "91a1f305-b9a0-4c3f-bce3-d60e9bacc8f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1038cf2f-760a-45e3-a0be-54c6e7592065",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "989672d8-cb22-42f8-b38d-02834b7b8ee7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12ed2fa9-a320-4ed6-9e3a-1ab0e1e72343"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ba44ed7-7bda-48f3-87c6-0f071a190338",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d4926fa8-7aed-4ae7-a90a-9e78a387060b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae837ef1-1e8c-44ca-a5bf-da0fd5a5839b",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "121c8fc3-8306-4da2-a1c1-424e78dce12f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3b79437-d261-4bfd-9332-df6031f8af1d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d395e14e-b2b5-46ab-91c3-6273c8c2ea4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9d64342c-93f2-461b-8b72-c3e561cb3db8"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "c590fc0c-0f4d-4f27-965b-f17de347bb6e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "0a5587d0-10e6-4ca0-baf7-536a1921714b",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93126160-9f3d-4917-9591-e115757de89a",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "f9c40a88-1f5b-4a93-a94d-4a1575cb2b4d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3849dcce-1bb8-4c27-a024-65587881f653",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ba6a3ee1-cb12-4374-b31d-f277b57f51a0"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6a42ee15-60e9-4883-927b-22c58074d9cf",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f8e71ed4-13b1-454e-83aa-a8e05f23338a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "83ea48fe-2b5c-43f2-bcf7-c6783095dd2b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6fcaec6b-cb4a-4682-88c4-85b0d2731cfb"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9e2ceaf3-4a2d-4502-9db4-6908c2e0d014",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "8c75c9c0-bc80-426d-b3f4-53032dc3d823"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c49e46de-038e-4890-b2c0-d853d8748d9a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "2a5e4a3e-f329-4525-a171-eb1a0c20d8c2"
            }
          }
        ]
      },
      {
        "id": "4f5a09d1-7705-44e9-b958-89706c9c2c34",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "8c29dc58-be10-4575-a629-9d56c5167106",
            "name": "Negative Testing",
            "item": [
              {
                "id": "207510de-72ba-487f-8909-a8791591047a",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "3ab002f2-dc3e-4599-a4fd-218c47762d0f",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2256aeda-06d5-4c47-9929-f9031d072b78",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cfd22326-c92d-4761-be85-a5decb187371"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e29c3eed-f2c5-48b2-9412-ac15442a7a48",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b8e42b2-0b6d-4fbc-930b-7cebe71a6d30",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2db39bbb-71d5-4e6a-b1d1-e5f134914908"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9eb90634-6b5d-41c4-9047-6b543510004d",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6871a8f-29b2-4cfd-87bd-bcc35be1d3b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79d96519-ddee-462c-824b-2867cd006a24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b07ce3f2-2071-49e3-9e8a-eaa563022d41",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18bbfb42-d8b0-44cc-bb49-3b04c4a03308",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e4d74a3-587a-4d01-a972-f20e69383b9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73278e4f-d140-4bf3-8209-35b47e328470",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14999489-34fe-4b95-a310-4fa2a6600fc9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17d15926-8f30-4e93-bbbc-6d8dc8fd3072"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a39e5f12-24a2-4527-a799-2f330c360cec",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b998129-37b3-454c-8058-03d764759b10",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf1bd1b6-e843-4b38-89d8-7c2fb1bf7d10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a04b8066-7505-4688-be53-2f9f7d526271",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cca21907-137d-499a-8a88-d1b8be56bdfb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a9faeb8-c87b-45c8-bbdd-5f7d20ccf42f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6692ed5f-df40-441f-bef1-715dc7f74ad7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "32a83868-9005-49ac-bc49-4b2865a9d85b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9bfcc528-f6af-48e0-8a65-3be2171a5001",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1204978e-a7b5-495a-952b-38765b0e23b5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6d3b3bb2-aa72-440e-ad8b-307be867bf47"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8080d62c-e20e-4c40-ad89-59b58be17aaf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2de3f963-04d5-4c34-b81d-3ce524f944bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db28c935-8354-4822-a256-92dd5aea24a0",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "434602e1-a3ee-4026-be53-7100734aa373",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "754c9d08-2de8-40df-ac66-f14a320ba95e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "29cd08d6-b3bf-4038-b3fa-89c6fec68bd1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0df75d86-41d9-45bb-a933-4931ba33d794"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0324c4b-eb71-41d9-9ce6-d4d1be53abd4",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "786b9f8d-e3da-4fca-8edd-892606bc11c3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e0f1a311-f6c3-44f1-940a-1951829abf70"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "405be1b0-6bfa-41e0-8031-3de3d9a9b9bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1299235-acbf-4f62-8623-4d68a16e8441"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0276a2e-7e76-4d0b-8561-4f46df0b4af4",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ae7acab-d137-4254-a827-27e38b93e7b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "534fc9bc-ccf0-4926-ba0d-78a10ed5b3a6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7c453cf-72f4-4c3d-be61-0a9b33816f03",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5bb802b5-9806-49b7-80a1-ffcf408991dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33c4cf90-604f-4802-8160-24046c433053",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72498434-38ba-4284-9a89-5f2ba89f4cfd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fee50fb1-aae1-4be3-b128-5d72d33ef6ce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fef6b9a0-bf09-4ad5-9b6a-803f7683e911",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f88a6f7-4639-4884-bf6d-1d6ca9d05156"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc09fd48-ba17-4921-b15e-c0e3b7d7e127",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5bacda1b-ee0c-4dcb-a50d-748534172505",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a5c57287-a169-4d08-9a92-5231035d63e6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d29423a9-bc45-4ec3-8ffc-6314b3b33003",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22760930-cc20-485b-900c-4abc1edba950"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d44d40f1-c6fd-4aee-92a4-a68c966ebc74",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e0bae27-31f7-42eb-9a42-aaa66b3118ba",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "09d1a251-3d10-47ce-970a-1a398618ad47"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "219c0c34-9d04-41ab-9e94-ad6436523c2c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ffee1e3-55b8-462e-ae03-3b293b599c41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "515628a1-75a3-4aba-9152-4459faf52b72",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8f22773-98d7-4ffe-8dbe-e4251e770273",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ac5108b4-a3b7-4c74-9020-6e0f05b08ed7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "345f0d07-2bb0-4d19-8c8c-3a5dafd0d917",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14683b9d-8950-4233-bdd7-7972df9a7a80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89f33540-bccc-45b6-9b21-2aebbbf26bb2",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "505ea207-2421-453a-9e5d-81678a543abd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4ac926c7-b1a9-4159-b3a6-ad99dc8e7a43"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "412c95a0-284c-45a1-acb6-e6d35921c549",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40dbc464-7bff-410b-8ea8-37cb1d3f68ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f81fce41-f79c-49ea-b49e-fd78d513d284",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbf32f59-4ddc-4ed1-8420-e02d8c14768a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1929f804-6928-4179-b4b6-917546b28a28"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7ed925b-db95-4b66-8a93-d320caf30ea4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73d3a37c-f837-45d9-9cd4-5ce9b5847afd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3b39e32-248c-4a36-8c95-0ce2f5736e3d",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "536043a8-4965-4f49-ae46-b1e848357ddc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6cdd0e11-6bde-47d5-a525-065e1de5b384"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "02fead0a-1260-4a8b-9ad5-72d78bd548ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f0d25e41-d66a-4f28-b40e-1004707b1be4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4c0dd0d-4915-410d-ba5c-068b1476244d",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e120d662-00e3-422e-98fa-55ee19e1ad08",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dfa5a429-c7fb-4230-9ae2-7b4f9e12e1f4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6aa458b3-aab7-45f0-a0eb-dc7edc0d4e51",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21ad24aa-3aaf-4432-807c-65b68e2af3f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43de5f5d-ba19-417d-b23e-5c19d3d20b9f",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6041af7-4abf-4101-8ca7-b7a557b7d66c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "afe599e6-9020-40ab-9840-5f7165f62a01"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8972060-a14a-42f7-a011-fae915a7670e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b497ef29-a42b-4b1b-bb3c-b9cdfe4843cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eac9ee39-8f5f-4463-a2c9-d4db7794dca8",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6086b975-3f1d-4616-a921-f30b72a734b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ea59864-a46d-4caa-90b2-931a80897cb2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f965b977-36b9-40ea-be1a-609ba9cbf396",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19550f5e-8aef-4b33-b1ce-ee008bda56ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6f464e3-20d3-4291-9232-240e6f95ccaa",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d11a39ae-93d0-46fc-a8d2-d4c8d0afd03c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57809b48-2092-45dd-b927-69971b17525d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1174ec10-6df5-47fb-b26e-9df4703e8438",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1646ab3-fbdf-46da-b5cd-ad7695708a0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "649f6d61-bf7d-42e7-b380-fa31d7e2f6cd",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "732366a0-e01a-4ad6-b983-8ff2cda43900",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c273a14f-446d-48fb-9734-fc0c9002d6b7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "94c254b4-8e99-4e96-abf0-ea57f1953986",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e01f4fb4-eb53-479e-98ef-9decbcc3b601"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44f8cf26-6647-4d2e-9ebb-d1f6c79dd5b4",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef3460e6-9c0a-4daf-934c-03b0b1c17d4f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1fda6712-8d6f-4f07-8126-570f7e635665"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c29614ff-97b2-430d-ba2c-b21862e56252",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39c930e2-d952-4a78-ac8f-fce555bbe1d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d9184df-dedf-4218-86df-625755b26b77",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de5c91cf-d524-4e1b-ab13-e9f94a1a9082",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "95e100ef-57fa-4180-9161-b04d599ead07"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0470b73-1ef0-4b80-817c-5c93aa97677e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "852c19b4-1c5e-4d5c-b19b-a8cd0e4e7449"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59508a69-0228-4a7e-9e91-e3930f210d31",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d74243fb-23da-4f3b-86f2-006eb51870de",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "de63ef55-bfef-48f3-8cd0-d49025e58f61"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe8cae6c-ae98-4347-bc17-bee0324b7458",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cece2987-e146-4b19-af1d-38f5c2e7aa16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c96746f1-f183-4ff0-8b68-65cc14b60d58",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1448b1e-bce5-4cd7-82c1-ef8e18eec34b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c26172be-8450-469d-9a5c-ae05db951799"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebd3757e-7ecc-4e7d-a1b8-602af2e351f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "958e07a3-718f-43c5-9261-8c197f065cbb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fab30ae-8fb1-4c1d-a700-2462d455c5d1",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48a53e71-9606-43a0-b40e-0aedebfbc935",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5df3ec98-64cd-409e-aa56-7be317420fc5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "18f71ccd-ae5e-4ea4-91c6-a251849cbde9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "602adfe1-f3ea-473a-a881-25de4323de68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ba25b98-ddc6-4cbf-92ce-f2052380c79a",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "467051c7-2610-4d0c-b9d3-23d2c8ac1281",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fc8fc41a-0151-4fcf-98de-a91fc7609f1f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc4edcdc-e21d-462c-bda3-2f343b29d7e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "33918bf6-a99f-41b2-8078-365ab5470960"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e869e21-4bc3-492a-a428-74110acfe1da",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05ac54d0-9db3-45d0-8244-a09665913ffc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7298cbff-b008-49ad-bf21-5e8f37c290d2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7430e140-d061-4212-9e0d-5253ef891b2b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "555ea932-9255-4f37-a630-2610009e7b99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d6de2c0-d840-47fa-afcb-4aa60a4b4508",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5d639f4-a230-4391-ae5d-16dd361e667c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c7cc6289-b871-408b-88a0-abad542b8c70"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c915cde7-d692-4f7e-9f98-7e341f38ebec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "557e67ef-2373-4223-a177-9d94cac62bca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00dc2ec9-2660-412d-af25-f4b985e6888e",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6dda73f-fc34-4ac3-a764-2200aebf1c58",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2152e218-cbed-4e7d-b527-045ad62e002c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a369d819-61b1-4c16-8ed5-a36596a62068",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de0fdffe-ed46-4ba5-9b87-6b561b27309d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "239ffba5-6c58-4ed9-a78d-7d24d2fcf2b6",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "971e4d1d-3027-4eaa-a1ab-af4de1e1b4d0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "03860609-fc3c-438d-bab0-929c9ea66286"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2cc367d-75f4-4833-9ed9-9b281eb58290",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ceb3e18-9f8e-4bed-9a30-2ba61119f225"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6740c539-e990-4c10-8708-c99df568b620",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b15f91b7-2c71-4a94-a949-722ea05b3ffb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d45e600e-1cfc-40a6-ad68-6b7a89eec601"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "28cf61f3-28a9-4c82-89f7-c6fa92fce2ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "048273f8-06c5-4b83-a6b0-4ab0613ca507"
                        }
                      }
                    ]
                  },
                  {
                    "id": "283c2247-3753-4fbb-a255-b774c9a05636",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a12acaf3-5b84-4bc0-b841-8f275cd4f370",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7636501b-c732-4282-9b03-5d85988a442b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae42bf5a-56c6-43b5-8a1c-5fa67a2e4650",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91040908-ff87-4522-a29a-7b6434b1b9de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bea69f8-23d4-4c0e-8c5c-5af33c6b07da",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d404c47f-32cc-428c-aa66-2b513072e5ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e5d2480-4dd1-4f97-b27f-c3d84ad05461"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1110bb5d-cdde-4724-8c3b-40ff4e50ac08",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2fab3e1f-e39b-40d9-9afc-2f187f51b255"
                        }
                      }
                    ]
                  },
                  {
                    "id": "834c317f-2c67-4994-b6c7-8172e53c6229",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f926d1ab-7a6a-4f6a-b53f-f0ec0b45e2a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "219ac7d5-647e-4077-811b-dad632f849e5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7941de2c-3d6e-4772-af2f-9626f3a0e719",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fdd43740-6fb0-433a-9099-fe1b8c9899a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66f69249-8274-4da3-b33e-3ff149fe770d",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6cf1a1fe-cf81-4bef-a211-8995804eaf55",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c628ea00-3d15-4d85-a058-8e37e5e41f22"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "de666a9e-2f2d-4477-82fa-5320d2b38a6f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07c888df-5c96-46da-8f83-85263ed57972"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8dba98c1-5d65-4cef-8e22-819b7a647237",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10d21dfc-973e-450f-ac73-22cdcfb07f35",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d37f2dba-9ddc-4ccf-b750-4329a09dbbe4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b9736ee-0bee-4654-8e3f-de348a41e995",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "162f8bd1-d400-4ca9-8c8b-3f037271779a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b4663ff-aa1b-4c66-9000-0db004ab08f3",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f40d4d3-fc07-4245-b82b-5cbe3c812ec4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b89e6b60-7f04-4e06-a77c-93971e3e907b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "920463e8-9455-4447-9c92-1933bc615924",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9436b18e-fbd3-4fef-84d2-e926ed3aeacf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f2f6a19-f003-433b-9c1f-605a0136bd56",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d758ef54-82a5-48e2-a511-dba0f5d95acf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40dd2150-e0ac-43c9-abc8-26341d2353f7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ffbe760-2b6a-4eba-b09c-537bc55c0642",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7aac233-e1bd-4af6-9c75-6373c611c65b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "066fa3db-fec2-4548-ad43-ef2c0211b06f",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb4bd68e-fcf9-494c-9612-7f55c0175b92",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d465f324-b767-45a6-956f-37e766df9860"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f17fde41-19e0-415a-ba3d-7cc58fac0a21",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1829819-ca94-4a3f-8f5a-b87556b11735"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5caa1e9-a309-4a89-a839-72005bc15413",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "292c5be4-eaba-4a78-aadb-7880da3bc75a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b2cf1a8-23e3-4941-8d14-dca3d8215145"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e140564c-7927-43e1-a42a-0f1645b5b25e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e543d340-ea7d-46ee-b715-b110f0975af3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d72f0e3-6849-4d6d-aa5c-9c33884eea62",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4eeea05f-6d5c-422b-a1b6-c775ac4b3413",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c0cb6de-3904-4050-905e-e0ab7b07dcf3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b55f351-06a0-4047-822f-d2bfb5db9ce0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8165236d-57d7-487a-8d4e-83b54e51ee87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5ab15d4-a461-4283-98d7-80ff85a289a4",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b2439f5-8840-4add-97bb-cf2eab945936",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d111d2ef-3ebf-4009-ae73-8b1d38b5835f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "996d1358-2558-430c-95d3-8d27ad16ee38",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26633e21-9f43-4017-bdaa-3e29a85efba8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65a4a96b-2d06-44bd-87f5-43ca6dbac835",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "036d0711-4b72-4098-9e87-e02e8c2d51fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "daaaa8f8-1604-47d4-852a-12f42e5c73fa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "519c78d8-7d16-460b-a2e2-d288a7daafc3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a192232-a0b9-4f0d-9db1-42611573ce21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69b0b5f0-5818-461e-8398-2761a6ea639e",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78ae6177-ba05-4fc5-8895-cba6ae7f8d51",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff9d75af-6028-49d3-a439-da3ade3a491b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "86cff1d3-157a-426d-9c88-b5edb725c260",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "abaa5dc2-d557-4f41-bb12-6f61e172c8bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "527621ee-60ca-4099-9451-24463b92d276",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "562c57f6-fc8b-4e59-91f8-bdf5cc5bc9d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "49f74a27-f544-4c1d-8dec-da5dbe9d5fd9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "19ac1297-2856-4926-b72e-c440f4477b47",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2882068a-11f0-4fdd-9e27-aada63fa268d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c7aa4f5-deba-4cab-bc22-b33763bbf46d",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "333f39b2-fcb6-430b-bdf8-66284859c017",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1db2c916-f0fa-4b2d-ab2a-9a070fee6124"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f180e534-c679-4816-971a-a05877edfda7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "426dc0ef-9645-4e51-a501-c5cefd43f708"
                        }
                      }
                    ]
                  },
                  {
                    "id": "184d8777-12a7-4147-b04b-2ae1e53ee8ee",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0684d817-fb65-4f4f-b276-52597024949a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "556bc2e8-55d4-43cb-984a-c8954d932975"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "026054e8-d503-424e-847f-289503389bea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e470c29-a648-4d8b-9723-a9e5ec98aeaf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e861829-d947-4765-b663-77007109537f",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7478d1a9-432c-466c-b79d-0fd5ecc278a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4dd57246-d1ff-4c0d-bd9e-63952b556533"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "543fcb57-9e51-426b-a915-bf2a5cf3737c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ef865d5-e4a7-4783-b890-d3d9752aaf49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8438dc1-5ea8-4433-b6ed-142beeabcde4",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee5340be-342b-4377-bfe3-879cc779f6eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a49f9b3-60d3-45ee-b4c1-f412e5ac2018"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a536a331-7b68-4931-94b6-f2277d2b1eed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b0b1eb46-c53e-4531-b50c-ce9fff663b7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4de21b8-6c01-4d12-9ad0-9a27117bca94",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb068f05-55ca-4df0-88eb-4c9c8b351814",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2da8b65-a6b9-4240-bb14-01f62217dce2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6474645-3236-4b14-ab4e-ae33e788dfa7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c430e210-c52c-4e5a-820f-d075da170105"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15f9525e-b0ca-4e68-84ff-f866701ffe14",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07b04bf6-70b9-4612-9dd1-0484581a77ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d74e0c11-d4a3-41bc-b561-727f6f5f5a88"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4820787c-ca0e-46d9-9a82-83c3b17fab9d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be1320bd-6d77-4886-a74a-3e35abacbe3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89c15b56-c2a1-498c-a133-f88647551cbf",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62cd8316-c6e1-40bd-ba26-2539891441da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00211949-329a-4e22-a607-3d890af133fa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "feb5604b-faf2-4678-b873-da2b4be20e00",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1494f86b-86b6-40a4-b584-4a188d32f04f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d35e67b1-aa45-4e9a-905d-814e2cb130f9",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ba74017-745d-4f57-a00e-e5eb2656bd11",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b727cb8-8d07-4168-bd5f-dd4401d43482"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "93bf5f25-b8fb-4f6c-8ba7-638edfce33e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed407234-f9fc-4a74-af36-d6a909081e37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "150e4824-298c-4554-929f-e8696dbd9dd1",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d20ae746-9b51-49b3-8a14-525c055103f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af3b0ffb-06ec-42cf-a007-c0cd62369347"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b42e138b-d4f9-4c3a-82e8-0e8221a73ae1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d1385d0-2054-47fd-9583-486bfc984b35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "434011bc-175b-4921-b407-370ab03e9e60",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f11c837e-c18b-4fd2-b8b6-943f7f958630",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e00a1563-27dc-47cc-a2b1-9940ae0a9e70"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "469b56d7-cc2e-4c40-94cb-62f4bbb0a491",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09d7a929-89b3-45c9-b39b-7e4c17ac055d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c8db395-481a-411c-aa4e-f6f3a7a2053e",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8bad6d5c-5ec6-4f45-8342-8d509a479cab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54b02a91-aec3-425c-870f-aa3974933e5b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "65075729-f482-421f-8c44-65594d86a17e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24d26422-3bc9-4265-971b-be16dd9790d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35bdb7a0-46eb-4923-ab29-39f1a87c0e87",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54d9a68a-ad3b-4e79-b668-7c635207322a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93e30450-a0f7-463e-8c9c-b30e15848fd6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f35268a-59b0-419f-9e38-b94ef80941b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b8765d5-b4f2-4f18-b015-ded9f3bdd99c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d95986ec-e836-4db0-941d-8791e794b981",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "570a6943-ec5e-49d7-981d-20bad58dc76e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12f1b366-ca81-4ba7-899b-178a97d707c3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b8de620-fc60-447a-8d71-a1c73e116b43",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a95ae24d-3ec1-4768-8383-4de0587c6716"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd029978-c0b1-4aed-9e30-11f031ece2c9",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "682f444d-2d50-41d1-ab30-4431b357722e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a29d1b82-54c9-42e3-b544-719521d83e3b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e70815ce-e8e9-4f5e-99ed-e6518b26f508",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "120ff2d2-b1cb-4cd2-aae5-e9f2fec4ec66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25dac788-81a9-4dcc-bd3f-62833ea79466",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7adf8efd-3d9d-4ded-a5f9-b1a96b17d094",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be30da5b-09f4-4db7-90c0-210d8748d8a7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "847d63b2-5efb-4fc6-b71e-56d7a9ca9a5b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d27c907-27e5-4d48-a6c1-b36ce9069064"
                        }
                      }
                    ]
                  },
                  {
                    "id": "760371d0-28d4-4331-a390-8ad1c5e370bc",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b2de44b-c3fa-46ac-a52c-c3566cebee39",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "20cb6f7d-90bd-4d70-8510-8979b1644ca1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae083c60-6129-46b5-92a2-7bc39674cd2d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "32157718-6847-4d5a-b5e9-b88942b3b532"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e503e38f-f195-46fc-b90e-aaa48db69756",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "214fb96b-79a0-4f20-8901-a243de94d53d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "99429994-afb3-4f7d-840b-0bb802c1d881"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "62deae05-b790-4e35-b7ff-992e7d617148",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11a23434-efd0-47e3-908a-f7dfc617458a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de3f4a6a-676a-45e2-a3e4-923f6f14d163",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3949719c-3ac5-4aea-a8e5-68dca69dd2e2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f0952a51-ef9e-4e0c-b1f1-2ab11d370667"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f1fc2a6-c530-42a6-ab32-015847476dbd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee4e6696-28ac-469c-9094-33aea7d35b0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f381ae3c-8d2c-4bdf-a6a5-ec22c36fdda8",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0cc880cd-366f-4500-9026-deb17b5c8287",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b5b9ae8c-a220-495e-a8cd-59cb76474e23"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2dfd67c8-39f0-4b41-aadf-8a21010a4cfa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e22d4c4e-bd7e-4b4c-bcb8-8bcb6a054edb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec276a12-ce9e-426e-8736-6b4c2c9473d4",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66cfecbc-04ee-4137-aaa7-134cee5a6442",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ed23ea8a-056b-43d4-8bce-2fcf7f290b49"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "106ab485-4b6c-4665-bfec-a63fa6f61b36",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "398d249d-ca40-4b3b-897e-13c0eda9e08e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b45092b9-e0ed-4fb3-b1db-1144216e546c",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61228f5c-2535-423c-82a5-a477f2c90d7b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "169caca7-d6ee-4df6-8a73-d77484f280e5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "973192e2-27ff-4256-a007-e3ebb4b1821f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6d775c4-7cb3-4ab2-975e-9908179318d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93f06812-fbdb-4146-97b9-1355b7935e8e",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c5b0c2a-f482-4f4e-a5d1-63acbcf898ef",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2b15c3e4-40d8-43a3-9315-ea66198ea451"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "093794c1-1fb0-46e4-b6ab-9ad17fa48a37",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27fc5e59-3151-43a5-8532-1018883a27a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7e99a03-a8d9-43aa-a0b0-e5abb6d0d723",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99f27405-5da8-4ce9-bb36-f880f6200741",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a3ff2391-fef2-4fcc-b1f3-9aa9e3388035"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "adff26d5-a2c7-4e22-87dc-4b984927f54b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93d5b602-87d0-4b32-afa7-56d494017ce9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1368d476-71a5-4ff3-add1-d8bdcf0b08dd",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8912f6fa-13d8-4bdf-8f80-fb9bec5b9e18",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "47766348-4452-47db-aab9-bbaffb04aa26"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "41dd73a8-862b-4ea3-abe8-340385e82d2f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb3e2c81-3ff7-4f34-beac-1179dd664f60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e998484-4791-48e8-9a41-f654d6d79d74",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8db320c-b34c-4dc4-8faf-e3794bc8db20",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "259c3ef2-1fc4-4984-ab4d-75b96ac768c1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "98043e97-c383-4d3f-9760-c52607d22698",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f5d36c4-0bab-4a30-8ec7-8dabb129911d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ea59fdf-2027-43c6-8a0a-9b98d336311d",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f04da36-c7c3-4442-ac32-8bcf62f5c31a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "197f984f-ede5-4bd3-8ca7-f44be2feac37"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "da7798b1-6fc7-4eee-b7b7-12d0daa10774",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8894cb6-1cf0-4d1f-9e76-5af26832761d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52b5075d-37f7-4545-8d48-344214268487",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83979004-ee53-4f6c-9aff-3d804a0d7f50",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "af878427-2025-40d3-ac30-0480065125c5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fcc1ddb-e7b2-47fd-8030-c11c05c6da80",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51966e6d-70d5-4f1e-b527-f5fca0c568ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cebfb2db-dfb2-4a65-9b9f-35ba50eab12f",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f84d72f-6144-4502-826d-d7789b50c6e6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b195016d-4765-4ed6-8474-41deb6f631a0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b04e62d9-6d73-4897-94f3-49d9834580f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3cd38384-9ebd-44eb-963f-b884a39e5a02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e38082a-7225-4b8c-b5da-a14e63d59c08",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "846e4907-379d-481b-b827-7976386233d2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4e28a486-28b3-4b28-90d8-b24c57fcb693"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e8ac2e0-5163-46d9-9161-7f0ddd2d9121",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2390fc1-6ee9-4ab7-83b3-c58eece6af25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d16c3f87-9475-4125-a8f9-a45f6fb52f71",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ce14da5-2323-42db-b4d3-a5c85d2b3a70",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2dc1977b-377e-4bc7-bd1d-13ea05751075"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3e33680-99de-4f79-82a6-4d1e5af33a98",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b84b2af-c8d9-4aa9-97ea-2c1e470aa0ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f866086c-b9fe-4644-8d17-d81791f8c08f",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c906b21c-8432-4707-9864-4f42e0b4a7bf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "96e293ee-556d-491c-84f2-7988a235f400"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f708a5ec-d8c6-41f9-a16b-dbb35404a430",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5fb4d4ac-78de-43df-af49-7366f04df778"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b644c1a-15eb-471b-90c4-c68f97a21e52",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "673c48bd-e61a-40ec-977e-847fdfe9afa0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9147d628-acc7-462f-9920-e5090e2a9ee8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb0d5f9f-f6ca-489d-af58-dc140c9071dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96478757-326d-4c30-b0e3-e9d8470f8483"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4bf76fa-3e14-400f-8c08-e7c0e7182c92",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b81c2608-e0ec-460d-9750-b976102c87b4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d8b12ec9-fcfb-430d-8161-a4d3c3841c4f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f201db4e-100e-49ac-9323-6de84f705718",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24e4180f-13cd-45c0-8f1f-636aa98b0f65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8c4faa0-78f4-4044-8e35-0ddda16d872d",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d62d2b3-ac80-494d-bbbd-dcded4a53633",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "51f02de8-b8e7-4a55-abfc-c9e1d663f2af"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "59f73aa9-14a4-4564-9b51-f30358135ecb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5df9e4ca-9e8c-41e9-b312-66fd551885f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d94b1565-81fb-4022-b340-a0186e75550a",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e41069c1-bfba-4f84-a377-7c2c8e327982",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "da8eb04d-d915-47eb-8103-6bb1a55359e9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "49f8d195-c400-4089-a541-0176badb0443",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1fedc29-98c5-4788-ba81-7483bd41ebbf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fe89ca5-fa5a-4520-adeb-49c8a3226b49",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a963879b-07e5-4c85-b2b0-37a2b7b7c00c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c178d8a9-d672-4fe7-9c95-aab21632ad15"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c19ff1b9-9c96-42d8-b03c-c6cc3ae11fb5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bde4576b-b546-4a82-9cad-da7eedbd646c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f3c838b-86ae-4607-8527-a0d4586bb5cc",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5d435ea-826c-4bb6-9318-f16869b817d6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "34b7b5d7-4357-4a99-829f-29bc2746ac2c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "49a137b2-2370-4adc-8bc2-4ff68e044f26",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66550251-46c1-4994-b88d-90ab524e1922"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6ee7cb3-7deb-4c7e-95a6-65a11a1c86e5",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c79d4a4e-554b-43da-a584-82818a019460",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "43baabe6-172b-44db-ab7b-b2db63b95899"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4eccf1b9-5c16-4b6f-8ea4-48faa3540f32",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "49d04add-2857-4dd1-bd6f-f1b480c041e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9ad3bc7-a4c2-438d-b526-b6ac04527e30",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ebee2cd-25f1-4a94-8d4b-a9ffd144f046",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "113dce39-c716-4440-a409-0d3505dd95cc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6aa0107a-63f0-43b2-9159-9d17ef64230e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3dadc9f-3931-44cf-a584-e4808c5c9393"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54cd796f-3f3c-4d7f-b78b-5cee222e24ea",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbd239bf-4a05-4f3f-882a-43c9a8dc5065",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d6b595cc-e114-4a89-8d4e-ca98a4751955"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bd4beb5-2b45-4884-8728-34a86ba4da13",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f93b61d0-a208-4b1a-9df8-ce4361142d9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7fb5611-5640-4ea9-b73c-31f06cb90666",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11e44c4f-e3cf-4d57-b62a-5cf9c70b99f7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d8110579-2dde-4dc7-a2c1-a8e983ee8ad1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "055396ff-0456-462b-8489-17bc49aab35e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0495027-f70f-485e-8ac7-81beea43ab81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18c5bed7-9392-4ea1-a068-5dae6dee68e1",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc5a994a-ea92-448a-a2ed-5b106aa14d43",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e8f89ee2-42e7-4346-b931-88362fe4de0d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1244c5e-956e-4b39-ba16-91ecab9aac84",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f1be40e-5d6b-4762-b793-2edd5f331d7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e19d04f9-0c58-413b-8c41-1fef4d5a7d6a",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e801312-6b43-4f67-aea6-409800e8d5ca",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "38cbd213-eb10-4c03-ae3a-aa1fd8430dfa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "42af901f-8061-4ced-84c0-213691f73c03",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "226af26e-df19-4978-b147-1c756f95b140"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07909ed6-2380-49a1-b426-56903c1212b0",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b94de20-db23-401e-adf0-fe51fae46dd2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9e77ae6a-c70f-4ba8-9e82-4c93686ab565"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "064a033f-f290-486c-b362-61c2a8d914e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a96c1f4c-2d78-4b05-9ecf-4da917083371"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b516d45a-c307-4f72-8548-9be770f5b5cc",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c15fc33e-4e30-4093-8a19-7ca0e1203017",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "26d691ed-054c-4f89-8246-ea5477a30f06"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f1724df-1967-441a-a34d-715c8f4fd365",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94d6664e-963b-4062-86d3-a5ea89ca57dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f120db4-e666-4d67-b76e-caf97a571499",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e1f61e9-552c-4eed-9f15-f342f4093e57",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ca2ce71c-fdfc-413e-b718-323c6c15e98c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "858c8736-1075-4a5c-838a-9aa693c4d7e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "934e3c9c-b924-4ed1-b7d4-e69e54cf71d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f30945a9-f504-498d-be41-e6616e283de4",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f0e3059-f8a2-4608-87b3-cb3208284f22",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "95d4f4a8-7d2f-4ebb-94db-03a58b78fa89"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b198dc3-6610-4401-94b6-1338c6d92e61",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e2b2242-80fb-43ef-a7a2-7bacd8037c31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81ddec72-691a-4c79-8934-6e50a1a77007",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03bcb44a-3133-46a7-ac74-99f6c79750eb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "da2b670d-554b-4440-85db-4fca40785ef1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fcc8487-c92e-45e3-a90e-67b5f376d833",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1380a384-3f1e-409f-aa46-47aa8ec568f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "780ffef1-9f30-4cb0-bd54-f4bb3712ac88",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "429fd33e-ac6c-468d-a03c-58431582991a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "151bab7d-3c7d-4323-957b-178a48c07950"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "616320a7-a11c-4fbb-a7d6-a6839bf5b53d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af9498d3-9264-4553-b3a2-8c845961f7e3"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b716f563-2a39-4327-b3c5-94f2beede645",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ef728583-18cd-4a76-88e4-26dda72a70d5"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "304599fb-b166-48cf-a6fc-76368fda2959",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b4e2d8e8-d30f-4cb3-a501-c3a4f83845e8"
                    }
                  }
                ]
              },
              {
                "id": "6c81a366-ac5c-4b3b-a78c-b7b60daa2155",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "cdead185-1187-4b0b-8aa8-1b4564c36d58",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ba15085-ae68-486a-9578-1108bd78a589",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "24f47eea-b88e-40a3-9b72-6ecac9f839dc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "590699e6-6538-4404-8536-8f8ad590c5eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "42556988-d3bb-44eb-b283-fd396e038e78"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a003941a-01a2-4592-a768-afed96baba9d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5ee43e0b-a9ee-4d87-b1da-cc8a26c50830"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "fb4645c4-bc64-40c2-ad0c-191fd39cd38f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "654c251f-a5c4-4ef8-915d-c126c21d866e"
                    }
                  }
                ]
              },
              {
                "id": "7335a08f-a2a3-408e-99e4-08eb45e1f326",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "6badb2d2-8c17-43d8-bee6-7b0699788ab9",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8d042a7-0b41-4732-aa71-dbc49c355b0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "82e89ddc-7db0-4197-8ed3-c997dd4d25e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9602a573-5df0-4e06-9cf4-030a7251829a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2557c31d-30d1-4a7f-97a8-a8d012f59f32"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "37ce1f11-80b5-483b-b21f-bf5b4559ccc8",
            "name": "Positive Testing",
            "item": [
              {
                "id": "32118ef5-93a5-4626-a2f8-140ce05ad888",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e86f2f9e-62d9-4bf5-b4ac-9d474dd3cbf0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "bcc91ccc-3037-4f38-a0db-98c1428eb9a1"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fbf56a5d-161c-4e8d-a322-a9a880c5d4a3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fe2347a9-06d5-4996-bb98-604c6b0e6241"
                    }
                  }
                ]
              },
              {
                "id": "0d512a58-1445-49b1-8771-da352b74d583",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "32b4d45f-fbab-46ab-88ab-f5ef073fff83",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "45b2931e-2921-4f9a-82e4-032c96ef86a7"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8f97420d-6c5f-4a66-930c-b68a5e81647f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5e1c6983-f8f7-4ee1-9aed-9d0f9389f78f"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7b29f43d-69e7-436f-9005-9caf4929b5d1",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "8d3e0967-45f5-453a-be1f-ff019380f596"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a69fb6ee-aeb6-4ac9-b1bb-5ba87dd51f4d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "29af7aa5-d350-4c0c-834f-625af7b07a88"
            }
          }
        ]
      },
      {
        "id": "03a594b1-2a18-49d0-bec3-396d67aebd0e",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "b06ee794-3d24-4189-b500-d31226b6923e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "3cb8b0eb-6647-4023-bc29-b4ce640885ac",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "33571965-707b-406c-97c0-7f48970dd6f9",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d769fb8-8f49-4ac0-84fe-d56caa9f3467",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "3aec2f1e-feb2-4a59-906b-ac82402d9554"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "89d726d4-b5ea-4095-8598-2a6ac242f13d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ef2136a8-1d1c-47ba-be9f-34d589642143"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b6aae343-c369-416a-bfb7-1536d8f359ec",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4c35e9e4-48fe-4ec5-9e63-c8a595d62ca2"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d3f440b0-d1dd-4535-89f4-c312ff6ac16d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bea21384-9580-4d52-a2ab-f83e0bb5cd87"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "96109f74-496e-4dc0-adfe-1f3ee0844257",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "c0ed97dc-4196-458c-8f61-407f43498c59"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "fedabbbb-b29e-466e-ab5b-18bb7cecf7f6",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6d5d73a7-70e9-4195-b953-39ae6cb51417"
            }
          }
        ]
      },
      {
        "id": "ef147b99-6424-48e6-8ac0-0963890b18db",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "21b29de8-32cf-4f91-b07c-17cf88d067c3",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b97a468d-a799-4b85-b4c6-1a8761d07cc1",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "84b862d5-8950-4295-9f09-1282df02908f",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b08b7a75-fd07-4fbd-a13d-ca5b49784a15",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "144ffd3e-fcac-45d4-8884-5ebd7e68b5dc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c07d70c-7a3b-401c-b94c-78c38d3fb75e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "11c9b2f4-bebf-4115-a5ba-296c6ca91f52"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "43d1d843-8fae-48b4-98e6-569782831965",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d502055b-9a4d-458b-a74d-8333d00fdb74"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "7dee644b-a779-4308-be7f-1202c184000b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "790a31f6-4cdf-4481-8645-4ceee094f2ba"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9deebb84-09cf-42c1-a952-fedc371f4ed4",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "3cba4d3f-8c91-484f-a9f5-bd9c86932382"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ae27710e-b697-451a-9553-3d2b13df80f7",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b2d2367e-592f-4411-a188-237325823b0e"
            }
          }
        ]
      },
      {
        "id": "7e0de045-c633-42bb-be63-b52822113050",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "cfc8c722-48b0-4297-a95b-1d06aca6a3a7",
            "name": "Negative Testing",
            "item": [
              {
                "id": "793fe6d2-c7e1-44e0-9584-42c40f239cfa",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "34399446-e464-4e27-8c06-e4c7f1afce1b",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efa8125b-d3f0-4bc1-a8ef-e1baeec0c815",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bec9f338-26c6-4a73-864d-0bb52ff934fa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0128f561-fcd4-40e6-af69-14b49f21d1fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b3c4216c-742d-4abc-be25-6536c438469b"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7fb7961c-5f1a-4548-a25e-83b7be403a3e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a2d9107a-eb73-49c2-a8d8-3df9cc4c3af2"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b5db4ad0-14cb-4dc1-95fb-4c7c0e7a66b8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "71edce55-e21b-4fd4-b643-ed987150935d"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "cf6f725d-4b30-483a-a8b1-85195c7d5409",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "a007228c-2575-4c0d-a44b-27d23a064cbf"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d28871a2-45d1-4cd5-9aa6-edf0b9ae3407",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "bb9fce1b-260a-4c3f-be24-ad54129f58fd"
            }
          }
        ]
      },
      {
        "id": "eab9b5d4-8b06-4e85-8f0f-70d6abd0d846",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "399990b7-e9a3-462b-85ec-a6d7a5c4610f",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b512fb88-c337-4f41-baca-cc04bc7ae725",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "a3e2eb0e-7a40-4189-87ca-344faf388ba0",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9398db73-77c7-41df-95c1-f9fd5b1bf9e1",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c8a6ebac-11cb-471b-a3d8-621ceb256e66",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2083,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 284,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 571,
        "pending": 0,
        "failed": 2
      },
      "testScripts": {
        "total": 1046,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1037,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 791.3732394366198,
      "responseMin": 12,
      "responseMax": 7228,
      "responseSd": 828.8827888149999,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1688085863246,
      "completed": 1688086100134
    },
    "executions": [
      {
        "id": "e5c64cbb-d028-4cd2-86f2-c48e82a8a46e",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 282,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "e06f28fc-cbeb-4558-954c-ee84733a677f",
          "httpRequestId": "83c4048a-447d-41ce-be78-d9b18b82c64d"
        },
        "item": {
          "id": "e5c64cbb-d028-4cd2-86f2-c48e82a8a46e",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "816254b5-b570-41ee-8a60-ed6d4195c1b2",
          "status": "OK",
          "code": 200,
          "responseTime": 65,
          "responseSize": 0
        }
      },
      {
        "id": "26a9ec13-0fde-48e4-b030-0c589f4cd5e6",
        "cursor": {
          "ref": "4a628f6d-e6b5-4b5a-a800-b3738e9a7758",
          "length": 282,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "881411fa-5ce8-4f0f-a04b-1b0fb628d179"
        },
        "item": {
          "id": "26a9ec13-0fde-48e4-b030-0c589f4cd5e6",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "20053909-3b82-4e94-91ef-37ba3d30111d",
          "status": "OK",
          "code": 200,
          "responseTime": 12,
          "responseSize": 0
        }
      },
      {
        "id": "4c3e2850-8bb5-466f-a634-c6419bad3689",
        "cursor": {
          "ref": "aaf52267-5cd4-4e61-be66-6c5ef4788965",
          "length": 282,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "48630960-ba76-4850-acce-653e357c9c2f"
        },
        "item": {
          "id": "4c3e2850-8bb5-466f-a634-c6419bad3689",
          "name": "did_json"
        },
        "response": {
          "id": "67be70db-0692-4ada-9769-0134a8b1e6f2",
          "status": "OK",
          "code": 200,
          "responseTime": 1559,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e61c5de-8370-426f-a80c-de30db4204dd",
        "cursor": {
          "ref": "bbb813ce-6bb1-426e-903c-58af8373b953",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "274cdf13-17ff-4150-b656-81a369397d97"
        },
        "item": {
          "id": "0e61c5de-8370-426f-a80c-de30db4204dd",
          "name": "did:invalid"
        },
        "response": {
          "id": "586db81b-54b6-4273-aed5-05a1edee10ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 856,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e61c5de-8370-426f-a80c-de30db4204dd",
        "cursor": {
          "ref": "bbb813ce-6bb1-426e-903c-58af8373b953",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "274cdf13-17ff-4150-b656-81a369397d97"
        },
        "item": {
          "id": "0e61c5de-8370-426f-a80c-de30db4204dd",
          "name": "did:invalid"
        },
        "response": {
          "id": "586db81b-54b6-4273-aed5-05a1edee10ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 856,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7eccb678-e329-47ef-8467-83a05deacc1e",
        "cursor": {
          "ref": "68b38af7-d82b-47e1-b5d7-0cffef03fc04",
          "length": 282,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "6e494dd7-cad2-4a49-be7f-0c1fb1f1b722"
        },
        "item": {
          "id": "7eccb678-e329-47ef-8467-83a05deacc1e",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "c9ecb720-c98b-4a1b-bf12-18df2a575aef",
          "status": "Not Found",
          "code": 404,
          "responseTime": 828,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25e36923-89f0-4f20-9b4e-b28005e55052",
        "cursor": {
          "ref": "e8ef9aec-f9a2-4b62-9dd0-131f4883090c",
          "length": 282,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "ae40e943-3c64-403a-9666-390f8ffb5187"
        },
        "item": {
          "id": "25e36923-89f0-4f20-9b4e-b28005e55052",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "12ad429a-e5c5-4f8e-ae00-1ab8af79bd30",
          "status": "Not Found",
          "code": 404,
          "responseTime": 758,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a96a9c5a-a7a8-4003-afbb-7e6e23e81329",
        "cursor": {
          "ref": "ce63f662-544c-4424-a97a-02e9d119ba52",
          "length": 282,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "7e253675-b37e-4976-a8ce-64b2ebf032b5"
        },
        "item": {
          "id": "a96a9c5a-a7a8-4003-afbb-7e6e23e81329",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "b51e35be-a294-4ba8-9163-05b295276aa5",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 43,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50fa44b4-15f7-4881-8f9e-c92357adde6e",
        "cursor": {
          "ref": "ffe1898c-e52a-4b96-bd89-6f40cde9150e",
          "length": 282,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "3c16ef28-f6c0-4f58-bf18-d6ffad382ab9"
        },
        "item": {
          "id": "50fa44b4-15f7-4881-8f9e-c92357adde6e",
          "name": "identifiers"
        },
        "response": {
          "id": "897913e0-9065-40e3-b8ce-28e11c7e68aa",
          "status": "OK",
          "code": 200,
          "responseTime": 1621,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad3101b6-b556-45ac-a6c1-6c9bbdf03255",
        "cursor": {
          "ref": "fa4065bd-2761-45b6-886b-9defb73c98d7",
          "length": 282,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "4740aab5-1ab1-469e-a5a0-7cc54039246b"
        },
        "item": {
          "id": "ad3101b6-b556-45ac-a6c1-6c9bbdf03255",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "26aafb3d-3e09-4aa8-aedc-15fde5b9b45c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 896,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1d0e266-2ea8-4823-afd6-9f6964aabcd4",
        "cursor": {
          "ref": "916c6d92-756f-452b-b1ae-e4309e1a2a7d",
          "length": 282,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "6a43c44e-5e14-4787-bfd6-0815cec8cda5"
        },
        "item": {
          "id": "b1d0e266-2ea8-4823-afd6-9f6964aabcd4",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "c55c3dba-0122-4e68-a12c-bc271986adde",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 779,
          "responseSize": 500
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d3410e1-c36d-4261-a667-8e92aa3d89e7",
        "cursor": {
          "ref": "b63aad38-965e-4504-b854-7fc999275b1b",
          "length": 282,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "4eab7d9f-a17e-4f03-bb59-a784e0c7598a"
        },
        "item": {
          "id": "1d3410e1-c36d-4261-a667-8e92aa3d89e7",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "d87a7411-8ec0-4c1e-a6ba-6ef7e6f76ff4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 745,
          "responseSize": 508
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3dab919b-49e2-4f90-b8ff-50610309b8ef",
        "cursor": {
          "ref": "cc5df071-b4e8-483d-bd7b-483d56bd1060",
          "length": 282,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "e3a1a8e5-06de-40f5-b4f9-542b064f620c"
        },
        "item": {
          "id": "3dab919b-49e2-4f90-b8ff-50610309b8ef",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "21ab7d75-cf9f-49ed-b399-8389668288fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 763,
          "responseSize": 505
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aebad15d-4da2-4bd0-b17d-2f54d3ac88af",
        "cursor": {
          "ref": "de40e16d-db22-4c7f-9a9a-f3498871e2c6",
          "length": 282,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "11d6896a-2d4a-46da-9c37-d9019a7f0214"
        },
        "item": {
          "id": "aebad15d-4da2-4bd0-b17d-2f54d3ac88af",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "4f10d321-91ee-4f9c-8e7e-0e185ac6f647",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 791,
          "responseSize": 507
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9656eaf2-9892-462b-9abe-127ab74bad04",
        "cursor": {
          "ref": "caf41e89-6ccc-403d-8a6f-b0155b09dbc5",
          "length": 282,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "0125487c-f982-4551-9241-eef0ddfc0540"
        },
        "item": {
          "id": "9656eaf2-9892-462b-9abe-127ab74bad04",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "9969f119-dcc2-406e-9052-49c3fafb6ff9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 781,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3770144b-c643-4b95-a954-da6a0e8768db",
        "cursor": {
          "ref": "8cbaab8c-10b3-4f33-a276-e78f65867e81",
          "length": 282,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "e39530ca-ca8f-4dfd-ae55-dc5bce0b467b"
        },
        "item": {
          "id": "3770144b-c643-4b95-a954-da6a0e8768db",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "dd362a17-8dba-4fa7-9887-dc63d5d9c51c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 780,
          "responseSize": 543
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afa56c06-c46f-43ae-a02d-0aa9383334a1",
        "cursor": {
          "ref": "88209ac6-2784-42c2-afa0-24c8c8e0fad0",
          "length": 282,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "2cf09326-dd6c-484a-8e2f-648eccf2dcc9"
        },
        "item": {
          "id": "afa56c06-c46f-43ae-a02d-0aa9383334a1",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "de0814db-809c-40d9-8d5e-2cd29c7083a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 789,
          "responseSize": 592
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "225125f5-f09f-4efa-9079-68308728a33b",
        "cursor": {
          "ref": "23cba5b2-e9e7-4cb6-8942-35d5892444b5",
          "length": 282,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "c780212d-d6bd-42f0-86bb-cc83a6f88b64"
        },
        "item": {
          "id": "225125f5-f09f-4efa-9079-68308728a33b",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "bd6d1e76-b989-4069-8bd6-08aed94da7df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 770,
          "responseSize": 561
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3a63c59-e393-46c1-ad0b-485d294f360d",
        "cursor": {
          "ref": "15b5d450-25ba-4c30-8a77-3d312f9ec5cb",
          "length": 282,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "3a6c436f-8cc1-43af-ba5c-51c7799bc3b2"
        },
        "item": {
          "id": "f3a63c59-e393-46c1-ad0b-485d294f360d",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "3cee6053-8202-49fc-97c9-c40154e09d6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 698,
          "responseSize": 558
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f004e28-b593-46f3-8828-bda2527391da",
        "cursor": {
          "ref": "c8a6f72d-d105-487e-b36a-c31922561cf7",
          "length": 282,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "852c5832-b61f-40ad-a367-2d69e9f6935b"
        },
        "item": {
          "id": "7f004e28-b593-46f3-8828-bda2527391da",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "a39fd1e4-a593-43c6-a18e-3c863292bfd8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 725,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14e7428c-ca16-41c6-bfc1-82717d3746a6",
        "cursor": {
          "ref": "551eafab-6a14-408b-a408-c4c9aea47402",
          "length": 282,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "d91da03d-177f-4bef-9e6d-d58f47414a4a"
        },
        "item": {
          "id": "14e7428c-ca16-41c6-bfc1-82717d3746a6",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "33484a6c-916e-4444-8c4c-e26a0995e218",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 781,
          "responseSize": 601
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "400f7326-88d1-4f9c-b406-b97bbd6b4bac",
        "cursor": {
          "ref": "db08d76b-c387-470b-9380-4da1e2750e7a",
          "length": 282,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "345ab606-f3b5-4f54-80f1-bd7bac444d4f"
        },
        "item": {
          "id": "400f7326-88d1-4f9c-b406-b97bbd6b4bac",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "6dbce579-0383-40f5-b349-e1c7907689b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 761,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cab793f0-ab3e-462c-8fd8-6c79a7150822",
        "cursor": {
          "ref": "e935f300-97e4-499a-b8bf-cb557da380a4",
          "length": 282,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "a9ed7b90-6654-4737-a41f-c1e19626856b"
        },
        "item": {
          "id": "cab793f0-ab3e-462c-8fd8-6c79a7150822",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "771a8e2c-8191-4cdb-bd70-c2d661f4d749",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 780,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65d98b4f-e745-46dc-a57c-532af2d87ec6",
        "cursor": {
          "ref": "6bc8e95e-5a9e-4eca-a4f4-52ffc984364f",
          "length": 282,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "4a6584e6-b8a4-49f1-8c66-2682c048d827"
        },
        "item": {
          "id": "65d98b4f-e745-46dc-a57c-532af2d87ec6",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "b46d6e77-0d26-4328-901a-ccc891693fc5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 762,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f96618cb-7671-4a9f-9794-9084badd2f4e",
        "cursor": {
          "ref": "7cea529f-8ae8-43fa-be36-bb808c370c2a",
          "length": 282,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "9d321cc9-b065-4ce8-a124-d8ab78a0cf8f"
        },
        "item": {
          "id": "f96618cb-7671-4a9f-9794-9084badd2f4e",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "e898a7e7-dcc1-4941-b5d7-642212fec125",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 749,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc2cc0b7-7792-44a8-be68-abc680746c1d",
        "cursor": {
          "ref": "63e89fce-173f-4013-a259-b0b93c1cdb2d",
          "length": 282,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "badf12f7-2e7c-4d88-9aee-4bdf2b6d7e66"
        },
        "item": {
          "id": "fc2cc0b7-7792-44a8-be68-abc680746c1d",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "f48dcec8-6177-4f6f-b0f8-0be11de04926",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 805,
          "responseSize": 621
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d25ef45-610a-4ed1-a0f0-87150e8a685a",
        "cursor": {
          "ref": "bb822fac-b12f-4c2e-ba2d-f5c8d1d3f93d",
          "length": 282,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "6456ed87-5cf1-4430-b9c5-0cd078c9fed3"
        },
        "item": {
          "id": "6d25ef45-610a-4ed1-a0f0-87150e8a685a",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "1ae003a0-2721-444d-9884-5114edfde2e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 746,
          "responseSize": 549
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0007db04-32b8-4b6b-b5f6-210e80e92c38",
        "cursor": {
          "ref": "4433388c-ca3e-4dc7-b564-3daa0743fa8c",
          "length": 282,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "c6257ada-8e29-468e-9f39-efdfbd8ba8c2"
        },
        "item": {
          "id": "0007db04-32b8-4b6b-b5f6-210e80e92c38",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "ce84fe63-90ff-4563-abf3-6934f89d37a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 788,
          "responseSize": 544
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd1b8421-8384-4c88-adb1-5c92c00884ed",
        "cursor": {
          "ref": "91e1f986-4ee9-468b-9bb7-e6816f5355ab",
          "length": 282,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "f75d8402-567b-4e92-a739-b8484f27a88e"
        },
        "item": {
          "id": "dd1b8421-8384-4c88-adb1-5c92c00884ed",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "9d936aa6-a4ea-40ef-aadf-ec3c5978e974",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 773,
          "responseSize": 541
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a969a9c-caae-40e8-b542-cd3849be17a4",
        "cursor": {
          "ref": "f61e24e8-0626-44b9-a995-47d2d9973319",
          "length": 282,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "95316a34-c781-46e2-9119-cf73b7534b93"
        },
        "item": {
          "id": "5a969a9c-caae-40e8-b542-cd3849be17a4",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "868ba7ae-e38f-46f6-b226-886060247323",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 773,
          "responseSize": 543
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd5a87cf-d356-432d-adf5-24ece5bb10ff",
        "cursor": {
          "ref": "e4eed55e-ed2d-4c8d-8194-376b17c99775",
          "length": 282,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "6b7d7922-dadd-4868-bc59-7a838ae9e74e"
        },
        "item": {
          "id": "fd5a87cf-d356-432d-adf5-24ece5bb10ff",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "3edcf932-0d83-49fa-bbbe-072187e133af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 765,
          "responseSize": 541
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d38aee8-f40e-4f06-9a40-20e5c61389a7",
        "cursor": {
          "ref": "a6ca48ac-381f-4293-b7d8-1cba4b73d154",
          "length": 282,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "db3667b0-462d-490c-b17c-e0252e89c53e"
        },
        "item": {
          "id": "9d38aee8-f40e-4f06-9a40-20e5c61389a7",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "4d92aa3d-9655-40a7-a586-1bdd57d59b6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 733,
          "responseSize": 561
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32820dfb-7d8d-48a5-8b2e-0c710558c3df",
        "cursor": {
          "ref": "40d939d5-53e4-4af5-a1ac-00c7be2ab43b",
          "length": 282,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "d52f9238-f943-461f-978b-04e30d32f59c"
        },
        "item": {
          "id": "32820dfb-7d8d-48a5-8b2e-0c710558c3df",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "c02d17c2-df13-4f59-bdda-9f95e652d319",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 769,
          "responseSize": 563
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39d96e38-f567-47d6-b66e-892115e974fa",
        "cursor": {
          "ref": "d71529dd-ef64-4120-b3db-6a7b359cc536",
          "length": 282,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "d2c54051-32f3-472d-b5c8-7c0834e8c3e6"
        },
        "item": {
          "id": "39d96e38-f567-47d6-b66e-892115e974fa",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "b015b4da-1c18-4f01-a514-9bfefe09b135",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 719,
          "responseSize": 589
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6eb84c24-7244-43bc-a3f9-29eb3a8bdad6",
        "cursor": {
          "ref": "bed5c914-a160-443f-abb6-116f82f9809c",
          "length": 282,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "cbeb28f5-91c0-4ad6-a891-c1bd29042568"
        },
        "item": {
          "id": "6eb84c24-7244-43bc-a3f9-29eb3a8bdad6",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "44c4a5e3-0a8b-4fca-bbaf-ce5ced509c65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 750,
          "responseSize": 579
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b157c430-4f22-47d7-a976-d639a0ef1f64",
        "cursor": {
          "ref": "a7736532-0890-4604-8ebb-076c83066c30",
          "length": 282,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "824ebab1-2747-4010-82ba-dac3bb87f1c8"
        },
        "item": {
          "id": "b157c430-4f22-47d7-a976-d639a0ef1f64",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "0cf67b5f-37fc-4265-9296-333a5ba06ca1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 737,
          "responseSize": 576
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77451179-9c56-4518-baa7-6697f0999ce8",
        "cursor": {
          "ref": "5dea645b-d2ab-443a-b3af-3e80279095e8",
          "length": 282,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "bd57e959-58fc-43af-9cca-9e3627e2ae36"
        },
        "item": {
          "id": "77451179-9c56-4518-baa7-6697f0999ce8",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "281ea4fa-5fba-4626-a6b6-9b081c1676bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 762,
          "responseSize": 578
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bfa2e5e-2581-4315-9b4c-7740fbcae88e",
        "cursor": {
          "ref": "906ac5e8-0b05-4a06-93eb-d8aed01d950a",
          "length": 282,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "74011ed1-143d-4e5d-812c-0a82900fd105"
        },
        "item": {
          "id": "7bfa2e5e-2581-4315-9b4c-7740fbcae88e",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "5af15ae7-ffdb-4cfa-8a2f-f5e464470d39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 757,
          "responseSize": 576
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa95e9fa-f079-4860-9525-916e3454e647",
        "cursor": {
          "ref": "bed8ffb8-b6b8-4ec6-8d12-26a7eed658dd",
          "length": 282,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "38313b10-ff36-48fa-af7e-2d1407f974ef"
        },
        "item": {
          "id": "fa95e9fa-f079-4860-9525-916e3454e647",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "f6e517e8-9372-48fb-8e5b-f8b1cdd15adb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 737,
          "responseSize": 501
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8817c1be-2de8-48ed-bb61-ef75cc95009c",
        "cursor": {
          "ref": "a3fbeac5-0bdc-4207-a7d6-e2b773298276",
          "length": 282,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "ea069719-9e8b-4fc9-9769-300e408a0324"
        },
        "item": {
          "id": "8817c1be-2de8-48ed-bb61-ef75cc95009c",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "9d1ccdb6-9cff-43a7-9461-d7011656bf53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 781,
          "responseSize": 1001
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5eac2c7c-79f6-47e0-a8ed-2de662da0b54",
        "cursor": {
          "ref": "e1550d2a-8739-4f7e-8212-59d62d2efe11",
          "length": 282,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "2ec6596e-a5ac-4075-8c54-df437c637048"
        },
        "item": {
          "id": "5eac2c7c-79f6-47e0-a8ed-2de662da0b54",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "88ea9119-040f-479c-9a90-d5e0c87cbdee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 754,
          "responseSize": 930
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "104c66d0-ca6e-417f-a877-ca429270ee09",
        "cursor": {
          "ref": "0c4316b5-63b2-4a13-bdf0-dc44f28ab9f9",
          "length": 282,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "e3ffbe90-31e5-4f85-a958-4b0316a09743"
        },
        "item": {
          "id": "104c66d0-ca6e-417f-a877-ca429270ee09",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "001fdda5-1467-4b3e-a49d-001422797065",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 763,
          "responseSize": 927
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da4cc6df-7b8b-4d6c-80b9-b7e799b9cb36",
        "cursor": {
          "ref": "3d961bfc-d65b-4882-b993-a89afce13cad",
          "length": 282,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "701cefff-e9a9-4eb2-84c2-af199071c211"
        },
        "item": {
          "id": "da4cc6df-7b8b-4d6c-80b9-b7e799b9cb36",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "da83e33b-1b1c-4e0e-8c56-8b6868936979",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 748,
          "responseSize": 929
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8cee319-e448-4baf-851b-c7dc7ee0192b",
        "cursor": {
          "ref": "13d24e70-6757-42a0-b68e-47805ed9b71a",
          "length": 282,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "55a68f59-1a5a-49de-ad9c-1a574697c0bd"
        },
        "item": {
          "id": "b8cee319-e448-4baf-851b-c7dc7ee0192b",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "ae72e0a0-afe5-4dab-9ce3-85a7eebcbe08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 752,
          "responseSize": 1332
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6638adbb-0d04-4956-af64-d39d247d152f",
        "cursor": {
          "ref": "89f91b76-69a4-45f5-af8a-f782d407b40c",
          "length": 282,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "d7b91e60-a42c-4b2e-b818-e653070d9f37"
        },
        "item": {
          "id": "6638adbb-0d04-4956-af64-d39d247d152f",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "e8490fc4-aa7a-45bf-98f0-0cd85ced524b",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 954,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cff67560-649b-4f75-b856-29fdb4b9ad25",
        "cursor": {
          "ref": "a4b5735a-a64e-4c64-a5f4-99f617cef489",
          "length": 282,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "3739109c-2401-4aae-89f1-0a41288efa04"
        },
        "item": {
          "id": "cff67560-649b-4f75-b856-29fdb4b9ad25",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "75b1487f-922e-48a2-b7c1-9a245bacfa40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 928,
          "responseSize": 960
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2612435-36ff-4dbb-b6ee-fb78667d5e7a",
        "cursor": {
          "ref": "9c8014d3-2648-42f1-90b2-504dc78bb8de",
          "length": 282,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "d79d853b-ddbd-44f9-92ed-3c41b935e68d"
        },
        "item": {
          "id": "e2612435-36ff-4dbb-b6ee-fb78667d5e7a",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "90730b08-f595-460b-9a8f-f63f5d3920a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1864,
          "responseSize": 1340
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f45092d-23c1-40c8-83cd-93105e625bc2",
        "cursor": {
          "ref": "f03435be-53b5-4971-a221-245e80d1f44c",
          "length": 282,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "43e9dee2-379b-427c-8cc8-d79695ddf853"
        },
        "item": {
          "id": "8f45092d-23c1-40c8-83cd-93105e625bc2",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "ed45916c-c946-477f-b090-ea3979926d98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 890,
          "responseSize": 1269
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e710744-8d83-4032-af6c-2c9753fb5c61",
        "cursor": {
          "ref": "c902aff1-a488-4aae-9667-2511ca4dce1b",
          "length": 282,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "7c221f97-a9b0-4071-bcb1-68e41e90ee47"
        },
        "item": {
          "id": "9e710744-8d83-4032-af6c-2c9753fb5c61",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "f0c30b74-bc6b-4db6-82ed-02284df0bf61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 808,
          "responseSize": 1266
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "547dcf66-2488-4b65-a957-2a9837855313",
        "cursor": {
          "ref": "9ec0fd03-09e7-4096-9ebe-e3d00e69c30a",
          "length": 282,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "6e6be205-110c-4ce9-8bf3-c525b1f5d5ca"
        },
        "item": {
          "id": "547dcf66-2488-4b65-a957-2a9837855313",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "205b05a6-b995-4b71-ad7f-a2a73a5f12a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 783,
          "responseSize": 1268
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed321c46-9e58-4293-9c4b-d9c7a7a07c6c",
        "cursor": {
          "ref": "7ea41839-1d58-41ac-b920-8e667bc04205",
          "length": 282,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "7487d881-d2f4-4334-b4a0-687120e44cc6"
        },
        "item": {
          "id": "ed321c46-9e58-4293-9c4b-d9c7a7a07c6c",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "2761dd65-b5cd-4c4b-9a89-d168cd55592c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 785,
          "responseSize": 1671
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f938937c-a906-4a93-b836-f3694f2de33d",
        "cursor": {
          "ref": "ee768c73-6b36-4a93-b381-e736b1b9e5ce",
          "length": 282,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "8a1cc40f-7e08-4368-8d5d-5b0e8c11ab9b"
        },
        "item": {
          "id": "f938937c-a906-4a93-b836-f3694f2de33d",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "a191b7c9-9457-4705-880c-b0d12dc87cba",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 934,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4201e466-688b-4b7b-9ee3-ff62f6abf9a4",
        "cursor": {
          "ref": "67951de6-3108-4d38-9057-65c3744c6d4f",
          "length": 282,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "845423ed-628e-4d31-b0e0-d26a9f942f91"
        },
        "item": {
          "id": "4201e466-688b-4b7b-9ee3-ff62f6abf9a4",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "934d340d-5228-40e7-b873-9ec28df7b1cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 749,
          "responseSize": 559
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f79e97b-f5d1-4637-a9fc-14c678197b2e",
        "cursor": {
          "ref": "a80e60a3-0568-44bd-b98f-3b2d8dfbb973",
          "length": 282,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "b1718c0e-1a38-473f-8831-e5fe082f1317"
        },
        "item": {
          "id": "7f79e97b-f5d1-4637-a9fc-14c678197b2e",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "9e4eac32-633e-4a80-825d-0f2b133ac506",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 770,
          "responseSize": 583
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "706e395b-e96c-4fb7-95d5-9a64804cae7c",
        "cursor": {
          "ref": "b3a1fb29-414b-4ae8-aa98-c018010501a0",
          "length": 282,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "d486d2b2-37fe-4cd1-ab30-5ad227edceca"
        },
        "item": {
          "id": "706e395b-e96c-4fb7-95d5-9a64804cae7c",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "987ec5f4-78b6-4de0-99fd-52f0a3ff516b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 763,
          "responseSize": 564
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d310ce6-808f-48a1-9a24-8721e3b4db90",
        "cursor": {
          "ref": "6fbf3ca9-b3e6-4944-9f75-59d16b8f360e",
          "length": 282,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "b9cf0008-ad09-478d-a41e-52dbc0f7212a"
        },
        "item": {
          "id": "5d310ce6-808f-48a1-9a24-8721e3b4db90",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "ccb05cf5-9a7a-4423-b9f4-477f942090a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 749,
          "responseSize": 561
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9afad32c-e423-44ac-9332-19c9450f0f55",
        "cursor": {
          "ref": "75f043ef-9f02-419b-baed-9971620563c8",
          "length": 282,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "7b87cd41-e081-4cc8-be99-a3a6b0547a30"
        },
        "item": {
          "id": "9afad32c-e423-44ac-9332-19c9450f0f55",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "a113a249-0277-40ca-a47e-dc3c16f58689",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 775,
          "responseSize": 563
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44e48245-b476-4183-ad55-13ad251788ef",
        "cursor": {
          "ref": "0a86f252-37ef-4d9b-acb6-a76cd7881b63",
          "length": 282,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "d79b1ee7-74e3-4169-9aa4-12d5b117051a"
        },
        "item": {
          "id": "44e48245-b476-4183-ad55-13ad251788ef",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "e5c2b214-f73e-4d33-95f6-df83497a9f97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 748,
          "responseSize": 561
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49c3a9d2-f4d5-4ffd-aa09-55ab8a3b9c65",
        "cursor": {
          "ref": "967bff3b-f146-43df-9e74-8f4f9ec94260",
          "length": 282,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "09b0a907-bf22-464c-baf3-95494ae70b59"
        },
        "item": {
          "id": "49c3a9d2-f4d5-4ffd-aa09-55ab8a3b9c65",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "1b80d10f-9e6f-4ad3-8ce4-a00c2ba426b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 744,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e0b6a03-b0d5-4326-b289-d2b81458ce5b",
        "cursor": {
          "ref": "6cf3e3ef-930a-4869-9145-83399da97178",
          "length": 282,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "ad3b86c6-02aa-4e5a-80aa-1e9f37356902"
        },
        "item": {
          "id": "8e0b6a03-b0d5-4326-b289-d2b81458ce5b",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "ca9df6a9-d6e2-4414-a763-527abda7c472",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 751,
          "responseSize": 584
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afbbc104-5ea9-4e18-8ae5-482ad4e9b2a1",
        "cursor": {
          "ref": "09301c65-7aad-4557-ad56-119bc10accd9",
          "length": 282,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "5edab423-4abe-4e9d-ba6b-d17b17f80452"
        },
        "item": {
          "id": "afbbc104-5ea9-4e18-8ae5-482ad4e9b2a1",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "9e101cd3-1eb1-4670-97a7-2362c4d07683",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 759,
          "responseSize": 1055
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e04c65f9-2033-4d01-b886-72beba673276",
        "cursor": {
          "ref": "352a96ef-fbc6-4b5e-9fd8-cdb40bf08765",
          "length": 282,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "072cbd26-f0ba-4d85-8a3b-17628bc5cd3b"
        },
        "item": {
          "id": "e04c65f9-2033-4d01-b886-72beba673276",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "765f9766-fe00-4cbf-898d-de627a7b4b76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 744,
          "responseSize": 864
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7337a92-3ae6-489b-9e6c-ee7575fdf301",
        "cursor": {
          "ref": "b580ebc8-4e24-43c7-9f4d-5781b7343518",
          "length": 282,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "e158d6a1-dd48-4dfd-9ad5-bf52f2968fc8"
        },
        "item": {
          "id": "e7337a92-3ae6-489b-9e6c-ee7575fdf301",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "cb5f6bbe-e540-4161-8259-7edea8116aad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 786,
          "responseSize": 861
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1c2e3ca-1337-4c06-b220-b32494bb0605",
        "cursor": {
          "ref": "00f71d34-f0cb-42f7-8570-024a083d0caf",
          "length": 282,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "12999dd7-8221-4489-9b6f-47d6f6d99a3e"
        },
        "item": {
          "id": "a1c2e3ca-1337-4c06-b220-b32494bb0605",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "41c38fe9-8741-43c3-912b-3f82ea23a008",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 808,
          "responseSize": 863
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eec2eb61-d751-4ef5-a12b-c85bfbb1ff54",
        "cursor": {
          "ref": "690bf474-f4e2-43ea-9c36-d93a16472278",
          "length": 282,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "9006016c-f6bd-48d9-a3f0-31bbcd1138a5"
        },
        "item": {
          "id": "eec2eb61-d751-4ef5-a12b-c85bfbb1ff54",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "89fafbc2-d623-4a00-b0eb-0926febb6560",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 771,
          "responseSize": 876
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b16e9ee0-0604-4bd9-b57e-d04b85c23fae",
        "cursor": {
          "ref": "39417fe1-da95-4abe-aa4c-259cb8945fe7",
          "length": 282,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "5bed73b8-a66d-4c2d-92b3-63ea27a6c9e5"
        },
        "item": {
          "id": "b16e9ee0-0604-4bd9-b57e-d04b85c23fae",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "a0ca6d05-17a4-4368-81fa-f51bfbee1701",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 766,
          "responseSize": 1370
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "775a9840-2a66-4492-8084-5bccf1874e95",
        "cursor": {
          "ref": "32877cac-659a-43ce-9d6b-3a1cf6837b35",
          "length": 282,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "4a4adcfd-522c-49f6-b4f5-97ef516ff0bb"
        },
        "item": {
          "id": "775a9840-2a66-4492-8084-5bccf1874e95",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "7cf4ebfc-6758-4a0e-8612-76733c2f4650",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 765,
          "responseSize": 1356
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bac702e-6226-4680-b926-d8002209281b",
        "cursor": {
          "ref": "79f9ba79-1082-47e1-a6cc-75665d37b70e",
          "length": 282,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "94936535-ee4b-4cf1-831f-96ac6db76c31"
        },
        "item": {
          "id": "5bac702e-6226-4680-b926-d8002209281b",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "f1fb9f49-5322-4a53-9f5a-764622d98a99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 792,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c832646-b3d3-417e-9d14-ec48fc95ad76",
        "cursor": {
          "ref": "ccdb753b-297b-4100-add7-caaca89e4cb2",
          "length": 282,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "7bce3723-4d05-4f3e-885b-71d4f7afb316"
        },
        "item": {
          "id": "6c832646-b3d3-417e-9d14-ec48fc95ad76",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "2245ddd7-8221-4c79-905e-7e01906c37a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 760,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "343de4c8-497f-48b8-b198-88bffbabb602",
        "cursor": {
          "ref": "1637ac0d-1901-4745-a770-d7b07fa2414a",
          "length": 282,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "713e8209-b68b-4bd9-9b2d-5d73da99ee78"
        },
        "item": {
          "id": "343de4c8-497f-48b8-b198-88bffbabb602",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "edfdcb67-fb96-4077-960e-3953b9bd36e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 786,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1477b74-d2e8-43be-b0ec-da95370e2543",
        "cursor": {
          "ref": "ba2b5989-8654-4e05-b987-40552564274b",
          "length": 282,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "d6a6490c-32bc-4045-8469-93238d6ef393"
        },
        "item": {
          "id": "c1477b74-d2e8-43be-b0ec-da95370e2543",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "7d000dfe-9ec9-4753-8398-4d34c37f8801",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 786,
          "responseSize": 534
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fc7208e-c281-49ee-99fa-a0c81507a017",
        "cursor": {
          "ref": "6bee0b65-9d32-42c1-a9b0-4a82881e5ca5",
          "length": 282,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "f8525a91-05e8-4548-9841-4fababa87d25"
        },
        "item": {
          "id": "4fc7208e-c281-49ee-99fa-a0c81507a017",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "6dd477fe-d5d1-4d1a-89c8-9733c4c635cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 786,
          "responseSize": 512
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b45bbfa-e3a4-403c-a8ad-4044dc7779dc",
        "cursor": {
          "ref": "85e2f358-dd41-434f-9827-b86292284c04",
          "length": 282,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "b9d66a25-6258-4b9b-ada9-6221ebfdd318"
        },
        "item": {
          "id": "3b45bbfa-e3a4-403c-a8ad-4044dc7779dc",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "9e9054e5-8749-47c7-b929-3b6cebb5d61b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 766,
          "responseSize": 515
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "848c8f4c-10db-4c72-a5c8-66aa85640c32",
        "cursor": {
          "ref": "f9c60476-eaf1-4831-a478-c21406da1e65",
          "length": 282,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "b69fcf96-0d40-4f33-91ff-052fee89ca89"
        },
        "item": {
          "id": "848c8f4c-10db-4c72-a5c8-66aa85640c32",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "5ff36986-93f7-4ccc-8fce-93434cdf36c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 741,
          "responseSize": 512
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b08b596c-e21e-44c9-9e3b-b0c0a1e86613",
        "cursor": {
          "ref": "7060011e-f354-40cf-84f5-c2dccde91d27",
          "length": 282,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "0dec06bf-e50a-455c-9f99-c68060be9e6b"
        },
        "item": {
          "id": "b08b596c-e21e-44c9-9e3b-b0c0a1e86613",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "779cf4bd-2970-4101-afeb-787993390347",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 754,
          "responseSize": 514
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fb0008e-420e-4119-a2d3-000b180b3536",
        "cursor": {
          "ref": "f3610d1d-badb-4b3e-a86a-30759a7b66af",
          "length": 282,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "ba669d79-d54a-41a2-b7d5-a30df71b345a"
        },
        "item": {
          "id": "7fb0008e-420e-4119-a2d3-000b180b3536",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "62810daf-07d6-4881-90d0-2e4f2f8ed8bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 773,
          "responseSize": 512
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d1cb77d-d312-44e0-8de9-7f3eb3ec9518",
        "cursor": {
          "ref": "cbdebbdc-411f-4c40-b656-bf7026b72196",
          "length": 282,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "5f2f0828-2805-4945-914f-cc219fb81b91"
        },
        "item": {
          "id": "5d1cb77d-d312-44e0-8de9-7f3eb3ec9518",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "e093779a-ab98-4bac-af26-eb328a73c384",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 753,
          "responseSize": 549
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90205d90-650c-4f12-adb1-62aebed302a8",
        "cursor": {
          "ref": "c85b502b-8b92-41e4-bce0-64e56f24abac",
          "length": 282,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "aad4a79b-f698-419d-92bf-9fe2aa51b54d"
        },
        "item": {
          "id": "90205d90-650c-4f12-adb1-62aebed302a8",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "dbde2850-c5ac-4406-9dba-9e2073d9006d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 782,
          "responseSize": 791
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a3875e0-d756-4a4a-b45c-988951ab4a48",
        "cursor": {
          "ref": "c07caced-2177-415a-8c67-a50cc2f1a971",
          "length": 282,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "c1f5865c-4aba-40c4-af68-74c8d2ab67a0"
        },
        "item": {
          "id": "2a3875e0-d756-4a4a-b45c-988951ab4a48",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "7edc3768-695f-4f22-8a13-9c41868ca8a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 790,
          "responseSize": 772
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79b5a123-cdbf-4fc0-b0b4-a57d3ecf0c14",
        "cursor": {
          "ref": "81743a6f-2ff3-4f5d-9100-e542a27dc39a",
          "length": 282,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "1cf90eaa-f5f6-49fa-84bc-88eddcbd679f"
        },
        "item": {
          "id": "79b5a123-cdbf-4fc0-b0b4-a57d3ecf0c14",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "58e4d035-a8c0-4be8-bc51-c659ed5d5690",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 774,
          "responseSize": 769
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c2c9294-8cb4-42b4-b8c7-bee20c0126ba",
        "cursor": {
          "ref": "353b50b1-9b56-4c2c-986a-c18f8d2950f9",
          "length": 282,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "88e17f96-30d7-4653-8afe-905c1005e76d"
        },
        "item": {
          "id": "2c2c9294-8cb4-42b4-b8c7-bee20c0126ba",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "fb082a3e-9ca4-47ab-8cb8-9f1764477b37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 769,
          "responseSize": 771
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8efc43e-c4e9-4867-9bf1-cba2bb98e631",
        "cursor": {
          "ref": "a13479c0-5511-4b1b-8e16-6b35795d5453",
          "length": 282,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "3695500b-e15b-4fbf-977b-9243f70d89c1"
        },
        "item": {
          "id": "e8efc43e-c4e9-4867-9bf1-cba2bb98e631",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "d6bc9374-fb41-43a2-bd03-ad2a2f829e85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 785,
          "responseSize": 769
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afc67bbd-5a40-4c43-8554-dd046537a0c3",
        "cursor": {
          "ref": "396e535b-658c-4697-9700-197fe94d9226",
          "length": 282,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "02a52f50-a2d2-440b-b6d5-670aacd9e3d8"
        },
        "item": {
          "id": "afc67bbd-5a40-4c43-8554-dd046537a0c3",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "c94254ec-ede9-454d-86a0-7af03833a3d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 774,
          "responseSize": 640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba00b3bd-79ed-4d2f-876a-bc1ef5933076",
        "cursor": {
          "ref": "54f61baf-f77c-4ced-8462-bd29a00d5e40",
          "length": 282,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "cf27ab38-32be-46fe-861f-efcd019d7b49"
        },
        "item": {
          "id": "ba00b3bd-79ed-4d2f-876a-bc1ef5933076",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "019fceb1-4306-43d8-9e8b-7ea7026c56cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 800,
          "responseSize": 608
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec4dda8f-ce77-4c05-a01d-a43f008a38ed",
        "cursor": {
          "ref": "8726b1e1-21fe-4c30-b591-d2c639108dbf",
          "length": 282,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "cebd9331-341d-4c57-aa1a-b0c61da066c5"
        },
        "item": {
          "id": "ec4dda8f-ce77-4c05-a01d-a43f008a38ed",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "0c6da114-f807-4eab-a81d-e2cca910dc7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 766,
          "responseSize": 589
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a43bb6c9-49e2-42df-b233-ab491b4b180c",
        "cursor": {
          "ref": "f0b2a536-1b98-47a8-8fa3-86e73d0d9b78",
          "length": 282,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "e3907cf0-1c26-4efb-af0a-827529ae629a"
        },
        "item": {
          "id": "a43bb6c9-49e2-42df-b233-ab491b4b180c",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "4bb9b953-d66c-44a9-b01b-6dc2293d19ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 766,
          "responseSize": 586
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21312c10-ab51-4f77-9eb5-30f3da84e578",
        "cursor": {
          "ref": "49d1aa0f-8767-4c9d-a2b1-60482a21ffde",
          "length": 282,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "d639b417-3cf6-4b32-ba59-b191989738e8"
        },
        "item": {
          "id": "21312c10-ab51-4f77-9eb5-30f3da84e578",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "a95dccad-8fe9-415e-b512-186f8e735acc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 791,
          "responseSize": 588
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "627f9030-c61f-4c3d-9eab-edf50d3123c7",
        "cursor": {
          "ref": "259cdc43-d770-4ca9-bae5-2e6fdf08c554",
          "length": 282,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "4168fee3-3291-4478-b813-b932e68f0c1d"
        },
        "item": {
          "id": "627f9030-c61f-4c3d-9eab-edf50d3123c7",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "a657ee5b-a616-4944-b896-7a1a2ada92e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 816,
          "responseSize": 586
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93d38c35-483d-4565-b0bd-27415029e363",
        "cursor": {
          "ref": "3f31a704-941a-4944-9a90-66fdf20cd650",
          "length": 282,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "535df067-c83b-4a1b-ad0b-0438c1b9029c"
        },
        "item": {
          "id": "93d38c35-483d-4565-b0bd-27415029e363",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "834087ba-2692-4a73-ba74-816fde1bf6cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 756,
          "responseSize": 639
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11cf9a63-1fbe-460d-99aa-88d9e57d82f6",
        "cursor": {
          "ref": "9806dc6a-b566-4101-b209-2fe4fe462eb9",
          "length": 282,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "43e6c9c3-cb74-4689-9edb-76cc63075d50"
        },
        "item": {
          "id": "11cf9a63-1fbe-460d-99aa-88d9e57d82f6",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "bbdaa9db-78af-4e80-b83c-a134d45d18a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 765,
          "responseSize": 629
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "717d76dc-fd50-487b-8c95-3cc843641d4b",
        "cursor": {
          "ref": "ab4fcd74-ecf2-4207-8b42-229595d8d65b",
          "length": 282,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "9ba6715d-5c72-4b00-add6-a49d1cecc3c0"
        },
        "item": {
          "id": "717d76dc-fd50-487b-8c95-3cc843641d4b",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "aafddd73-77fd-4d45-929c-74c8acc34495",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 764,
          "responseSize": 611
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10522f86-676c-47dd-9243-113dbcadd44b",
        "cursor": {
          "ref": "fbf3d15a-be56-4e38-83ab-5b99841ca11d",
          "length": 282,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "3f468f30-04cb-49a8-a5d7-930a683a226a"
        },
        "item": {
          "id": "10522f86-676c-47dd-9243-113dbcadd44b",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "67aac032-6870-4479-965c-37b722a180b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 770,
          "responseSize": 608
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a30d136-3cac-42da-a154-8b563252c362",
        "cursor": {
          "ref": "6c10b321-a5d3-42a7-8311-630f1a0c80f4",
          "length": 282,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "490bbd79-1cf8-4a3e-98f3-904c48b1dee7"
        },
        "item": {
          "id": "9a30d136-3cac-42da-a154-8b563252c362",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "d93c2f43-19ff-4e14-acd9-819a0c944f47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 791,
          "responseSize": 610
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ce65f74-5474-43ab-8adb-57444f19a9a7",
        "cursor": {
          "ref": "24a51a5c-ac4d-46fe-89f1-d0ad7a812405",
          "length": 282,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "aaff880a-2f27-43c3-851a-ec3dcbb52dcc"
        },
        "item": {
          "id": "9ce65f74-5474-43ab-8adb-57444f19a9a7",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "687e4515-99f2-4c3b-b415-e5b34520c813",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 775,
          "responseSize": 627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ea3f870-1f15-4a43-9023-29be4ef211f9",
        "cursor": {
          "ref": "d557f8ee-df9d-43a7-b530-67efb75cbc63",
          "length": 282,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "a81477a1-b710-478c-8ed3-5151b5680650"
        },
        "item": {
          "id": "9ea3f870-1f15-4a43-9023-29be4ef211f9",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "a89bcab8-5448-4254-87d6-e5dc58f85aec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 773,
          "responseSize": 645
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "886dce4b-cfd4-4eda-b9c1-be62a68431e2",
        "cursor": {
          "ref": "88da7c47-0d0a-4a53-98b0-29bc363ce9ef",
          "length": 282,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "1b114578-578c-4405-ac44-fad80e29d597"
        },
        "item": {
          "id": "886dce4b-cfd4-4eda-b9c1-be62a68431e2",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "936e59de-ee68-41b1-b22e-1f7c1b1e4472",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 782,
          "responseSize": 903
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17984316-babb-4bc9-998d-77842107e4b8",
        "cursor": {
          "ref": "248d2eae-c83b-411c-b325-798119fd48d7",
          "length": 282,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "18a3b189-1cba-42ea-9ce9-1b89c64c6062"
        },
        "item": {
          "id": "17984316-babb-4bc9-998d-77842107e4b8",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "a8f64dbe-e365-470e-b98d-5f2aa2fd3058",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 786,
          "responseSize": 885
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9f41fe5-0f42-4885-8a39-9d9591effc74",
        "cursor": {
          "ref": "3929d79f-ce7e-4939-8637-29d80d42e5a9",
          "length": 282,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "5b07f597-d424-4b43-a363-787eca303313"
        },
        "item": {
          "id": "d9f41fe5-0f42-4885-8a39-9d9591effc74",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "594ff906-d71f-4dfa-b1ad-9ccbfa26a0ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 783,
          "responseSize": 882
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b527add6-9e48-466d-93e4-98ae144f6b0d",
        "cursor": {
          "ref": "96eb60f8-0477-40ca-b12b-707c019d3832",
          "length": 282,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "573224de-82b9-4c42-b9ba-f9e67a361bc7"
        },
        "item": {
          "id": "b527add6-9e48-466d-93e4-98ae144f6b0d",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "71e3a8d2-6a64-4e47-b836-9a2844107934",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 776,
          "responseSize": 884
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8034ef75-ff04-4864-9ffa-6e922859d387",
        "cursor": {
          "ref": "a98d23e9-c241-4f13-beb3-c8c298571df0",
          "length": 282,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "3d7dd2c0-b9ed-44b4-acac-39914259f400"
        },
        "item": {
          "id": "8034ef75-ff04-4864-9ffa-6e922859d387",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "08f22789-977c-414b-a623-456c8a0e51e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 767,
          "responseSize": 882
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f72e28e-c1b7-4328-95e0-ff46d90cf92d",
        "cursor": {
          "ref": "992cefcb-6a9e-44b3-8dc2-9844750e5863",
          "length": 282,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "9935b1c9-63f6-49fe-beb1-cd96eb0764b1"
        },
        "item": {
          "id": "4f72e28e-c1b7-4328-95e0-ff46d90cf92d",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "b503823e-a136-44a8-a56a-e62ce844d518",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 767,
          "responseSize": 708
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c11808c1-26a4-4db3-80dc-ea6d5c62676e",
        "cursor": {
          "ref": "0d365071-6c23-46a9-a3f0-fa358e9e5958",
          "length": 282,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "d879b8bb-1aa4-44e5-9952-927e4b48e370"
        },
        "item": {
          "id": "c11808c1-26a4-4db3-80dc-ea6d5c62676e",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "cd71784a-2f0c-491a-9aee-3555fd72575a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 42,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73169541-00d0-4580-8c3a-4632e0e948e1",
        "cursor": {
          "ref": "ca24d892-fb0b-42c1-af95-1226e38cb88b",
          "length": 282,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "8d76fdb6-8883-43ff-9388-fdb59249c1f7"
        },
        "item": {
          "id": "73169541-00d0-4580-8c3a-4632e0e948e1",
          "name": "credentials_issue"
        },
        "response": {
          "id": "a37e4782-7a3e-40d8-a7a5-cbad668db188",
          "status": "Created",
          "code": 201,
          "responseTime": 6878,
          "responseSize": 696
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfe14408-1696-4542-82c7-a1d2d2fa6628",
        "cursor": {
          "ref": "d419c05b-8a67-48e5-ae9a-b87278383ef1",
          "length": 282,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "2edda495-f061-4a47-b955-3b0027de1b23"
        },
        "item": {
          "id": "cfe14408-1696-4542-82c7-a1d2d2fa6628",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "fb3eec5c-60fb-46e3-8a51-2f824576da9c",
          "status": "Created",
          "code": 201,
          "responseTime": 7228,
          "responseSize": 749
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9798092-0e93-4d75-949e-65834cf03b44",
        "cursor": {
          "ref": "0ed2dcae-9aa7-44ab-8161-2066e45dd9eb",
          "length": 282,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "0bba909f-7d83-44be-8a6d-d85f207deff9"
        },
        "item": {
          "id": "f9798092-0e93-4d75-949e-65834cf03b44",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "04735996-422f-47ff-8fe6-a1fc4e87ea43",
          "status": "Created",
          "code": 201,
          "responseTime": 6528,
          "responseSize": 703
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d60d7fa-4a33-42b7-b60e-036f47e9a082",
        "cursor": {
          "ref": "e84fc36e-3be6-4e58-8f2d-24a254db7f61",
          "length": 282,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "94a30672-b3c9-4008-b244-c7e824512550"
        },
        "item": {
          "id": "0d60d7fa-4a33-42b7-b60e-036f47e9a082",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "df4216dd-c94b-4cc5-bf13-496f1f5e96e5",
          "status": "Created",
          "code": 201,
          "responseTime": 6687,
          "responseSize": 718
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "6bc470ab-fee3-476c-b47a-f404d0d35af1",
        "cursor": {
          "ref": "ba89d845-f1a5-4bda-b94d-f193f7929b01",
          "length": 282,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "22cf3dbb-4e63-4bdf-9d12-d24f334cce63"
        },
        "item": {
          "id": "6bc470ab-fee3-476c-b47a-f404d0d35af1",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "01582562-1d3a-42db-b493-7a39d9ad3256",
          "status": "Created",
          "code": 201,
          "responseTime": 6561,
          "responseSize": 696
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "07506beb-b1aa-4f17-9030-d8191cd89f6d",
        "cursor": {
          "ref": "fb981161-e397-45e6-bc7b-6d4480ad9904",
          "length": 282,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "21c7aee1-540b-471b-8ad8-05dae748ee6b"
        },
        "item": {
          "id": "07506beb-b1aa-4f17-9030-d8191cd89f6d",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "c939476a-bfe5-4816-ba5f-251390c57c22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 771,
          "responseSize": 714
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          }
        ]
      },
      {
        "id": "c42e4fa9-5c00-4011-8142-823543f5a152",
        "cursor": {
          "ref": "aa3a0774-b7d7-491e-a26c-c7c6c6cb11fd",
          "length": 282,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "1027d62e-14c1-489d-92ad-4d874e6de261"
        },
        "item": {
          "id": "c42e4fa9-5c00-4011-8142-823543f5a152",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "3d9b7222-c681-491b-a30f-e8a848d3561c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 761,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0af9ce4-65ff-411e-ade7-290087b27a37",
        "cursor": {
          "ref": "0461bb80-7891-4b50-8201-8e261e57f19b",
          "length": 282,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "31ad06da-111d-4c18-89c3-9f8cc23fab75"
        },
        "item": {
          "id": "d0af9ce4-65ff-411e-ade7-290087b27a37",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "5aa3b099-915f-4f53-8be3-08bdddd52367",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 726,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8934c6e4-8829-42c8-aa50-d3dfded5a4f5",
        "cursor": {
          "ref": "21dd4bec-ee91-49d3-8000-3a16238f8b84",
          "length": 282,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "49020eb9-3a12-4665-bfda-e7adf2c4def6"
        },
        "item": {
          "id": "8934c6e4-8829-42c8-aa50-d3dfded5a4f5",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "78048774-c94c-44e7-81a8-fb52c6a6587f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 784,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9484fac1-ab2c-4fad-94fc-db8b6f33d238",
        "cursor": {
          "ref": "69f5b2a5-de21-4293-b5d9-30efa871548b",
          "length": 282,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "9a3fbcb6-922a-4eab-816c-27d8e6643108"
        },
        "item": {
          "id": "9484fac1-ab2c-4fad-94fc-db8b6f33d238",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "981735a3-b443-45fb-9745-44116b305dec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 796,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bbf35ae-454f-479e-b668-5fc95c304a71",
        "cursor": {
          "ref": "6221b422-224e-49d5-8c43-6a37039851d1",
          "length": 282,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "97664791-7b76-4bd0-ab2a-6f6357d44b4e"
        },
        "item": {
          "id": "5bbf35ae-454f-479e-b668-5fc95c304a71",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "02e44fe6-3ff0-48bf-9125-146948ba4859",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 755,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79d109d2-c165-4e1c-bcbf-1178e8f0da9c",
        "cursor": {
          "ref": "2ecd9302-8a04-4b7c-a0ff-841512aaad0a",
          "length": 282,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "58361240-4532-4750-b886-e85b3b9ba016"
        },
        "item": {
          "id": "79d109d2-c165-4e1c-bcbf-1178e8f0da9c",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "eada43bf-9889-4ad6-8aa6-607bf6fb5579",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 794,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc5c8573-271f-41b1-a680-2917cb23f062",
        "cursor": {
          "ref": "79965905-a903-4397-9fbb-a9820b873220",
          "length": 282,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "de8f89f7-d6c4-425a-9a08-88abf4597371"
        },
        "item": {
          "id": "cc5c8573-271f-41b1-a680-2917cb23f062",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "e21daa62-f7cf-4c23-9044-8b20ae9810a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 768,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89a1bf09-4149-459a-be44-385b80ee2286",
        "cursor": {
          "ref": "9425d390-b501-401e-b24b-eff7a6a9ebcf",
          "length": 282,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "9e3bc16a-917b-4a4c-a5df-b3d6c867adbf"
        },
        "item": {
          "id": "89a1bf09-4149-459a-be44-385b80ee2286",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "e7b74c0c-026e-415f-9e2b-6f7474abe762",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 777,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "953b3ee7-5b2d-4cb9-bfbc-66b8f46b7bda",
        "cursor": {
          "ref": "fd038870-dad9-4564-8022-007c01bad84c",
          "length": 282,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "bb375fec-4156-433d-b9c9-57dcf3125e4d"
        },
        "item": {
          "id": "953b3ee7-5b2d-4cb9-bfbc-66b8f46b7bda",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "ee6c21b1-2b33-4815-b4fd-4163357648d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 789,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebe44965-4087-4319-a718-d37fe0b65449",
        "cursor": {
          "ref": "3cd1ca58-abbb-4c28-8f6b-f7e5ece8e0d9",
          "length": 282,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "0cd20bba-6912-4087-bdb4-f995e946ee9d"
        },
        "item": {
          "id": "ebe44965-4087-4319-a718-d37fe0b65449",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "128247d6-4db2-4d55-835e-31681327b775",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 787,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd63d07d-b593-4b29-af33-b3383d73df02",
        "cursor": {
          "ref": "b01f23f6-b3dc-4b5a-a235-2219fab0add6",
          "length": 282,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "d74f3faf-97bd-4789-9ee1-9742c06fea9b"
        },
        "item": {
          "id": "fd63d07d-b593-4b29-af33-b3383d73df02",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "d9120eda-7c63-495e-9c2d-ac385f12bd5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 770,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fef225a3-880d-4d3e-bf71-c86cae583207",
        "cursor": {
          "ref": "2917ca73-4e3f-4f57-839a-b45bdd1fae43",
          "length": 282,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "a6a80e15-bd9e-40aa-bc9c-67c1ed7bd3ca"
        },
        "item": {
          "id": "fef225a3-880d-4d3e-bf71-c86cae583207",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "48a473f8-bf64-4b6d-a94d-3e00bf76470d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 792,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76b0758f-760c-4600-ac48-27bd11098fd2",
        "cursor": {
          "ref": "2fde1ebb-4ca6-472a-b7ec-80c146dbb47d",
          "length": 282,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "34c71460-70d2-45c2-9480-f823d412c018"
        },
        "item": {
          "id": "76b0758f-760c-4600-ac48-27bd11098fd2",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "c15294ce-36d9-40a7-a42a-8199fd19e869",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 760,
          "responseSize": 531
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bc538c4-c25e-462f-afc7-e0e1bbc58b3e",
        "cursor": {
          "ref": "0b93884f-7fc5-4a79-952c-0a6a6d53c443",
          "length": 282,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "b960c44b-3ebf-447b-b2f9-5d584902d639"
        },
        "item": {
          "id": "9bc538c4-c25e-462f-afc7-e0e1bbc58b3e",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "158c67b1-29e8-49c0-9005-3255112665ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 776,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "526d0997-4f9b-4b69-a778-f1ec8531d7f0",
        "cursor": {
          "ref": "23df8ab8-60b2-412a-b33f-b054ebab78b8",
          "length": 282,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "c3e63959-dbc6-4c3e-8d23-9341e772d5f1"
        },
        "item": {
          "id": "526d0997-4f9b-4b69-a778-f1ec8531d7f0",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "6faf8fab-3b39-4e07-9083-501fe3d7653c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 788,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c8c5b22-c91b-4d7a-a5d5-43c4bc815004",
        "cursor": {
          "ref": "95520b2f-82a3-4ef8-8974-38290bb6c25f",
          "length": 282,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "6914036d-a3cf-49f8-9040-9770094d59dd"
        },
        "item": {
          "id": "8c8c5b22-c91b-4d7a-a5d5-43c4bc815004",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "2f66cea7-8bfb-4165-8351-eebd0c45b8af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 795,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b3fc830-483a-4062-be26-d9f5843afcdf",
        "cursor": {
          "ref": "4cf3b22a-95bb-4cfa-af30-5f967863db3c",
          "length": 282,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "dc5e0a30-44ab-4305-be23-822816b5c556"
        },
        "item": {
          "id": "5b3fc830-483a-4062-be26-d9f5843afcdf",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "e0e6309c-c3f5-40ba-9bbc-5def3c78ee3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 784,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c77945d5-8cd6-4fbb-a7c7-50ac41ff3f4b",
        "cursor": {
          "ref": "33c11b02-e73a-4c71-a591-c8cf26b69050",
          "length": 282,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "9fec001c-6d76-4e55-9144-9ab629ba60c8"
        },
        "item": {
          "id": "c77945d5-8cd6-4fbb-a7c7-50ac41ff3f4b",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "124d8e2d-3760-44a4-81d8-6f2e6346ddc6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 792,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e45db043-70ef-4733-b4a4-7fa55e9fc72f",
        "cursor": {
          "ref": "46d4b98c-2c5f-4764-81dd-b69cc1b631f8",
          "length": 282,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "3577fc31-f97a-4e0a-ba7a-90adfef935b6"
        },
        "item": {
          "id": "e45db043-70ef-4733-b4a4-7fa55e9fc72f",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "772cb594-1b17-49ae-84c7-1f812cddf6cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 734,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b5c6dcb-e4da-4e57-84f8-2b7cab6b74d7",
        "cursor": {
          "ref": "131d7ca2-f215-4e12-ac93-5bf8989726bb",
          "length": 282,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "7edf6ace-7659-452f-813e-f269b0ab5ce6"
        },
        "item": {
          "id": "1b5c6dcb-e4da-4e57-84f8-2b7cab6b74d7",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "0f1054f4-1da0-4f0e-9cc7-3d6356b0cf11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 741,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b96bc07b-81e9-496f-8972-f00165f5226b",
        "cursor": {
          "ref": "a3d42fef-4493-4bb3-906b-99c5cb6b3017",
          "length": 282,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "59d4044a-d220-473f-82be-467be06565cc"
        },
        "item": {
          "id": "b96bc07b-81e9-496f-8972-f00165f5226b",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "4dd12d48-04fe-466d-8c57-7465d392a4e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 769,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a8498cc-75ec-41cc-89b6-d49512048abc",
        "cursor": {
          "ref": "28e97e7e-ae98-40fc-8a41-b9cc23e469f7",
          "length": 282,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "42d621fe-7973-4313-abd3-6f43afa30f4e"
        },
        "item": {
          "id": "5a8498cc-75ec-41cc-89b6-d49512048abc",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "9ed2e401-5a06-4324-98ca-46572b98208b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 734,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e14c81f8-c8d7-4ea0-9b93-7d90ad0ec7bf",
        "cursor": {
          "ref": "30a1e2b2-a577-4e89-adf7-d5eb391bb777",
          "length": 282,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "96c47b6f-0396-42d4-b2a9-cb79a183db79"
        },
        "item": {
          "id": "e14c81f8-c8d7-4ea0-9b93-7d90ad0ec7bf",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "8c36431f-5ca2-4106-bcf2-008b2457acc4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 768,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "801fe097-a7d7-4fcb-860e-0430426b2f19",
        "cursor": {
          "ref": "774097b7-f9a9-4f8a-a770-42780bf83f1d",
          "length": 282,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "e51103ab-cf56-43a5-b630-0abbc24089e0"
        },
        "item": {
          "id": "801fe097-a7d7-4fcb-860e-0430426b2f19",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "d2a22265-ae67-4bc1-a8b9-80308e817854",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 771,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c694414f-e483-4ffc-a8c6-09e29940526c",
        "cursor": {
          "ref": "ddc77ae8-d9cd-4948-8abb-f0898bc909b2",
          "length": 282,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "adc18e38-f738-4362-8242-966ca3d187b0"
        },
        "item": {
          "id": "c694414f-e483-4ffc-a8c6-09e29940526c",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "50771566-2b71-492d-ae05-546370645b64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 773,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db5e582b-bb38-49bb-8d0c-4bed4c888f5c",
        "cursor": {
          "ref": "4be7db91-7a45-464f-b6de-f1c6ba046a88",
          "length": 282,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "1af1333b-d56d-49b2-a0eb-c00e258b57a3"
        },
        "item": {
          "id": "db5e582b-bb38-49bb-8d0c-4bed4c888f5c",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "27119bf9-7c02-4311-b9d1-36434f2d1f3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 778,
          "responseSize": 469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93503742-19aa-4a2d-a469-2be6ad7a0235",
        "cursor": {
          "ref": "bbad38bb-f2e9-4e1c-95f9-286185a9d4f7",
          "length": 282,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "366e75c3-d337-4d60-bba8-df92a3ec2460"
        },
        "item": {
          "id": "93503742-19aa-4a2d-a469-2be6ad7a0235",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "7b840708-2463-4423-b066-b339fb216177",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 769,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6bb26f2-685c-4d70-b0b4-020b20568ddc",
        "cursor": {
          "ref": "fb044d49-d003-4f19-8c35-6534fde48d64",
          "length": 282,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "cb5a9a85-197b-4765-a43b-0a9d0f5f117f"
        },
        "item": {
          "id": "c6bb26f2-685c-4d70-b0b4-020b20568ddc",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "588eea2f-f728-4afb-b231-a3d21a31d7a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 774,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43512ea4-e1f0-48d9-b31e-75ccc5c670e6",
        "cursor": {
          "ref": "4f58d9da-79a1-439b-a461-0c100063b6e0",
          "length": 282,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "2944a3b3-76d3-4361-8b37-5ea6d8de4e91"
        },
        "item": {
          "id": "43512ea4-e1f0-48d9-b31e-75ccc5c670e6",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "83850a66-523b-4b15-8114-04d629901044",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 751,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f807aa8-c3b8-4384-ae62-9dff2e56b8f4",
        "cursor": {
          "ref": "eba2cca7-b3ab-4d1a-9c95-9cb2444518a5",
          "length": 282,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "18a469da-5602-4adf-8dcd-6f72e2bee3f1"
        },
        "item": {
          "id": "0f807aa8-c3b8-4384-ae62-9dff2e56b8f4",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "abc94d22-0fa4-486a-ab9a-2c4d1fe07675",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 791,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca2add3f-58dc-4c78-b582-63c9ad18f0cd",
        "cursor": {
          "ref": "a9abeb18-73a9-49c3-aa25-645495cb2bdd",
          "length": 282,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "ec93d17f-520a-4f3f-869b-df4c0755e0e0"
        },
        "item": {
          "id": "ca2add3f-58dc-4c78-b582-63c9ad18f0cd",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "da3381e3-24b5-4f5f-8d85-9865704558e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 818,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9735f9c-8ecb-4f77-b988-346bf1e90ad0",
        "cursor": {
          "ref": "45c3c1e3-73d9-419e-a946-ebdc35089d2b",
          "length": 282,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "6b77c2f5-733b-4217-898e-d74a7be92aa0"
        },
        "item": {
          "id": "d9735f9c-8ecb-4f77-b988-346bf1e90ad0",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "b29b70b0-9c30-4509-bd4b-47d21043ba9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 805,
          "responseSize": 494
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba7ad94c-0566-44d5-bdb7-a71e5978ded7",
        "cursor": {
          "ref": "b85eedd2-a35f-4c39-93d9-cfec6c8d68fe",
          "length": 282,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "927d87cd-54c6-46ca-a34d-ed482238bb6c"
        },
        "item": {
          "id": "ba7ad94c-0566-44d5-bdb7-a71e5978ded7",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "973ffb67-1699-4de2-b6e7-6027b280eb69",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 49,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46b98739-d9c6-404e-993a-f862612b50fb",
        "cursor": {
          "ref": "3d8013bd-10ed-4fa9-999e-fcc40a536842",
          "length": 282,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "920e945c-b8aa-439e-bd28-dc9f5609c06b"
        },
        "item": {
          "id": "46b98739-d9c6-404e-993a-f862612b50fb",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "257dfdbf-95c5-43cc-951a-7c2089e76f63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 785,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2604eb3-93cb-4351-b593-ffa615af0cad",
        "cursor": {
          "ref": "80d6c0fb-094a-4454-a717-93d28f8982d3",
          "length": 282,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "1dad0cb1-2d93-42fb-a6c2-12a9cefa19db"
        },
        "item": {
          "id": "d2604eb3-93cb-4351-b593-ffa615af0cad",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "56db1c22-8ada-4f7f-b5fb-9d39ee88ff1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 795,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98cf0b1c-4964-4001-a27d-e467525b7528",
        "cursor": {
          "ref": "3aceb8d7-50f8-4ece-9534-87c26aaef0db",
          "length": 282,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "bae1e98b-cce4-4491-afaf-84dcf92f453d"
        },
        "item": {
          "id": "98cf0b1c-4964-4001-a27d-e467525b7528",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "e7f75a61-f043-4802-86a2-787f66286878",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 805,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c9c371e-63b6-4c5e-a1cd-2e81d56af384",
        "cursor": {
          "ref": "83ec66a6-5038-4862-b6fc-99e4060011c6",
          "length": 282,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "89ae6ad2-bf06-4dc3-a960-309e08678f3c"
        },
        "item": {
          "id": "0c9c371e-63b6-4c5e-a1cd-2e81d56af384",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "a547045c-b41e-43fe-a574-00ceb2e34e02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 769,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98bb27f3-4b36-4f69-83f6-8d3ef111275a",
        "cursor": {
          "ref": "63293c15-89de-417a-b914-2e8c62eff03b",
          "length": 282,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "d6cfe715-5dff-4913-9c09-9c6e6bdc915d"
        },
        "item": {
          "id": "98bb27f3-4b36-4f69-83f6-8d3ef111275a",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "b147b656-211e-4945-8242-a049ab34423a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 784,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c0cdb25-6bff-4c1d-befb-24c7fc8cb5ba",
        "cursor": {
          "ref": "6f5127f3-7531-47b7-acd4-dba1712ccd0a",
          "length": 282,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "4110e5ec-31e3-4955-8dc9-ade34ea26a86"
        },
        "item": {
          "id": "8c0cdb25-6bff-4c1d-befb-24c7fc8cb5ba",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "4838aa2a-bfd9-4ebe-8a1a-06d766b44f82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 773,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51c50a5a-357c-45a0-a0d2-7013b3756935",
        "cursor": {
          "ref": "671a2753-de61-4f3a-82ec-a293a0fd8352",
          "length": 282,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "8295223f-227c-48c8-a846-ec132824f7f6"
        },
        "item": {
          "id": "51c50a5a-357c-45a0-a0d2-7013b3756935",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "e8bf18af-be9e-46b0-aea4-15d6965ad2c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 752,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da96ec9c-fcfb-426a-9cac-331d12946b6a",
        "cursor": {
          "ref": "43b9af1c-b5ce-43cb-bfff-3f81b12c8e28",
          "length": 282,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "0488dcff-1515-4e2d-aeff-5c0d1ec6bbe1"
        },
        "item": {
          "id": "da96ec9c-fcfb-426a-9cac-331d12946b6a",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "c4d2c476-29b9-42b9-bf6a-daf733af7390",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 758,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06d01e0b-a580-4cb8-9923-9030b075c1d2",
        "cursor": {
          "ref": "20e915ce-a012-4b1e-8907-89aceb030c87",
          "length": 282,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "759d5c8f-b00e-49bd-a54b-7af7b5bb28de"
        },
        "item": {
          "id": "06d01e0b-a580-4cb8-9923-9030b075c1d2",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "980a3679-c874-4b90-b19c-934c316013cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 758,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e49d0862-e6ba-425d-b088-d936f0ea5af1",
        "cursor": {
          "ref": "99d7f067-0474-4c3b-9a87-0d36c33533b4",
          "length": 282,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "7f03700a-d5de-4725-95aa-a0d90ae03368"
        },
        "item": {
          "id": "e49d0862-e6ba-425d-b088-d936f0ea5af1",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "39057eab-5bcd-4a87-96da-8db1a5aeefa7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 778,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b4764a1-b39e-4dbc-8fcf-081208246477",
        "cursor": {
          "ref": "acbeafae-03a1-4e36-aa85-80c62d803303",
          "length": 282,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "422c413d-265e-4562-afec-4f2b65e4d7a8"
        },
        "item": {
          "id": "2b4764a1-b39e-4dbc-8fcf-081208246477",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "a96c0243-07e0-48b7-9fc0-5af2e97230fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 765,
          "responseSize": 504
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6032d117-4f0c-45a0-a29d-df9a063b6f83",
        "cursor": {
          "ref": "9b0cca5b-faf2-4978-a3b0-62920f166d50",
          "length": 282,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "fc5649c2-9070-4d32-8644-eb2191df81fb"
        },
        "item": {
          "id": "6032d117-4f0c-45a0-a29d-df9a063b6f83",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "883f9da9-1a5c-4529-808d-50e685145673",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 775,
          "responseSize": 453
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e61efe0-1c9a-4419-8ebf-00274c204114",
        "cursor": {
          "ref": "ae7b49ec-3b18-4f25-8b75-2635a8f67436",
          "length": 282,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "b8ad587b-d421-42b8-8123-4b511c93f7e2"
        },
        "item": {
          "id": "5e61efe0-1c9a-4419-8ebf-00274c204114",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "71abedf7-ec27-470a-a33c-976597315550",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 758,
          "responseSize": 579
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2abffc5-538e-4dda-ad6c-c4d24bb27507",
        "cursor": {
          "ref": "a582d2fc-f6d7-4e69-8eb0-4be3c92afea3",
          "length": 282,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "a7b8aafa-c238-49f6-85b8-77e2cf3ec83f"
        },
        "item": {
          "id": "f2abffc5-538e-4dda-ad6c-c4d24bb27507",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "8a9390f2-f90e-4b3f-a156-138cc05856c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 759,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f259ef56-aadb-4d98-be41-d007e002a749",
        "cursor": {
          "ref": "c05d25da-b9f0-46a8-8ab2-c3ffd0dd14af",
          "length": 282,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "0cf684b2-fc85-46a2-be1b-3e3eb4f78f7e"
        },
        "item": {
          "id": "f259ef56-aadb-4d98-be41-d007e002a749",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "ea9d946a-65f5-46cf-be71-bda4a43fee1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 773,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eefaec62-de3a-4a3b-8ce0-e3df237b9f1e",
        "cursor": {
          "ref": "7ba2b12f-7585-47c7-8b04-d1b9751a0c66",
          "length": 282,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "65ade9e6-f896-4948-92d5-5e5a09f4b57f"
        },
        "item": {
          "id": "eefaec62-de3a-4a3b-8ce0-e3df237b9f1e",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "3a2bf35d-7174-4825-91c8-b53d1007bf74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 790,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "729afae4-97ed-4d8d-8927-b5ef3fb3478e",
        "cursor": {
          "ref": "6e328045-8dd0-421e-a98f-5ca51118d181",
          "length": 282,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "3a164e09-9789-4046-8069-7baa936fccd4"
        },
        "item": {
          "id": "729afae4-97ed-4d8d-8927-b5ef3fb3478e",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "32df7fca-01cb-4fc3-ba57-9727d1529886",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 809,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a2134e1-992f-4d56-a078-79f5ab016e87",
        "cursor": {
          "ref": "ae14cb98-2fef-49f9-98cf-edb70dc24cf0",
          "length": 282,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "dd5ec242-85c4-43d1-8903-9f274855a738"
        },
        "item": {
          "id": "7a2134e1-992f-4d56-a078-79f5ab016e87",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "cc4bdaf5-1ebf-4435-aa9b-fcc71be0f100",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 753,
          "responseSize": 455
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aef4b5e2-189c-46c2-bbb9-02b14fdcca18",
        "cursor": {
          "ref": "d072c226-7617-40da-8285-259357c560fc",
          "length": 282,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "940a505e-dafa-4df0-a7b5-b9f686e6dfed"
        },
        "item": {
          "id": "aef4b5e2-189c-46c2-bbb9-02b14fdcca18",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "4a9ba502-56fc-40f4-851e-d69cc6273d99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 763,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "798aacfe-aea4-430a-a396-acbb2563c22e",
        "cursor": {
          "ref": "cbb97acf-2620-4201-9651-1ccd4e30f28e",
          "length": 282,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "bd446c2e-95cf-41d7-bdb4-ae904413c8b5"
        },
        "item": {
          "id": "798aacfe-aea4-430a-a396-acbb2563c22e",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "b6f723f9-dccb-4a3f-8477-ca328f3c6fbc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 773,
          "responseSize": 508
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ef3b3e4-ab93-4cb0-8e6b-5e5dffe0775e",
        "cursor": {
          "ref": "975b5893-4457-45bb-9f21-cedc091969a7",
          "length": 282,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "c3d5a61b-5a67-4d60-8cb9-a292a49d3414"
        },
        "item": {
          "id": "8ef3b3e4-ab93-4cb0-8e6b-5e5dffe0775e",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "67d15e17-3bf1-48ae-9d61-9de4389d4609",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 776,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2174e7cc-c7b7-4f39-be7c-3c6e562655e1",
        "cursor": {
          "ref": "93e26b3d-f67d-44f4-b003-b60d60c09a4f",
          "length": 282,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "78fc497f-775e-4555-b6fe-da0efec4128c"
        },
        "item": {
          "id": "2174e7cc-c7b7-4f39-be7c-3c6e562655e1",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "5b95c683-d73c-4b34-9bae-37c5175bec20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 777,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e97b1364-fd29-43ca-b42e-ecb532c825bd",
        "cursor": {
          "ref": "1580d122-16d3-44a4-9e4a-434b85623741",
          "length": 282,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "233d995b-16e7-4d49-9046-5cae6de69b8a"
        },
        "item": {
          "id": "e97b1364-fd29-43ca-b42e-ecb532c825bd",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "868dc090-06cb-458a-8ecb-0d0dd28d26c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 773,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14b67b62-a6a5-4558-8f5a-af8ee5367a3c",
        "cursor": {
          "ref": "cae21393-e295-4edc-bca0-a90ca09b20f9",
          "length": 282,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "19455bfe-2977-4d0f-9736-63723baaf962"
        },
        "item": {
          "id": "14b67b62-a6a5-4558-8f5a-af8ee5367a3c",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "adf5e726-cd44-48e4-890b-7fbb433ba28b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 758,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff0f7625-c131-48bb-9f1a-6c1baa19e9af",
        "cursor": {
          "ref": "076595ba-1cdc-44fe-97df-d6665af56dc6",
          "length": 282,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "411237ea-1de8-4b41-9a67-273e4ebe2db5"
        },
        "item": {
          "id": "ff0f7625-c131-48bb-9f1a-6c1baa19e9af",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "c9343d52-67bb-404b-a87c-4fb842f26b1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 765,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74044c02-9a93-4fb7-b0a4-c638ad11532c",
        "cursor": {
          "ref": "4139e5fd-8ec9-4da1-9a4b-5fe994de86f8",
          "length": 282,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "118514cd-9997-4d5a-85fc-8aa5d97ea18a"
        },
        "item": {
          "id": "74044c02-9a93-4fb7-b0a4-c638ad11532c",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "f98a8ffd-f61e-4e0d-9b87-bf879afdaed8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 798,
          "responseSize": 487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32a0aee3-75d6-49a6-91e1-a9c82e158802",
        "cursor": {
          "ref": "11f93a04-0bb7-4428-b9f3-66f805dfd143",
          "length": 282,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "4c802f08-b405-4c77-8b72-badf1a731c2b"
        },
        "item": {
          "id": "32a0aee3-75d6-49a6-91e1-a9c82e158802",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "3d9e7f6f-db11-42d7-9923-a7db1b3b6583",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 788,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64b9147b-1bbc-47fb-b8b8-317cea32a183",
        "cursor": {
          "ref": "50df91b5-c5cb-4d5d-9dc0-0a3f9b50bdf4",
          "length": 282,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "af33790a-9171-429d-9499-3f32c4693e37"
        },
        "item": {
          "id": "64b9147b-1bbc-47fb-b8b8-317cea32a183",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "6a209cd7-e755-4515-a08a-d8d0c7a4aa79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 774,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a97d0b85-dfb4-49c3-90f9-18d8a3fe42d7",
        "cursor": {
          "ref": "b2a92322-7ea7-4e3f-befb-56b0cc2db330",
          "length": 282,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "3f3aa69c-ff36-4e78-97bb-55d744458dba"
        },
        "item": {
          "id": "a97d0b85-dfb4-49c3-90f9-18d8a3fe42d7",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "39097884-5c0d-4cca-8ee5-a41cc2a5779c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 798,
          "responseSize": 498
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39391cb7-ef42-4c85-934c-5aaca237d3f5",
        "cursor": {
          "ref": "c1e11540-f17f-4ca8-b715-0013879f20ad",
          "length": 282,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "7292c3d4-4030-43f4-8f23-266c76686cc9"
        },
        "item": {
          "id": "39391cb7-ef42-4c85-934c-5aaca237d3f5",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "fbed1450-822b-40b9-922b-6d60714875bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 787,
          "responseSize": 501
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "658b2a37-2323-42d3-a457-797e0da01b00",
        "cursor": {
          "ref": "d6cce6ab-e311-494d-951f-90d15f6b6975",
          "length": 282,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "d27879a2-d148-4713-8c21-aa4608657256"
        },
        "item": {
          "id": "658b2a37-2323-42d3-a457-797e0da01b00",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "395c37ee-5ecb-44a8-bc29-96476f081299",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 786,
          "responseSize": 499
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ef16ff6-fe83-4d0e-bd29-5dc2955a3375",
        "cursor": {
          "ref": "ef8eb069-5c42-4dcf-9fbd-7bd4c5d09eef",
          "length": 282,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "7054df03-471f-447b-933c-b8f2029bd551"
        },
        "item": {
          "id": "6ef16ff6-fe83-4d0e-bd29-5dc2955a3375",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "051f01a8-97d2-4407-a5b6-5af313b8dd20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 748,
          "responseSize": 477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b80a217b-1d87-4643-ba5b-76a433f1a02a",
        "cursor": {
          "ref": "8c03219c-0624-4d28-b3b9-5f999d29c5d0",
          "length": 282,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "cada9d76-047c-4577-87cf-b4e882a1c500"
        },
        "item": {
          "id": "b80a217b-1d87-4643-ba5b-76a433f1a02a",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "d91660e8-c117-4c12-87ca-c11afcfc9096",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 786,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0d9fedc-383e-4ae2-9db5-cc5fb0b92a40",
        "cursor": {
          "ref": "4e9984f0-eb55-462b-b4db-d28761b1863b",
          "length": 282,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "52b9d0ab-906f-495b-bb14-14f63d7122ff"
        },
        "item": {
          "id": "b0d9fedc-383e-4ae2-9db5-cc5fb0b92a40",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "726f4ead-ae0c-43c5-8b09-fd2653b2bfe1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 723,
          "responseSize": 493
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3870fd5c-156f-4ec7-8a1b-b1e4aaff0f91",
        "cursor": {
          "ref": "c2507725-d28d-4f50-8bb5-d1691f3dd16a",
          "length": 282,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "ea8e8cb5-2c4a-4ab9-befb-9aa9829a32dd"
        },
        "item": {
          "id": "3870fd5c-156f-4ec7-8a1b-b1e4aaff0f91",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "a3abb097-eb2f-4144-a91c-4e951bd65bf3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 768,
          "responseSize": 490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1038cf2f-760a-45e3-a0be-54c6e7592065",
        "cursor": {
          "ref": "0ad8d48d-f949-4e9f-b1c6-266ec9075cd3",
          "length": 282,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "e43cdd4a-2a50-4aad-b768-1fa8f6b51fa6"
        },
        "item": {
          "id": "1038cf2f-760a-45e3-a0be-54c6e7592065",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "9bf84a7b-f99a-4bd1-b2d6-1dac1a3cffe1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 744,
          "responseSize": 492
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae837ef1-1e8c-44ca-a5bf-da0fd5a5839b",
        "cursor": {
          "ref": "51dc7194-ce07-4f9e-8d44-8bb460316c8a",
          "length": 282,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "31b0705b-e162-41d9-b545-f26777bcf1ad"
        },
        "item": {
          "id": "ae837ef1-1e8c-44ca-a5bf-da0fd5a5839b",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "3fd1c27a-560e-4723-82a9-1f9d7738cebf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 762,
          "responseSize": 490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a5587d0-10e6-4ca0-baf7-536a1921714b",
        "cursor": {
          "ref": "5bef0691-7a6f-4130-b341-2eab22cc2c54",
          "length": 282,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "3b559624-7149-43d0-88d6-8bad0d704586"
        },
        "item": {
          "id": "0a5587d0-10e6-4ca0-baf7-536a1921714b",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "a2eb8315-d7fc-4613-a427-ecac01f337d1",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 42,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ab002f2-dc3e-4599-a4fd-218c47762d0f",
        "cursor": {
          "ref": "830aefdb-4720-4488-9540-6ca9e9c04636",
          "length": 282,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "49291276-9d77-40d0-aeca-44da0d6b37ef"
        },
        "item": {
          "id": "3ab002f2-dc3e-4599-a4fd-218c47762d0f",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "60e8cfb6-2360-423b-88dc-a51b9bd2913f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 511,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e29c3eed-f2c5-48b2-9412-ac15442a7a48",
        "cursor": {
          "ref": "78017c8c-d285-4305-9689-ae19f2e393d3",
          "length": 282,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "57f248f8-e597-4431-b5ac-e8661ab0620d"
        },
        "item": {
          "id": "e29c3eed-f2c5-48b2-9412-ac15442a7a48",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "5f2e20f6-effa-4fd8-abe1-f09203618b72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 548,
          "responseSize": 96
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9eb90634-6b5d-41c4-9047-6b543510004d",
        "cursor": {
          "ref": "0e86cc09-c119-4b90-b2d0-df5b3c6f7f54",
          "length": 282,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "645ee1c5-0344-4d57-806b-a638c89de828"
        },
        "item": {
          "id": "9eb90634-6b5d-41c4-9047-6b543510004d",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "91beb7e3-6fda-4b7a-8fac-78af1a8938b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 550,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b07ce3f2-2071-49e3-9e8a-eaa563022d41",
        "cursor": {
          "ref": "013dbc7a-f80c-487a-9329-7ae5f9265961",
          "length": 282,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "21b1a16a-4a8c-4b33-b364-2218f4006ef2"
        },
        "item": {
          "id": "b07ce3f2-2071-49e3-9e8a-eaa563022d41",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "b4d21b93-ce6b-4840-9820-17583f282ada",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 532,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73278e4f-d140-4bf3-8209-35b47e328470",
        "cursor": {
          "ref": "1e4af76f-ce86-476e-821f-fae37793f351",
          "length": 282,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "16f8be6f-0e83-484b-b8b8-2bb27d0abc44"
        },
        "item": {
          "id": "73278e4f-d140-4bf3-8209-35b47e328470",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "0a52e115-1abd-4cb9-a1c0-2b45b4e4b34f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 540,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a39e5f12-24a2-4527-a799-2f330c360cec",
        "cursor": {
          "ref": "e8198501-10d2-4363-b892-aa48c21ab713",
          "length": 282,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "1660d016-d216-4c4a-b65a-565dcd3acb6d"
        },
        "item": {
          "id": "a39e5f12-24a2-4527-a799-2f330c360cec",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "20e91e48-6203-4600-979b-e42dc11667b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 534,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a04b8066-7505-4688-be53-2f9f7d526271",
        "cursor": {
          "ref": "46efc820-b008-4d12-aade-a3a9757f4529",
          "length": 282,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "0718b40f-1ecb-48b4-8a35-3458cc469935"
        },
        "item": {
          "id": "a04b8066-7505-4688-be53-2f9f7d526271",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "82ae8111-a63e-4b8e-a6c9-02fdd101c3e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 507,
          "responseSize": 1266
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bfcc528-f6af-48e0-8a65-3be2171a5001",
        "cursor": {
          "ref": "6d33e4e4-7c98-443f-8c80-d63450f2e4e7",
          "length": 282,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "9a49ead4-287b-4913-a116-279db9f74452"
        },
        "item": {
          "id": "9bfcc528-f6af-48e0-8a65-3be2171a5001",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "e287a373-b65b-4a71-bb99-a6c6a670bf4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 529,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db28c935-8354-4822-a256-92dd5aea24a0",
        "cursor": {
          "ref": "356e7cc0-d72a-4c33-bbbe-875879f9a912",
          "length": 282,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "cd988305-6655-46e9-8db0-3b0042659f03"
        },
        "item": {
          "id": "db28c935-8354-4822-a256-92dd5aea24a0",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "f40ae80d-e851-4d20-9ffb-52388b4b168e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 543,
          "responseSize": 1423
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0324c4b-eb71-41d9-9ce6-d4d1be53abd4",
        "cursor": {
          "ref": "b3b580f5-b8fc-40de-92e9-f276a3bcb204",
          "length": 282,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "594ad7bf-d33c-41ed-85f9-d0ae04a37a65"
        },
        "item": {
          "id": "f0324c4b-eb71-41d9-9ce6-d4d1be53abd4",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "3979f96f-1883-4c7d-98ff-e128cd35ae21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 527,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0276a2e-7e76-4d0b-8561-4f46df0b4af4",
        "cursor": {
          "ref": "0cdd2ecc-6702-4a3d-80b1-0833e299b067",
          "length": 282,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "1ef2273a-1433-4e8c-93d8-abab1b697609"
        },
        "item": {
          "id": "e0276a2e-7e76-4d0b-8561-4f46df0b4af4",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "53b38d8e-8133-4767-b16e-27ebd55dd23e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 538,
          "responseSize": 1322
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33c4cf90-604f-4802-8160-24046c433053",
        "cursor": {
          "ref": "c8e3e229-249a-4675-b25b-4f35c920419e",
          "length": 282,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "aebac537-4522-44b5-b73d-9dab7f32ad5d"
        },
        "item": {
          "id": "33c4cf90-604f-4802-8160-24046c433053",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "3a651546-fea4-4277-af60-0ca9e9a463dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 536,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc09fd48-ba17-4921-b15e-c0e3b7d7e127",
        "cursor": {
          "ref": "460f2b5d-975e-4b92-8a41-9ad4ecc2e0fc",
          "length": 282,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "393364c9-f3ee-417d-b613-00967ed03014"
        },
        "item": {
          "id": "bc09fd48-ba17-4921-b15e-c0e3b7d7e127",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "eab64e32-f0c7-423c-8c8e-dfd21b40cc81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 570,
          "responseSize": 1487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d44d40f1-c6fd-4aee-92a4-a68c966ebc74",
        "cursor": {
          "ref": "2eafe676-9c10-45b6-931e-104d92125a46",
          "length": 282,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "ff8c287b-0fd8-4f99-ac17-e6fe3f7820a7"
        },
        "item": {
          "id": "d44d40f1-c6fd-4aee-92a4-a68c966ebc74",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "e6c18ec6-a188-48c2-b19d-744cae6cb3c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 539,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "515628a1-75a3-4aba-9152-4459faf52b72",
        "cursor": {
          "ref": "4821fe66-7ba6-40f7-a50c-49dc268b6ea6",
          "length": 282,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "907702dd-0ab8-493a-b48b-df08c5b58009"
        },
        "item": {
          "id": "515628a1-75a3-4aba-9152-4459faf52b72",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "7b2e881a-0033-4016-b72d-83172a37909e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 551,
          "responseSize": 1476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89f33540-bccc-45b6-9b21-2aebbbf26bb2",
        "cursor": {
          "ref": "63e624d9-657e-4c47-a8cd-e9b1d70997e0",
          "length": 282,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "572dfa24-ea05-4577-9711-cb15b5495468"
        },
        "item": {
          "id": "89f33540-bccc-45b6-9b21-2aebbbf26bb2",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "ba51ba45-d2d7-448f-8c01-b986c875c659",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 556,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f81fce41-f79c-49ea-b49e-fd78d513d284",
        "cursor": {
          "ref": "a88691e8-ad67-4e87-94c0-f1875d548668",
          "length": 282,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "f8f1357d-afa0-425b-af1a-eb806019cb78"
        },
        "item": {
          "id": "f81fce41-f79c-49ea-b49e-fd78d513d284",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "f22f5e93-d01f-43c0-81bf-2cedf9317dd0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 560,
          "responseSize": 1375
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3b39e32-248c-4a36-8c95-0ce2f5736e3d",
        "cursor": {
          "ref": "c16b7c65-05f6-4323-8ff2-d21180960b9a",
          "length": 282,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "6f1c4bd4-4b99-434c-a664-59a0cedac6b7"
        },
        "item": {
          "id": "d3b39e32-248c-4a36-8c95-0ce2f5736e3d",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "ad823bd4-8387-48ab-b93d-90e80b0c6439",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 557,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4c0dd0d-4915-410d-ba5c-068b1476244d",
        "cursor": {
          "ref": "d79bca44-1b54-43b4-b491-db7161780ee7",
          "length": 282,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "4272aee0-d576-415d-a855-4bb0e52319a2"
        },
        "item": {
          "id": "a4c0dd0d-4915-410d-ba5c-068b1476244d",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "ead2db9d-fd4e-4146-a9d6-8f022789c90f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 533,
          "responseSize": 1285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43de5f5d-ba19-417d-b23e-5c19d3d20b9f",
        "cursor": {
          "ref": "5fc91fda-2bdd-4f24-ae28-08c966c191bf",
          "length": 282,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "ce96046c-a68c-44b7-8f0a-58726313151e"
        },
        "item": {
          "id": "43de5f5d-ba19-417d-b23e-5c19d3d20b9f",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "61e1e252-d26b-4b88-af4d-2cce8108662f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 552,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eac9ee39-8f5f-4463-a2c9-d4db7794dca8",
        "cursor": {
          "ref": "a1debc3a-b5e9-4710-a5a1-94e266f7fe6f",
          "length": 282,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "64ad7833-840f-4c99-85f6-e2d6452dfe14"
        },
        "item": {
          "id": "eac9ee39-8f5f-4463-a2c9-d4db7794dca8",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "532d2ae8-c00a-416e-bf3d-e155bdd97a38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 534,
          "responseSize": 1284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6f464e3-20d3-4291-9232-240e6f95ccaa",
        "cursor": {
          "ref": "fe4dfeae-4f53-45c3-8aca-0d343fc0eaa7",
          "length": 282,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "228fcf21-ab9d-4c9f-ad3c-719de686195f"
        },
        "item": {
          "id": "f6f464e3-20d3-4291-9232-240e6f95ccaa",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "e287e52f-e72c-40f1-94c1-efb42f2b4c78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 545,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "649f6d61-bf7d-42e7-b380-fa31d7e2f6cd",
        "cursor": {
          "ref": "12b7348f-ceb9-4dbb-b605-b2a9e208e613",
          "length": 282,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "52e21e8f-1c93-4e4a-ac35-c69ae30b33ab"
        },
        "item": {
          "id": "649f6d61-bf7d-42e7-b380-fa31d7e2f6cd",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "80024c6b-d50b-402e-ad61-602f20909651",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 543,
          "responseSize": 1315
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44f8cf26-6647-4d2e-9ebb-d1f6c79dd5b4",
        "cursor": {
          "ref": "e2b9690d-e447-4e2c-bc56-f30bc3ce8228",
          "length": 282,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "78f5fd77-4822-4e13-9201-a8ce109b6577"
        },
        "item": {
          "id": "44f8cf26-6647-4d2e-9ebb-d1f6c79dd5b4",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "4f6770e0-d095-4a88-b2d9-4854007e01e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 580,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d9184df-dedf-4218-86df-625755b26b77",
        "cursor": {
          "ref": "a4937cff-d88d-47f8-9b67-4ad690c497bb",
          "length": 282,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "07dcd0af-650f-448b-beee-772b90943bee"
        },
        "item": {
          "id": "9d9184df-dedf-4218-86df-625755b26b77",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "09bd7b18-d4bf-4c85-84b2-67b21fac5229",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 526,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59508a69-0228-4a7e-9e91-e3930f210d31",
        "cursor": {
          "ref": "c1e67047-4a3f-40cc-86e9-8411687b5c75",
          "length": 282,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "5bd91376-7e19-46b4-94bf-2d4c3ca04e69"
        },
        "item": {
          "id": "59508a69-0228-4a7e-9e91-e3930f210d31",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "e12915a1-1463-44c8-b380-2b8c92ddd8be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 499,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c96746f1-f183-4ff0-8b68-65cc14b60d58",
        "cursor": {
          "ref": "f96fe41d-3ec7-473c-9b9a-a27fec0ad3ba",
          "length": 282,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "6953f30d-457e-4517-b6c0-0e2dc9238d70"
        },
        "item": {
          "id": "c96746f1-f183-4ff0-8b68-65cc14b60d58",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "a70cbe9a-7bef-48c4-89b0-657081319980",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 539,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fab30ae-8fb1-4c1d-a700-2462d455c5d1",
        "cursor": {
          "ref": "edaa0d65-b826-459b-a7ba-261ebcd2e5f7",
          "length": 282,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "022048a4-4166-4cd8-aa8d-7d4ad4655bbc"
        },
        "item": {
          "id": "7fab30ae-8fb1-4c1d-a700-2462d455c5d1",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "f86d260a-3138-413a-986b-d96d8047420e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 551,
          "responseSize": 1327
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ba25b98-ddc6-4cbf-92ce-f2052380c79a",
        "cursor": {
          "ref": "4696e4f8-8f68-464d-b2e8-108a34c8e965",
          "length": 282,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "151cf3fd-9c8f-4678-a1eb-91090ac659e6"
        },
        "item": {
          "id": "1ba25b98-ddc6-4cbf-92ce-f2052380c79a",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "3ffa460c-f865-4371-a142-ca81f217cc53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 563,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e869e21-4bc3-492a-a428-74110acfe1da",
        "cursor": {
          "ref": "74bd4cb0-331e-485d-b87b-859af6cf121b",
          "length": 282,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "6cab9502-1f32-4c72-be9a-d56b6fa7cb9d"
        },
        "item": {
          "id": "5e869e21-4bc3-492a-a428-74110acfe1da",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "8d4d91e7-f5b9-45da-b0ba-85ef8cb8a94a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 553,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d6de2c0-d840-47fa-afcb-4aa60a4b4508",
        "cursor": {
          "ref": "144c0af2-bdfb-4878-94d8-32fb40116902",
          "length": 282,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "43aedc99-2121-421d-8894-87de9d611812"
        },
        "item": {
          "id": "7d6de2c0-d840-47fa-afcb-4aa60a4b4508",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "05341599-a551-4b5c-aee3-87b9e7450ec3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 573,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00dc2ec9-2660-412d-af25-f4b985e6888e",
        "cursor": {
          "ref": "87f07a2f-ed3d-4af0-9331-bc625ee0c727",
          "length": 282,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "2bc9f915-3ed8-47e2-8e7b-33814af90d37"
        },
        "item": {
          "id": "00dc2ec9-2660-412d-af25-f4b985e6888e",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "e72798f7-afe4-4b78-b8d9-5ac30680ea8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 531,
          "responseSize": 1308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "239ffba5-6c58-4ed9-a78d-7d24d2fcf2b6",
        "cursor": {
          "ref": "ace0ef27-076b-4446-84fc-295de2ecb0a0",
          "length": 282,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "f695ca50-c1d5-4de6-b87a-688c7e4a4a14"
        },
        "item": {
          "id": "239ffba5-6c58-4ed9-a78d-7d24d2fcf2b6",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "9828c237-fe15-4676-9c9c-5cb635140daf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 568,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6740c539-e990-4c10-8708-c99df568b620",
        "cursor": {
          "ref": "0e352ae8-484a-4199-92f1-55c7367da330",
          "length": 282,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "5a19a516-f0b5-41b9-93bf-06212e393edc"
        },
        "item": {
          "id": "6740c539-e990-4c10-8708-c99df568b620",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "300bfb58-a08f-4c68-90f8-3fd47dd9832e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 559,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "283c2247-3753-4fbb-a255-b774c9a05636",
        "cursor": {
          "ref": "45737750-bb6f-49f8-96a6-9d517fd96fd3",
          "length": 282,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "f440a85e-f52f-42ed-9376-bbdf496f7c82"
        },
        "item": {
          "id": "283c2247-3753-4fbb-a255-b774c9a05636",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "a03b0616-d855-45d1-840d-92e4489576a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 556,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bea69f8-23d4-4c0e-8c5c-5af33c6b07da",
        "cursor": {
          "ref": "1d2958f3-5a5b-4eff-8631-4100d9471979",
          "length": 282,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "2d006a16-6341-4de5-a48a-847da2147903"
        },
        "item": {
          "id": "7bea69f8-23d4-4c0e-8c5c-5af33c6b07da",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "0a28cd74-3f39-4857-ba66-df1bea2ddbce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 571,
          "responseSize": 1756
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "834c317f-2c67-4994-b6c7-8172e53c6229",
        "cursor": {
          "ref": "a62dec99-3189-476d-86e8-5b2acca75043",
          "length": 282,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "573c691e-dafd-4514-a741-57f319ee66ea"
        },
        "item": {
          "id": "834c317f-2c67-4994-b6c7-8172e53c6229",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "b670cd75-980c-4778-9339-351483c17194",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 553,
          "responseSize": 1742
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66f69249-8274-4da3-b33e-3ff149fe770d",
        "cursor": {
          "ref": "745bef95-c12a-4acc-bc4f-fb350e6306cd",
          "length": 282,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "e617786f-7eec-4208-9235-471ce4a14e76"
        },
        "item": {
          "id": "66f69249-8274-4da3-b33e-3ff149fe770d",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "13534840-754c-4086-8afd-0dffc6605aa8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 547,
          "responseSize": 1740
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8dba98c1-5d65-4cef-8e22-819b7a647237",
        "cursor": {
          "ref": "7adc34b3-279d-49fd-bada-6096024cdc62",
          "length": 282,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "f5cd843c-86da-4c08-b9ed-a9f6bacf758c"
        },
        "item": {
          "id": "8dba98c1-5d65-4cef-8e22-819b7a647237",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "d2872870-7972-4781-ab90-3872ec12abc0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 555,
          "responseSize": 1741
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b4663ff-aa1b-4c66-9000-0db004ab08f3",
        "cursor": {
          "ref": "741f31a9-2766-4a39-b217-54781fe463e8",
          "length": 282,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "ce526c63-d351-489e-bd6d-ed30dcb2b2e3"
        },
        "item": {
          "id": "6b4663ff-aa1b-4c66-9000-0db004ab08f3",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "5a87fd40-ed80-479e-8a8c-775a76eb4e0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 575,
          "responseSize": 1772
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f2f6a19-f003-433b-9c1f-605a0136bd56",
        "cursor": {
          "ref": "29912e97-bb12-45c8-9cfb-0d0a306c8fb1",
          "length": 282,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "c014f6b6-f348-4b6b-9685-b002d19a26d8"
        },
        "item": {
          "id": "5f2f6a19-f003-433b-9c1f-605a0136bd56",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "939dfc0b-7a62-4049-965c-a409c3ef6635",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 541,
          "responseSize": 2115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "066fa3db-fec2-4548-ad43-ef2c0211b06f",
        "cursor": {
          "ref": "fc608399-8c0b-4890-baf9-7c3da94133fd",
          "length": 282,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "ed3c1429-b125-4e11-b65e-14af4fa53475"
        },
        "item": {
          "id": "066fa3db-fec2-4548-ad43-ef2c0211b06f",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "ad968ae1-d634-4ff6-b4a6-5ba2eb9f12de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 552,
          "responseSize": 2101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5caa1e9-a309-4a89-a839-72005bc15413",
        "cursor": {
          "ref": "40092521-ddaf-4a4a-a5c2-8eaf900f83d2",
          "length": 282,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "a5e515bd-9321-487e-9f99-2d709269a816"
        },
        "item": {
          "id": "e5caa1e9-a309-4a89-a839-72005bc15413",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "9ca5524f-2291-4cbe-a348-d9c9bda1beb5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 563,
          "responseSize": 2099
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d72f0e3-6849-4d6d-aa5c-9c33884eea62",
        "cursor": {
          "ref": "c8ad69fe-e1e8-4376-b72c-6e69f1aa7e44",
          "length": 282,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "c2425cc7-1fd6-45d8-9bf0-b3adc698d084"
        },
        "item": {
          "id": "7d72f0e3-6849-4d6d-aa5c-9c33884eea62",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "1ccf3a21-7835-4a51-ab68-14fa4d06b16f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 556,
          "responseSize": 2100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5ab15d4-a461-4283-98d7-80ff85a289a4",
        "cursor": {
          "ref": "e64503e2-12c5-4432-90b4-2e9bf5da4953",
          "length": 282,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "08a56065-921a-49ea-b88a-75f5eaed1c07"
        },
        "item": {
          "id": "a5ab15d4-a461-4283-98d7-80ff85a289a4",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "810c37b0-82a5-4af2-9982-930abdf6b586",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 557,
          "responseSize": 2121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65a4a96b-2d06-44bd-87f5-43ca6dbac835",
        "cursor": {
          "ref": "a8c4b54f-0f93-4790-a7d2-f9f2e0e2b22b",
          "length": 282,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "f56199ae-e359-4a84-9f35-fd5b9aa3a2dc"
        },
        "item": {
          "id": "65a4a96b-2d06-44bd-87f5-43ca6dbac835",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "106c8442-356b-4df6-8490-b848bf46faa5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 558,
          "responseSize": 1325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69b0b5f0-5818-461e-8398-2761a6ea639e",
        "cursor": {
          "ref": "b9a241ce-e725-4046-bc64-993d36510b4b",
          "length": 282,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "9f542210-fb6c-4367-b181-94dcd75e3689"
        },
        "item": {
          "id": "69b0b5f0-5818-461e-8398-2761a6ea639e",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "ac7b0a36-15ae-43fa-8618-4c578b5141ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 551,
          "responseSize": 1349
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "527621ee-60ca-4099-9451-24463b92d276",
        "cursor": {
          "ref": "6567a581-9106-46f1-bff3-6434bb04bf6f",
          "length": 282,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "e82a01fa-5b61-47e5-8099-4188195d9240"
        },
        "item": {
          "id": "527621ee-60ca-4099-9451-24463b92d276",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "d640e49b-9740-41a2-8ee1-688c20975a07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 554,
          "responseSize": 1330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c7aa4f5-deba-4cab-bc22-b33763bbf46d",
        "cursor": {
          "ref": "fb447c82-0b67-40a6-85bc-62ad642598c5",
          "length": 282,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "f3b56850-8e52-4fbf-b956-4b0dcb21799e"
        },
        "item": {
          "id": "8c7aa4f5-deba-4cab-bc22-b33763bbf46d",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "1fab0e26-7276-46d6-8c95-d24d85a35367",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 566,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "184d8777-12a7-4147-b04b-2ae1e53ee8ee",
        "cursor": {
          "ref": "8f694b3d-96df-4bfb-87a6-aac12db48a48",
          "length": 282,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "f2892046-0794-4934-85c1-80ac91987cc9"
        },
        "item": {
          "id": "184d8777-12a7-4147-b04b-2ae1e53ee8ee",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "a04b19e6-b716-4e06-b502-9a9dc73d958a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 550,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e861829-d947-4765-b663-77007109537f",
        "cursor": {
          "ref": "e1a1399c-deb6-411d-bfcf-8cd455a0207d",
          "length": 282,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "320228a9-63b8-4ea6-b228-ccd34f69f4f1"
        },
        "item": {
          "id": "5e861829-d947-4765-b663-77007109537f",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "dac6de72-f9d6-4b2e-a0be-a9ac7b88a0c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 577,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8438dc1-5ea8-4433-b6ed-142beeabcde4",
        "cursor": {
          "ref": "467ff50a-15b5-4c19-a739-4e34e6d11920",
          "length": 282,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "2aed7dda-bcee-491c-a26a-f80883258bb4"
        },
        "item": {
          "id": "a8438dc1-5ea8-4433-b6ed-142beeabcde4",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "0db710b7-49d1-4982-92c6-47590a835c3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 541,
          "responseSize": 1385
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4de21b8-6c01-4d12-9ad0-9a27117bca94",
        "cursor": {
          "ref": "9a3ad7fb-99f7-4d8d-ae64-90c47195b8be",
          "length": 282,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "cb1ef9d2-36e0-4ac6-ab5b-8a8a670b0703"
        },
        "item": {
          "id": "e4de21b8-6c01-4d12-9ad0-9a27117bca94",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "b9999b12-ff9e-4ae6-b114-3c60644dc0e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 550,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15f9525e-b0ca-4e68-84ff-f866701ffe14",
        "cursor": {
          "ref": "0ceed133-52a2-4ba4-968d-131bcbefa792",
          "length": 282,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "9f8c239a-a3bb-4574-adf9-5c3f81cb92b2"
        },
        "item": {
          "id": "15f9525e-b0ca-4e68-84ff-f866701ffe14",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "b9e5b93d-22ac-4790-a1ae-6f9d02899a26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 536,
          "responseSize": 1829
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89c15b56-c2a1-498c-a133-f88647551cbf",
        "cursor": {
          "ref": "0587c0d7-4b31-4edb-b013-8e76ee5933f3",
          "length": 282,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "07b6c94a-61dd-47cd-bec2-bb691d1c41b2"
        },
        "item": {
          "id": "89c15b56-c2a1-498c-a133-f88647551cbf",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "72f1b13c-e71e-4774-9b94-fda78e82e7ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 526,
          "responseSize": 1628
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d35e67b1-aa45-4e9a-905d-814e2cb130f9",
        "cursor": {
          "ref": "a7f53e1d-18bb-47c8-b833-dc25910a81d3",
          "length": 282,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "d606c810-75ad-415f-9691-b3d3781c159a"
        },
        "item": {
          "id": "d35e67b1-aa45-4e9a-905d-814e2cb130f9",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "9f61e767-97d9-4ccf-88b3-bf09f73ae51b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 533,
          "responseSize": 1626
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "150e4824-298c-4554-929f-e8696dbd9dd1",
        "cursor": {
          "ref": "f183d304-972b-4476-9c07-ff7c40cf5fd0",
          "length": 282,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "9e8dd296-1cc6-4afd-b5aa-718233397a26"
        },
        "item": {
          "id": "150e4824-298c-4554-929f-e8696dbd9dd1",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "0b9a7073-e1be-41a0-bcf8-cca49056c695",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 545,
          "responseSize": 1627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "434011bc-175b-4921-b407-370ab03e9e60",
        "cursor": {
          "ref": "2a2749c3-1dc8-4f33-9381-9c231a1e2806",
          "length": 282,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "6d8ad1ab-4597-48e6-bb72-95902da44a29"
        },
        "item": {
          "id": "434011bc-175b-4921-b407-370ab03e9e60",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "1b5340b1-c616-40fe-8f96-8b7dac7f7220",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 544,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c8db395-481a-411c-aa4e-f6f3a7a2053e",
        "cursor": {
          "ref": "d2e24993-aa35-4fa1-93b2-33ce59db8140",
          "length": 282,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "2d28441a-3103-4b77-a59c-d575476a8405"
        },
        "item": {
          "id": "9c8db395-481a-411c-aa4e-f6f3a7a2053e",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "33010e10-74fa-4635-965a-b9b33e050964",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 565,
          "responseSize": 2164
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35bdb7a0-46eb-4923-ab29-39f1a87c0e87",
        "cursor": {
          "ref": "de159be9-dd62-431f-92e1-88eb018d305d",
          "length": 282,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "364a21e4-b34c-4808-b064-9cf5b3daa316"
        },
        "item": {
          "id": "35bdb7a0-46eb-4923-ab29-39f1a87c0e87",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "fbdcbd9c-d272-4299-96b5-37120fd77139",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 555,
          "responseSize": 2150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d95986ec-e836-4db0-941d-8791e794b981",
        "cursor": {
          "ref": "a3e96484-bfc7-4103-b60f-2a0a25e449b9",
          "length": 282,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "80c4ff6b-e5cf-407c-a3a2-a594a967ccd3"
        },
        "item": {
          "id": "d95986ec-e836-4db0-941d-8791e794b981",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "ac401d5f-5007-46b5-b70d-739645f75e4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 563,
          "responseSize": 2148
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd029978-c0b1-4aed-9e30-11f031ece2c9",
        "cursor": {
          "ref": "e90c062a-57ea-4596-8f8c-7ddc6a362239",
          "length": 282,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "0d3e51d7-f264-498d-85f5-65c9a8554ba1"
        },
        "item": {
          "id": "fd029978-c0b1-4aed-9e30-11f031ece2c9",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "bed41d32-b9f9-4758-bbc8-5a0f7ac16215",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 530,
          "responseSize": 2149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25dac788-81a9-4dcc-bd3f-62833ea79466",
        "cursor": {
          "ref": "45b22f24-66ea-47bc-89d8-08fe4c35d821",
          "length": 282,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "bc15c852-9f32-461c-b516-9b17917e5e36"
        },
        "item": {
          "id": "25dac788-81a9-4dcc-bd3f-62833ea79466",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "f498561a-30f1-4cc1-aea9-85f704f8b292",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 528,
          "responseSize": 2170
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "760371d0-28d4-4331-a390-8ad1c5e370bc",
        "cursor": {
          "ref": "06838b88-8cc3-4b88-9a32-89da628b81eb",
          "length": 282,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "fca9422a-e1eb-4801-8ca9-aeb7ac98f349"
        },
        "item": {
          "id": "760371d0-28d4-4331-a390-8ad1c5e370bc",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "33e59d44-3538-4a7e-9800-c39c805aac2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 555,
          "responseSize": 904
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e503e38f-f195-46fc-b90e-aaa48db69756",
        "cursor": {
          "ref": "5e146856-d222-4dab-a9c8-90de8b8d3547",
          "length": 282,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "5ca7b16b-fdaf-4f3a-96fa-b0e7a6ae17fe"
        },
        "item": {
          "id": "e503e38f-f195-46fc-b90e-aaa48db69756",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "175c65ac-97a2-4a4a-8b91-31032e11c5c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 522,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de3f4a6a-676a-45e2-a3e4-923f6f14d163",
        "cursor": {
          "ref": "6e038f0c-0d7f-4a55-b4ea-4c74841d9ebb",
          "length": 282,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "f6376664-21dd-44fb-87b1-1edd594d4886"
        },
        "item": {
          "id": "de3f4a6a-676a-45e2-a3e4-923f6f14d163",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "b3e396b6-d134-4e74-a24f-bfe190d12616",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 537,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f381ae3c-8d2c-4bdf-a6a5-ec22c36fdda8",
        "cursor": {
          "ref": "b978863f-0f3e-48fd-ab8c-fbbd5e984b3b",
          "length": 282,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "8f041798-374d-4e35-8f91-bfe828deeb81"
        },
        "item": {
          "id": "f381ae3c-8d2c-4bdf-a6a5-ec22c36fdda8",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "ac5b1ebd-4f3e-49d2-98fb-b9d098925c01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 510,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec276a12-ce9e-426e-8736-6b4c2c9473d4",
        "cursor": {
          "ref": "ede16a88-54b4-40d7-90b3-2197a14eee33",
          "length": 282,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "94ff2f9c-9e96-4890-8f16-f9f950df7421"
        },
        "item": {
          "id": "ec276a12-ce9e-426e-8736-6b4c2c9473d4",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "b89f63b8-7859-4bd2-9b2a-30603ae226dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 554,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b45092b9-e0ed-4fb3-b1db-1144216e546c",
        "cursor": {
          "ref": "ccf4d771-c750-45ea-8c93-a20e3060364f",
          "length": 282,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "00d40240-124f-4795-84a0-7c0d208d6e63"
        },
        "item": {
          "id": "b45092b9-e0ed-4fb3-b1db-1144216e546c",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "4249073a-cf1e-4db6-825e-db160579e84d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 802,
          "responseSize": 921
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93f06812-fbdb-4146-97b9-1355b7935e8e",
        "cursor": {
          "ref": "d59ec142-8225-4055-81db-96cd5192b9d9",
          "length": 282,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "547cac5c-3c9c-4dca-81b9-35539b513e74"
        },
        "item": {
          "id": "93f06812-fbdb-4146-97b9-1355b7935e8e",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "27f2b000-1b92-4297-85c5-507e3cfef9a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 560,
          "responseSize": 1262
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7e99a03-a8d9-43aa-a0b0-e5abb6d0d723",
        "cursor": {
          "ref": "2c2b50e9-e6e6-4a6f-9e8b-23a9e3a704cb",
          "length": 282,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "1f215297-5719-42cb-90ca-5ebcf044d11e"
        },
        "item": {
          "id": "c7e99a03-a8d9-43aa-a0b0-e5abb6d0d723",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "d3b44663-c7b9-4d78-a964-919e83bb8757",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 559,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1368d476-71a5-4ff3-add1-d8bdcf0b08dd",
        "cursor": {
          "ref": "f45aa501-7bfe-4396-8f99-2674fac1a793",
          "length": 282,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "5adea058-c3ce-411c-bdc9-4343c88643e9"
        },
        "item": {
          "id": "1368d476-71a5-4ff3-add1-d8bdcf0b08dd",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "83990ce2-645b-4561-bd41-0697b57bf898",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 554,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e998484-4791-48e8-9a41-f654d6d79d74",
        "cursor": {
          "ref": "1708e3ea-809f-4fb4-b9e3-3e73e497a2ff",
          "length": 282,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "0bfe093d-6b68-4a00-8786-aa422a5544ba"
        },
        "item": {
          "id": "5e998484-4791-48e8-9a41-f654d6d79d74",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "71dad047-854b-4158-90d3-4034de02367c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 543,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ea59fdf-2027-43c6-8a0a-9b98d336311d",
        "cursor": {
          "ref": "f9e9e716-db32-4f90-abf2-db746f2f0e8c",
          "length": 282,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "59bacc80-0a45-4606-b721-585864b4a012"
        },
        "item": {
          "id": "7ea59fdf-2027-43c6-8a0a-9b98d336311d",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "163734a4-022d-4782-90c5-3c65d1d201b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 525,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52b5075d-37f7-4545-8d48-344214268487",
        "cursor": {
          "ref": "8fd9a311-1903-4d92-97c2-334b64730593",
          "length": 282,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "8c51fb73-508e-48b8-ac28-80b3c874be50"
        },
        "item": {
          "id": "52b5075d-37f7-4545-8d48-344214268487",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "3b1c379d-37b7-4c42-bde6-c97544f76bd1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 527,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cebfb2db-dfb2-4a65-9b9f-35ba50eab12f",
        "cursor": {
          "ref": "0b2b2eee-4798-4bd5-9edd-14a44fe198e9",
          "length": 282,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "3459ffbe-e9eb-4903-977d-53e657c857cb"
        },
        "item": {
          "id": "cebfb2db-dfb2-4a65-9b9f-35ba50eab12f",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "4164444d-8ee0-4206-b193-d52e14a589ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 552,
          "responseSize": 1299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e38082a-7225-4b8c-b5da-a14e63d59c08",
        "cursor": {
          "ref": "139bae85-3d23-4bff-8a83-2c1d195af73a",
          "length": 282,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "d110c4b3-1d12-4c88-854f-bbb58f235732"
        },
        "item": {
          "id": "3e38082a-7225-4b8c-b5da-a14e63d59c08",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "dfd25b14-7dc0-409d-a92b-69b70df7f1d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 561,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d16c3f87-9475-4125-a8f9-a45f6fb52f71",
        "cursor": {
          "ref": "ea1acab8-a72e-444f-9db2-8940ae042663",
          "length": 282,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "9d877937-922b-4ff0-a792-a610d8f408c5"
        },
        "item": {
          "id": "d16c3f87-9475-4125-a8f9-a45f6fb52f71",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "bf0b8222-ad3d-4afa-a91f-566e5d7a8b62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 562,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f866086c-b9fe-4644-8d17-d81791f8c08f",
        "cursor": {
          "ref": "15849d02-dc91-4854-9ec1-3b052f62f4c0",
          "length": 282,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "30a64957-4f39-4f29-af03-d646f106f593"
        },
        "item": {
          "id": "f866086c-b9fe-4644-8d17-d81791f8c08f",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "b1347a99-909b-4fcc-86e1-0fe8474ba448",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 545,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b644c1a-15eb-471b-90c4-c68f97a21e52",
        "cursor": {
          "ref": "1133a990-92af-4c93-9542-b41c2e08ec84",
          "length": 282,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "a3082f3e-ec54-4388-9e9e-0fe7d4326f39"
        },
        "item": {
          "id": "8b644c1a-15eb-471b-90c4-c68f97a21e52",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "7aca1ee8-f650-4502-8471-4c074a6bebef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 518,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4bf76fa-3e14-400f-8c08-e7c0e7182c92",
        "cursor": {
          "ref": "14dec4dd-2df3-4155-aee0-26f95c475778",
          "length": 282,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "b9433fd0-20ea-4635-8a59-268df2c8d90f"
        },
        "item": {
          "id": "d4bf76fa-3e14-400f-8c08-e7c0e7182c92",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "95c4adef-bb78-4d31-898d-668416973cbf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 538,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8c4faa0-78f4-4044-8e35-0ddda16d872d",
        "cursor": {
          "ref": "a6dff3be-1c0b-4d18-9615-6f007e5809af",
          "length": 282,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "c2002cf6-00ef-426c-83e4-bc504a38666f"
        },
        "item": {
          "id": "e8c4faa0-78f4-4044-8e35-0ddda16d872d",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "c4d9ccc2-a0b3-48db-8f4e-bac2124f1371",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 542,
          "responseSize": 1253
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d94b1565-81fb-4022-b340-a0186e75550a",
        "cursor": {
          "ref": "5055a7ee-4b74-4485-854c-89c4d3c61508",
          "length": 282,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "e1b8268a-78fc-4e1a-b68c-c69b5bd22ea6"
        },
        "item": {
          "id": "d94b1565-81fb-4022-b340-a0186e75550a",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "4ec49809-7de2-4794-85fa-eeb65fdebff0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 547,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fe89ca5-fa5a-4520-adeb-49c8a3226b49",
        "cursor": {
          "ref": "8c253602-377a-4ca6-a4d5-d60c8050076a",
          "length": 282,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "925041f2-5d78-49dd-b6be-8bb5775ad38e"
        },
        "item": {
          "id": "2fe89ca5-fa5a-4520-adeb-49c8a3226b49",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "7a531aea-204b-4a56-8c41-217c767f1eeb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 550,
          "responseSize": 1188
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f3c838b-86ae-4607-8527-a0d4586bb5cc",
        "cursor": {
          "ref": "80cf172b-86e6-4c53-9e11-0d884b85593b",
          "length": 282,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "d5ac26c6-03ee-4f36-bbd2-fd7f7c6c5563"
        },
        "item": {
          "id": "9f3c838b-86ae-4607-8527-a0d4586bb5cc",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "0b65a7b9-2ca0-4178-9c02-24bc8f15940b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 512,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6ee7cb3-7deb-4c7e-95a6-65a11a1c86e5",
        "cursor": {
          "ref": "c0507f39-ebb8-4a04-9d3d-f82f80e6a1d1",
          "length": 282,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "976db4f2-0aae-4e68-bdd8-9f85a64cbfd3"
        },
        "item": {
          "id": "b6ee7cb3-7deb-4c7e-95a6-65a11a1c86e5",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "343bf743-763d-4a25-b468-9c9cbff38a55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 504,
          "responseSize": 1259
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9ad3bc7-a4c2-438d-b526-b6ac04527e30",
        "cursor": {
          "ref": "1c22c615-9c5b-49fb-ac74-4c143023ea06",
          "length": 282,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "75151ed0-a19c-42e5-9972-1ac82d99afef"
        },
        "item": {
          "id": "b9ad3bc7-a4c2-438d-b526-b6ac04527e30",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "172fbb22-3e46-4d24-84c8-6b6a1b6b3aa8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 507,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54cd796f-3f3c-4d7f-b78b-5cee222e24ea",
        "cursor": {
          "ref": "0539f24f-36b8-49cc-b83d-4efce9284c73",
          "length": 282,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "fe77590e-e485-41f3-9760-aac6cc6517bf"
        },
        "item": {
          "id": "54cd796f-3f3c-4d7f-b78b-5cee222e24ea",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "768fdd45-9ecf-4349-9990-5bbd73629142",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 560,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7fb5611-5640-4ea9-b73c-31f06cb90666",
        "cursor": {
          "ref": "c5c361ec-24d8-4dcd-91d8-8e6be45c4153",
          "length": 282,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "1917c17c-eb22-4517-973c-dd59f2004d44"
        },
        "item": {
          "id": "d7fb5611-5640-4ea9-b73c-31f06cb90666",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "e2a7baf5-6251-4075-8834-cf0d6690b437",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 556,
          "responseSize": 1149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18c5bed7-9392-4ea1-a068-5dae6dee68e1",
        "cursor": {
          "ref": "2decec06-0e04-4674-82be-d63e3f349416",
          "length": 282,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "e0cb18a2-403a-4494-b53c-6ff64536c4b3"
        },
        "item": {
          "id": "18c5bed7-9392-4ea1-a068-5dae6dee68e1",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "5b16ed24-c4e4-4ab9-a9ff-8a2130536389",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 543,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e19d04f9-0c58-413b-8c41-1fef4d5a7d6a",
        "cursor": {
          "ref": "62f537d7-c662-41e3-94c5-b280c4ba7055",
          "length": 282,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "f897eadc-0cac-42c2-937c-6bd6c598414e"
        },
        "item": {
          "id": "e19d04f9-0c58-413b-8c41-1fef4d5a7d6a",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "bab2f6e6-99e3-49e1-bc64-c59f3c19577d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 549,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07909ed6-2380-49a1-b426-56903c1212b0",
        "cursor": {
          "ref": "464d8ac0-0815-45bf-91db-b82c0a070e3b",
          "length": 282,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "aa3b9824-92bb-43d5-a35e-3d52ae719c0e"
        },
        "item": {
          "id": "07909ed6-2380-49a1-b426-56903c1212b0",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "f2fc3877-5b96-4c9d-8bb3-b8ccc98ad847",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 546,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b516d45a-c307-4f72-8548-9be770f5b5cc",
        "cursor": {
          "ref": "b1198376-fbc9-4790-9086-05b5b0d43729",
          "length": 282,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "c960476a-6dc3-467f-bd04-745a4493fec6"
        },
        "item": {
          "id": "b516d45a-c307-4f72-8548-9be770f5b5cc",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "64a0cb99-3853-4065-b719-ecec64639cdc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 511,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f120db4-e666-4d67-b76e-caf97a571499",
        "cursor": {
          "ref": "82b30a17-f21f-47d8-9676-b93f21f01e8d",
          "length": 282,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "46516fe3-6a01-43db-aa7d-feebc2ce5876"
        },
        "item": {
          "id": "4f120db4-e666-4d67-b76e-caf97a571499",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "5fdaa746-9215-41b4-bce1-50d7295cbc76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 524,
          "responseSize": 1278
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f30945a9-f504-498d-be41-e6616e283de4",
        "cursor": {
          "ref": "f5a20427-0d3e-419b-8b8d-68908d1a66f9",
          "length": 282,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "999783de-23e8-431e-a488-052a7890660b"
        },
        "item": {
          "id": "f30945a9-f504-498d-be41-e6616e283de4",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "2bbb8cef-cc76-4715-8e20-d7ec41831d56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 512,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81ddec72-691a-4c79-8934-6e50a1a77007",
        "cursor": {
          "ref": "a9a36324-ac74-408c-9746-6f2fd9c23c13",
          "length": 282,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "3aeff338-83db-49a6-80cf-d6802dcd1b01"
        },
        "item": {
          "id": "81ddec72-691a-4c79-8934-6e50a1a77007",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "4588cd69-4a08-4b56-9e76-8174643f409e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 529,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "780ffef1-9f30-4cb0-bd54-f4bb3712ac88",
        "cursor": {
          "ref": "55381dcd-e730-456e-b876-77c33991e58f",
          "length": 282,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "c80f865c-4285-4521-b43d-8a00999783bf"
        },
        "item": {
          "id": "780ffef1-9f30-4cb0-bd54-f4bb3712ac88",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "d0e8b4ff-e82c-4431-afce-577276a22bcd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 519,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdead185-1187-4b0b-8aa8-1b4564c36d58",
        "cursor": {
          "ref": "3c3376f4-e6f7-44fd-a99c-d541bbfb68be",
          "length": 282,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "a09097ac-db9c-4c1d-8f70-7d15dd195a53"
        },
        "item": {
          "id": "cdead185-1187-4b0b-8aa8-1b4564c36d58",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "35c989a9-bbc0-4ee1-b23a-d82e89d4a4ec",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 42,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6badb2d2-8c17-43d8-bee6-7b0699788ab9",
        "cursor": {
          "ref": "a1e32152-2359-4e4c-a4c7-e29a1afe155d",
          "length": 282,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "7004d523-462e-4c02-9c5f-63a6d14d0e8d"
        },
        "item": {
          "id": "6badb2d2-8c17-43d8-bee6-7b0699788ab9",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "4eeb53bb-1a28-4952-a9d0-0392f219ead7",
          "status": "OK",
          "code": 200,
          "responseTime": 576,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "32118ef5-93a5-4626-a2f8-140ce05ad888",
        "cursor": {
          "ref": "52062e59-cfe7-4260-9f4f-7d4a20efe19b",
          "length": 282,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "501e9c1e-ce12-4433-aa8c-0b3e53b3b20c"
        },
        "item": {
          "id": "32118ef5-93a5-4626-a2f8-140ce05ad888",
          "name": "credentials_verify"
        },
        "response": {
          "id": "df2ff037-c3f4-49a1-812e-ab6eef30da16",
          "status": "OK",
          "code": 200,
          "responseTime": 1650,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d512a58-1445-49b1-8771-da352b74d583",
        "cursor": {
          "ref": "ef9a5d1d-e763-44e4-b8e7-914e81a08f0b",
          "length": 282,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "469d9c74-71b5-4d2f-846d-8e597ada9572"
        },
        "item": {
          "id": "0d512a58-1445-49b1-8771-da352b74d583",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "3d3b47b9-7ad9-49ea-8e8f-4a79c21acea3",
          "status": "OK",
          "code": 200,
          "responseTime": 1585,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "33571965-707b-406c-97c0-7f48970dd6f9",
        "cursor": {
          "ref": "e4b89e2f-ff1a-4678-a99e-95de7c299f87",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "6b770fbf-b223-48b6-b2fa-93e441654000"
        },
        "item": {
          "id": "33571965-707b-406c-97c0-7f48970dd6f9",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "6f5d4d11-149a-47fd-a038-4df9b6f01ded",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 44,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33571965-707b-406c-97c0-7f48970dd6f9",
        "cursor": {
          "ref": "e4b89e2f-ff1a-4678-a99e-95de7c299f87",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "6b770fbf-b223-48b6-b2fa-93e441654000"
        },
        "item": {
          "id": "33571965-707b-406c-97c0-7f48970dd6f9",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "6f5d4d11-149a-47fd-a038-4df9b6f01ded",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 44,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84b862d5-8950-4295-9f09-1282df02908f",
        "cursor": {
          "ref": "5004a6e5-24e3-42f7-afe6-e1544e214dc5",
          "length": 282,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "924cd61a-a451-4329-b3a3-be9923d5d3f6"
        },
        "item": {
          "id": "84b862d5-8950-4295-9f09-1282df02908f",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "844ce998-0970-49a4-b1ae-e24a2640f171",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 41,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34399446-e464-4e27-8c06-e4c7f1afce1b",
        "cursor": {
          "ref": "188668e8-d09d-4bf4-9b41-afe8206d1d77",
          "length": 282,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "2fe8293b-05bc-4f0f-bbe9-836f24546fad"
        },
        "item": {
          "id": "34399446-e464-4e27-8c06-e4c7f1afce1b",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "42c22273-203e-4ecd-941b-8b9c403f3e94",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 43,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}